# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module WorkSpacesWeb
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _AssociateBrowserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AssociateBrowserSettingsResponse]
        def browser_settings_arn: () -> ::String
        def portal_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#associate_browser_settings-instance_method
      def associate_browser_settings: (
                                        browser_settings_arn: ::String,
                                        portal_arn: ::String
                                      ) -> _AssociateBrowserSettingsResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AssociateBrowserSettingsResponseSuccess

      interface _AssociateIpAccessSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AssociateIpAccessSettingsResponse]
        def ip_access_settings_arn: () -> ::String
        def portal_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#associate_ip_access_settings-instance_method
      def associate_ip_access_settings: (
                                          ip_access_settings_arn: ::String,
                                          portal_arn: ::String
                                        ) -> _AssociateIpAccessSettingsResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AssociateIpAccessSettingsResponseSuccess

      interface _AssociateNetworkSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AssociateNetworkSettingsResponse]
        def network_settings_arn: () -> ::String
        def portal_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#associate_network_settings-instance_method
      def associate_network_settings: (
                                        network_settings_arn: ::String,
                                        portal_arn: ::String
                                      ) -> _AssociateNetworkSettingsResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AssociateNetworkSettingsResponseSuccess

      interface _AssociateTrustStoreResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AssociateTrustStoreResponse]
        def portal_arn: () -> ::String
        def trust_store_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#associate_trust_store-instance_method
      def associate_trust_store: (
                                   portal_arn: ::String,
                                   trust_store_arn: ::String
                                 ) -> _AssociateTrustStoreResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AssociateTrustStoreResponseSuccess

      interface _AssociateUserAccessLoggingSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AssociateUserAccessLoggingSettingsResponse]
        def portal_arn: () -> ::String
        def user_access_logging_settings_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#associate_user_access_logging_settings-instance_method
      def associate_user_access_logging_settings: (
                                                    portal_arn: ::String,
                                                    user_access_logging_settings_arn: ::String
                                                  ) -> _AssociateUserAccessLoggingSettingsResponseSuccess
                                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AssociateUserAccessLoggingSettingsResponseSuccess

      interface _AssociateUserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AssociateUserSettingsResponse]
        def portal_arn: () -> ::String
        def user_settings_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#associate_user_settings-instance_method
      def associate_user_settings: (
                                     portal_arn: ::String,
                                     user_settings_arn: ::String
                                   ) -> _AssociateUserSettingsResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AssociateUserSettingsResponseSuccess

      interface _CreateBrowserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateBrowserSettingsResponse]
        def browser_settings_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#create_browser_settings-instance_method
      def create_browser_settings: (
                                     ?additional_encryption_context: Hash[::String, ::String],
                                     browser_policy: ::String,
                                     ?client_token: ::String,
                                     ?customer_managed_key: ::String,
                                     ?tags: Array[
                                       {
                                         key: ::String,
                                         value: ::String
                                       },
                                     ]
                                   ) -> _CreateBrowserSettingsResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateBrowserSettingsResponseSuccess

      interface _CreateIdentityProviderResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateIdentityProviderResponse]
        def identity_provider_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#create_identity_provider-instance_method
      def create_identity_provider: (
                                      ?client_token: ::String,
                                      identity_provider_details: Hash[::String, ::String],
                                      identity_provider_name: ::String,
                                      identity_provider_type: ("SAML" | "Facebook" | "Google" | "LoginWithAmazon" | "SignInWithApple" | "OIDC"),
                                      portal_arn: ::String
                                    ) -> _CreateIdentityProviderResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateIdentityProviderResponseSuccess

      interface _CreateIpAccessSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateIpAccessSettingsResponse]
        def ip_access_settings_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#create_ip_access_settings-instance_method
      def create_ip_access_settings: (
                                       ?additional_encryption_context: Hash[::String, ::String],
                                       ?client_token: ::String,
                                       ?customer_managed_key: ::String,
                                       ?description: ::String,
                                       ?display_name: ::String,
                                       ip_rules: Array[
                                         {
                                           description: ::String?,
                                           ip_range: ::String
                                         },
                                       ],
                                       ?tags: Array[
                                         {
                                           key: ::String,
                                           value: ::String
                                         },
                                       ]
                                     ) -> _CreateIpAccessSettingsResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateIpAccessSettingsResponseSuccess

      interface _CreateNetworkSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateNetworkSettingsResponse]
        def network_settings_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#create_network_settings-instance_method
      def create_network_settings: (
                                     ?client_token: ::String,
                                     security_group_ids: Array[::String],
                                     subnet_ids: Array[::String],
                                     ?tags: Array[
                                       {
                                         key: ::String,
                                         value: ::String
                                       },
                                     ],
                                     vpc_id: ::String
                                   ) -> _CreateNetworkSettingsResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateNetworkSettingsResponseSuccess

      interface _CreatePortalResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreatePortalResponse]
        def portal_arn: () -> ::String
        def portal_endpoint: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#create_portal-instance_method
      def create_portal: (
                           ?additional_encryption_context: Hash[::String, ::String],
                           ?authentication_type: ("Standard" | "IAM_Identity_Center"),
                           ?client_token: ::String,
                           ?customer_managed_key: ::String,
                           ?display_name: ::String,
                           ?tags: Array[
                             {
                               key: ::String,
                               value: ::String
                             },
                           ]
                         ) -> _CreatePortalResponseSuccess
                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreatePortalResponseSuccess

      interface _CreateTrustStoreResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateTrustStoreResponse]
        def trust_store_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#create_trust_store-instance_method
      def create_trust_store: (
                                certificate_list: Array[::String],
                                ?client_token: ::String,
                                ?tags: Array[
                                  {
                                    key: ::String,
                                    value: ::String
                                  },
                                ]
                              ) -> _CreateTrustStoreResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateTrustStoreResponseSuccess

      interface _CreateUserAccessLoggingSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateUserAccessLoggingSettingsResponse]
        def user_access_logging_settings_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#create_user_access_logging_settings-instance_method
      def create_user_access_logging_settings: (
                                                 ?client_token: ::String,
                                                 kinesis_stream_arn: ::String,
                                                 ?tags: Array[
                                                   {
                                                     key: ::String,
                                                     value: ::String
                                                   },
                                                 ]
                                               ) -> _CreateUserAccessLoggingSettingsResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateUserAccessLoggingSettingsResponseSuccess

      interface _CreateUserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateUserSettingsResponse]
        def user_settings_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#create_user_settings-instance_method
      def create_user_settings: (
                                  ?additional_encryption_context: Hash[::String, ::String],
                                  ?client_token: ::String,
                                  ?cookie_synchronization_configuration: {
                                    allowlist: Array[
                                      {
                                        domain: ::String,
                                        name: ::String?,
                                        path: ::String?
                                      },
                                    ],
                                    blocklist: Array[
                                      {
                                        domain: ::String,
                                        name: ::String?,
                                        path: ::String?
                                      },
                                    ]?
                                  },
                                  copy_allowed: ("Disabled" | "Enabled"),
                                  ?customer_managed_key: ::String,
                                  ?disconnect_timeout_in_minutes: ::Integer,
                                  download_allowed: ("Disabled" | "Enabled"),
                                  ?idle_disconnect_timeout_in_minutes: ::Integer,
                                  paste_allowed: ("Disabled" | "Enabled"),
                                  print_allowed: ("Disabled" | "Enabled"),
                                  ?tags: Array[
                                    {
                                      key: ::String,
                                      value: ::String
                                    },
                                  ],
                                  upload_allowed: ("Disabled" | "Enabled")
                                ) -> _CreateUserSettingsResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateUserSettingsResponseSuccess

      interface _DeleteBrowserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteBrowserSettingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#delete_browser_settings-instance_method
      def delete_browser_settings: (
                                     browser_settings_arn: ::String
                                   ) -> _DeleteBrowserSettingsResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteBrowserSettingsResponseSuccess

      interface _DeleteIdentityProviderResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteIdentityProviderResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#delete_identity_provider-instance_method
      def delete_identity_provider: (
                                      identity_provider_arn: ::String
                                    ) -> _DeleteIdentityProviderResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteIdentityProviderResponseSuccess

      interface _DeleteIpAccessSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteIpAccessSettingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#delete_ip_access_settings-instance_method
      def delete_ip_access_settings: (
                                       ip_access_settings_arn: ::String
                                     ) -> _DeleteIpAccessSettingsResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteIpAccessSettingsResponseSuccess

      interface _DeleteNetworkSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteNetworkSettingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#delete_network_settings-instance_method
      def delete_network_settings: (
                                     network_settings_arn: ::String
                                   ) -> _DeleteNetworkSettingsResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteNetworkSettingsResponseSuccess

      interface _DeletePortalResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeletePortalResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#delete_portal-instance_method
      def delete_portal: (
                           portal_arn: ::String
                         ) -> _DeletePortalResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeletePortalResponseSuccess

      interface _DeleteTrustStoreResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteTrustStoreResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#delete_trust_store-instance_method
      def delete_trust_store: (
                                trust_store_arn: ::String
                              ) -> _DeleteTrustStoreResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteTrustStoreResponseSuccess

      interface _DeleteUserAccessLoggingSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteUserAccessLoggingSettingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#delete_user_access_logging_settings-instance_method
      def delete_user_access_logging_settings: (
                                                 user_access_logging_settings_arn: ::String
                                               ) -> _DeleteUserAccessLoggingSettingsResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteUserAccessLoggingSettingsResponseSuccess

      interface _DeleteUserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteUserSettingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#delete_user_settings-instance_method
      def delete_user_settings: (
                                  user_settings_arn: ::String
                                ) -> _DeleteUserSettingsResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteUserSettingsResponseSuccess

      interface _DisassociateBrowserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateBrowserSettingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#disassociate_browser_settings-instance_method
      def disassociate_browser_settings: (
                                           portal_arn: ::String
                                         ) -> _DisassociateBrowserSettingsResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateBrowserSettingsResponseSuccess

      interface _DisassociateIpAccessSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateIpAccessSettingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#disassociate_ip_access_settings-instance_method
      def disassociate_ip_access_settings: (
                                             portal_arn: ::String
                                           ) -> _DisassociateIpAccessSettingsResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateIpAccessSettingsResponseSuccess

      interface _DisassociateNetworkSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateNetworkSettingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#disassociate_network_settings-instance_method
      def disassociate_network_settings: (
                                           portal_arn: ::String
                                         ) -> _DisassociateNetworkSettingsResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateNetworkSettingsResponseSuccess

      interface _DisassociateTrustStoreResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateTrustStoreResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#disassociate_trust_store-instance_method
      def disassociate_trust_store: (
                                      portal_arn: ::String
                                    ) -> _DisassociateTrustStoreResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateTrustStoreResponseSuccess

      interface _DisassociateUserAccessLoggingSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateUserAccessLoggingSettingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#disassociate_user_access_logging_settings-instance_method
      def disassociate_user_access_logging_settings: (
                                                       portal_arn: ::String
                                                     ) -> _DisassociateUserAccessLoggingSettingsResponseSuccess
                                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateUserAccessLoggingSettingsResponseSuccess

      interface _DisassociateUserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateUserSettingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#disassociate_user_settings-instance_method
      def disassociate_user_settings: (
                                        portal_arn: ::String
                                      ) -> _DisassociateUserSettingsResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateUserSettingsResponseSuccess

      interface _GetBrowserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetBrowserSettingsResponse]
        def browser_settings: () -> Types::BrowserSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#get_browser_settings-instance_method
      def get_browser_settings: (
                                  browser_settings_arn: ::String
                                ) -> _GetBrowserSettingsResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetBrowserSettingsResponseSuccess

      interface _GetIdentityProviderResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetIdentityProviderResponse]
        def identity_provider: () -> Types::IdentityProvider
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#get_identity_provider-instance_method
      def get_identity_provider: (
                                   identity_provider_arn: ::String
                                 ) -> _GetIdentityProviderResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetIdentityProviderResponseSuccess

      interface _GetIpAccessSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetIpAccessSettingsResponse]
        def ip_access_settings: () -> Types::IpAccessSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#get_ip_access_settings-instance_method
      def get_ip_access_settings: (
                                    ip_access_settings_arn: ::String
                                  ) -> _GetIpAccessSettingsResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetIpAccessSettingsResponseSuccess

      interface _GetNetworkSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetNetworkSettingsResponse]
        def network_settings: () -> Types::NetworkSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#get_network_settings-instance_method
      def get_network_settings: (
                                  network_settings_arn: ::String
                                ) -> _GetNetworkSettingsResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetNetworkSettingsResponseSuccess

      interface _GetPortalResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetPortalResponse]
        def portal: () -> Types::Portal
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#get_portal-instance_method
      def get_portal: (
                        portal_arn: ::String
                      ) -> _GetPortalResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetPortalResponseSuccess

      interface _GetPortalServiceProviderMetadataResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetPortalServiceProviderMetadataResponse]
        def portal_arn: () -> ::String
        def service_provider_saml_metadata: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#get_portal_service_provider_metadata-instance_method
      def get_portal_service_provider_metadata: (
                                                  portal_arn: ::String
                                                ) -> _GetPortalServiceProviderMetadataResponseSuccess
                                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetPortalServiceProviderMetadataResponseSuccess

      interface _GetTrustStoreResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetTrustStoreResponse]
        def trust_store: () -> Types::TrustStore
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#get_trust_store-instance_method
      def get_trust_store: (
                             trust_store_arn: ::String
                           ) -> _GetTrustStoreResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetTrustStoreResponseSuccess

      interface _GetTrustStoreCertificateResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetTrustStoreCertificateResponse]
        def certificate: () -> Types::Certificate
        def trust_store_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#get_trust_store_certificate-instance_method
      def get_trust_store_certificate: (
                                         thumbprint: ::String,
                                         trust_store_arn: ::String
                                       ) -> _GetTrustStoreCertificateResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetTrustStoreCertificateResponseSuccess

      interface _GetUserAccessLoggingSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetUserAccessLoggingSettingsResponse]
        def user_access_logging_settings: () -> Types::UserAccessLoggingSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#get_user_access_logging_settings-instance_method
      def get_user_access_logging_settings: (
                                              user_access_logging_settings_arn: ::String
                                            ) -> _GetUserAccessLoggingSettingsResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetUserAccessLoggingSettingsResponseSuccess

      interface _GetUserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetUserSettingsResponse]
        def user_settings: () -> Types::UserSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#get_user_settings-instance_method
      def get_user_settings: (
                               user_settings_arn: ::String
                             ) -> _GetUserSettingsResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetUserSettingsResponseSuccess

      interface _ListBrowserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBrowserSettingsResponse]
        def browser_settings: () -> ::Array[Types::BrowserSettingsSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#list_browser_settings-instance_method
      def list_browser_settings: (
                                   ?max_results: ::Integer,
                                   ?next_token: ::String
                                 ) -> _ListBrowserSettingsResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBrowserSettingsResponseSuccess

      interface _ListIdentityProvidersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListIdentityProvidersResponse]
        def identity_providers: () -> ::Array[Types::IdentityProviderSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#list_identity_providers-instance_method
      def list_identity_providers: (
                                     ?max_results: ::Integer,
                                     ?next_token: ::String,
                                     portal_arn: ::String
                                   ) -> _ListIdentityProvidersResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListIdentityProvidersResponseSuccess

      interface _ListIpAccessSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListIpAccessSettingsResponse]
        def ip_access_settings: () -> ::Array[Types::IpAccessSettingsSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#list_ip_access_settings-instance_method
      def list_ip_access_settings: (
                                     ?max_results: ::Integer,
                                     ?next_token: ::String
                                   ) -> _ListIpAccessSettingsResponseSuccess
                                 | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListIpAccessSettingsResponseSuccess

      interface _ListNetworkSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListNetworkSettingsResponse]
        def network_settings: () -> ::Array[Types::NetworkSettingsSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#list_network_settings-instance_method
      def list_network_settings: (
                                   ?max_results: ::Integer,
                                   ?next_token: ::String
                                 ) -> _ListNetworkSettingsResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListNetworkSettingsResponseSuccess

      interface _ListPortalsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListPortalsResponse]
        def next_token: () -> ::String
        def portals: () -> ::Array[Types::PortalSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#list_portals-instance_method
      def list_portals: (
                          ?max_results: ::Integer,
                          ?next_token: ::String
                        ) -> _ListPortalsResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListPortalsResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Array[Types::Tag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _ListTrustStoreCertificatesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTrustStoreCertificatesResponse]
        def certificate_list: () -> ::Array[Types::CertificateSummary]
        def next_token: () -> ::String
        def trust_store_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#list_trust_store_certificates-instance_method
      def list_trust_store_certificates: (
                                           ?max_results: ::Integer,
                                           ?next_token: ::String,
                                           trust_store_arn: ::String
                                         ) -> _ListTrustStoreCertificatesResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTrustStoreCertificatesResponseSuccess

      interface _ListTrustStoresResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTrustStoresResponse]
        def next_token: () -> ::String
        def trust_stores: () -> ::Array[Types::TrustStoreSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#list_trust_stores-instance_method
      def list_trust_stores: (
                               ?max_results: ::Integer,
                               ?next_token: ::String
                             ) -> _ListTrustStoresResponseSuccess
                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTrustStoresResponseSuccess

      interface _ListUserAccessLoggingSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListUserAccessLoggingSettingsResponse]
        def next_token: () -> ::String
        def user_access_logging_settings: () -> ::Array[Types::UserAccessLoggingSettingsSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#list_user_access_logging_settings-instance_method
      def list_user_access_logging_settings: (
                                               ?max_results: ::Integer,
                                               ?next_token: ::String
                                             ) -> _ListUserAccessLoggingSettingsResponseSuccess
                                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListUserAccessLoggingSettingsResponseSuccess

      interface _ListUserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListUserSettingsResponse]
        def next_token: () -> ::String
        def user_settings: () -> ::Array[Types::UserSettingsSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#list_user_settings-instance_method
      def list_user_settings: (
                                ?max_results: ::Integer,
                                ?next_token: ::String
                              ) -> _ListUserSettingsResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListUserSettingsResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#tag_resource-instance_method
      def tag_resource: (
                          ?client_token: ::String,
                          resource_arn: ::String,
                          tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      interface _UpdateBrowserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateBrowserSettingsResponse]
        def browser_settings: () -> Types::BrowserSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#update_browser_settings-instance_method
      def update_browser_settings: (
                                     ?browser_policy: ::String,
                                     browser_settings_arn: ::String,
                                     ?client_token: ::String
                                   ) -> _UpdateBrowserSettingsResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateBrowserSettingsResponseSuccess

      interface _UpdateIdentityProviderResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateIdentityProviderResponse]
        def identity_provider: () -> Types::IdentityProvider
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#update_identity_provider-instance_method
      def update_identity_provider: (
                                      ?client_token: ::String,
                                      identity_provider_arn: ::String,
                                      ?identity_provider_details: Hash[::String, ::String],
                                      ?identity_provider_name: ::String,
                                      ?identity_provider_type: ("SAML" | "Facebook" | "Google" | "LoginWithAmazon" | "SignInWithApple" | "OIDC")
                                    ) -> _UpdateIdentityProviderResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateIdentityProviderResponseSuccess

      interface _UpdateIpAccessSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateIpAccessSettingsResponse]
        def ip_access_settings: () -> Types::IpAccessSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#update_ip_access_settings-instance_method
      def update_ip_access_settings: (
                                       ?client_token: ::String,
                                       ?description: ::String,
                                       ?display_name: ::String,
                                       ip_access_settings_arn: ::String,
                                       ?ip_rules: Array[
                                         {
                                           description: ::String?,
                                           ip_range: ::String
                                         },
                                       ]
                                     ) -> _UpdateIpAccessSettingsResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateIpAccessSettingsResponseSuccess

      interface _UpdateNetworkSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateNetworkSettingsResponse]
        def network_settings: () -> Types::NetworkSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#update_network_settings-instance_method
      def update_network_settings: (
                                     ?client_token: ::String,
                                     network_settings_arn: ::String,
                                     ?security_group_ids: Array[::String],
                                     ?subnet_ids: Array[::String],
                                     ?vpc_id: ::String
                                   ) -> _UpdateNetworkSettingsResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateNetworkSettingsResponseSuccess

      interface _UpdatePortalResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdatePortalResponse]
        def portal: () -> Types::Portal
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#update_portal-instance_method
      def update_portal: (
                           ?authentication_type: ("Standard" | "IAM_Identity_Center"),
                           ?display_name: ::String,
                           portal_arn: ::String
                         ) -> _UpdatePortalResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdatePortalResponseSuccess

      interface _UpdateTrustStoreResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateTrustStoreResponse]
        def trust_store_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#update_trust_store-instance_method
      def update_trust_store: (
                                ?certificates_to_add: Array[::String],
                                ?certificates_to_delete: Array[::String],
                                ?client_token: ::String,
                                trust_store_arn: ::String
                              ) -> _UpdateTrustStoreResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateTrustStoreResponseSuccess

      interface _UpdateUserAccessLoggingSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateUserAccessLoggingSettingsResponse]
        def user_access_logging_settings: () -> Types::UserAccessLoggingSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#update_user_access_logging_settings-instance_method
      def update_user_access_logging_settings: (
                                                 ?client_token: ::String,
                                                 ?kinesis_stream_arn: ::String,
                                                 user_access_logging_settings_arn: ::String
                                               ) -> _UpdateUserAccessLoggingSettingsResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateUserAccessLoggingSettingsResponseSuccess

      interface _UpdateUserSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateUserSettingsResponse]
        def user_settings: () -> Types::UserSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/WorkSpacesWeb/Client.html#update_user_settings-instance_method
      def update_user_settings: (
                                  ?client_token: ::String,
                                  ?cookie_synchronization_configuration: {
                                    allowlist: Array[
                                      {
                                        domain: ::String,
                                        name: ::String?,
                                        path: ::String?
                                      },
                                    ],
                                    blocklist: Array[
                                      {
                                        domain: ::String,
                                        name: ::String?,
                                        path: ::String?
                                      },
                                    ]?
                                  },
                                  ?copy_allowed: ("Disabled" | "Enabled"),
                                  ?disconnect_timeout_in_minutes: ::Integer,
                                  ?download_allowed: ("Disabled" | "Enabled"),
                                  ?idle_disconnect_timeout_in_minutes: ::Integer,
                                  ?paste_allowed: ("Disabled" | "Enabled"),
                                  ?print_allowed: ("Disabled" | "Enabled"),
                                  ?upload_allowed: ("Disabled" | "Enabled"),
                                  user_settings_arn: ::String
                                ) -> _UpdateUserSettingsResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateUserSettingsResponseSuccess
    end
  end
end

