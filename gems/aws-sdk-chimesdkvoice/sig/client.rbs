# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module ChimeSDKVoice
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _AssociatePhoneNumbersWithVoiceConnectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AssociatePhoneNumbersWithVoiceConnectorResponse]
        def phone_number_errors: () -> ::Array[Types::PhoneNumberError]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#associate_phone_numbers_with_voice_connector-instance_method
      def associate_phone_numbers_with_voice_connector: (
                                                          voice_connector_id: ::String,
                                                          e164_phone_numbers: Array[::String],
                                                          ?force_associate: bool
                                                        ) -> _AssociatePhoneNumbersWithVoiceConnectorResponseSuccess
                                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AssociatePhoneNumbersWithVoiceConnectorResponseSuccess

      interface _AssociatePhoneNumbersWithVoiceConnectorGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AssociatePhoneNumbersWithVoiceConnectorGroupResponse]
        def phone_number_errors: () -> ::Array[Types::PhoneNumberError]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#associate_phone_numbers_with_voice_connector_group-instance_method
      def associate_phone_numbers_with_voice_connector_group: (
                                                                voice_connector_group_id: ::String,
                                                                e164_phone_numbers: Array[::String],
                                                                ?force_associate: bool
                                                              ) -> _AssociatePhoneNumbersWithVoiceConnectorGroupResponseSuccess
                                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AssociatePhoneNumbersWithVoiceConnectorGroupResponseSuccess

      interface _BatchDeletePhoneNumberResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchDeletePhoneNumberResponse]
        def phone_number_errors: () -> ::Array[Types::PhoneNumberError]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#batch_delete_phone_number-instance_method
      def batch_delete_phone_number: (
                                       phone_number_ids: Array[::String]
                                     ) -> _BatchDeletePhoneNumberResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchDeletePhoneNumberResponseSuccess

      interface _BatchUpdatePhoneNumberResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchUpdatePhoneNumberResponse]
        def phone_number_errors: () -> ::Array[Types::PhoneNumberError]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#batch_update_phone_number-instance_method
      def batch_update_phone_number: (
                                       update_phone_number_request_items: Array[
                                         {
                                           phone_number_id: ::String,
                                           product_type: ("VoiceConnector" | "SipMediaApplicationDialIn")?,
                                           calling_name: ::String?,
                                           name: ::String?
                                         },
                                       ]
                                     ) -> _BatchUpdatePhoneNumberResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchUpdatePhoneNumberResponseSuccess

      interface _CreatePhoneNumberOrderResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreatePhoneNumberOrderResponse]
        def phone_number_order: () -> Types::PhoneNumberOrder
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#create_phone_number_order-instance_method
      def create_phone_number_order: (
                                       product_type: ("VoiceConnector" | "SipMediaApplicationDialIn"),
                                       e164_phone_numbers: Array[::String],
                                       ?name: ::String
                                     ) -> _CreatePhoneNumberOrderResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreatePhoneNumberOrderResponseSuccess

      interface _CreateProxySessionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateProxySessionResponse]
        def proxy_session: () -> Types::ProxySession
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#create_proxy_session-instance_method
      def create_proxy_session: (
                                  voice_connector_id: ::String,
                                  participant_phone_numbers: Array[::String],
                                  ?name: ::String,
                                  ?expiry_minutes: ::Integer,
                                  capabilities: Array[("Voice" | "SMS")],
                                  ?number_selection_behavior: ("PreferSticky" | "AvoidSticky"),
                                  ?geo_match_level: ("Country" | "AreaCode"),
                                  ?geo_match_params: {
                                    country: ::String,
                                    area_code: ::String
                                  }
                                ) -> _CreateProxySessionResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateProxySessionResponseSuccess

      interface _CreateSipMediaApplicationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateSipMediaApplicationResponse]
        def sip_media_application: () -> Types::SipMediaApplication
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#create_sip_media_application-instance_method
      def create_sip_media_application: (
                                          aws_region: ::String,
                                          name: ::String,
                                          endpoints: Array[
                                            {
                                              lambda_arn: ::String?
                                            },
                                          ],
                                          ?tags: Array[
                                            {
                                              key: ::String,
                                              value: ::String
                                            },
                                          ]
                                        ) -> _CreateSipMediaApplicationResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateSipMediaApplicationResponseSuccess

      interface _CreateSipMediaApplicationCallResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateSipMediaApplicationCallResponse]
        def sip_media_application_call: () -> Types::SipMediaApplicationCall
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#create_sip_media_application_call-instance_method
      def create_sip_media_application_call: (
                                               from_phone_number: ::String,
                                               to_phone_number: ::String,
                                               sip_media_application_id: ::String,
                                               ?sip_headers: Hash[::String, ::String],
                                               ?arguments_map: Hash[::String, ::String]
                                             ) -> _CreateSipMediaApplicationCallResponseSuccess
                                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateSipMediaApplicationCallResponseSuccess

      interface _CreateSipRuleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateSipRuleResponse]
        def sip_rule: () -> Types::SipRule
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#create_sip_rule-instance_method
      def create_sip_rule: (
                             name: ::String,
                             trigger_type: ("ToPhoneNumber" | "RequestUriHostname"),
                             trigger_value: ::String,
                             ?disabled: bool,
                             ?target_applications: Array[
                               {
                                 sip_media_application_id: ::String?,
                                 priority: ::Integer?,
                                 aws_region: ::String?
                               },
                             ]
                           ) -> _CreateSipRuleResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateSipRuleResponseSuccess

      interface _CreateVoiceConnectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateVoiceConnectorResponse]
        def voice_connector: () -> Types::VoiceConnector
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#create_voice_connector-instance_method
      def create_voice_connector: (
                                    name: ::String,
                                    ?aws_region: ("us-east-1" | "us-west-2" | "ca-central-1" | "eu-central-1" | "eu-west-1" | "eu-west-2" | "ap-northeast-2" | "ap-northeast-1" | "ap-southeast-1" | "ap-southeast-2"),
                                    require_encryption: bool,
                                    ?tags: Array[
                                      {
                                        key: ::String,
                                        value: ::String
                                      },
                                    ]
                                  ) -> _CreateVoiceConnectorResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateVoiceConnectorResponseSuccess

      interface _CreateVoiceConnectorGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateVoiceConnectorGroupResponse]
        def voice_connector_group: () -> Types::VoiceConnectorGroup
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#create_voice_connector_group-instance_method
      def create_voice_connector_group: (
                                          name: ::String,
                                          ?voice_connector_items: Array[
                                            {
                                              voice_connector_id: ::String,
                                              priority: ::Integer
                                            },
                                          ]
                                        ) -> _CreateVoiceConnectorGroupResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateVoiceConnectorGroupResponseSuccess

      interface _CreateVoiceProfileResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateVoiceProfileResponse]
        def voice_profile: () -> Types::VoiceProfile
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#create_voice_profile-instance_method
      def create_voice_profile: (
                                  speaker_search_task_id: ::String
                                ) -> _CreateVoiceProfileResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateVoiceProfileResponseSuccess

      interface _CreateVoiceProfileDomainResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateVoiceProfileDomainResponse]
        def voice_profile_domain: () -> Types::VoiceProfileDomain
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#create_voice_profile_domain-instance_method
      def create_voice_profile_domain: (
                                         name: ::String,
                                         ?description: ::String,
                                         server_side_encryption_configuration: {
                                           kms_key_arn: ::String
                                         },
                                         ?client_request_token: ::String,
                                         ?tags: Array[
                                           {
                                             key: ::String,
                                             value: ::String
                                           },
                                         ]
                                       ) -> _CreateVoiceProfileDomainResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateVoiceProfileDomainResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_phone_number-instance_method
      def delete_phone_number: (
                                 phone_number_id: ::String
                               ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_proxy_session-instance_method
      def delete_proxy_session: (
                                  voice_connector_id: ::String,
                                  proxy_session_id: ::String
                                ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_sip_media_application-instance_method
      def delete_sip_media_application: (
                                          sip_media_application_id: ::String
                                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_sip_rule-instance_method
      def delete_sip_rule: (
                             sip_rule_id: ::String
                           ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_voice_connector-instance_method
      def delete_voice_connector: (
                                    voice_connector_id: ::String
                                  ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_voice_connector_emergency_calling_configuration-instance_method
      def delete_voice_connector_emergency_calling_configuration: (
                                                                    voice_connector_id: ::String
                                                                  ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_voice_connector_group-instance_method
      def delete_voice_connector_group: (
                                          voice_connector_group_id: ::String
                                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_voice_connector_origination-instance_method
      def delete_voice_connector_origination: (
                                                voice_connector_id: ::String
                                              ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_voice_connector_proxy-instance_method
      def delete_voice_connector_proxy: (
                                          voice_connector_id: ::String
                                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_voice_connector_streaming_configuration-instance_method
      def delete_voice_connector_streaming_configuration: (
                                                            voice_connector_id: ::String
                                                          ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_voice_connector_termination-instance_method
      def delete_voice_connector_termination: (
                                                voice_connector_id: ::String
                                              ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_voice_connector_termination_credentials-instance_method
      def delete_voice_connector_termination_credentials: (
                                                            voice_connector_id: ::String,
                                                            usernames: Array[::String]
                                                          ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_voice_profile-instance_method
      def delete_voice_profile: (
                                  voice_profile_id: ::String
                                ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#delete_voice_profile_domain-instance_method
      def delete_voice_profile_domain: (
                                         voice_profile_domain_id: ::String
                                       ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DisassociatePhoneNumbersFromVoiceConnectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociatePhoneNumbersFromVoiceConnectorResponse]
        def phone_number_errors: () -> ::Array[Types::PhoneNumberError]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#disassociate_phone_numbers_from_voice_connector-instance_method
      def disassociate_phone_numbers_from_voice_connector: (
                                                             voice_connector_id: ::String,
                                                             e164_phone_numbers: Array[::String]
                                                           ) -> _DisassociatePhoneNumbersFromVoiceConnectorResponseSuccess
                                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociatePhoneNumbersFromVoiceConnectorResponseSuccess

      interface _DisassociatePhoneNumbersFromVoiceConnectorGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociatePhoneNumbersFromVoiceConnectorGroupResponse]
        def phone_number_errors: () -> ::Array[Types::PhoneNumberError]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#disassociate_phone_numbers_from_voice_connector_group-instance_method
      def disassociate_phone_numbers_from_voice_connector_group: (
                                                                   voice_connector_group_id: ::String,
                                                                   e164_phone_numbers: Array[::String]
                                                                 ) -> _DisassociatePhoneNumbersFromVoiceConnectorGroupResponseSuccess
                                                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociatePhoneNumbersFromVoiceConnectorGroupResponseSuccess

      interface _GetGlobalSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetGlobalSettingsResponse]
        def voice_connector: () -> Types::VoiceConnectorSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_global_settings-instance_method
      def get_global_settings: () -> _GetGlobalSettingsResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetGlobalSettingsResponseSuccess

      interface _GetPhoneNumberResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetPhoneNumberResponse]
        def phone_number: () -> Types::PhoneNumber
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_phone_number-instance_method
      def get_phone_number: (
                              phone_number_id: ::String
                            ) -> _GetPhoneNumberResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetPhoneNumberResponseSuccess

      interface _GetPhoneNumberOrderResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetPhoneNumberOrderResponse]
        def phone_number_order: () -> Types::PhoneNumberOrder
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_phone_number_order-instance_method
      def get_phone_number_order: (
                                    phone_number_order_id: ::String
                                  ) -> _GetPhoneNumberOrderResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetPhoneNumberOrderResponseSuccess

      interface _GetPhoneNumberSettingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetPhoneNumberSettingsResponse]
        def calling_name: () -> ::String
        def calling_name_updated_timestamp: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_phone_number_settings-instance_method
      def get_phone_number_settings: () -> _GetPhoneNumberSettingsResponseSuccess
                                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetPhoneNumberSettingsResponseSuccess

      interface _GetProxySessionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetProxySessionResponse]
        def proxy_session: () -> Types::ProxySession
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_proxy_session-instance_method
      def get_proxy_session: (
                               voice_connector_id: ::String,
                               proxy_session_id: ::String
                             ) -> _GetProxySessionResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetProxySessionResponseSuccess

      interface _GetSipMediaApplicationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetSipMediaApplicationResponse]
        def sip_media_application: () -> Types::SipMediaApplication
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_sip_media_application-instance_method
      def get_sip_media_application: (
                                       sip_media_application_id: ::String
                                     ) -> _GetSipMediaApplicationResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetSipMediaApplicationResponseSuccess

      interface _GetSipMediaApplicationAlexaSkillConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetSipMediaApplicationAlexaSkillConfigurationResponse]
        def sip_media_application_alexa_skill_configuration: () -> Types::SipMediaApplicationAlexaSkillConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_sip_media_application_alexa_skill_configuration-instance_method
      def get_sip_media_application_alexa_skill_configuration: (
                                                                 sip_media_application_id: ::String
                                                               ) -> _GetSipMediaApplicationAlexaSkillConfigurationResponseSuccess
                                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetSipMediaApplicationAlexaSkillConfigurationResponseSuccess

      interface _GetSipMediaApplicationLoggingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetSipMediaApplicationLoggingConfigurationResponse]
        def sip_media_application_logging_configuration: () -> Types::SipMediaApplicationLoggingConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_sip_media_application_logging_configuration-instance_method
      def get_sip_media_application_logging_configuration: (
                                                             sip_media_application_id: ::String
                                                           ) -> _GetSipMediaApplicationLoggingConfigurationResponseSuccess
                                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetSipMediaApplicationLoggingConfigurationResponseSuccess

      interface _GetSipRuleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetSipRuleResponse]
        def sip_rule: () -> Types::SipRule
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_sip_rule-instance_method
      def get_sip_rule: (
                          sip_rule_id: ::String
                        ) -> _GetSipRuleResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetSipRuleResponseSuccess

      interface _GetSpeakerSearchTaskResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetSpeakerSearchTaskResponse]
        def speaker_search_task: () -> Types::SpeakerSearchTask
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_speaker_search_task-instance_method
      def get_speaker_search_task: (
                                     voice_connector_id: ::String,
                                     speaker_search_task_id: ::String
                                   ) -> _GetSpeakerSearchTaskResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetSpeakerSearchTaskResponseSuccess

      interface _GetVoiceConnectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceConnectorResponse]
        def voice_connector: () -> Types::VoiceConnector
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_connector-instance_method
      def get_voice_connector: (
                                 voice_connector_id: ::String
                               ) -> _GetVoiceConnectorResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceConnectorResponseSuccess

      interface _GetVoiceConnectorEmergencyCallingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceConnectorEmergencyCallingConfigurationResponse]
        def emergency_calling_configuration: () -> Types::EmergencyCallingConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_connector_emergency_calling_configuration-instance_method
      def get_voice_connector_emergency_calling_configuration: (
                                                                 voice_connector_id: ::String
                                                               ) -> _GetVoiceConnectorEmergencyCallingConfigurationResponseSuccess
                                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceConnectorEmergencyCallingConfigurationResponseSuccess

      interface _GetVoiceConnectorGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceConnectorGroupResponse]
        def voice_connector_group: () -> Types::VoiceConnectorGroup
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_connector_group-instance_method
      def get_voice_connector_group: (
                                       voice_connector_group_id: ::String
                                     ) -> _GetVoiceConnectorGroupResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceConnectorGroupResponseSuccess

      interface _GetVoiceConnectorLoggingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceConnectorLoggingConfigurationResponse]
        def logging_configuration: () -> Types::LoggingConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_connector_logging_configuration-instance_method
      def get_voice_connector_logging_configuration: (
                                                       voice_connector_id: ::String
                                                     ) -> _GetVoiceConnectorLoggingConfigurationResponseSuccess
                                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceConnectorLoggingConfigurationResponseSuccess

      interface _GetVoiceConnectorOriginationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceConnectorOriginationResponse]
        def origination: () -> Types::Origination
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_connector_origination-instance_method
      def get_voice_connector_origination: (
                                             voice_connector_id: ::String
                                           ) -> _GetVoiceConnectorOriginationResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceConnectorOriginationResponseSuccess

      interface _GetVoiceConnectorProxyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceConnectorProxyResponse]
        def proxy: () -> Types::Proxy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_connector_proxy-instance_method
      def get_voice_connector_proxy: (
                                       voice_connector_id: ::String
                                     ) -> _GetVoiceConnectorProxyResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceConnectorProxyResponseSuccess

      interface _GetVoiceConnectorStreamingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceConnectorStreamingConfigurationResponse]
        def streaming_configuration: () -> Types::StreamingConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_connector_streaming_configuration-instance_method
      def get_voice_connector_streaming_configuration: (
                                                         voice_connector_id: ::String
                                                       ) -> _GetVoiceConnectorStreamingConfigurationResponseSuccess
                                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceConnectorStreamingConfigurationResponseSuccess

      interface _GetVoiceConnectorTerminationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceConnectorTerminationResponse]
        def termination: () -> Types::Termination
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_connector_termination-instance_method
      def get_voice_connector_termination: (
                                             voice_connector_id: ::String
                                           ) -> _GetVoiceConnectorTerminationResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceConnectorTerminationResponseSuccess

      interface _GetVoiceConnectorTerminationHealthResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceConnectorTerminationHealthResponse]
        def termination_health: () -> Types::TerminationHealth
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_connector_termination_health-instance_method
      def get_voice_connector_termination_health: (
                                                    voice_connector_id: ::String
                                                  ) -> _GetVoiceConnectorTerminationHealthResponseSuccess
                                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceConnectorTerminationHealthResponseSuccess

      interface _GetVoiceProfileResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceProfileResponse]
        def voice_profile: () -> Types::VoiceProfile
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_profile-instance_method
      def get_voice_profile: (
                               voice_profile_id: ::String
                             ) -> _GetVoiceProfileResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceProfileResponseSuccess

      interface _GetVoiceProfileDomainResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceProfileDomainResponse]
        def voice_profile_domain: () -> Types::VoiceProfileDomain
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_profile_domain-instance_method
      def get_voice_profile_domain: (
                                      voice_profile_domain_id: ::String
                                    ) -> _GetVoiceProfileDomainResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceProfileDomainResponseSuccess

      interface _GetVoiceToneAnalysisTaskResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetVoiceToneAnalysisTaskResponse]
        def voice_tone_analysis_task: () -> Types::VoiceToneAnalysisTask
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#get_voice_tone_analysis_task-instance_method
      def get_voice_tone_analysis_task: (
                                          voice_connector_id: ::String,
                                          voice_tone_analysis_task_id: ::String,
                                          is_caller: bool
                                        ) -> _GetVoiceToneAnalysisTaskResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetVoiceToneAnalysisTaskResponseSuccess

      interface _ListAvailableVoiceConnectorRegionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAvailableVoiceConnectorRegionsResponse]
        def voice_connector_regions: () -> ::Array[("us-east-1" | "us-west-2" | "ca-central-1" | "eu-central-1" | "eu-west-1" | "eu-west-2" | "ap-northeast-2" | "ap-northeast-1" | "ap-southeast-1" | "ap-southeast-2")]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_available_voice_connector_regions-instance_method
      def list_available_voice_connector_regions: () -> _ListAvailableVoiceConnectorRegionsResponseSuccess
                                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAvailableVoiceConnectorRegionsResponseSuccess

      interface _ListPhoneNumberOrdersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListPhoneNumberOrdersResponse]
        def phone_number_orders: () -> ::Array[Types::PhoneNumberOrder]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_phone_number_orders-instance_method
      def list_phone_number_orders: (
                                      ?next_token: ::String,
                                      ?max_results: ::Integer
                                    ) -> _ListPhoneNumberOrdersResponseSuccess
                                  | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListPhoneNumberOrdersResponseSuccess

      interface _ListPhoneNumbersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListPhoneNumbersResponse]
        def phone_numbers: () -> ::Array[Types::PhoneNumber]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_phone_numbers-instance_method
      def list_phone_numbers: (
                                ?status: ::String,
                                ?product_type: ("VoiceConnector" | "SipMediaApplicationDialIn"),
                                ?filter_name: ("VoiceConnectorId" | "VoiceConnectorGroupId" | "SipRuleId"),
                                ?filter_value: ::String,
                                ?max_results: ::Integer,
                                ?next_token: ::String
                              ) -> _ListPhoneNumbersResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListPhoneNumbersResponseSuccess

      interface _ListProxySessionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListProxySessionsResponse]
        def proxy_sessions: () -> ::Array[Types::ProxySession]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_proxy_sessions-instance_method
      def list_proxy_sessions: (
                                 voice_connector_id: ::String,
                                 ?status: ("Open" | "InProgress" | "Closed"),
                                 ?next_token: ::String,
                                 ?max_results: ::Integer
                               ) -> _ListProxySessionsResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListProxySessionsResponseSuccess

      interface _ListSipMediaApplicationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListSipMediaApplicationsResponse]
        def sip_media_applications: () -> ::Array[Types::SipMediaApplication]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_sip_media_applications-instance_method
      def list_sip_media_applications: (
                                         ?max_results: ::Integer,
                                         ?next_token: ::String
                                       ) -> _ListSipMediaApplicationsResponseSuccess
                                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListSipMediaApplicationsResponseSuccess

      interface _ListSipRulesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListSipRulesResponse]
        def sip_rules: () -> ::Array[Types::SipRule]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_sip_rules-instance_method
      def list_sip_rules: (
                            ?sip_media_application_id: ::String,
                            ?max_results: ::Integer,
                            ?next_token: ::String
                          ) -> _ListSipRulesResponseSuccess
                        | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListSipRulesResponseSuccess

      interface _ListSupportedPhoneNumberCountriesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListSupportedPhoneNumberCountriesResponse]
        def phone_number_countries: () -> ::Array[Types::PhoneNumberCountry]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_supported_phone_number_countries-instance_method
      def list_supported_phone_number_countries: (
                                                   product_type: ("VoiceConnector" | "SipMediaApplicationDialIn")
                                                 ) -> _ListSupportedPhoneNumberCountriesResponseSuccess
                                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListSupportedPhoneNumberCountriesResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Array[Types::Tag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _ListVoiceConnectorGroupsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListVoiceConnectorGroupsResponse]
        def voice_connector_groups: () -> ::Array[Types::VoiceConnectorGroup]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_voice_connector_groups-instance_method
      def list_voice_connector_groups: (
                                         ?next_token: ::String,
                                         ?max_results: ::Integer
                                       ) -> _ListVoiceConnectorGroupsResponseSuccess
                                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListVoiceConnectorGroupsResponseSuccess

      interface _ListVoiceConnectorTerminationCredentialsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListVoiceConnectorTerminationCredentialsResponse]
        def usernames: () -> ::Array[::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_voice_connector_termination_credentials-instance_method
      def list_voice_connector_termination_credentials: (
                                                          voice_connector_id: ::String
                                                        ) -> _ListVoiceConnectorTerminationCredentialsResponseSuccess
                                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListVoiceConnectorTerminationCredentialsResponseSuccess

      interface _ListVoiceConnectorsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListVoiceConnectorsResponse]
        def voice_connectors: () -> ::Array[Types::VoiceConnector]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_voice_connectors-instance_method
      def list_voice_connectors: (
                                   ?next_token: ::String,
                                   ?max_results: ::Integer
                                 ) -> _ListVoiceConnectorsResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListVoiceConnectorsResponseSuccess

      interface _ListVoiceProfileDomainsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListVoiceProfileDomainsResponse]
        def voice_profile_domains: () -> ::Array[Types::VoiceProfileDomainSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_voice_profile_domains-instance_method
      def list_voice_profile_domains: (
                                        ?next_token: ::String,
                                        ?max_results: ::Integer
                                      ) -> _ListVoiceProfileDomainsResponseSuccess
                                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListVoiceProfileDomainsResponseSuccess

      interface _ListVoiceProfilesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListVoiceProfilesResponse]
        def voice_profiles: () -> ::Array[Types::VoiceProfileSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#list_voice_profiles-instance_method
      def list_voice_profiles: (
                                 voice_profile_domain_id: ::String,
                                 ?next_token: ::String,
                                 ?max_results: ::Integer
                               ) -> _ListVoiceProfilesResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListVoiceProfilesResponseSuccess

      interface _PutSipMediaApplicationAlexaSkillConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutSipMediaApplicationAlexaSkillConfigurationResponse]
        def sip_media_application_alexa_skill_configuration: () -> Types::SipMediaApplicationAlexaSkillConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#put_sip_media_application_alexa_skill_configuration-instance_method
      def put_sip_media_application_alexa_skill_configuration: (
                                                                 sip_media_application_id: ::String,
                                                                 ?sip_media_application_alexa_skill_configuration: {
                                                                   alexa_skill_status: ("ACTIVE" | "INACTIVE"),
                                                                   alexa_skill_ids: Array[::String]
                                                                 }
                                                               ) -> _PutSipMediaApplicationAlexaSkillConfigurationResponseSuccess
                                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutSipMediaApplicationAlexaSkillConfigurationResponseSuccess

      interface _PutSipMediaApplicationLoggingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutSipMediaApplicationLoggingConfigurationResponse]
        def sip_media_application_logging_configuration: () -> Types::SipMediaApplicationLoggingConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#put_sip_media_application_logging_configuration-instance_method
      def put_sip_media_application_logging_configuration: (
                                                             sip_media_application_id: ::String,
                                                             ?sip_media_application_logging_configuration: {
                                                               enable_sip_media_application_message_logs: bool?
                                                             }
                                                           ) -> _PutSipMediaApplicationLoggingConfigurationResponseSuccess
                                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutSipMediaApplicationLoggingConfigurationResponseSuccess

      interface _PutVoiceConnectorEmergencyCallingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutVoiceConnectorEmergencyCallingConfigurationResponse]
        def emergency_calling_configuration: () -> Types::EmergencyCallingConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#put_voice_connector_emergency_calling_configuration-instance_method
      def put_voice_connector_emergency_calling_configuration: (
                                                                 voice_connector_id: ::String,
                                                                 emergency_calling_configuration: {
                                                                   dnis: Array[
                                                                     {
                                                                       emergency_phone_number: ::String,
                                                                       test_phone_number: ::String?,
                                                                       calling_country: ::String
                                                                     },
                                                                   ]?
                                                                 }
                                                               ) -> _PutVoiceConnectorEmergencyCallingConfigurationResponseSuccess
                                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutVoiceConnectorEmergencyCallingConfigurationResponseSuccess

      interface _PutVoiceConnectorLoggingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutVoiceConnectorLoggingConfigurationResponse]
        def logging_configuration: () -> Types::LoggingConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#put_voice_connector_logging_configuration-instance_method
      def put_voice_connector_logging_configuration: (
                                                       voice_connector_id: ::String,
                                                       logging_configuration: {
                                                         enable_sip_logs: bool?,
                                                         enable_media_metric_logs: bool?
                                                       }
                                                     ) -> _PutVoiceConnectorLoggingConfigurationResponseSuccess
                                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutVoiceConnectorLoggingConfigurationResponseSuccess

      interface _PutVoiceConnectorOriginationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutVoiceConnectorOriginationResponse]
        def origination: () -> Types::Origination
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#put_voice_connector_origination-instance_method
      def put_voice_connector_origination: (
                                             voice_connector_id: ::String,
                                             origination: {
                                               routes: Array[
                                                 {
                                                   host: ::String?,
                                                   port: ::Integer?,
                                                   protocol: ("TCP" | "UDP")?,
                                                   priority: ::Integer?,
                                                   weight: ::Integer?
                                                 },
                                               ]?,
                                               disabled: bool?
                                             }
                                           ) -> _PutVoiceConnectorOriginationResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutVoiceConnectorOriginationResponseSuccess

      interface _PutVoiceConnectorProxyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutVoiceConnectorProxyResponse]
        def proxy: () -> Types::Proxy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#put_voice_connector_proxy-instance_method
      def put_voice_connector_proxy: (
                                       voice_connector_id: ::String,
                                       default_session_expiry_minutes: ::Integer,
                                       phone_number_pool_countries: Array[::String],
                                       ?fall_back_phone_number: ::String,
                                       ?disabled: bool
                                     ) -> _PutVoiceConnectorProxyResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutVoiceConnectorProxyResponseSuccess

      interface _PutVoiceConnectorStreamingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutVoiceConnectorStreamingConfigurationResponse]
        def streaming_configuration: () -> Types::StreamingConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#put_voice_connector_streaming_configuration-instance_method
      def put_voice_connector_streaming_configuration: (
                                                         voice_connector_id: ::String,
                                                         streaming_configuration: {
                                                           data_retention_in_hours: ::Integer,
                                                           disabled: bool,
                                                           streaming_notification_targets: Array[
                                                             {
                                                               notification_target: ("EventBridge" | "SNS" | "SQS")?
                                                             },
                                                           ]?,
                                                           media_insights_configuration: {
                                                             disabled: bool?,
                                                             configuration_arn: ::String?
                                                           }?
                                                         }
                                                       ) -> _PutVoiceConnectorStreamingConfigurationResponseSuccess
                                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutVoiceConnectorStreamingConfigurationResponseSuccess

      interface _PutVoiceConnectorTerminationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutVoiceConnectorTerminationResponse]
        def termination: () -> Types::Termination
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#put_voice_connector_termination-instance_method
      def put_voice_connector_termination: (
                                             voice_connector_id: ::String,
                                             termination: {
                                               cps_limit: ::Integer?,
                                               default_phone_number: ::String?,
                                               calling_regions: Array[::String]?,
                                               cidr_allowed_list: Array[::String]?,
                                               disabled: bool?
                                             }
                                           ) -> _PutVoiceConnectorTerminationResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutVoiceConnectorTerminationResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#put_voice_connector_termination_credentials-instance_method
      def put_voice_connector_termination_credentials: (
                                                         voice_connector_id: ::String,
                                                         ?credentials: Array[
                                                           {
                                                             username: ::String?,
                                                             password: ::String?
                                                           },
                                                         ]
                                                       ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _RestorePhoneNumberResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::RestorePhoneNumberResponse]
        def phone_number: () -> Types::PhoneNumber
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#restore_phone_number-instance_method
      def restore_phone_number: (
                                  phone_number_id: ::String
                                ) -> _RestorePhoneNumberResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _RestorePhoneNumberResponseSuccess

      interface _SearchAvailablePhoneNumbersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::SearchAvailablePhoneNumbersResponse]
        def e164_phone_numbers: () -> ::Array[::String]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#search_available_phone_numbers-instance_method
      def search_available_phone_numbers: (
                                            ?area_code: ::String,
                                            ?city: ::String,
                                            ?country: ::String,
                                            ?state: ::String,
                                            ?toll_free_prefix: ::String,
                                            ?phone_number_type: ("Local" | "TollFree"),
                                            ?max_results: ::Integer,
                                            ?next_token: ::String
                                          ) -> _SearchAvailablePhoneNumbersResponseSuccess
                                        | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _SearchAvailablePhoneNumbersResponseSuccess

      interface _StartSpeakerSearchTaskResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartSpeakerSearchTaskResponse]
        def speaker_search_task: () -> Types::SpeakerSearchTask
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#start_speaker_search_task-instance_method
      def start_speaker_search_task: (
                                       voice_connector_id: ::String,
                                       transaction_id: ::String,
                                       voice_profile_domain_id: ::String,
                                       ?client_request_token: ::String,
                                       ?call_leg: ("Caller" | "Callee")
                                     ) -> _StartSpeakerSearchTaskResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartSpeakerSearchTaskResponseSuccess

      interface _StartVoiceToneAnalysisTaskResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartVoiceToneAnalysisTaskResponse]
        def voice_tone_analysis_task: () -> Types::VoiceToneAnalysisTask
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#start_voice_tone_analysis_task-instance_method
      def start_voice_tone_analysis_task: (
                                            voice_connector_id: ::String,
                                            transaction_id: ::String,
                                            language_code: ("en-US"),
                                            ?client_request_token: ::String
                                          ) -> _StartVoiceToneAnalysisTaskResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartVoiceToneAnalysisTaskResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#stop_speaker_search_task-instance_method
      def stop_speaker_search_task: (
                                      voice_connector_id: ::String,
                                      speaker_search_task_id: ::String
                                    ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#stop_voice_tone_analysis_task-instance_method
      def stop_voice_tone_analysis_task: (
                                           voice_connector_id: ::String,
                                           voice_tone_analysis_task_id: ::String
                                         ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_global_settings-instance_method
      def update_global_settings: (
                                    ?voice_connector: {
                                      cdr_bucket: ::String?
                                    }
                                  ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _UpdatePhoneNumberResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdatePhoneNumberResponse]
        def phone_number: () -> Types::PhoneNumber
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_phone_number-instance_method
      def update_phone_number: (
                                 phone_number_id: ::String,
                                 ?product_type: ("VoiceConnector" | "SipMediaApplicationDialIn"),
                                 ?calling_name: ::String,
                                 ?name: ::String
                               ) -> _UpdatePhoneNumberResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdatePhoneNumberResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_phone_number_settings-instance_method
      def update_phone_number_settings: (
                                          calling_name: ::String
                                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _UpdateProxySessionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateProxySessionResponse]
        def proxy_session: () -> Types::ProxySession
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_proxy_session-instance_method
      def update_proxy_session: (
                                  voice_connector_id: ::String,
                                  proxy_session_id: ::String,
                                  capabilities: Array[("Voice" | "SMS")],
                                  ?expiry_minutes: ::Integer
                                ) -> _UpdateProxySessionResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateProxySessionResponseSuccess

      interface _UpdateSipMediaApplicationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateSipMediaApplicationResponse]
        def sip_media_application: () -> Types::SipMediaApplication
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_sip_media_application-instance_method
      def update_sip_media_application: (
                                          sip_media_application_id: ::String,
                                          ?name: ::String,
                                          ?endpoints: Array[
                                            {
                                              lambda_arn: ::String?
                                            },
                                          ]
                                        ) -> _UpdateSipMediaApplicationResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateSipMediaApplicationResponseSuccess

      interface _UpdateSipMediaApplicationCallResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateSipMediaApplicationCallResponse]
        def sip_media_application_call: () -> Types::SipMediaApplicationCall
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_sip_media_application_call-instance_method
      def update_sip_media_application_call: (
                                               sip_media_application_id: ::String,
                                               transaction_id: ::String,
                                               arguments: Hash[::String, ::String]
                                             ) -> _UpdateSipMediaApplicationCallResponseSuccess
                                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateSipMediaApplicationCallResponseSuccess

      interface _UpdateSipRuleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateSipRuleResponse]
        def sip_rule: () -> Types::SipRule
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_sip_rule-instance_method
      def update_sip_rule: (
                             sip_rule_id: ::String,
                             name: ::String,
                             ?disabled: bool,
                             ?target_applications: Array[
                               {
                                 sip_media_application_id: ::String?,
                                 priority: ::Integer?,
                                 aws_region: ::String?
                               },
                             ]
                           ) -> _UpdateSipRuleResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateSipRuleResponseSuccess

      interface _UpdateVoiceConnectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateVoiceConnectorResponse]
        def voice_connector: () -> Types::VoiceConnector
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_voice_connector-instance_method
      def update_voice_connector: (
                                    voice_connector_id: ::String,
                                    name: ::String,
                                    require_encryption: bool
                                  ) -> _UpdateVoiceConnectorResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateVoiceConnectorResponseSuccess

      interface _UpdateVoiceConnectorGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateVoiceConnectorGroupResponse]
        def voice_connector_group: () -> Types::VoiceConnectorGroup
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_voice_connector_group-instance_method
      def update_voice_connector_group: (
                                          voice_connector_group_id: ::String,
                                          name: ::String,
                                          voice_connector_items: Array[
                                            {
                                              voice_connector_id: ::String,
                                              priority: ::Integer
                                            },
                                          ]
                                        ) -> _UpdateVoiceConnectorGroupResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateVoiceConnectorGroupResponseSuccess

      interface _UpdateVoiceProfileResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateVoiceProfileResponse]
        def voice_profile: () -> Types::VoiceProfile
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_voice_profile-instance_method
      def update_voice_profile: (
                                  voice_profile_id: ::String,
                                  speaker_search_task_id: ::String
                                ) -> _UpdateVoiceProfileResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateVoiceProfileResponseSuccess

      interface _UpdateVoiceProfileDomainResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateVoiceProfileDomainResponse]
        def voice_profile_domain: () -> Types::VoiceProfileDomain
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#update_voice_profile_domain-instance_method
      def update_voice_profile_domain: (
                                         voice_profile_domain_id: ::String,
                                         ?name: ::String,
                                         ?description: ::String
                                       ) -> _UpdateVoiceProfileDomainResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateVoiceProfileDomainResponseSuccess

      interface _ValidateE911AddressResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ValidateE911AddressResponse]
        def validation_result: () -> ::Integer
        def address_external_id: () -> ::String
        def address: () -> Types::Address
        def candidate_address_list: () -> ::Array[Types::CandidateAddress]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ChimeSDKVoice/Client.html#validate_e911_address-instance_method
      def validate_e911_address: (
                                   aws_account_id: ::String,
                                   street_number: ::String,
                                   street_info: ::String,
                                   city: ::String,
                                   state: ::String,
                                   country: ::String,
                                   postal_code: ::String
                                 ) -> _ValidateE911AddressResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ValidateE911AddressResponseSuccess
    end
  end
end

