# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module ACM
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?simple_json: bool,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#add_tags_to_certificate-instance_method
      def add_tags_to_certificate: (
                                     certificate_arn: ::String,
                                     tags: Array[
                                       {
                                         key: ::String,
                                         value: ::String?
                                       },
                                     ]
                                   ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#delete_certificate-instance_method
      def delete_certificate: (
                                certificate_arn: ::String
                              ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DescribeCertificateResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeCertificateResponse]
        def certificate: () -> Types::CertificateDetail
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#describe_certificate-instance_method
      def describe_certificate: (
                                  certificate_arn: ::String
                                ) -> _DescribeCertificateResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeCertificateResponseSuccess

      interface _ExportCertificateResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ExportCertificateResponse]
        def certificate: () -> ::String
        def certificate_chain: () -> ::String
        def private_key: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#export_certificate-instance_method
      def export_certificate: (
                                certificate_arn: ::String,
                                passphrase: ::String
                              ) -> _ExportCertificateResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ExportCertificateResponseSuccess

      interface _GetAccountConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetAccountConfigurationResponse]
        def expiry_events: () -> Types::ExpiryEventsConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#get_account_configuration-instance_method
      def get_account_configuration: () -> _GetAccountConfigurationResponseSuccess
                                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetAccountConfigurationResponseSuccess

      interface _GetCertificateResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetCertificateResponse]
        def certificate: () -> ::String
        def certificate_chain: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#get_certificate-instance_method
      def get_certificate: (
                             certificate_arn: ::String
                           ) -> _GetCertificateResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetCertificateResponseSuccess

      interface _ImportCertificateResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ImportCertificateResponse]
        def certificate_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#import_certificate-instance_method
      def import_certificate: (
                                ?certificate_arn: ::String,
                                certificate: ::String,
                                private_key: ::String,
                                ?certificate_chain: ::String,
                                ?tags: Array[
                                  {
                                    key: ::String,
                                    value: ::String?
                                  },
                                ]
                              ) -> _ImportCertificateResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ImportCertificateResponseSuccess

      interface _ListCertificatesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListCertificatesResponse]
        def next_token: () -> ::String
        def certificate_summary_list: () -> ::Array[Types::CertificateSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#list_certificates-instance_method
      def list_certificates: (
                               ?certificate_statuses: Array[("PENDING_VALIDATION" | "ISSUED" | "INACTIVE" | "EXPIRED" | "VALIDATION_TIMED_OUT" | "REVOKED" | "FAILED")],
                               ?includes: {
                                 extended_key_usage: Array[("TLS_WEB_SERVER_AUTHENTICATION" | "TLS_WEB_CLIENT_AUTHENTICATION" | "CODE_SIGNING" | "EMAIL_PROTECTION" | "TIME_STAMPING" | "OCSP_SIGNING" | "IPSEC_END_SYSTEM" | "IPSEC_TUNNEL" | "IPSEC_USER" | "ANY" | "NONE" | "CUSTOM")]?,
                                 key_usage: Array[("DIGITAL_SIGNATURE" | "NON_REPUDIATION" | "KEY_ENCIPHERMENT" | "DATA_ENCIPHERMENT" | "KEY_AGREEMENT" | "CERTIFICATE_SIGNING" | "CRL_SIGNING" | "ENCIPHER_ONLY" | "DECIPHER_ONLY" | "ANY" | "CUSTOM")]?,
                                 key_types: Array[("RSA_1024" | "RSA_2048" | "RSA_3072" | "RSA_4096" | "EC_prime256v1" | "EC_secp384r1" | "EC_secp521r1")]?
                               },
                               ?next_token: ::String,
                               ?max_items: ::Integer,
                               ?sort_by: ("CREATED_AT"),
                               ?sort_order: ("ASCENDING" | "DESCENDING")
                             ) -> _ListCertificatesResponseSuccess
                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListCertificatesResponseSuccess

      interface _ListTagsForCertificateResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForCertificateResponse]
        def tags: () -> ::Array[Types::Tag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#list_tags_for_certificate-instance_method
      def list_tags_for_certificate: (
                                       certificate_arn: ::String
                                     ) -> _ListTagsForCertificateResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForCertificateResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#put_account_configuration-instance_method
      def put_account_configuration: (
                                       ?expiry_events: {
                                         days_before_expiry: ::Integer?
                                       },
                                       idempotency_token: ::String
                                     ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#remove_tags_from_certificate-instance_method
      def remove_tags_from_certificate: (
                                          certificate_arn: ::String,
                                          tags: Array[
                                            {
                                              key: ::String,
                                              value: ::String?
                                            },
                                          ]
                                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#renew_certificate-instance_method
      def renew_certificate: (
                               certificate_arn: ::String
                             ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _RequestCertificateResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::RequestCertificateResponse]
        def certificate_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#request_certificate-instance_method
      def request_certificate: (
                                 domain_name: ::String,
                                 ?validation_method: ("EMAIL" | "DNS"),
                                 ?subject_alternative_names: Array[::String],
                                 ?idempotency_token: ::String,
                                 ?domain_validation_options: Array[
                                   {
                                     domain_name: ::String,
                                     validation_domain: ::String
                                   },
                                 ],
                                 ?options: {
                                   certificate_transparency_logging_preference: ("ENABLED" | "DISABLED")?
                                 },
                                 ?certificate_authority_arn: ::String,
                                 ?tags: Array[
                                   {
                                     key: ::String,
                                     value: ::String?
                                   },
                                 ],
                                 ?key_algorithm: ("RSA_1024" | "RSA_2048" | "RSA_3072" | "RSA_4096" | "EC_prime256v1" | "EC_secp384r1" | "EC_secp521r1")
                               ) -> _RequestCertificateResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _RequestCertificateResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#resend_validation_email-instance_method
      def resend_validation_email: (
                                     certificate_arn: ::String,
                                     domain: ::String,
                                     validation_domain: ::String
                                   ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#update_certificate_options-instance_method
      def update_certificate_options: (
                                        certificate_arn: ::String,
                                        options: {
                                          certificate_transparency_logging_preference: ("ENABLED" | "DISABLED")?
                                        }
                                      ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ACM/Client.html#wait_until-instance_method
      def wait_until: (:certificate_validated waiter_name, 
                    certificate_arn: ::String
                  ) -> Client::_DescribeCertificateResponseSuccess
                    | (:certificate_validated waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeCertificateResponseSuccess
    end
  end
end

