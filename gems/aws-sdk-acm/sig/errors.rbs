# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module ACM
    module Errors
      class ServiceError < ::Aws::Errors::ServiceError
      end

      class AccessDeniedException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class ConflictException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidArgsException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidArnException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidDomainValidationOptionsException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidParameterException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidStateException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidTagException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class LimitExceededException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class RequestInProgressException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class ResourceInUseException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class ResourceNotFoundException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class TagPolicyException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class ThrottlingException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class TooManyTagsException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class ValidationException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
    end
  end
end
