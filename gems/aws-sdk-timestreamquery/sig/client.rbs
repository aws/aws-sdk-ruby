# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module TimestreamQuery
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?simple_json: bool,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _CancelQueryResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CancelQueryResponse]
        def cancellation_message: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#cancel_query-instance_method
      def cancel_query: (
                          query_id: ::String
                        ) -> _CancelQueryResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CancelQueryResponseSuccess

      interface _CreateScheduledQueryResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateScheduledQueryResponse]
        def arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#create_scheduled_query-instance_method
      def create_scheduled_query: (
                                    name: ::String,
                                    query_string: ::String,
                                    schedule_configuration: {
                                      schedule_expression: ::String
                                    },
                                    notification_configuration: {
                                      sns_configuration: {
                                        topic_arn: ::String
                                      }
                                    },
                                    ?target_configuration: {
                                      timestream_configuration: {
                                        database_name: ::String,
                                        table_name: ::String,
                                        time_column: ::String,
                                        dimension_mappings: Array[
                                          {
                                            name: ::String,
                                            dimension_value_type: ("VARCHAR")
                                          },
                                        ],
                                        multi_measure_mappings: {
                                          target_multi_measure_name: ::String?,
                                          multi_measure_attribute_mappings: Array[
                                            {
                                              source_column: ::String,
                                              target_multi_measure_attribute_name: ::String?,
                                              measure_value_type: ("BIGINT" | "BOOLEAN" | "DOUBLE" | "VARCHAR" | "TIMESTAMP")
                                            },
                                          ]
                                        }?,
                                        mixed_measure_mappings: Array[
                                          {
                                            measure_name: ::String?,
                                            source_column: ::String?,
                                            target_measure_name: ::String?,
                                            measure_value_type: ("BIGINT" | "BOOLEAN" | "DOUBLE" | "VARCHAR" | "MULTI"),
                                            multi_measure_attribute_mappings: Array[
                                              {
                                                source_column: ::String,
                                                target_multi_measure_attribute_name: ::String?,
                                                measure_value_type: ("BIGINT" | "BOOLEAN" | "DOUBLE" | "VARCHAR" | "TIMESTAMP")
                                              },
                                            ]?
                                          },
                                        ]?,
                                        measure_name_column: ::String?
                                      }
                                    },
                                    ?client_token: ::String,
                                    scheduled_query_execution_role_arn: ::String,
                                    ?tags: Array[
                                      {
                                        key: ::String,
                                        value: ::String
                                      },
                                    ],
                                    ?kms_key_id: ::String,
                                    error_report_configuration: {
                                      s3_configuration: {
                                        bucket_name: ::String,
                                        object_key_prefix: ::String?,
                                        encryption_option: ("SSE_S3" | "SSE_KMS")?
                                      }
                                    }
                                  ) -> _CreateScheduledQueryResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateScheduledQueryResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#delete_scheduled_query-instance_method
      def delete_scheduled_query: (
                                    scheduled_query_arn: ::String
                                  ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DescribeEndpointsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeEndpointsResponse]
        def endpoints: () -> ::Array[Types::Endpoint]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#describe_endpoints-instance_method
      def describe_endpoints: (
                              ) -> _DescribeEndpointsResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeEndpointsResponseSuccess

      interface _DescribeScheduledQueryResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeScheduledQueryResponse]
        def scheduled_query: () -> Types::ScheduledQueryDescription
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#describe_scheduled_query-instance_method
      def describe_scheduled_query: (
                                      scheduled_query_arn: ::String
                                    ) -> _DescribeScheduledQueryResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeScheduledQueryResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#execute_scheduled_query-instance_method
      def execute_scheduled_query: (
                                     scheduled_query_arn: ::String,
                                     invocation_time: ::Time,
                                     ?client_token: ::String
                                   ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _ListScheduledQueriesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListScheduledQueriesResponse]
        def scheduled_queries: () -> ::Array[Types::ScheduledQuery]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#list_scheduled_queries-instance_method
      def list_scheduled_queries: (
                                    ?max_results: ::Integer,
                                    ?next_token: ::String
                                  ) -> _ListScheduledQueriesResponseSuccess
                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListScheduledQueriesResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Array[Types::Tag]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String,
                                    ?max_results: ::Integer,
                                    ?next_token: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _PrepareQueryResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PrepareQueryResponse]
        def query_string: () -> ::String
        def columns: () -> ::Array[Types::SelectColumn]
        def parameters: () -> ::Array[Types::ParameterMapping]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#prepare_query-instance_method
      def prepare_query: (
                           query_string: ::String,
                           ?validate_only: bool
                         ) -> _PrepareQueryResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PrepareQueryResponseSuccess

      interface _QueryResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::QueryResponse]
        def query_id: () -> ::String
        def next_token: () -> ::String
        def rows: () -> ::Array[Types::Row]
        def column_info: () -> ::Array[Types::ColumnInfo]
        def query_status: () -> Types::QueryStatus
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#query-instance_method
      def query: (
                   query_string: ::String,
                   ?client_token: ::String,
                   ?next_token: ::String,
                   ?max_rows: ::Integer
                 ) -> _QueryResponseSuccess
               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _QueryResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/TimestreamQuery/Client.html#update_scheduled_query-instance_method
      def update_scheduled_query: (
                                    scheduled_query_arn: ::String,
                                    state: ("ENABLED" | "DISABLED")
                                  ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
    end
  end
end

