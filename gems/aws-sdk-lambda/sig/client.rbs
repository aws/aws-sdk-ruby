# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module Lambda
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#initialize-instance_method
      def self.new: (?credentials: untyped, ?region: String, ?access_key_id: String, ?active_endpoint_cache: bool, ?adaptive_retry_wait_to_fill: bool, ?client_side_monitoring: bool, ?client_side_monitoring_client_id: String, ?client_side_monitoring_host: String, ?client_side_monitoring_port: Integer, ?client_side_monitoring_publisher: untyped, ?convert_params: bool, ?correct_clock_skew: bool, ?defaults_mode: String, ?disable_host_prefix_injection: bool, ?disable_request_compression: bool, ?endpoint: untyped, ?endpoint_cache_max_entries: Integer, ?endpoint_cache_max_threads: Integer, ?endpoint_cache_poll_interval: Integer, ?endpoint_discovery: bool, ?event_stream_handler: Proc, ?ignore_configured_endpoint_urls: bool, ?input_event_stream_handler: Proc, ?log_formatter: untyped, ?log_level: Symbol, ?logger: untyped, ?max_attempts: Integer, ?output_event_stream_handler: Proc, ?profile: String, ?request_min_compression_size_bytes: Integer, ?retry_backoff: Proc, ?retry_base_delay: Float, ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer), ?retry_limit: Integer, ?retry_max_delay: Integer, ?retry_mode: ("legacy" | "standard" | "adaptive"), ?sdk_ua_app_id: String, ?secret_access_key: String, ?session_token: String, ?stub_responses: untyped, ?token_provider: untyped, ?use_dualstack_endpoint: bool, ?use_fips_endpoint: bool, ?validate_params: bool, ?endpoint_provider: untyped, ?http_proxy: String, ?http_open_timeout: (Float | Integer), ?http_read_timeout: (Float | Integer), ?http_idle_timeout: (Float | Integer), ?http_continue_timeout: (Float | Integer), ?ssl_timeout: (Float | Integer | nil), ?http_wire_trace: bool, ?ssl_verify_peer: bool, ?ssl_ca_bundle: String, ?ssl_ca_directory: String, ?ssl_ca_store: String, ?on_chunk_received: Proc, ?on_chunk_sent: Proc, ?raise_response_errors: bool) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#add_layer_version_permission-instance_method
      def add_layer_version_permission: (action: Types::tLayerPermissionAllowedAction, layer_name: Types::tLayerName, principal: Types::tLayerPermissionAllowedPrincipal, statement_id: Types::tStatementId, version_number: Types::tLayerVersionNumber, ?organization_id: Types::tOrganizationId, ?revision_id: Types::tString) -> Types::AddLayerVersionPermissionResponse
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::AddLayerVersionPermissionResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#add_permission-instance_method
      def add_permission: (action: Types::tAction, function_name: Types::tFunctionName, principal: Types::tPrincipal, statement_id: Types::tStatementId, ?event_source_token: Types::tEventSourceToken, ?function_url_auth_type: Types::tFunctionUrlAuthType, ?principal_org_id: Types::tPrincipalOrgID, ?qualifier: Types::tQualifier, ?revision_id: Types::tString, ?source_account: Types::tSourceOwner, ?source_arn: Types::tArn) -> Types::AddPermissionResponse
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::AddPermissionResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#create_alias-instance_method
      def create_alias: (function_name: Types::tFunctionName, function_version: Types::tVersion, name: Types::tAlias, ?description: Types::tDescription, ?routing_config: Types::tAliasRoutingConfiguration) -> Types::AliasConfiguration
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::AliasConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#create_code_signing_config-instance_method
      def create_code_signing_config: (allowed_publishers: Types::tAllowedPublishers, ?code_signing_policies: Types::tCodeSigningPolicies, ?description: Types::tDescription) -> Types::CreateCodeSigningConfigResponse
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::CreateCodeSigningConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#create_event_source_mapping-instance_method
      def create_event_source_mapping: (function_name: Types::tFunctionName, ?amazon_managed_kafka_event_source_config: Types::tAmazonManagedKafkaEventSourceConfig, ?batch_size: Types::tBatchSize, ?bisect_batch_on_function_error: Types::tBisectBatchOnFunctionError, ?destination_config: Types::tDestinationConfig, ?document_db_event_source_config: Types::tDocumentDBEventSourceConfig, ?enabled: Types::tEnabled, ?event_source_arn: Types::tArn, ?filter_criteria: Types::tFilterCriteria, ?function_response_types: Types::tFunctionResponseTypeList, ?maximum_batching_window_in_seconds: Types::tMaximumBatchingWindowInSeconds, ?maximum_record_age_in_seconds: Types::tMaximumRecordAgeInSeconds, ?maximum_retry_attempts: Types::tMaximumRetryAttemptsEventSourceMapping, ?parallelization_factor: Types::tParallelizationFactor, ?queues: Types::tQueues, ?scaling_config: Types::tScalingConfig, ?self_managed_event_source: Types::tSelfManagedEventSource, ?self_managed_kafka_event_source_config: Types::tSelfManagedKafkaEventSourceConfig, ?source_access_configurations: Types::tSourceAccessConfigurations_input, ?starting_position: Types::tEventSourcePosition, ?starting_position_timestamp: Types::tDate, ?topics: Types::tTopics, ?tumbling_window_in_seconds: Types::tTumblingWindowInSeconds) -> Types::EventSourceMappingConfiguration
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::EventSourceMappingConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#create_function-instance_method
      def create_function: (code: Types::tFunctionCode, function_name: Types::tFunctionName, role: Types::tRoleArn, ?architectures: Types::tArchitecturesList, ?code_signing_config_arn: Types::tCodeSigningConfigArn, ?dead_letter_config: Types::tDeadLetterConfig, ?description: Types::tDescription, ?environment: Types::tEnvironment, ?ephemeral_storage: Types::tEphemeralStorage, ?file_system_configs: Types::tFileSystemConfigList_input, ?handler: Types::tHandler, ?image_config: Types::tImageConfig, ?kms_key_arn: Types::tKMSKeyArn, ?layers: Types::tLayerList, ?logging_config: Types::tLoggingConfig, ?memory_size: Types::tMemorySize, ?package_type: Types::tPackageType, ?publish: Types::tBoolean, ?runtime: Types::tRuntime, ?snap_start: Types::tSnapStart, ?tags: Types::tTags, ?timeout: Types::tTimeout, ?tracing_config: Types::tTracingConfig, ?vpc_config: Types::tVpcConfig) -> Types::FunctionConfiguration
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#create_function_url_config-instance_method
      def create_function_url_config: (auth_type: Types::tFunctionUrlAuthType, function_name: Types::tFunctionName, ?cors: Types::tCors, ?invoke_mode: Types::tInvokeMode, ?qualifier: Types::tFunctionUrlQualifier) -> Types::CreateFunctionUrlConfigResponse
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::CreateFunctionUrlConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#delete_alias-instance_method
      def delete_alias: (function_name: Types::tFunctionName, name: Types::tAlias) -> ::Aws::EmptyStructure
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#delete_code_signing_config-instance_method
      def delete_code_signing_config: (code_signing_config_arn: Types::tCodeSigningConfigArn) -> Types::DeleteCodeSigningConfigResponse
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::DeleteCodeSigningConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#delete_event_source_mapping-instance_method
      def delete_event_source_mapping: (uuid: Types::tString) -> Types::EventSourceMappingConfiguration
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::EventSourceMappingConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#delete_function-instance_method
      def delete_function: (function_name: Types::tFunctionName, ?qualifier: Types::tQualifier) -> ::Aws::EmptyStructure
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#delete_function_code_signing_config-instance_method
      def delete_function_code_signing_config: (function_name: Types::tFunctionName) -> ::Aws::EmptyStructure
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#delete_function_concurrency-instance_method
      def delete_function_concurrency: (function_name: Types::tFunctionName) -> ::Aws::EmptyStructure
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#delete_function_event_invoke_config-instance_method
      def delete_function_event_invoke_config: (function_name: Types::tFunctionName, ?qualifier: Types::tQualifier) -> ::Aws::EmptyStructure
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#delete_function_url_config-instance_method
      def delete_function_url_config: (function_name: Types::tFunctionName, ?qualifier: Types::tFunctionUrlQualifier) -> ::Aws::EmptyStructure
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#delete_layer_version-instance_method
      def delete_layer_version: (layer_name: Types::tLayerName, version_number: Types::tLayerVersionNumber) -> ::Aws::EmptyStructure
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#delete_provisioned_concurrency_config-instance_method
      def delete_provisioned_concurrency_config: (function_name: Types::tFunctionName, qualifier: Types::tQualifier) -> ::Aws::EmptyStructure
                                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_account_settings-instance_method
      def get_account_settings: () -> Types::GetAccountSettingsResponse
                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetAccountSettingsResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_alias-instance_method
      def get_alias: (function_name: Types::tFunctionName, name: Types::tAlias) -> Types::AliasConfiguration
                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::AliasConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_code_signing_config-instance_method
      def get_code_signing_config: (code_signing_config_arn: Types::tCodeSigningConfigArn) -> Types::GetCodeSigningConfigResponse
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetCodeSigningConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_event_source_mapping-instance_method
      def get_event_source_mapping: (uuid: Types::tString) -> Types::EventSourceMappingConfiguration
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::EventSourceMappingConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_function-instance_method
      def get_function: (function_name: Types::tNamespacedFunctionName, ?qualifier: Types::tQualifier) -> Types::GetFunctionResponse
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetFunctionResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_function_code_signing_config-instance_method
      def get_function_code_signing_config: (function_name: Types::tFunctionName) -> Types::GetFunctionCodeSigningConfigResponse
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetFunctionCodeSigningConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_function_concurrency-instance_method
      def get_function_concurrency: (function_name: Types::tFunctionName) -> Types::GetFunctionConcurrencyResponse
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetFunctionConcurrencyResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_function_configuration-instance_method
      def get_function_configuration: (function_name: Types::tNamespacedFunctionName, ?qualifier: Types::tQualifier) -> Types::FunctionConfiguration
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_function_event_invoke_config-instance_method
      def get_function_event_invoke_config: (function_name: Types::tFunctionName, ?qualifier: Types::tQualifier) -> Types::FunctionEventInvokeConfig
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionEventInvokeConfig

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_function_url_config-instance_method
      def get_function_url_config: (function_name: Types::tFunctionName, ?qualifier: Types::tFunctionUrlQualifier) -> Types::GetFunctionUrlConfigResponse
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetFunctionUrlConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_layer_version-instance_method
      def get_layer_version: (layer_name: Types::tLayerName, version_number: Types::tLayerVersionNumber) -> Types::GetLayerVersionResponse
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetLayerVersionResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_layer_version_by_arn-instance_method
      def get_layer_version_by_arn: (arn: Types::tLayerVersionArn) -> Types::GetLayerVersionResponse
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetLayerVersionResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_layer_version_policy-instance_method
      def get_layer_version_policy: (layer_name: Types::tLayerName, version_number: Types::tLayerVersionNumber) -> Types::GetLayerVersionPolicyResponse
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetLayerVersionPolicyResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_policy-instance_method
      def get_policy: (function_name: Types::tNamespacedFunctionName, ?qualifier: Types::tQualifier) -> Types::GetPolicyResponse
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetPolicyResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_provisioned_concurrency_config-instance_method
      def get_provisioned_concurrency_config: (function_name: Types::tFunctionName, qualifier: Types::tQualifier) -> Types::GetProvisionedConcurrencyConfigResponse
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetProvisionedConcurrencyConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#get_runtime_management_config-instance_method
      def get_runtime_management_config: (function_name: Types::tNamespacedFunctionName, ?qualifier: Types::tQualifier) -> Types::GetRuntimeManagementConfigResponse
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetRuntimeManagementConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#invoke-instance_method
      def invoke: (function_name: Types::tNamespacedFunctionName, ?client_context: Types::tString, ?invocation_type: Types::tInvocationType, ?log_type: Types::tLogType, ?payload: Types::tBlob, ?qualifier: Types::tQualifier) -> Types::InvocationResponse
                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::InvocationResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#invoke_async-instance_method
      def invoke_async: (function_name: Types::tNamespacedFunctionName, invoke_args: Types::tBlobStream) -> Types::InvokeAsyncResponse
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::InvokeAsyncResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#invoke_with_response_stream-instance_method
      def invoke_with_response_stream: (function_name: Types::tNamespacedFunctionName, ?client_context: Types::tString, ?invocation_type: Types::tResponseStreamingInvocationType, ?log_type: Types::tLogType, ?payload: Types::tBlob, ?qualifier: Types::tQualifier) ?{ (*untyped) -> void } -> Types::InvokeWithResponseStreamResponse
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) ?{ (*untyped) -> void } -> Types::InvokeWithResponseStreamResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_aliases-instance_method
      def list_aliases: (function_name: Types::tFunctionName, ?function_version: Types::tVersion, ?marker: Types::tString, ?max_items: Types::tMaxListItems) -> Types::ListAliasesResponse
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListAliasesResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_code_signing_configs-instance_method
      def list_code_signing_configs: (?marker: Types::tString, ?max_items: Types::tMaxListItems) -> Types::ListCodeSigningConfigsResponse
                                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListCodeSigningConfigsResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_event_source_mappings-instance_method
      def list_event_source_mappings: (?event_source_arn: Types::tArn, ?function_name: Types::tFunctionName, ?marker: Types::tString, ?max_items: Types::tMaxListItems) -> Types::ListEventSourceMappingsResponse
                                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListEventSourceMappingsResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_function_event_invoke_configs-instance_method
      def list_function_event_invoke_configs: (function_name: Types::tFunctionName, ?marker: Types::tString, ?max_items: Types::tMaxFunctionEventInvokeConfigListItems) -> Types::ListFunctionEventInvokeConfigsResponse
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListFunctionEventInvokeConfigsResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_function_url_configs-instance_method
      def list_function_url_configs: (function_name: Types::tFunctionName, ?marker: Types::tString, ?max_items: Types::tMaxItems) -> Types::ListFunctionUrlConfigsResponse
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListFunctionUrlConfigsResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_functions-instance_method
      def list_functions: (?function_version: Types::tFunctionVersion, ?marker: Types::tString, ?master_region: Types::tMasterRegion, ?max_items: Types::tMaxListItems) -> Types::ListFunctionsResponse
                        | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListFunctionsResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_functions_by_code_signing_config-instance_method
      def list_functions_by_code_signing_config: (code_signing_config_arn: Types::tCodeSigningConfigArn, ?marker: Types::tString, ?max_items: Types::tMaxListItems) -> Types::ListFunctionsByCodeSigningConfigResponse
                                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListFunctionsByCodeSigningConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_layer_versions-instance_method
      def list_layer_versions: (layer_name: Types::tLayerName, ?compatible_architecture: Types::tArchitecture, ?compatible_runtime: Types::tRuntime, ?marker: Types::tString, ?max_items: Types::tMaxLayerListItems) -> Types::ListLayerVersionsResponse
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListLayerVersionsResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_layers-instance_method
      def list_layers: (?compatible_architecture: Types::tArchitecture, ?compatible_runtime: Types::tRuntime, ?marker: Types::tString, ?max_items: Types::tMaxLayerListItems) -> Types::ListLayersResponse
                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListLayersResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_provisioned_concurrency_configs-instance_method
      def list_provisioned_concurrency_configs: (function_name: Types::tFunctionName, ?marker: Types::tString, ?max_items: Types::tMaxProvisionedConcurrencyConfigListItems) -> Types::ListProvisionedConcurrencyConfigsResponse
                                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListProvisionedConcurrencyConfigsResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_tags-instance_method
      def list_tags: (resource: Types::tFunctionArn) -> Types::ListTagsResponse
                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListTagsResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#list_versions_by_function-instance_method
      def list_versions_by_function: (function_name: Types::tNamespacedFunctionName, ?marker: Types::tString, ?max_items: Types::tMaxListItems) -> Types::ListVersionsByFunctionResponse
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::ListVersionsByFunctionResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#publish_layer_version-instance_method
      def publish_layer_version: (content: Types::tLayerVersionContentInput, layer_name: Types::tLayerName, ?compatible_architectures: Types::tCompatibleArchitectures, ?compatible_runtimes: Types::tCompatibleRuntimes, ?description: Types::tDescription, ?license_info: Types::tLicenseInfo) -> Types::PublishLayerVersionResponse
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::PublishLayerVersionResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#publish_version-instance_method
      def publish_version: (function_name: Types::tFunctionName, ?code_sha_256: Types::tString, ?description: Types::tDescription, ?revision_id: Types::tString) -> Types::FunctionConfiguration
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#put_function_code_signing_config-instance_method
      def put_function_code_signing_config: (code_signing_config_arn: Types::tCodeSigningConfigArn, function_name: Types::tFunctionName) -> Types::PutFunctionCodeSigningConfigResponse
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::PutFunctionCodeSigningConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#put_function_concurrency-instance_method
      def put_function_concurrency: (function_name: Types::tFunctionName, reserved_concurrent_executions: Types::tReservedConcurrentExecutions) -> Types::Concurrency
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::Concurrency

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#put_function_event_invoke_config-instance_method
      def put_function_event_invoke_config: (function_name: Types::tFunctionName, ?destination_config: Types::tDestinationConfig, ?maximum_event_age_in_seconds: Types::tMaximumEventAgeInSeconds, ?maximum_retry_attempts: Types::tMaximumRetryAttempts, ?qualifier: Types::tQualifier) -> Types::FunctionEventInvokeConfig
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionEventInvokeConfig

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#put_provisioned_concurrency_config-instance_method
      def put_provisioned_concurrency_config: (function_name: Types::tFunctionName, provisioned_concurrent_executions: Types::tPositiveInteger, qualifier: Types::tQualifier) -> Types::PutProvisionedConcurrencyConfigResponse
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::PutProvisionedConcurrencyConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#put_runtime_management_config-instance_method
      def put_runtime_management_config: (function_name: Types::tFunctionName, update_runtime_on: Types::tUpdateRuntimeOn, ?qualifier: Types::tQualifier, ?runtime_version_arn: Types::tRuntimeVersionArn) -> Types::PutRuntimeManagementConfigResponse
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::PutRuntimeManagementConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#remove_layer_version_permission-instance_method
      def remove_layer_version_permission: (layer_name: Types::tLayerName, statement_id: Types::tStatementId, version_number: Types::tLayerVersionNumber, ?revision_id: Types::tString) -> ::Aws::EmptyStructure
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#remove_permission-instance_method
      def remove_permission: (function_name: Types::tFunctionName, statement_id: Types::tNamespacedStatementId, ?qualifier: Types::tQualifier, ?revision_id: Types::tString) -> ::Aws::EmptyStructure
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#tag_resource-instance_method
      def tag_resource: (resource: Types::tFunctionArn, tags: Types::tTags) -> ::Aws::EmptyStructure
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#untag_resource-instance_method
      def untag_resource: (resource: Types::tFunctionArn, tag_keys: Types::tTagKeyList) -> ::Aws::EmptyStructure
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#update_alias-instance_method
      def update_alias: (function_name: Types::tFunctionName, name: Types::tAlias, ?description: Types::tDescription, ?function_version: Types::tVersion, ?revision_id: Types::tString, ?routing_config: Types::tAliasRoutingConfiguration) -> Types::AliasConfiguration
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::AliasConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#update_code_signing_config-instance_method
      def update_code_signing_config: (code_signing_config_arn: Types::tCodeSigningConfigArn, ?allowed_publishers: Types::tAllowedPublishers, ?code_signing_policies: Types::tCodeSigningPolicies, ?description: Types::tDescription) -> Types::UpdateCodeSigningConfigResponse
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::UpdateCodeSigningConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#update_event_source_mapping-instance_method
      def update_event_source_mapping: (uuid: Types::tString, ?batch_size: Types::tBatchSize, ?bisect_batch_on_function_error: Types::tBisectBatchOnFunctionError, ?destination_config: Types::tDestinationConfig, ?document_db_event_source_config: Types::tDocumentDBEventSourceConfig, ?enabled: Types::tEnabled, ?filter_criteria: Types::tFilterCriteria, ?function_name: Types::tFunctionName, ?function_response_types: Types::tFunctionResponseTypeList, ?maximum_batching_window_in_seconds: Types::tMaximumBatchingWindowInSeconds, ?maximum_record_age_in_seconds: Types::tMaximumRecordAgeInSeconds, ?maximum_retry_attempts: Types::tMaximumRetryAttemptsEventSourceMapping, ?parallelization_factor: Types::tParallelizationFactor, ?scaling_config: Types::tScalingConfig, ?source_access_configurations: Types::tSourceAccessConfigurations_input, ?tumbling_window_in_seconds: Types::tTumblingWindowInSeconds) -> Types::EventSourceMappingConfiguration
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::EventSourceMappingConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#update_function_code-instance_method
      def update_function_code: (function_name: Types::tFunctionName, ?architectures: Types::tArchitecturesList, ?dry_run: Types::tBoolean, ?image_uri: Types::tString, ?publish: Types::tBoolean, ?revision_id: Types::tString, ?s3_bucket: Types::tS3Bucket, ?s3_key: Types::tS3Key, ?s3_object_version: Types::tS3ObjectVersion, ?zip_file: Types::tBlob) -> Types::FunctionConfiguration
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#update_function_configuration-instance_method
      def update_function_configuration: (function_name: Types::tFunctionName, ?dead_letter_config: Types::tDeadLetterConfig, ?description: Types::tDescription, ?environment: Types::tEnvironment, ?ephemeral_storage: Types::tEphemeralStorage, ?file_system_configs: Types::tFileSystemConfigList_input, ?handler: Types::tHandler, ?image_config: Types::tImageConfig, ?kms_key_arn: Types::tKMSKeyArn, ?layers: Types::tLayerList, ?logging_config: Types::tLoggingConfig, ?memory_size: Types::tMemorySize, ?revision_id: Types::tString, ?role: Types::tRoleArn, ?runtime: Types::tRuntime, ?snap_start: Types::tSnapStart, ?timeout: Types::tTimeout, ?tracing_config: Types::tTracingConfig, ?vpc_config: Types::tVpcConfig) -> Types::FunctionConfiguration
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#update_function_event_invoke_config-instance_method
      def update_function_event_invoke_config: (function_name: Types::tFunctionName, ?destination_config: Types::tDestinationConfig, ?maximum_event_age_in_seconds: Types::tMaximumEventAgeInSeconds, ?maximum_retry_attempts: Types::tMaximumRetryAttempts, ?qualifier: Types::tQualifier) -> Types::FunctionEventInvokeConfig
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionEventInvokeConfig

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#update_function_url_config-instance_method
      def update_function_url_config: (function_name: Types::tFunctionName, ?auth_type: Types::tFunctionUrlAuthType, ?cors: Types::tCors, ?invoke_mode: Types::tInvokeMode, ?qualifier: Types::tFunctionUrlQualifier) -> Types::UpdateFunctionUrlConfigResponse
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::UpdateFunctionUrlConfigResponse

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Lambda/Client.html#wait_until-instance_method
      def wait_until: (:function_active waiter_name, function_name: Types::tNamespacedFunctionName, ?qualifier: Types::tQualifier) -> Types::FunctionConfiguration
                    | (:function_active waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionConfiguration
                    | (:function_active_v2 waiter_name, function_name: Types::tNamespacedFunctionName, ?qualifier: Types::tQualifier) -> Types::GetFunctionResponse
                    | (:function_active_v2 waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetFunctionResponse
                    | (:function_exists waiter_name, function_name: Types::tNamespacedFunctionName, ?qualifier: Types::tQualifier) -> Types::GetFunctionResponse
                    | (:function_exists waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetFunctionResponse
                    | (:function_updated waiter_name, function_name: Types::tNamespacedFunctionName, ?qualifier: Types::tQualifier) -> Types::FunctionConfiguration
                    | (:function_updated waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionConfiguration
                    | (:function_updated_v2 waiter_name, function_name: Types::tNamespacedFunctionName, ?qualifier: Types::tQualifier) -> Types::GetFunctionResponse
                    | (:function_updated_v2 waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::GetFunctionResponse
                    | (:published_version_active waiter_name, function_name: Types::tNamespacedFunctionName, ?qualifier: Types::tQualifier) -> Types::FunctionConfiguration
                    | (:published_version_active waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Types::FunctionConfiguration
    end
  end
end

