# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module SageMaker
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?account_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?sigv4a_signing_region_set: Array[String],
                      ?simple_json: bool,
                      ?stub_responses: untyped,
                      ?telemetry_provider: Aws::Telemetry::TelemetryProviderBase,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _AddAssociationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AddAssociationResponse]
        def source_arn: () -> ::String
        def destination_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#add_association-instance_method
      def add_association: (
                             source_arn: ::String,
                             destination_arn: ::String,
                             ?association_type: ("ContributedTo" | "AssociatedWith" | "DerivedFrom" | "Produced" | "SameAs")
                           ) -> _AddAssociationResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AddAssociationResponseSuccess

      interface _AddTagsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AddTagsOutput]
        def tags: () -> ::Array[Types::Tag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#add_tags-instance_method
      def add_tags: (
                      resource_arn: ::String,
                      tags: Array[
                        {
                          key: ::String,
                          value: ::String
                        },
                      ]
                    ) -> _AddTagsResponseSuccess
                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AddTagsResponseSuccess

      interface _AssociateTrialComponentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AssociateTrialComponentResponse]
        def trial_component_arn: () -> ::String
        def trial_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#associate_trial_component-instance_method
      def associate_trial_component: (
                                       trial_component_name: ::String,
                                       trial_name: ::String
                                     ) -> _AssociateTrialComponentResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AssociateTrialComponentResponseSuccess

      interface _BatchDescribeModelPackageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchDescribeModelPackageOutput]
        def model_package_summaries: () -> ::Hash[::String, Types::BatchDescribeModelPackageSummary]
        def batch_describe_model_package_error_map: () -> ::Hash[::String, Types::BatchDescribeModelPackageError]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#batch_describe_model_package-instance_method
      def batch_describe_model_package: (
                                          model_package_arn_list: Array[::String]
                                        ) -> _BatchDescribeModelPackageResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchDescribeModelPackageResponseSuccess

      interface _CreateActionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateActionResponse]
        def action_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_action-instance_method
      def create_action: (
                           action_name: ::String,
                           source: {
                             source_uri: ::String,
                             source_type: ::String?,
                             source_id: ::String?
                           },
                           action_type: ::String,
                           ?description: ::String,
                           ?status: ("Unknown" | "InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped"),
                           ?properties: Hash[::String, ::String],
                           ?metadata_properties: {
                             commit_id: ::String?,
                             repository: ::String?,
                             generated_by: ::String?,
                             project_id: ::String?
                           },
                           ?tags: Array[
                             {
                               key: ::String,
                               value: ::String
                             },
                           ]
                         ) -> _CreateActionResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateActionResponseSuccess

      interface _CreateAlgorithmResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateAlgorithmOutput]
        def algorithm_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_algorithm-instance_method
      def create_algorithm: (
                              algorithm_name: ::String,
                              ?algorithm_description: ::String,
                              training_specification: {
                                training_image: ::String,
                                training_image_digest: ::String?,
                                supported_hyper_parameters: Array[
                                  {
                                    name: ::String,
                                    description: ::String?,
                                    type: ("Integer" | "Continuous" | "Categorical" | "FreeText"),
                                    range: {
                                      integer_parameter_range_specification: {
                                        min_value: ::String,
                                        max_value: ::String
                                      }?,
                                      continuous_parameter_range_specification: {
                                        min_value: ::String,
                                        max_value: ::String
                                      }?,
                                      categorical_parameter_range_specification: {
                                        values: Array[::String]
                                      }?
                                    }?,
                                    is_tunable: bool?,
                                    is_required: bool?,
                                    default_value: ::String?
                                  },
                                ]?,
                                supported_training_instance_types: Array[("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge")],
                                supports_distributed_training: bool?,
                                metric_definitions: Array[
                                  {
                                    name: ::String,
                                    regex: ::String
                                  },
                                ]?,
                                training_channels: Array[
                                  {
                                    name: ::String,
                                    description: ::String?,
                                    is_required: bool?,
                                    supported_content_types: Array[::String],
                                    supported_compression_types: Array[("None" | "Gzip")]?,
                                    supported_input_modes: Array[("Pipe" | "File" | "FastFile")]
                                  },
                                ],
                                supported_tuning_job_objective_metrics: Array[
                                  {
                                    type: ("Maximize" | "Minimize"),
                                    metric_name: ::String
                                  },
                                ]?,
                                additional_s3_data_source: {
                                  s3_data_type: ("S3Object" | "S3Prefix"),
                                  s3_uri: ::String,
                                  compression_type: ("None" | "Gzip")?
                                }?
                              },
                              ?inference_specification: {
                                containers: Array[
                                  {
                                    container_hostname: ::String?,
                                    image: ::String,
                                    image_digest: ::String?,
                                    model_data_url: ::String?,
                                    model_data_source: {
                                      s3_data_source: {
                                        s3_uri: ::String,
                                        s3_data_type: ("S3Prefix" | "S3Object"),
                                        compression_type: ("None" | "Gzip"),
                                        model_access_config: {
                                          accept_eula: bool
                                        }?,
                                        hub_access_config: {
                                          hub_content_arn: ::String
                                        }?,
                                        manifest_s3_uri: ::String?
                                      }?
                                    }?,
                                    product_id: ::String?,
                                    environment: Hash[::String, ::String]?,
                                    model_input: {
                                      data_input_config: ::String
                                    }?,
                                    framework: ::String?,
                                    framework_version: ::String?,
                                    nearest_model_name: ::String?,
                                    additional_s3_data_source: {
                                      s3_data_type: ("S3Object" | "S3Prefix"),
                                      s3_uri: ::String,
                                      compression_type: ("None" | "Gzip")?
                                    }?
                                  },
                                ],
                                supported_transform_instance_types: Array[("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge")]?,
                                supported_realtime_inference_instance_types: Array[("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.12xlarge" | "ml.m5d.24xlarge" | "ml.c4.large" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.large" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.12xlarge" | "ml.r5.24xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.12xlarge" | "ml.r5d.24xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.dl1.24xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.p4d.24xlarge" | "ml.c7g.large" | "ml.c7g.xlarge" | "ml.c7g.2xlarge" | "ml.c7g.4xlarge" | "ml.c7g.8xlarge" | "ml.c7g.12xlarge" | "ml.c7g.16xlarge" | "ml.m6g.large" | "ml.m6g.xlarge" | "ml.m6g.2xlarge" | "ml.m6g.4xlarge" | "ml.m6g.8xlarge" | "ml.m6g.12xlarge" | "ml.m6g.16xlarge" | "ml.m6gd.large" | "ml.m6gd.xlarge" | "ml.m6gd.2xlarge" | "ml.m6gd.4xlarge" | "ml.m6gd.8xlarge" | "ml.m6gd.12xlarge" | "ml.m6gd.16xlarge" | "ml.c6g.large" | "ml.c6g.xlarge" | "ml.c6g.2xlarge" | "ml.c6g.4xlarge" | "ml.c6g.8xlarge" | "ml.c6g.12xlarge" | "ml.c6g.16xlarge" | "ml.c6gd.large" | "ml.c6gd.xlarge" | "ml.c6gd.2xlarge" | "ml.c6gd.4xlarge" | "ml.c6gd.8xlarge" | "ml.c6gd.12xlarge" | "ml.c6gd.16xlarge" | "ml.c6gn.large" | "ml.c6gn.xlarge" | "ml.c6gn.2xlarge" | "ml.c6gn.4xlarge" | "ml.c6gn.8xlarge" | "ml.c6gn.12xlarge" | "ml.c6gn.16xlarge" | "ml.r6g.large" | "ml.r6g.xlarge" | "ml.r6g.2xlarge" | "ml.r6g.4xlarge" | "ml.r6g.8xlarge" | "ml.r6g.12xlarge" | "ml.r6g.16xlarge" | "ml.r6gd.large" | "ml.r6gd.xlarge" | "ml.r6gd.2xlarge" | "ml.r6gd.4xlarge" | "ml.r6gd.8xlarge" | "ml.r6gd.12xlarge" | "ml.r6gd.16xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.inf2.xlarge" | "ml.inf2.8xlarge" | "ml.inf2.24xlarge" | "ml.inf2.48xlarge" | "ml.p5.48xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge")]?,
                                supported_content_types: Array[::String]?,
                                supported_response_mime_types: Array[::String]?
                              },
                              ?validation_specification: {
                                validation_role: ::String,
                                validation_profiles: Array[
                                  {
                                    profile_name: ::String,
                                    training_job_definition: {
                                      training_input_mode: ("Pipe" | "File" | "FastFile"),
                                      hyper_parameters: Hash[::String, ::String]?,
                                      input_data_config: Array[
                                        {
                                          channel_name: ::String,
                                          data_source: {
                                            s3_data_source: {
                                              s3_data_type: ("ManifestFile" | "S3Prefix" | "AugmentedManifestFile"),
                                              s3_uri: ::String,
                                              s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                              attribute_names: Array[::String]?,
                                              instance_group_names: Array[::String]?
                                            }?,
                                            file_system_data_source: {
                                              file_system_id: ::String,
                                              file_system_access_mode: ("rw" | "ro"),
                                              file_system_type: ("EFS" | "FSxLustre"),
                                              directory_path: ::String
                                            }?
                                          },
                                          content_type: ::String?,
                                          compression_type: ("None" | "Gzip")?,
                                          record_wrapper_type: ("None" | "RecordIO")?,
                                          input_mode: ("Pipe" | "File" | "FastFile")?,
                                          shuffle_config: {
                                            seed: ::Integer
                                          }?
                                        },
                                      ],
                                      output_data_config: {
                                        kms_key_id: ::String?,
                                        s3_output_path: ::String,
                                        compression_type: ("GZIP" | "NONE")?
                                      },
                                      resource_config: {
                                        instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge")?,
                                        instance_count: ::Integer?,
                                        volume_size_in_gb: ::Integer,
                                        volume_kms_key_id: ::String?,
                                        keep_alive_period_in_seconds: ::Integer?,
                                        instance_groups: Array[
                                          {
                                            instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge"),
                                            instance_count: ::Integer,
                                            instance_group_name: ::String
                                          },
                                        ]?
                                      },
                                      stopping_condition: {
                                        max_runtime_in_seconds: ::Integer?,
                                        max_wait_time_in_seconds: ::Integer?,
                                        max_pending_time_in_seconds: ::Integer?
                                      }
                                    },
                                    transform_job_definition: {
                                      max_concurrent_transforms: ::Integer?,
                                      max_payload_in_mb: ::Integer?,
                                      batch_strategy: ("MultiRecord" | "SingleRecord")?,
                                      environment: Hash[::String, ::String]?,
                                      transform_input: {
                                        data_source: {
                                          s3_data_source: {
                                            s3_data_type: ("ManifestFile" | "S3Prefix" | "AugmentedManifestFile"),
                                            s3_uri: ::String
                                          }
                                        },
                                        content_type: ::String?,
                                        compression_type: ("None" | "Gzip")?,
                                        split_type: ("None" | "Line" | "RecordIO" | "TFRecord")?
                                      },
                                      transform_output: {
                                        s3_output_path: ::String,
                                        accept: ::String?,
                                        assemble_with: ("None" | "Line")?,
                                        kms_key_id: ::String?
                                      },
                                      transform_resources: {
                                        instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge"),
                                        instance_count: ::Integer,
                                        volume_kms_key_id: ::String?
                                      }
                                    }?
                                  },
                                ]
                              },
                              ?certify_for_marketplace: bool,
                              ?tags: Array[
                                {
                                  key: ::String,
                                  value: ::String
                                },
                              ]
                            ) -> _CreateAlgorithmResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateAlgorithmResponseSuccess

      interface _CreateAppResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateAppResponse]
        def app_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_app-instance_method
      def create_app: (
                        domain_id: ::String,
                        ?user_profile_name: ::String,
                        ?space_name: ::String,
                        app_type: ("JupyterServer" | "KernelGateway" | "DetailedProfiler" | "TensorBoard" | "CodeEditor" | "JupyterLab" | "RStudioServerPro" | "RSessionGateway" | "Canvas"),
                        app_name: ::String,
                        ?tags: Array[
                          {
                            key: ::String,
                            value: ::String
                          },
                        ],
                        ?resource_spec: {
                          sage_maker_image_arn: ::String?,
                          sage_maker_image_version_arn: ::String?,
                          sage_maker_image_version_alias: ::String?,
                          instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                          lifecycle_config_arn: ::String?
                        }
                      ) -> _CreateAppResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateAppResponseSuccess

      interface _CreateAppImageConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateAppImageConfigResponse]
        def app_image_config_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_app_image_config-instance_method
      def create_app_image_config: (
                                     app_image_config_name: ::String,
                                     ?tags: Array[
                                       {
                                         key: ::String,
                                         value: ::String
                                       },
                                     ],
                                     ?kernel_gateway_image_config: {
                                       kernel_specs: Array[
                                         {
                                           name: ::String,
                                           display_name: ::String?
                                         },
                                       ],
                                       file_system_config: {
                                         mount_path: ::String?,
                                         default_uid: ::Integer?,
                                         default_gid: ::Integer?
                                       }?
                                     },
                                     ?jupyter_lab_app_image_config: {
                                       file_system_config: {
                                         mount_path: ::String?,
                                         default_uid: ::Integer?,
                                         default_gid: ::Integer?
                                       }?,
                                       container_config: {
                                         container_arguments: Array[::String]?,
                                         container_entrypoint: Array[::String]?,
                                         container_environment_variables: Hash[::String, ::String]?
                                       }?
                                     },
                                     ?code_editor_app_image_config: {
                                       file_system_config: {
                                         mount_path: ::String?,
                                         default_uid: ::Integer?,
                                         default_gid: ::Integer?
                                       }?,
                                       container_config: {
                                         container_arguments: Array[::String]?,
                                         container_entrypoint: Array[::String]?,
                                         container_environment_variables: Hash[::String, ::String]?
                                       }?
                                     }
                                   ) -> _CreateAppImageConfigResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateAppImageConfigResponseSuccess

      interface _CreateArtifactResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateArtifactResponse]
        def artifact_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_artifact-instance_method
      def create_artifact: (
                             ?artifact_name: ::String,
                             source: {
                               source_uri: ::String,
                               source_types: Array[
                                 {
                                   source_id_type: ("MD5Hash" | "S3ETag" | "S3Version" | "Custom"),
                                   value: ::String
                                 },
                               ]?
                             },
                             artifact_type: ::String,
                             ?properties: Hash[::String, ::String],
                             ?metadata_properties: {
                               commit_id: ::String?,
                               repository: ::String?,
                               generated_by: ::String?,
                               project_id: ::String?
                             },
                             ?tags: Array[
                               {
                                 key: ::String,
                                 value: ::String
                               },
                             ]
                           ) -> _CreateArtifactResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateArtifactResponseSuccess

      interface _CreateAutoMLJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateAutoMLJobResponse]
        def auto_ml_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_auto_ml_job-instance_method
      def create_auto_ml_job: (
                                auto_ml_job_name: ::String,
                                input_data_config: Array[
                                  {
                                    data_source: {
                                      s3_data_source: {
                                        s3_data_type: ("ManifestFile" | "S3Prefix" | "AugmentedManifestFile"),
                                        s3_uri: ::String
                                      }
                                    }?,
                                    compression_type: ("None" | "Gzip")?,
                                    target_attribute_name: ::String,
                                    content_type: ::String?,
                                    channel_type: ("training" | "validation")?,
                                    sample_weight_attribute_name: ::String?
                                  },
                                ],
                                output_data_config: {
                                  kms_key_id: ::String?,
                                  s3_output_path: ::String
                                },
                                ?problem_type: ("BinaryClassification" | "MulticlassClassification" | "Regression"),
                                ?auto_ml_job_objective: {
                                  metric_name: ("Accuracy" | "MSE" | "F1" | "F1macro" | "AUC" | "RMSE" | "BalancedAccuracy" | "R2" | "Recall" | "RecallMacro" | "Precision" | "PrecisionMacro" | "MAE" | "MAPE" | "MASE" | "WAPE" | "AverageWeightedQuantileLoss")
                                },
                                ?auto_ml_job_config: {
                                  completion_criteria: {
                                    max_candidates: ::Integer?,
                                    max_runtime_per_training_job_in_seconds: ::Integer?,
                                    max_auto_ml_job_runtime_in_seconds: ::Integer?
                                  }?,
                                  security_config: {
                                    volume_kms_key_id: ::String?,
                                    enable_inter_container_traffic_encryption: bool?,
                                    vpc_config: {
                                      security_group_ids: Array[::String],
                                      subnets: Array[::String]
                                    }?
                                  }?,
                                  candidate_generation_config: {
                                    feature_specification_s3_uri: ::String?,
                                    algorithms_config: Array[
                                      {
                                        auto_ml_algorithms: Array[("xgboost" | "linear-learner" | "mlp" | "lightgbm" | "catboost" | "randomforest" | "extra-trees" | "nn-torch" | "fastai" | "cnn-qr" | "deepar" | "prophet" | "npts" | "arima" | "ets")]
                                      },
                                    ]?
                                  }?,
                                  data_split_config: {
                                    validation_fraction: ::Float?
                                  }?,
                                  mode: ("AUTO" | "ENSEMBLING" | "HYPERPARAMETER_TUNING")?
                                },
                                role_arn: ::String,
                                ?generate_candidate_definitions_only: bool,
                                ?tags: Array[
                                  {
                                    key: ::String,
                                    value: ::String
                                  },
                                ],
                                ?model_deploy_config: {
                                  auto_generate_endpoint_name: bool?,
                                  endpoint_name: ::String?
                                }
                              ) -> _CreateAutoMLJobResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateAutoMLJobResponseSuccess

      interface _CreateAutoMLJobV2ResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateAutoMLJobV2Response]
        def auto_ml_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_auto_ml_job_v2-instance_method
      def create_auto_ml_job_v2: (
                                   auto_ml_job_name: ::String,
                                   auto_ml_job_input_data_config: Array[
                                     {
                                       channel_type: ("training" | "validation")?,
                                       content_type: ::String?,
                                       compression_type: ("None" | "Gzip")?,
                                       data_source: {
                                         s3_data_source: {
                                           s3_data_type: ("ManifestFile" | "S3Prefix" | "AugmentedManifestFile"),
                                           s3_uri: ::String
                                         }
                                       }?
                                     },
                                   ],
                                   output_data_config: {
                                     kms_key_id: ::String?,
                                     s3_output_path: ::String
                                   },
                                   auto_ml_problem_type_config: {
                                     image_classification_job_config: {
                                       completion_criteria: {
                                         max_candidates: ::Integer?,
                                         max_runtime_per_training_job_in_seconds: ::Integer?,
                                         max_auto_ml_job_runtime_in_seconds: ::Integer?
                                       }?
                                     }?,
                                     text_classification_job_config: {
                                       completion_criteria: {
                                         max_candidates: ::Integer?,
                                         max_runtime_per_training_job_in_seconds: ::Integer?,
                                         max_auto_ml_job_runtime_in_seconds: ::Integer?
                                       }?,
                                       content_column: ::String,
                                       target_label_column: ::String
                                     }?,
                                     time_series_forecasting_job_config: {
                                       feature_specification_s3_uri: ::String?,
                                       completion_criteria: {
                                         max_candidates: ::Integer?,
                                         max_runtime_per_training_job_in_seconds: ::Integer?,
                                         max_auto_ml_job_runtime_in_seconds: ::Integer?
                                       }?,
                                       forecast_frequency: ::String,
                                       forecast_horizon: ::Integer,
                                       forecast_quantiles: Array[::String]?,
                                       transformations: {
                                         filling: Hash[::String, Hash[("frontfill" | "middlefill" | "backfill" | "futurefill" | "frontfill_value" | "middlefill_value" | "backfill_value" | "futurefill_value"), ::String]]?,
                                         aggregation: Hash[::String, ("sum" | "avg" | "first" | "min" | "max")]?
                                       }?,
                                       time_series_config: {
                                         target_attribute_name: ::String,
                                         timestamp_attribute_name: ::String,
                                         item_identifier_attribute_name: ::String,
                                         grouping_attribute_names: Array[::String]?
                                       },
                                       holiday_config: Array[
                                         {
                                           country_code: ::String?
                                         },
                                       ]?,
                                       candidate_generation_config: {
                                         algorithms_config: Array[
                                           {
                                             auto_ml_algorithms: Array[("xgboost" | "linear-learner" | "mlp" | "lightgbm" | "catboost" | "randomforest" | "extra-trees" | "nn-torch" | "fastai" | "cnn-qr" | "deepar" | "prophet" | "npts" | "arima" | "ets")]
                                           },
                                         ]?
                                       }?
                                     }?,
                                     tabular_job_config: {
                                       candidate_generation_config: {
                                         algorithms_config: Array[
                                           {
                                             auto_ml_algorithms: Array[("xgboost" | "linear-learner" | "mlp" | "lightgbm" | "catboost" | "randomforest" | "extra-trees" | "nn-torch" | "fastai" | "cnn-qr" | "deepar" | "prophet" | "npts" | "arima" | "ets")]
                                           },
                                         ]?
                                       }?,
                                       completion_criteria: {
                                         max_candidates: ::Integer?,
                                         max_runtime_per_training_job_in_seconds: ::Integer?,
                                         max_auto_ml_job_runtime_in_seconds: ::Integer?
                                       }?,
                                       feature_specification_s3_uri: ::String?,
                                       mode: ("AUTO" | "ENSEMBLING" | "HYPERPARAMETER_TUNING")?,
                                       generate_candidate_definitions_only: bool?,
                                       problem_type: ("BinaryClassification" | "MulticlassClassification" | "Regression")?,
                                       target_attribute_name: ::String,
                                       sample_weight_attribute_name: ::String?
                                     }?,
                                     text_generation_job_config: {
                                       completion_criteria: {
                                         max_candidates: ::Integer?,
                                         max_runtime_per_training_job_in_seconds: ::Integer?,
                                         max_auto_ml_job_runtime_in_seconds: ::Integer?
                                       }?,
                                       base_model_name: ::String?,
                                       text_generation_hyper_parameters: Hash[::String, ::String]?,
                                       model_access_config: {
                                         accept_eula: bool
                                       }?
                                     }?
                                   },
                                   role_arn: ::String,
                                   ?tags: Array[
                                     {
                                       key: ::String,
                                       value: ::String
                                     },
                                   ],
                                   ?security_config: {
                                     volume_kms_key_id: ::String?,
                                     enable_inter_container_traffic_encryption: bool?,
                                     vpc_config: {
                                       security_group_ids: Array[::String],
                                       subnets: Array[::String]
                                     }?
                                   },
                                   ?auto_ml_job_objective: {
                                     metric_name: ("Accuracy" | "MSE" | "F1" | "F1macro" | "AUC" | "RMSE" | "BalancedAccuracy" | "R2" | "Recall" | "RecallMacro" | "Precision" | "PrecisionMacro" | "MAE" | "MAPE" | "MASE" | "WAPE" | "AverageWeightedQuantileLoss")
                                   },
                                   ?model_deploy_config: {
                                     auto_generate_endpoint_name: bool?,
                                     endpoint_name: ::String?
                                   },
                                   ?data_split_config: {
                                     validation_fraction: ::Float?
                                   },
                                   ?auto_ml_compute_config: {
                                     emr_serverless_compute_config: {
                                       execution_role_arn: ::String
                                     }?
                                   }
                                 ) -> _CreateAutoMLJobV2ResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateAutoMLJobV2ResponseSuccess

      interface _CreateClusterResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateClusterResponse]
        def cluster_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_cluster-instance_method
      def create_cluster: (
                            cluster_name: ::String,
                            instance_groups: Array[
                              {
                                instance_count: ::Integer,
                                instance_group_name: ::String,
                                instance_type: ("ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.c5n.large" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge"),
                                life_cycle_config: {
                                  source_s3_uri: ::String,
                                  on_create: ::String
                                },
                                execution_role: ::String,
                                threads_per_core: ::Integer?,
                                instance_storage_configs: Array[
                                  {
                                    ebs_volume_config: {
                                      volume_size_in_gb: ::Integer
                                    }?
                                  },
                                ]?,
                                on_start_deep_health_checks: Array[("InstanceStress" | "InstanceConnectivity")]?
                              },
                            ],
                            ?vpc_config: {
                              security_group_ids: Array[::String],
                              subnets: Array[::String]
                            },
                            ?tags: Array[
                              {
                                key: ::String,
                                value: ::String
                              },
                            ],
                            ?orchestrator: {
                              eks: {
                                cluster_arn: ::String
                              }
                            },
                            ?node_recovery: ("Automatic" | "None")
                          ) -> _CreateClusterResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateClusterResponseSuccess

      interface _CreateCodeRepositoryResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateCodeRepositoryOutput]
        def code_repository_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_code_repository-instance_method
      def create_code_repository: (
                                    code_repository_name: ::String,
                                    git_config: {
                                      repository_url: ::String,
                                      branch: ::String?,
                                      secret_arn: ::String?
                                    },
                                    ?tags: Array[
                                      {
                                        key: ::String,
                                        value: ::String
                                      },
                                    ]
                                  ) -> _CreateCodeRepositoryResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateCodeRepositoryResponseSuccess

      interface _CreateCompilationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateCompilationJobResponse]
        def compilation_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_compilation_job-instance_method
      def create_compilation_job: (
                                    compilation_job_name: ::String,
                                    role_arn: ::String,
                                    ?model_package_version_arn: ::String,
                                    ?input_config: {
                                      s3_uri: ::String,
                                      data_input_config: ::String?,
                                      framework: ("TENSORFLOW" | "KERAS" | "MXNET" | "ONNX" | "PYTORCH" | "XGBOOST" | "TFLITE" | "DARKNET" | "SKLEARN"),
                                      framework_version: ::String?
                                    },
                                    output_config: {
                                      s3_output_location: ::String,
                                      target_device: ("lambda" | "ml_m4" | "ml_m5" | "ml_m6g" | "ml_c4" | "ml_c5" | "ml_c6g" | "ml_p2" | "ml_p3" | "ml_g4dn" | "ml_inf1" | "ml_inf2" | "ml_trn1" | "ml_eia2" | "jetson_tx1" | "jetson_tx2" | "jetson_nano" | "jetson_xavier" | "rasp3b" | "rasp4b" | "imx8qm" | "deeplens" | "rk3399" | "rk3288" | "aisage" | "sbe_c" | "qcs605" | "qcs603" | "sitara_am57x" | "amba_cv2" | "amba_cv22" | "amba_cv25" | "x86_win32" | "x86_win64" | "coreml" | "jacinto_tda4vm" | "imx8mplus")?,
                                      target_platform: {
                                        os: ("ANDROID" | "LINUX"),
                                        arch: ("X86_64" | "X86" | "ARM64" | "ARM_EABI" | "ARM_EABIHF"),
                                        accelerator: ("INTEL_GRAPHICS" | "MALI" | "NVIDIA" | "NNA")?
                                      }?,
                                      compiler_options: ::String?,
                                      kms_key_id: ::String?
                                    },
                                    ?vpc_config: {
                                      security_group_ids: Array[::String],
                                      subnets: Array[::String]
                                    },
                                    stopping_condition: {
                                      max_runtime_in_seconds: ::Integer?,
                                      max_wait_time_in_seconds: ::Integer?,
                                      max_pending_time_in_seconds: ::Integer?
                                    },
                                    ?tags: Array[
                                      {
                                        key: ::String,
                                        value: ::String
                                      },
                                    ]
                                  ) -> _CreateCompilationJobResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateCompilationJobResponseSuccess

      interface _CreateContextResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateContextResponse]
        def context_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_context-instance_method
      def create_context: (
                            context_name: ::String,
                            source: {
                              source_uri: ::String,
                              source_type: ::String?,
                              source_id: ::String?
                            },
                            context_type: ::String,
                            ?description: ::String,
                            ?properties: Hash[::String, ::String],
                            ?tags: Array[
                              {
                                key: ::String,
                                value: ::String
                              },
                            ]
                          ) -> _CreateContextResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateContextResponseSuccess

      interface _CreateDataQualityJobDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateDataQualityJobDefinitionResponse]
        def job_definition_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_data_quality_job_definition-instance_method
      def create_data_quality_job_definition: (
                                                job_definition_name: ::String,
                                                ?data_quality_baseline_config: {
                                                  baselining_job_name: ::String?,
                                                  constraints_resource: {
                                                    s3_uri: ::String?
                                                  }?,
                                                  statistics_resource: {
                                                    s3_uri: ::String?
                                                  }?
                                                },
                                                data_quality_app_specification: {
                                                  image_uri: ::String,
                                                  container_entrypoint: Array[::String]?,
                                                  container_arguments: Array[::String]?,
                                                  record_preprocessor_source_uri: ::String?,
                                                  post_analytics_processor_source_uri: ::String?,
                                                  environment: Hash[::String, ::String]?
                                                },
                                                data_quality_job_input: {
                                                  endpoint_input: {
                                                    endpoint_name: ::String,
                                                    local_path: ::String,
                                                    s3_input_mode: ("Pipe" | "File")?,
                                                    s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                    features_attribute: ::String?,
                                                    inference_attribute: ::String?,
                                                    probability_attribute: ::String?,
                                                    probability_threshold_attribute: ::Float?,
                                                    start_time_offset: ::String?,
                                                    end_time_offset: ::String?,
                                                    exclude_features_attribute: ::String?
                                                  }?,
                                                  batch_transform_input: {
                                                    data_captured_destination_s3_uri: ::String,
                                                    dataset_format: {
                                                      csv: {
                                                        header: bool?
                                                      }?,
                                                      json: {
                                                        line: bool?
                                                      }?,
                                                      parquet: {
                                                      }?
                                                    },
                                                    local_path: ::String,
                                                    s3_input_mode: ("Pipe" | "File")?,
                                                    s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                    features_attribute: ::String?,
                                                    inference_attribute: ::String?,
                                                    probability_attribute: ::String?,
                                                    probability_threshold_attribute: ::Float?,
                                                    start_time_offset: ::String?,
                                                    end_time_offset: ::String?,
                                                    exclude_features_attribute: ::String?
                                                  }?
                                                },
                                                data_quality_job_output_config: {
                                                  monitoring_outputs: Array[
                                                    {
                                                      s3_output: {
                                                        s3_uri: ::String,
                                                        local_path: ::String,
                                                        s3_upload_mode: ("Continuous" | "EndOfJob")?
                                                      }
                                                    },
                                                  ],
                                                  kms_key_id: ::String?
                                                },
                                                job_resources: {
                                                  cluster_config: {
                                                    instance_count: ::Integer,
                                                    instance_type: ("ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge"),
                                                    volume_size_in_gb: ::Integer,
                                                    volume_kms_key_id: ::String?
                                                  }
                                                },
                                                ?network_config: {
                                                  enable_inter_container_traffic_encryption: bool?,
                                                  enable_network_isolation: bool?,
                                                  vpc_config: {
                                                    security_group_ids: Array[::String],
                                                    subnets: Array[::String]
                                                  }?
                                                },
                                                role_arn: ::String,
                                                ?stopping_condition: {
                                                  max_runtime_in_seconds: ::Integer
                                                },
                                                ?tags: Array[
                                                  {
                                                    key: ::String,
                                                    value: ::String
                                                  },
                                                ]
                                              ) -> _CreateDataQualityJobDefinitionResponseSuccess
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateDataQualityJobDefinitionResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_device_fleet-instance_method
      def create_device_fleet: (
                                 device_fleet_name: ::String,
                                 ?role_arn: ::String,
                                 ?description: ::String,
                                 output_config: {
                                   s3_output_location: ::String,
                                   kms_key_id: ::String?,
                                   preset_deployment_type: ("GreengrassV2Component")?,
                                   preset_deployment_config: ::String?
                                 },
                                 ?tags: Array[
                                   {
                                     key: ::String,
                                     value: ::String
                                   },
                                 ],
                                 ?enable_iot_role_alias: bool
                               ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _CreateDomainResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateDomainResponse]
        def domain_arn: () -> ::String
        def url: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_domain-instance_method
      def create_domain: (
                           domain_name: ::String,
                           auth_mode: ("SSO" | "IAM"),
                           default_user_settings: {
                             execution_role: ::String?,
                             security_groups: Array[::String]?,
                             sharing_settings: {
                               notebook_output_option: ("Allowed" | "Disabled")?,
                               s3_output_path: ::String?,
                               s3_kms_key_id: ::String?
                             }?,
                             jupyter_server_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               lifecycle_config_arns: Array[::String]?,
                               code_repositories: Array[
                                 {
                                   repository_url: ::String
                                 },
                               ]?
                             }?,
                             kernel_gateway_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?,
                               lifecycle_config_arns: Array[::String]?
                             }?,
                             tensor_board_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?
                             }?,
                             r_studio_server_pro_app_settings: {
                               access_status: ("ENABLED" | "DISABLED")?,
                               user_group: ("R_STUDIO_ADMIN" | "R_STUDIO_USER")?
                             }?,
                             r_session_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?
                             }?,
                             canvas_app_settings: {
                               time_series_forecasting_settings: {
                                 status: ("ENABLED" | "DISABLED")?,
                                 amazon_forecast_role_arn: ::String?
                               }?,
                               model_register_settings: {
                                 status: ("ENABLED" | "DISABLED")?,
                                 cross_account_model_register_role_arn: ::String?
                               }?,
                               workspace_settings: {
                                 s3_artifact_path: ::String?,
                                 s3_kms_key_id: ::String?
                               }?,
                               identity_provider_o_auth_settings: Array[
                                 {
                                   data_source_name: ("SalesforceGenie" | "Snowflake")?,
                                   status: ("ENABLED" | "DISABLED")?,
                                   secret_arn: ::String?
                                 },
                               ]?,
                               direct_deploy_settings: {
                                 status: ("ENABLED" | "DISABLED")?
                               }?,
                               kendra_settings: {
                                 status: ("ENABLED" | "DISABLED")?
                               }?,
                               generative_ai_settings: {
                                 amazon_bedrock_role_arn: ::String?
                               }?,
                               emr_serverless_settings: {
                                 execution_role_arn: ::String?,
                                 status: ("ENABLED" | "DISABLED")?
                               }?
                             }?,
                             code_editor_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?,
                               lifecycle_config_arns: Array[::String]?,
                               app_lifecycle_management: {
                                 idle_settings: {
                                   lifecycle_management: ("ENABLED" | "DISABLED")?,
                                   idle_timeout_in_minutes: ::Integer?,
                                   min_idle_timeout_in_minutes: ::Integer?,
                                   max_idle_timeout_in_minutes: ::Integer?
                                 }?
                               }?,
                               built_in_lifecycle_config_arn: ::String?
                             }?,
                             jupyter_lab_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?,
                               lifecycle_config_arns: Array[::String]?,
                               code_repositories: Array[
                                 {
                                   repository_url: ::String
                                 },
                               ]?,
                               app_lifecycle_management: {
                                 idle_settings: {
                                   lifecycle_management: ("ENABLED" | "DISABLED")?,
                                   idle_timeout_in_minutes: ::Integer?,
                                   min_idle_timeout_in_minutes: ::Integer?,
                                   max_idle_timeout_in_minutes: ::Integer?
                                 }?
                               }?,
                               emr_settings: {
                                 assumable_role_arns: Array[::String]?,
                                 execution_role_arns: Array[::String]?
                               }?,
                               built_in_lifecycle_config_arn: ::String?
                             }?,
                             space_storage_settings: {
                               default_ebs_storage_settings: {
                                 default_ebs_volume_size_in_gb: ::Integer,
                                 maximum_ebs_volume_size_in_gb: ::Integer
                               }?
                             }?,
                             default_landing_uri: ::String?,
                             studio_web_portal: ("ENABLED" | "DISABLED")?,
                             custom_posix_user_config: {
                               uid: ::Integer,
                               gid: ::Integer
                             }?,
                             custom_file_system_configs: Array[
                               {
                                 efs_file_system_config: {
                                   file_system_id: ::String,
                                   file_system_path: ::String?
                                 }?
                               },
                             ]?,
                             studio_web_portal_settings: {
                               hidden_ml_tools: Array[("DataWrangler" | "FeatureStore" | "EmrClusters" | "AutoMl" | "Experiments" | "Training" | "ModelEvaluation" | "Pipelines" | "Models" | "JumpStart" | "InferenceRecommender" | "Endpoints" | "Projects" | "InferenceOptimization" | "PerformanceEvaluation")]?,
                               hidden_app_types: Array[("JupyterServer" | "KernelGateway" | "DetailedProfiler" | "TensorBoard" | "CodeEditor" | "JupyterLab" | "RStudioServerPro" | "RSessionGateway" | "Canvas")]?,
                               hidden_instance_types: Array[("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")]?,
                               hidden_sage_maker_image_version_aliases: Array[
                                 {
                                   sage_maker_image_name: ("sagemaker_distribution")?,
                                   version_aliases: Array[::String]?
                                 },
                               ]?
                             }?,
                             auto_mount_home_efs: ("Enabled" | "Disabled" | "DefaultAsDomain")?
                           },
                           ?domain_settings: {
                             security_group_ids: Array[::String]?,
                             r_studio_server_pro_domain_settings: {
                               domain_execution_role_arn: ::String,
                               r_studio_connect_url: ::String?,
                               r_studio_package_manager_url: ::String?,
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?
                             }?,
                             execution_role_identity_config: ("USER_PROFILE_NAME" | "DISABLED")?,
                             docker_settings: {
                               enable_docker_access: ("ENABLED" | "DISABLED")?,
                               vpc_only_trusted_accounts: Array[::String]?
                             }?,
                             amazon_q_settings: {
                               status: ("ENABLED" | "DISABLED")?,
                               q_profile_arn: ::String?
                             }?
                           },
                           subnet_ids: Array[::String],
                           vpc_id: ::String,
                           ?tags: Array[
                             {
                               key: ::String,
                               value: ::String
                             },
                           ],
                           ?app_network_access_type: ("PublicInternetOnly" | "VpcOnly"),
                           ?home_efs_file_system_kms_key_id: ::String,
                           ?kms_key_id: ::String,
                           ?app_security_group_management: ("Service" | "Customer"),
                           ?tag_propagation: ("ENABLED" | "DISABLED"),
                           ?default_space_settings: {
                             execution_role: ::String?,
                             security_groups: Array[::String]?,
                             jupyter_server_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               lifecycle_config_arns: Array[::String]?,
                               code_repositories: Array[
                                 {
                                   repository_url: ::String
                                 },
                               ]?
                             }?,
                             kernel_gateway_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?,
                               lifecycle_config_arns: Array[::String]?
                             }?,
                             jupyter_lab_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?,
                               lifecycle_config_arns: Array[::String]?,
                               code_repositories: Array[
                                 {
                                   repository_url: ::String
                                 },
                               ]?,
                               app_lifecycle_management: {
                                 idle_settings: {
                                   lifecycle_management: ("ENABLED" | "DISABLED")?,
                                   idle_timeout_in_minutes: ::Integer?,
                                   min_idle_timeout_in_minutes: ::Integer?,
                                   max_idle_timeout_in_minutes: ::Integer?
                                 }?
                               }?,
                               emr_settings: {
                                 assumable_role_arns: Array[::String]?,
                                 execution_role_arns: Array[::String]?
                               }?,
                               built_in_lifecycle_config_arn: ::String?
                             }?,
                             space_storage_settings: {
                               default_ebs_storage_settings: {
                                 default_ebs_volume_size_in_gb: ::Integer,
                                 maximum_ebs_volume_size_in_gb: ::Integer
                               }?
                             }?,
                             custom_posix_user_config: {
                               uid: ::Integer,
                               gid: ::Integer
                             }?,
                             custom_file_system_configs: Array[
                               {
                                 efs_file_system_config: {
                                   file_system_id: ::String,
                                   file_system_path: ::String?
                                 }?
                               },
                             ]?
                           }
                         ) -> _CreateDomainResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateDomainResponseSuccess

      interface _CreateEdgeDeploymentPlanResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateEdgeDeploymentPlanResponse]
        def edge_deployment_plan_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_edge_deployment_plan-instance_method
      def create_edge_deployment_plan: (
                                         edge_deployment_plan_name: ::String,
                                         model_configs: Array[
                                           {
                                             model_handle: ::String,
                                             edge_packaging_job_name: ::String
                                           },
                                         ],
                                         device_fleet_name: ::String,
                                         ?stages: Array[
                                           {
                                             stage_name: ::String,
                                             device_selection_config: {
                                               device_subset_type: ("PERCENTAGE" | "SELECTION" | "NAMECONTAINS"),
                                               percentage: ::Integer?,
                                               device_names: Array[::String]?,
                                               device_name_contains: ::String?
                                             },
                                             deployment_config: {
                                               failure_handling_policy: ("ROLLBACK_ON_FAILURE" | "DO_NOTHING")
                                             }?
                                           },
                                         ],
                                         ?tags: Array[
                                           {
                                             key: ::String,
                                             value: ::String
                                           },
                                         ]
                                       ) -> _CreateEdgeDeploymentPlanResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateEdgeDeploymentPlanResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_edge_deployment_stage-instance_method
      def create_edge_deployment_stage: (
                                          edge_deployment_plan_name: ::String,
                                          stages: Array[
                                            {
                                              stage_name: ::String,
                                              device_selection_config: {
                                                device_subset_type: ("PERCENTAGE" | "SELECTION" | "NAMECONTAINS"),
                                                percentage: ::Integer?,
                                                device_names: Array[::String]?,
                                                device_name_contains: ::String?
                                              },
                                              deployment_config: {
                                                failure_handling_policy: ("ROLLBACK_ON_FAILURE" | "DO_NOTHING")
                                              }?
                                            },
                                          ]
                                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_edge_packaging_job-instance_method
      def create_edge_packaging_job: (
                                       edge_packaging_job_name: ::String,
                                       compilation_job_name: ::String,
                                       model_name: ::String,
                                       model_version: ::String,
                                       role_arn: ::String,
                                       output_config: {
                                         s3_output_location: ::String,
                                         kms_key_id: ::String?,
                                         preset_deployment_type: ("GreengrassV2Component")?,
                                         preset_deployment_config: ::String?
                                       },
                                       ?resource_key: ::String,
                                       ?tags: Array[
                                         {
                                           key: ::String,
                                           value: ::String
                                         },
                                       ]
                                     ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _CreateEndpointResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateEndpointOutput]
        def endpoint_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_endpoint-instance_method
      def create_endpoint: (
                             endpoint_name: ::String,
                             endpoint_config_name: ::String,
                             ?deployment_config: {
                               blue_green_update_policy: {
                                 traffic_routing_configuration: {
                                   type: ("ALL_AT_ONCE" | "CANARY" | "LINEAR"),
                                   wait_interval_in_seconds: ::Integer,
                                   canary_size: {
                                     type: ("INSTANCE_COUNT" | "CAPACITY_PERCENT"),
                                     value: ::Integer
                                   }?,
                                   linear_step_size: {
                                     type: ("INSTANCE_COUNT" | "CAPACITY_PERCENT"),
                                     value: ::Integer
                                   }?
                                 },
                                 termination_wait_in_seconds: ::Integer?,
                                 maximum_execution_timeout_in_seconds: ::Integer?
                               }?,
                               rolling_update_policy: {
                                 maximum_batch_size: {
                                   type: ("INSTANCE_COUNT" | "CAPACITY_PERCENT"),
                                   value: ::Integer
                                 },
                                 wait_interval_in_seconds: ::Integer,
                                 maximum_execution_timeout_in_seconds: ::Integer?,
                                 rollback_maximum_batch_size: {
                                   type: ("INSTANCE_COUNT" | "CAPACITY_PERCENT"),
                                   value: ::Integer
                                 }?
                               }?,
                               auto_rollback_configuration: {
                                 alarms: Array[
                                   {
                                     alarm_name: ::String?
                                   },
                                 ]?
                               }?
                             },
                             ?tags: Array[
                               {
                                 key: ::String,
                                 value: ::String
                               },
                             ]
                           ) -> _CreateEndpointResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateEndpointResponseSuccess

      interface _CreateEndpointConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateEndpointConfigOutput]
        def endpoint_config_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_endpoint_config-instance_method
      def create_endpoint_config: (
                                    endpoint_config_name: ::String,
                                    production_variants: Array[
                                      {
                                        variant_name: ::String,
                                        model_name: ::String?,
                                        initial_instance_count: ::Integer?,
                                        instance_type: ("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.12xlarge" | "ml.m5d.24xlarge" | "ml.c4.large" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.large" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.12xlarge" | "ml.r5.24xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.12xlarge" | "ml.r5d.24xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.dl1.24xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.p4d.24xlarge" | "ml.c7g.large" | "ml.c7g.xlarge" | "ml.c7g.2xlarge" | "ml.c7g.4xlarge" | "ml.c7g.8xlarge" | "ml.c7g.12xlarge" | "ml.c7g.16xlarge" | "ml.m6g.large" | "ml.m6g.xlarge" | "ml.m6g.2xlarge" | "ml.m6g.4xlarge" | "ml.m6g.8xlarge" | "ml.m6g.12xlarge" | "ml.m6g.16xlarge" | "ml.m6gd.large" | "ml.m6gd.xlarge" | "ml.m6gd.2xlarge" | "ml.m6gd.4xlarge" | "ml.m6gd.8xlarge" | "ml.m6gd.12xlarge" | "ml.m6gd.16xlarge" | "ml.c6g.large" | "ml.c6g.xlarge" | "ml.c6g.2xlarge" | "ml.c6g.4xlarge" | "ml.c6g.8xlarge" | "ml.c6g.12xlarge" | "ml.c6g.16xlarge" | "ml.c6gd.large" | "ml.c6gd.xlarge" | "ml.c6gd.2xlarge" | "ml.c6gd.4xlarge" | "ml.c6gd.8xlarge" | "ml.c6gd.12xlarge" | "ml.c6gd.16xlarge" | "ml.c6gn.large" | "ml.c6gn.xlarge" | "ml.c6gn.2xlarge" | "ml.c6gn.4xlarge" | "ml.c6gn.8xlarge" | "ml.c6gn.12xlarge" | "ml.c6gn.16xlarge" | "ml.r6g.large" | "ml.r6g.xlarge" | "ml.r6g.2xlarge" | "ml.r6g.4xlarge" | "ml.r6g.8xlarge" | "ml.r6g.12xlarge" | "ml.r6g.16xlarge" | "ml.r6gd.large" | "ml.r6gd.xlarge" | "ml.r6gd.2xlarge" | "ml.r6gd.4xlarge" | "ml.r6gd.8xlarge" | "ml.r6gd.12xlarge" | "ml.r6gd.16xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.inf2.xlarge" | "ml.inf2.8xlarge" | "ml.inf2.24xlarge" | "ml.inf2.48xlarge" | "ml.p5.48xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge")?,
                                        initial_variant_weight: ::Float?,
                                        accelerator_type: ("ml.eia1.medium" | "ml.eia1.large" | "ml.eia1.xlarge" | "ml.eia2.medium" | "ml.eia2.large" | "ml.eia2.xlarge")?,
                                        core_dump_config: {
                                          destination_s3_uri: ::String,
                                          kms_key_id: ::String?
                                        }?,
                                        serverless_config: {
                                          memory_size_in_mb: ::Integer,
                                          max_concurrency: ::Integer,
                                          provisioned_concurrency: ::Integer?
                                        }?,
                                        volume_size_in_gb: ::Integer?,
                                        model_data_download_timeout_in_seconds: ::Integer?,
                                        container_startup_health_check_timeout_in_seconds: ::Integer?,
                                        enable_ssm_access: bool?,
                                        managed_instance_scaling: {
                                          status: ("ENABLED" | "DISABLED")?,
                                          min_instance_count: ::Integer?,
                                          max_instance_count: ::Integer?
                                        }?,
                                        routing_config: {
                                          routing_strategy: ("LEAST_OUTSTANDING_REQUESTS" | "RANDOM")
                                        }?,
                                        inference_ami_version: ("al2-ami-sagemaker-inference-gpu-2")?
                                      },
                                    ],
                                    ?data_capture_config: {
                                      enable_capture: bool?,
                                      initial_sampling_percentage: ::Integer,
                                      destination_s3_uri: ::String,
                                      kms_key_id: ::String?,
                                      capture_options: Array[
                                        {
                                          capture_mode: ("Input" | "Output" | "InputAndOutput")
                                        },
                                      ],
                                      capture_content_type_header: {
                                        csv_content_types: Array[::String]?,
                                        json_content_types: Array[::String]?
                                      }?
                                    },
                                    ?tags: Array[
                                      {
                                        key: ::String,
                                        value: ::String
                                      },
                                    ],
                                    ?kms_key_id: ::String,
                                    ?async_inference_config: {
                                      client_config: {
                                        max_concurrent_invocations_per_instance: ::Integer?
                                      }?,
                                      output_config: {
                                        kms_key_id: ::String?,
                                        s3_output_path: ::String?,
                                        notification_config: {
                                          success_topic: ::String?,
                                          error_topic: ::String?,
                                          include_inference_response_in: Array[("SUCCESS_NOTIFICATION_TOPIC" | "ERROR_NOTIFICATION_TOPIC")]?
                                        }?,
                                        s3_failure_path: ::String?
                                      }
                                    },
                                    ?explainer_config: {
                                      clarify_explainer_config: {
                                        enable_explanations: ::String?,
                                        inference_config: {
                                          features_attribute: ::String?,
                                          content_template: ::String?,
                                          max_record_count: ::Integer?,
                                          max_payload_in_mb: ::Integer?,
                                          probability_index: ::Integer?,
                                          label_index: ::Integer?,
                                          probability_attribute: ::String?,
                                          label_attribute: ::String?,
                                          label_headers: Array[::String]?,
                                          feature_headers: Array[::String]?,
                                          feature_types: Array[("numerical" | "categorical" | "text")]?
                                        }?,
                                        shap_config: {
                                          shap_baseline_config: {
                                            mime_type: ::String?,
                                            shap_baseline: ::String?,
                                            shap_baseline_uri: ::String?
                                          },
                                          number_of_samples: ::Integer?,
                                          use_logit: bool?,
                                          seed: ::Integer?,
                                          text_config: {
                                            language: ("af" | "sq" | "ar" | "hy" | "eu" | "bn" | "bg" | "ca" | "zh" | "hr" | "cs" | "da" | "nl" | "en" | "et" | "fi" | "fr" | "de" | "el" | "gu" | "he" | "hi" | "hu" | "is" | "id" | "ga" | "it" | "kn" | "ky" | "lv" | "lt" | "lb" | "mk" | "ml" | "mr" | "ne" | "nb" | "fa" | "pl" | "pt" | "ro" | "ru" | "sa" | "sr" | "tn" | "si" | "sk" | "sl" | "es" | "sv" | "tl" | "ta" | "tt" | "te" | "tr" | "uk" | "ur" | "yo" | "lij" | "xx"),
                                            granularity: ("token" | "sentence" | "paragraph")
                                          }?
                                        }
                                      }?
                                    },
                                    ?shadow_production_variants: Array[
                                      {
                                        variant_name: ::String,
                                        model_name: ::String?,
                                        initial_instance_count: ::Integer?,
                                        instance_type: ("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.12xlarge" | "ml.m5d.24xlarge" | "ml.c4.large" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.large" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.12xlarge" | "ml.r5.24xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.12xlarge" | "ml.r5d.24xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.dl1.24xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.p4d.24xlarge" | "ml.c7g.large" | "ml.c7g.xlarge" | "ml.c7g.2xlarge" | "ml.c7g.4xlarge" | "ml.c7g.8xlarge" | "ml.c7g.12xlarge" | "ml.c7g.16xlarge" | "ml.m6g.large" | "ml.m6g.xlarge" | "ml.m6g.2xlarge" | "ml.m6g.4xlarge" | "ml.m6g.8xlarge" | "ml.m6g.12xlarge" | "ml.m6g.16xlarge" | "ml.m6gd.large" | "ml.m6gd.xlarge" | "ml.m6gd.2xlarge" | "ml.m6gd.4xlarge" | "ml.m6gd.8xlarge" | "ml.m6gd.12xlarge" | "ml.m6gd.16xlarge" | "ml.c6g.large" | "ml.c6g.xlarge" | "ml.c6g.2xlarge" | "ml.c6g.4xlarge" | "ml.c6g.8xlarge" | "ml.c6g.12xlarge" | "ml.c6g.16xlarge" | "ml.c6gd.large" | "ml.c6gd.xlarge" | "ml.c6gd.2xlarge" | "ml.c6gd.4xlarge" | "ml.c6gd.8xlarge" | "ml.c6gd.12xlarge" | "ml.c6gd.16xlarge" | "ml.c6gn.large" | "ml.c6gn.xlarge" | "ml.c6gn.2xlarge" | "ml.c6gn.4xlarge" | "ml.c6gn.8xlarge" | "ml.c6gn.12xlarge" | "ml.c6gn.16xlarge" | "ml.r6g.large" | "ml.r6g.xlarge" | "ml.r6g.2xlarge" | "ml.r6g.4xlarge" | "ml.r6g.8xlarge" | "ml.r6g.12xlarge" | "ml.r6g.16xlarge" | "ml.r6gd.large" | "ml.r6gd.xlarge" | "ml.r6gd.2xlarge" | "ml.r6gd.4xlarge" | "ml.r6gd.8xlarge" | "ml.r6gd.12xlarge" | "ml.r6gd.16xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.inf2.xlarge" | "ml.inf2.8xlarge" | "ml.inf2.24xlarge" | "ml.inf2.48xlarge" | "ml.p5.48xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge")?,
                                        initial_variant_weight: ::Float?,
                                        accelerator_type: ("ml.eia1.medium" | "ml.eia1.large" | "ml.eia1.xlarge" | "ml.eia2.medium" | "ml.eia2.large" | "ml.eia2.xlarge")?,
                                        core_dump_config: {
                                          destination_s3_uri: ::String,
                                          kms_key_id: ::String?
                                        }?,
                                        serverless_config: {
                                          memory_size_in_mb: ::Integer,
                                          max_concurrency: ::Integer,
                                          provisioned_concurrency: ::Integer?
                                        }?,
                                        volume_size_in_gb: ::Integer?,
                                        model_data_download_timeout_in_seconds: ::Integer?,
                                        container_startup_health_check_timeout_in_seconds: ::Integer?,
                                        enable_ssm_access: bool?,
                                        managed_instance_scaling: {
                                          status: ("ENABLED" | "DISABLED")?,
                                          min_instance_count: ::Integer?,
                                          max_instance_count: ::Integer?
                                        }?,
                                        routing_config: {
                                          routing_strategy: ("LEAST_OUTSTANDING_REQUESTS" | "RANDOM")
                                        }?,
                                        inference_ami_version: ("al2-ami-sagemaker-inference-gpu-2")?
                                      },
                                    ],
                                    ?execution_role_arn: ::String,
                                    ?vpc_config: {
                                      security_group_ids: Array[::String],
                                      subnets: Array[::String]
                                    },
                                    ?enable_network_isolation: bool
                                  ) -> _CreateEndpointConfigResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateEndpointConfigResponseSuccess

      interface _CreateExperimentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateExperimentResponse]
        def experiment_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_experiment-instance_method
      def create_experiment: (
                               experiment_name: ::String,
                               ?display_name: ::String,
                               ?description: ::String,
                               ?tags: Array[
                                 {
                                   key: ::String,
                                   value: ::String
                                 },
                               ]
                             ) -> _CreateExperimentResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateExperimentResponseSuccess

      interface _CreateFeatureGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateFeatureGroupResponse]
        def feature_group_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_feature_group-instance_method
      def create_feature_group: (
                                  feature_group_name: ::String,
                                  record_identifier_feature_name: ::String,
                                  event_time_feature_name: ::String,
                                  feature_definitions: Array[
                                    {
                                      feature_name: ::String,
                                      feature_type: ("Integral" | "Fractional" | "String"),
                                      collection_type: ("List" | "Set" | "Vector")?,
                                      collection_config: {
                                        vector_config: {
                                          dimension: ::Integer
                                        }?
                                      }?
                                    },
                                  ],
                                  ?online_store_config: {
                                    security_config: {
                                      kms_key_id: ::String?
                                    }?,
                                    enable_online_store: bool?,
                                    ttl_duration: {
                                      unit: ("Seconds" | "Minutes" | "Hours" | "Days" | "Weeks")?,
                                      value: ::Integer?
                                    }?,
                                    storage_type: ("Standard" | "InMemory")?
                                  },
                                  ?offline_store_config: {
                                    s3_storage_config: {
                                      s3_uri: ::String,
                                      kms_key_id: ::String?,
                                      resolved_output_s3_uri: ::String?
                                    },
                                    disable_glue_table_creation: bool?,
                                    data_catalog_config: {
                                      table_name: ::String,
                                      catalog: ::String,
                                      database: ::String
                                    }?,
                                    table_format: ("Default" | "Glue" | "Iceberg")?
                                  },
                                  ?throughput_config: {
                                    throughput_mode: ("OnDemand" | "Provisioned"),
                                    provisioned_read_capacity_units: ::Integer?,
                                    provisioned_write_capacity_units: ::Integer?
                                  },
                                  ?role_arn: ::String,
                                  ?description: ::String,
                                  ?tags: Array[
                                    {
                                      key: ::String,
                                      value: ::String
                                    },
                                  ]
                                ) -> _CreateFeatureGroupResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateFeatureGroupResponseSuccess

      interface _CreateFlowDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateFlowDefinitionResponse]
        def flow_definition_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_flow_definition-instance_method
      def create_flow_definition: (
                                    flow_definition_name: ::String,
                                    ?human_loop_request_source: {
                                      aws_managed_human_loop_request_source: ("AWS/Rekognition/DetectModerationLabels/Image/V3" | "AWS/Textract/AnalyzeDocument/Forms/V1")
                                    },
                                    ?human_loop_activation_config: {
                                      human_loop_activation_conditions_config: {
                                        human_loop_activation_conditions: ::String
                                      }
                                    },
                                    ?human_loop_config: {
                                      workteam_arn: ::String,
                                      human_task_ui_arn: ::String,
                                      task_title: ::String,
                                      task_description: ::String,
                                      task_count: ::Integer,
                                      task_availability_lifetime_in_seconds: ::Integer?,
                                      task_time_limit_in_seconds: ::Integer?,
                                      task_keywords: Array[::String]?,
                                      public_workforce_task_price: {
                                        amount_in_usd: {
                                          dollars: ::Integer?,
                                          cents: ::Integer?,
                                          tenth_fractions_of_a_cent: ::Integer?
                                        }?
                                      }?
                                    },
                                    output_config: {
                                      s3_output_path: ::String,
                                      kms_key_id: ::String?
                                    },
                                    role_arn: ::String,
                                    ?tags: Array[
                                      {
                                        key: ::String,
                                        value: ::String
                                      },
                                    ]
                                  ) -> _CreateFlowDefinitionResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateFlowDefinitionResponseSuccess

      interface _CreateHubResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateHubResponse]
        def hub_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_hub-instance_method
      def create_hub: (
                        hub_name: ::String,
                        hub_description: ::String,
                        ?hub_display_name: ::String,
                        ?hub_search_keywords: Array[::String],
                        ?s3_storage_config: {
                          s3_output_path: ::String?
                        },
                        ?tags: Array[
                          {
                            key: ::String,
                            value: ::String
                          },
                        ]
                      ) -> _CreateHubResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateHubResponseSuccess

      interface _CreateHubContentReferenceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateHubContentReferenceResponse]
        def hub_arn: () -> ::String
        def hub_content_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_hub_content_reference-instance_method
      def create_hub_content_reference: (
                                          hub_name: ::String,
                                          sage_maker_public_hub_content_arn: ::String,
                                          ?hub_content_name: ::String,
                                          ?min_version: ::String,
                                          ?tags: Array[
                                            {
                                              key: ::String,
                                              value: ::String
                                            },
                                          ]
                                        ) -> _CreateHubContentReferenceResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateHubContentReferenceResponseSuccess

      interface _CreateHumanTaskUiResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateHumanTaskUiResponse]
        def human_task_ui_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_human_task_ui-instance_method
      def create_human_task_ui: (
                                  human_task_ui_name: ::String,
                                  ui_template: {
                                    content: ::String
                                  },
                                  ?tags: Array[
                                    {
                                      key: ::String,
                                      value: ::String
                                    },
                                  ]
                                ) -> _CreateHumanTaskUiResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateHumanTaskUiResponseSuccess

      interface _CreateHyperParameterTuningJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateHyperParameterTuningJobResponse]
        def hyper_parameter_tuning_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_hyper_parameter_tuning_job-instance_method
      def create_hyper_parameter_tuning_job: (
                                               hyper_parameter_tuning_job_name: ::String,
                                               hyper_parameter_tuning_job_config: {
                                                 strategy: ("Bayesian" | "Random" | "Hyperband" | "Grid"),
                                                 strategy_config: {
                                                   hyperband_strategy_config: {
                                                     min_resource: ::Integer?,
                                                     max_resource: ::Integer?
                                                   }?
                                                 }?,
                                                 hyper_parameter_tuning_job_objective: {
                                                   type: ("Maximize" | "Minimize"),
                                                   metric_name: ::String
                                                 }?,
                                                 resource_limits: {
                                                   max_number_of_training_jobs: ::Integer?,
                                                   max_parallel_training_jobs: ::Integer,
                                                   max_runtime_in_seconds: ::Integer?
                                                 },
                                                 parameter_ranges: {
                                                   integer_parameter_ranges: Array[
                                                     {
                                                       name: ::String,
                                                       min_value: ::String,
                                                       max_value: ::String,
                                                       scaling_type: ("Auto" | "Linear" | "Logarithmic" | "ReverseLogarithmic")?
                                                     },
                                                   ]?,
                                                   continuous_parameter_ranges: Array[
                                                     {
                                                       name: ::String,
                                                       min_value: ::String,
                                                       max_value: ::String,
                                                       scaling_type: ("Auto" | "Linear" | "Logarithmic" | "ReverseLogarithmic")?
                                                     },
                                                   ]?,
                                                   categorical_parameter_ranges: Array[
                                                     {
                                                       name: ::String,
                                                       values: Array[::String]
                                                     },
                                                   ]?,
                                                   auto_parameters: Array[
                                                     {
                                                       name: ::String,
                                                       value_hint: ::String
                                                     },
                                                   ]?
                                                 }?,
                                                 training_job_early_stopping_type: ("Off" | "Auto")?,
                                                 tuning_job_completion_criteria: {
                                                   target_objective_metric_value: ::Float?,
                                                   best_objective_not_improving: {
                                                     max_number_of_training_jobs_not_improving: ::Integer?
                                                   }?,
                                                   convergence_detected: {
                                                     complete_on_convergence: ("Disabled" | "Enabled")?
                                                   }?
                                                 }?,
                                                 random_seed: ::Integer?
                                               },
                                               ?training_job_definition: {
                                                 definition_name: ::String?,
                                                 tuning_objective: {
                                                   type: ("Maximize" | "Minimize"),
                                                   metric_name: ::String
                                                 }?,
                                                 hyper_parameter_ranges: {
                                                   integer_parameter_ranges: Array[
                                                     {
                                                       name: ::String,
                                                       min_value: ::String,
                                                       max_value: ::String,
                                                       scaling_type: ("Auto" | "Linear" | "Logarithmic" | "ReverseLogarithmic")?
                                                     },
                                                   ]?,
                                                   continuous_parameter_ranges: Array[
                                                     {
                                                       name: ::String,
                                                       min_value: ::String,
                                                       max_value: ::String,
                                                       scaling_type: ("Auto" | "Linear" | "Logarithmic" | "ReverseLogarithmic")?
                                                     },
                                                   ]?,
                                                   categorical_parameter_ranges: Array[
                                                     {
                                                       name: ::String,
                                                       values: Array[::String]
                                                     },
                                                   ]?,
                                                   auto_parameters: Array[
                                                     {
                                                       name: ::String,
                                                       value_hint: ::String
                                                     },
                                                   ]?
                                                 }?,
                                                 static_hyper_parameters: Hash[::String, ::String]?,
                                                 algorithm_specification: {
                                                   training_image: ::String?,
                                                   training_input_mode: ("Pipe" | "File" | "FastFile"),
                                                   algorithm_name: ::String?,
                                                   metric_definitions: Array[
                                                     {
                                                       name: ::String,
                                                       regex: ::String
                                                     },
                                                   ]?
                                                 },
                                                 role_arn: ::String,
                                                 input_data_config: Array[
                                                   {
                                                     channel_name: ::String,
                                                     data_source: {
                                                       s3_data_source: {
                                                         s3_data_type: ("ManifestFile" | "S3Prefix" | "AugmentedManifestFile"),
                                                         s3_uri: ::String,
                                                         s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                         attribute_names: Array[::String]?,
                                                         instance_group_names: Array[::String]?
                                                       }?,
                                                       file_system_data_source: {
                                                         file_system_id: ::String,
                                                         file_system_access_mode: ("rw" | "ro"),
                                                         file_system_type: ("EFS" | "FSxLustre"),
                                                         directory_path: ::String
                                                       }?
                                                     },
                                                     content_type: ::String?,
                                                     compression_type: ("None" | "Gzip")?,
                                                     record_wrapper_type: ("None" | "RecordIO")?,
                                                     input_mode: ("Pipe" | "File" | "FastFile")?,
                                                     shuffle_config: {
                                                       seed: ::Integer
                                                     }?
                                                   },
                                                 ]?,
                                                 vpc_config: {
                                                   security_group_ids: Array[::String],
                                                   subnets: Array[::String]
                                                 }?,
                                                 output_data_config: {
                                                   kms_key_id: ::String?,
                                                   s3_output_path: ::String,
                                                   compression_type: ("GZIP" | "NONE")?
                                                 },
                                                 resource_config: {
                                                   instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge")?,
                                                   instance_count: ::Integer?,
                                                   volume_size_in_gb: ::Integer,
                                                   volume_kms_key_id: ::String?,
                                                   keep_alive_period_in_seconds: ::Integer?,
                                                   instance_groups: Array[
                                                     {
                                                       instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge"),
                                                       instance_count: ::Integer,
                                                       instance_group_name: ::String
                                                     },
                                                   ]?
                                                 }?,
                                                 hyper_parameter_tuning_resource_config: {
                                                   instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge")?,
                                                   instance_count: ::Integer?,
                                                   volume_size_in_gb: ::Integer?,
                                                   volume_kms_key_id: ::String?,
                                                   allocation_strategy: ("Prioritized")?,
                                                   instance_configs: Array[
                                                     {
                                                       instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge"),
                                                       instance_count: ::Integer,
                                                       volume_size_in_gb: ::Integer
                                                     },
                                                   ]?
                                                 }?,
                                                 stopping_condition: {
                                                   max_runtime_in_seconds: ::Integer?,
                                                   max_wait_time_in_seconds: ::Integer?,
                                                   max_pending_time_in_seconds: ::Integer?
                                                 },
                                                 enable_network_isolation: bool?,
                                                 enable_inter_container_traffic_encryption: bool?,
                                                 enable_managed_spot_training: bool?,
                                                 checkpoint_config: {
                                                   s3_uri: ::String,
                                                   local_path: ::String?
                                                 }?,
                                                 retry_strategy: {
                                                   maximum_retry_attempts: ::Integer
                                                 }?,
                                                 environment: Hash[::String, ::String]?
                                               },
                                               ?training_job_definitions: Array[
                                                 {
                                                   definition_name: ::String?,
                                                   tuning_objective: {
                                                     type: ("Maximize" | "Minimize"),
                                                     metric_name: ::String
                                                   }?,
                                                   hyper_parameter_ranges: {
                                                     integer_parameter_ranges: Array[
                                                       {
                                                         name: ::String,
                                                         min_value: ::String,
                                                         max_value: ::String,
                                                         scaling_type: ("Auto" | "Linear" | "Logarithmic" | "ReverseLogarithmic")?
                                                       },
                                                     ]?,
                                                     continuous_parameter_ranges: Array[
                                                       {
                                                         name: ::String,
                                                         min_value: ::String,
                                                         max_value: ::String,
                                                         scaling_type: ("Auto" | "Linear" | "Logarithmic" | "ReverseLogarithmic")?
                                                       },
                                                     ]?,
                                                     categorical_parameter_ranges: Array[
                                                       {
                                                         name: ::String,
                                                         values: Array[::String]
                                                       },
                                                     ]?,
                                                     auto_parameters: Array[
                                                       {
                                                         name: ::String,
                                                         value_hint: ::String
                                                       },
                                                     ]?
                                                   }?,
                                                   static_hyper_parameters: Hash[::String, ::String]?,
                                                   algorithm_specification: {
                                                     training_image: ::String?,
                                                     training_input_mode: ("Pipe" | "File" | "FastFile"),
                                                     algorithm_name: ::String?,
                                                     metric_definitions: Array[
                                                       {
                                                         name: ::String,
                                                         regex: ::String
                                                       },
                                                     ]?
                                                   },
                                                   role_arn: ::String,
                                                   input_data_config: Array[
                                                     {
                                                       channel_name: ::String,
                                                       data_source: {
                                                         s3_data_source: {
                                                           s3_data_type: ("ManifestFile" | "S3Prefix" | "AugmentedManifestFile"),
                                                           s3_uri: ::String,
                                                           s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                           attribute_names: Array[::String]?,
                                                           instance_group_names: Array[::String]?
                                                         }?,
                                                         file_system_data_source: {
                                                           file_system_id: ::String,
                                                           file_system_access_mode: ("rw" | "ro"),
                                                           file_system_type: ("EFS" | "FSxLustre"),
                                                           directory_path: ::String
                                                         }?
                                                       },
                                                       content_type: ::String?,
                                                       compression_type: ("None" | "Gzip")?,
                                                       record_wrapper_type: ("None" | "RecordIO")?,
                                                       input_mode: ("Pipe" | "File" | "FastFile")?,
                                                       shuffle_config: {
                                                         seed: ::Integer
                                                       }?
                                                     },
                                                   ]?,
                                                   vpc_config: {
                                                     security_group_ids: Array[::String],
                                                     subnets: Array[::String]
                                                   }?,
                                                   output_data_config: {
                                                     kms_key_id: ::String?,
                                                     s3_output_path: ::String,
                                                     compression_type: ("GZIP" | "NONE")?
                                                   },
                                                   resource_config: {
                                                     instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge")?,
                                                     instance_count: ::Integer?,
                                                     volume_size_in_gb: ::Integer,
                                                     volume_kms_key_id: ::String?,
                                                     keep_alive_period_in_seconds: ::Integer?,
                                                     instance_groups: Array[
                                                       {
                                                         instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge"),
                                                         instance_count: ::Integer,
                                                         instance_group_name: ::String
                                                       },
                                                     ]?
                                                   }?,
                                                   hyper_parameter_tuning_resource_config: {
                                                     instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge")?,
                                                     instance_count: ::Integer?,
                                                     volume_size_in_gb: ::Integer?,
                                                     volume_kms_key_id: ::String?,
                                                     allocation_strategy: ("Prioritized")?,
                                                     instance_configs: Array[
                                                       {
                                                         instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge"),
                                                         instance_count: ::Integer,
                                                         volume_size_in_gb: ::Integer
                                                       },
                                                     ]?
                                                   }?,
                                                   stopping_condition: {
                                                     max_runtime_in_seconds: ::Integer?,
                                                     max_wait_time_in_seconds: ::Integer?,
                                                     max_pending_time_in_seconds: ::Integer?
                                                   },
                                                   enable_network_isolation: bool?,
                                                   enable_inter_container_traffic_encryption: bool?,
                                                   enable_managed_spot_training: bool?,
                                                   checkpoint_config: {
                                                     s3_uri: ::String,
                                                     local_path: ::String?
                                                   }?,
                                                   retry_strategy: {
                                                     maximum_retry_attempts: ::Integer
                                                   }?,
                                                   environment: Hash[::String, ::String]?
                                                 },
                                               ],
                                               ?warm_start_config: {
                                                 parent_hyper_parameter_tuning_jobs: Array[
                                                   {
                                                     hyper_parameter_tuning_job_name: ::String?
                                                   },
                                                 ],
                                                 warm_start_type: ("IdenticalDataAndAlgorithm" | "TransferLearning")
                                               },
                                               ?tags: Array[
                                                 {
                                                   key: ::String,
                                                   value: ::String
                                                 },
                                               ],
                                               ?autotune: {
                                                 mode: ("Enabled")
                                               }
                                             ) -> _CreateHyperParameterTuningJobResponseSuccess
                                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateHyperParameterTuningJobResponseSuccess

      interface _CreateImageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateImageResponse]
        def image_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_image-instance_method
      def create_image: (
                          ?description: ::String,
                          ?display_name: ::String,
                          image_name: ::String,
                          role_arn: ::String,
                          ?tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> _CreateImageResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateImageResponseSuccess

      interface _CreateImageVersionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateImageVersionResponse]
        def image_version_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_image_version-instance_method
      def create_image_version: (
                                  base_image: ::String,
                                  client_token: ::String,
                                  image_name: ::String,
                                  ?aliases: Array[::String],
                                  ?vendor_guidance: ("NOT_PROVIDED" | "STABLE" | "TO_BE_ARCHIVED" | "ARCHIVED"),
                                  ?job_type: ("TRAINING" | "INFERENCE" | "NOTEBOOK_KERNEL"),
                                  ?ml_framework: ::String,
                                  ?programming_lang: ::String,
                                  ?processor: ("CPU" | "GPU"),
                                  ?horovod: bool,
                                  ?release_notes: ::String
                                ) -> _CreateImageVersionResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateImageVersionResponseSuccess

      interface _CreateInferenceComponentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateInferenceComponentOutput]
        def inference_component_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_inference_component-instance_method
      def create_inference_component: (
                                        inference_component_name: ::String,
                                        endpoint_name: ::String,
                                        variant_name: ::String,
                                        specification: {
                                          model_name: ::String?,
                                          container: {
                                            image: ::String?,
                                            artifact_url: ::String?,
                                            environment: Hash[::String, ::String]?
                                          }?,
                                          startup_parameters: {
                                            model_data_download_timeout_in_seconds: ::Integer?,
                                            container_startup_health_check_timeout_in_seconds: ::Integer?
                                          }?,
                                          compute_resource_requirements: {
                                            number_of_cpu_cores_required: ::Float?,
                                            number_of_accelerator_devices_required: ::Float?,
                                            min_memory_required_in_mb: ::Integer,
                                            max_memory_required_in_mb: ::Integer?
                                          }
                                        },
                                        runtime_config: {
                                          copy_count: ::Integer
                                        },
                                        ?tags: Array[
                                          {
                                            key: ::String,
                                            value: ::String
                                          },
                                        ]
                                      ) -> _CreateInferenceComponentResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateInferenceComponentResponseSuccess

      interface _CreateInferenceExperimentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateInferenceExperimentResponse]
        def inference_experiment_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_inference_experiment-instance_method
      def create_inference_experiment: (
                                         name: ::String,
                                         type: ("ShadowMode"),
                                         ?schedule: {
                                           start_time: ::Time?,
                                           end_time: ::Time?
                                         },
                                         ?description: ::String,
                                         role_arn: ::String,
                                         endpoint_name: ::String,
                                         model_variants: Array[
                                           {
                                             model_name: ::String,
                                             variant_name: ::String,
                                             infrastructure_config: {
                                               infrastructure_type: ("RealTimeInference"),
                                               real_time_inference_config: {
                                                 instance_type: ("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge"),
                                                 instance_count: ::Integer
                                               }
                                             }
                                           },
                                         ],
                                         ?data_storage_config: {
                                           destination: ::String,
                                           kms_key: ::String?,
                                           content_type: {
                                             csv_content_types: Array[::String]?,
                                             json_content_types: Array[::String]?
                                           }?
                                         },
                                         shadow_mode_config: {
                                           source_model_variant_name: ::String,
                                           shadow_model_variants: Array[
                                             {
                                               shadow_model_variant_name: ::String,
                                               sampling_percentage: ::Integer
                                             },
                                           ]
                                         },
                                         ?kms_key: ::String,
                                         ?tags: Array[
                                           {
                                             key: ::String,
                                             value: ::String
                                           },
                                         ]
                                       ) -> _CreateInferenceExperimentResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateInferenceExperimentResponseSuccess

      interface _CreateInferenceRecommendationsJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateInferenceRecommendationsJobResponse]
        def job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_inference_recommendations_job-instance_method
      def create_inference_recommendations_job: (
                                                  job_name: ::String,
                                                  job_type: ("Default" | "Advanced"),
                                                  role_arn: ::String,
                                                  input_config: {
                                                    model_package_version_arn: ::String?,
                                                    model_name: ::String?,
                                                    job_duration_in_seconds: ::Integer?,
                                                    traffic_pattern: {
                                                      traffic_type: ("PHASES" | "STAIRS")?,
                                                      phases: Array[
                                                        {
                                                          initial_number_of_users: ::Integer?,
                                                          spawn_rate: ::Integer?,
                                                          duration_in_seconds: ::Integer?
                                                        },
                                                      ]?,
                                                      stairs: {
                                                        duration_in_seconds: ::Integer?,
                                                        number_of_steps: ::Integer?,
                                                        users_per_step: ::Integer?
                                                      }?
                                                    }?,
                                                    resource_limit: {
                                                      max_number_of_tests: ::Integer?,
                                                      max_parallel_of_tests: ::Integer?
                                                    }?,
                                                    endpoint_configurations: Array[
                                                      {
                                                        instance_type: ("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.12xlarge" | "ml.m5d.24xlarge" | "ml.c4.large" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.large" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.12xlarge" | "ml.r5.24xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.12xlarge" | "ml.r5d.24xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.dl1.24xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.p4d.24xlarge" | "ml.c7g.large" | "ml.c7g.xlarge" | "ml.c7g.2xlarge" | "ml.c7g.4xlarge" | "ml.c7g.8xlarge" | "ml.c7g.12xlarge" | "ml.c7g.16xlarge" | "ml.m6g.large" | "ml.m6g.xlarge" | "ml.m6g.2xlarge" | "ml.m6g.4xlarge" | "ml.m6g.8xlarge" | "ml.m6g.12xlarge" | "ml.m6g.16xlarge" | "ml.m6gd.large" | "ml.m6gd.xlarge" | "ml.m6gd.2xlarge" | "ml.m6gd.4xlarge" | "ml.m6gd.8xlarge" | "ml.m6gd.12xlarge" | "ml.m6gd.16xlarge" | "ml.c6g.large" | "ml.c6g.xlarge" | "ml.c6g.2xlarge" | "ml.c6g.4xlarge" | "ml.c6g.8xlarge" | "ml.c6g.12xlarge" | "ml.c6g.16xlarge" | "ml.c6gd.large" | "ml.c6gd.xlarge" | "ml.c6gd.2xlarge" | "ml.c6gd.4xlarge" | "ml.c6gd.8xlarge" | "ml.c6gd.12xlarge" | "ml.c6gd.16xlarge" | "ml.c6gn.large" | "ml.c6gn.xlarge" | "ml.c6gn.2xlarge" | "ml.c6gn.4xlarge" | "ml.c6gn.8xlarge" | "ml.c6gn.12xlarge" | "ml.c6gn.16xlarge" | "ml.r6g.large" | "ml.r6g.xlarge" | "ml.r6g.2xlarge" | "ml.r6g.4xlarge" | "ml.r6g.8xlarge" | "ml.r6g.12xlarge" | "ml.r6g.16xlarge" | "ml.r6gd.large" | "ml.r6gd.xlarge" | "ml.r6gd.2xlarge" | "ml.r6gd.4xlarge" | "ml.r6gd.8xlarge" | "ml.r6gd.12xlarge" | "ml.r6gd.16xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.inf2.xlarge" | "ml.inf2.8xlarge" | "ml.inf2.24xlarge" | "ml.inf2.48xlarge" | "ml.p5.48xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge")?,
                                                        serverless_config: {
                                                          memory_size_in_mb: ::Integer,
                                                          max_concurrency: ::Integer,
                                                          provisioned_concurrency: ::Integer?
                                                        }?,
                                                        inference_specification_name: ::String?,
                                                        environment_parameter_ranges: {
                                                          categorical_parameter_ranges: Array[
                                                            {
                                                              name: ::String,
                                                              value: Array[::String]
                                                            },
                                                          ]?
                                                        }?
                                                      },
                                                    ]?,
                                                    volume_kms_key_id: ::String?,
                                                    container_config: {
                                                      domain: ::String?,
                                                      task: ::String?,
                                                      framework: ::String?,
                                                      framework_version: ::String?,
                                                      payload_config: {
                                                        sample_payload_url: ::String?,
                                                        supported_content_types: Array[::String]?
                                                      }?,
                                                      nearest_model_name: ::String?,
                                                      supported_instance_types: Array[::String]?,
                                                      supported_endpoint_type: ("RealTime" | "Serverless")?,
                                                      data_input_config: ::String?,
                                                      supported_response_mime_types: Array[::String]?
                                                    }?,
                                                    endpoints: Array[
                                                      {
                                                        endpoint_name: ::String?
                                                      },
                                                    ]?,
                                                    vpc_config: {
                                                      security_group_ids: Array[::String],
                                                      subnets: Array[::String]
                                                    }?
                                                  },
                                                  ?job_description: ::String,
                                                  ?stopping_conditions: {
                                                    max_invocations: ::Integer?,
                                                    model_latency_thresholds: Array[
                                                      {
                                                        percentile: ::String?,
                                                        value_in_milliseconds: ::Integer?
                                                      },
                                                    ]?,
                                                    flat_invocations: ("Continue" | "Stop")?
                                                  },
                                                  ?output_config: {
                                                    kms_key_id: ::String?,
                                                    compiled_output_config: {
                                                      s3_output_uri: ::String?
                                                    }?
                                                  },
                                                  ?tags: Array[
                                                    {
                                                      key: ::String,
                                                      value: ::String
                                                    },
                                                  ]
                                                ) -> _CreateInferenceRecommendationsJobResponseSuccess
                                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateInferenceRecommendationsJobResponseSuccess

      interface _CreateLabelingJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateLabelingJobResponse]
        def labeling_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_labeling_job-instance_method
      def create_labeling_job: (
                                 labeling_job_name: ::String,
                                 label_attribute_name: ::String,
                                 input_config: {
                                   data_source: {
                                     s3_data_source: {
                                       manifest_s3_uri: ::String
                                     }?,
                                     sns_data_source: {
                                       sns_topic_arn: ::String
                                     }?
                                   },
                                   data_attributes: {
                                     content_classifiers: Array[("FreeOfPersonallyIdentifiableInformation" | "FreeOfAdultContent")]?
                                   }?
                                 },
                                 output_config: {
                                   s3_output_path: ::String,
                                   kms_key_id: ::String?,
                                   sns_topic_arn: ::String?
                                 },
                                 role_arn: ::String,
                                 ?label_category_config_s3_uri: ::String,
                                 ?stopping_conditions: {
                                   max_human_labeled_object_count: ::Integer?,
                                   max_percentage_of_input_dataset_labeled: ::Integer?
                                 },
                                 ?labeling_job_algorithms_config: {
                                   labeling_job_algorithm_specification_arn: ::String,
                                   initial_active_learning_model_arn: ::String?,
                                   labeling_job_resource_config: {
                                     volume_kms_key_id: ::String?,
                                     vpc_config: {
                                       security_group_ids: Array[::String],
                                       subnets: Array[::String]
                                     }?
                                   }?
                                 },
                                 human_task_config: {
                                   workteam_arn: ::String,
                                   ui_config: {
                                     ui_template_s3_uri: ::String?,
                                     human_task_ui_arn: ::String?
                                   },
                                   pre_human_task_lambda_arn: ::String?,
                                   task_keywords: Array[::String]?,
                                   task_title: ::String,
                                   task_description: ::String,
                                   number_of_human_workers_per_data_object: ::Integer,
                                   task_time_limit_in_seconds: ::Integer,
                                   task_availability_lifetime_in_seconds: ::Integer?,
                                   max_concurrent_task_count: ::Integer?,
                                   annotation_consolidation_config: {
                                     annotation_consolidation_lambda_arn: ::String
                                   }?,
                                   public_workforce_task_price: {
                                     amount_in_usd: {
                                       dollars: ::Integer?,
                                       cents: ::Integer?,
                                       tenth_fractions_of_a_cent: ::Integer?
                                     }?
                                   }?
                                 },
                                 ?tags: Array[
                                   {
                                     key: ::String,
                                     value: ::String
                                   },
                                 ]
                               ) -> _CreateLabelingJobResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateLabelingJobResponseSuccess

      interface _CreateMlflowTrackingServerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateMlflowTrackingServerResponse]
        def tracking_server_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_mlflow_tracking_server-instance_method
      def create_mlflow_tracking_server: (
                                           tracking_server_name: ::String,
                                           artifact_store_uri: ::String,
                                           ?tracking_server_size: ("Small" | "Medium" | "Large"),
                                           ?mlflow_version: ::String,
                                           role_arn: ::String,
                                           ?automatic_model_registration: bool,
                                           ?weekly_maintenance_window_start: ::String,
                                           ?tags: Array[
                                             {
                                               key: ::String,
                                               value: ::String
                                             },
                                           ]
                                         ) -> _CreateMlflowTrackingServerResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateMlflowTrackingServerResponseSuccess

      interface _CreateModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelOutput]
        def model_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_model-instance_method
      def create_model: (
                          model_name: ::String,
                          ?primary_container: {
                            container_hostname: ::String?,
                            image: ::String?,
                            image_config: {
                              repository_access_mode: ("Platform" | "Vpc"),
                              repository_auth_config: {
                                repository_credentials_provider_arn: ::String
                              }?
                            }?,
                            mode: ("SingleModel" | "MultiModel")?,
                            model_data_url: ::String?,
                            model_data_source: {
                              s3_data_source: {
                                s3_uri: ::String,
                                s3_data_type: ("S3Prefix" | "S3Object"),
                                compression_type: ("None" | "Gzip"),
                                model_access_config: {
                                  accept_eula: bool
                                }?,
                                hub_access_config: {
                                  hub_content_arn: ::String
                                }?,
                                manifest_s3_uri: ::String?
                              }?
                            }?,
                            additional_model_data_sources: Array[
                              {
                                channel_name: ::String,
                                s3_data_source: {
                                  s3_uri: ::String,
                                  s3_data_type: ("S3Prefix" | "S3Object"),
                                  compression_type: ("None" | "Gzip"),
                                  model_access_config: {
                                    accept_eula: bool
                                  }?,
                                  hub_access_config: {
                                    hub_content_arn: ::String
                                  }?,
                                  manifest_s3_uri: ::String?
                                }
                              },
                            ]?,
                            environment: Hash[::String, ::String]?,
                            model_package_name: ::String?,
                            inference_specification_name: ::String?,
                            multi_model_config: {
                              model_cache_setting: ("Enabled" | "Disabled")?
                            }?
                          },
                          ?containers: Array[
                            {
                              container_hostname: ::String?,
                              image: ::String?,
                              image_config: {
                                repository_access_mode: ("Platform" | "Vpc"),
                                repository_auth_config: {
                                  repository_credentials_provider_arn: ::String
                                }?
                              }?,
                              mode: ("SingleModel" | "MultiModel")?,
                              model_data_url: ::String?,
                              model_data_source: {
                                s3_data_source: {
                                  s3_uri: ::String,
                                  s3_data_type: ("S3Prefix" | "S3Object"),
                                  compression_type: ("None" | "Gzip"),
                                  model_access_config: {
                                    accept_eula: bool
                                  }?,
                                  hub_access_config: {
                                    hub_content_arn: ::String
                                  }?,
                                  manifest_s3_uri: ::String?
                                }?
                              }?,
                              additional_model_data_sources: Array[
                                {
                                  channel_name: ::String,
                                  s3_data_source: {
                                    s3_uri: ::String,
                                    s3_data_type: ("S3Prefix" | "S3Object"),
                                    compression_type: ("None" | "Gzip"),
                                    model_access_config: {
                                      accept_eula: bool
                                    }?,
                                    hub_access_config: {
                                      hub_content_arn: ::String
                                    }?,
                                    manifest_s3_uri: ::String?
                                  }
                                },
                              ]?,
                              environment: Hash[::String, ::String]?,
                              model_package_name: ::String?,
                              inference_specification_name: ::String?,
                              multi_model_config: {
                                model_cache_setting: ("Enabled" | "Disabled")?
                              }?
                            },
                          ],
                          ?inference_execution_config: {
                            mode: ("Serial" | "Direct")
                          },
                          ?execution_role_arn: ::String,
                          ?tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ],
                          ?vpc_config: {
                            security_group_ids: Array[::String],
                            subnets: Array[::String]
                          },
                          ?enable_network_isolation: bool
                        ) -> _CreateModelResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelResponseSuccess

      interface _CreateModelBiasJobDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelBiasJobDefinitionResponse]
        def job_definition_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_model_bias_job_definition-instance_method
      def create_model_bias_job_definition: (
                                              job_definition_name: ::String,
                                              ?model_bias_baseline_config: {
                                                baselining_job_name: ::String?,
                                                constraints_resource: {
                                                  s3_uri: ::String?
                                                }?
                                              },
                                              model_bias_app_specification: {
                                                image_uri: ::String,
                                                config_uri: ::String,
                                                environment: Hash[::String, ::String]?
                                              },
                                              model_bias_job_input: {
                                                endpoint_input: {
                                                  endpoint_name: ::String,
                                                  local_path: ::String,
                                                  s3_input_mode: ("Pipe" | "File")?,
                                                  s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                  features_attribute: ::String?,
                                                  inference_attribute: ::String?,
                                                  probability_attribute: ::String?,
                                                  probability_threshold_attribute: ::Float?,
                                                  start_time_offset: ::String?,
                                                  end_time_offset: ::String?,
                                                  exclude_features_attribute: ::String?
                                                }?,
                                                batch_transform_input: {
                                                  data_captured_destination_s3_uri: ::String,
                                                  dataset_format: {
                                                    csv: {
                                                      header: bool?
                                                    }?,
                                                    json: {
                                                      line: bool?
                                                    }?,
                                                    parquet: {
                                                    }?
                                                  },
                                                  local_path: ::String,
                                                  s3_input_mode: ("Pipe" | "File")?,
                                                  s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                  features_attribute: ::String?,
                                                  inference_attribute: ::String?,
                                                  probability_attribute: ::String?,
                                                  probability_threshold_attribute: ::Float?,
                                                  start_time_offset: ::String?,
                                                  end_time_offset: ::String?,
                                                  exclude_features_attribute: ::String?
                                                }?,
                                                ground_truth_s3_input: {
                                                  s3_uri: ::String?
                                                }
                                              },
                                              model_bias_job_output_config: {
                                                monitoring_outputs: Array[
                                                  {
                                                    s3_output: {
                                                      s3_uri: ::String,
                                                      local_path: ::String,
                                                      s3_upload_mode: ("Continuous" | "EndOfJob")?
                                                    }
                                                  },
                                                ],
                                                kms_key_id: ::String?
                                              },
                                              job_resources: {
                                                cluster_config: {
                                                  instance_count: ::Integer,
                                                  instance_type: ("ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge"),
                                                  volume_size_in_gb: ::Integer,
                                                  volume_kms_key_id: ::String?
                                                }
                                              },
                                              ?network_config: {
                                                enable_inter_container_traffic_encryption: bool?,
                                                enable_network_isolation: bool?,
                                                vpc_config: {
                                                  security_group_ids: Array[::String],
                                                  subnets: Array[::String]
                                                }?
                                              },
                                              role_arn: ::String,
                                              ?stopping_condition: {
                                                max_runtime_in_seconds: ::Integer
                                              },
                                              ?tags: Array[
                                                {
                                                  key: ::String,
                                                  value: ::String
                                                },
                                              ]
                                            ) -> _CreateModelBiasJobDefinitionResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelBiasJobDefinitionResponseSuccess

      interface _CreateModelCardResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelCardResponse]
        def model_card_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_model_card-instance_method
      def create_model_card: (
                               model_card_name: ::String,
                               ?security_config: {
                                 kms_key_id: ::String?
                               },
                               content: ::String,
                               model_card_status: ("Draft" | "PendingReview" | "Approved" | "Archived"),
                               ?tags: Array[
                                 {
                                   key: ::String,
                                   value: ::String
                                 },
                               ]
                             ) -> _CreateModelCardResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelCardResponseSuccess

      interface _CreateModelCardExportJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelCardExportJobResponse]
        def model_card_export_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_model_card_export_job-instance_method
      def create_model_card_export_job: (
                                          model_card_name: ::String,
                                          ?model_card_version: ::Integer,
                                          model_card_export_job_name: ::String,
                                          output_config: {
                                            s3_output_path: ::String
                                          }
                                        ) -> _CreateModelCardExportJobResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelCardExportJobResponseSuccess

      interface _CreateModelExplainabilityJobDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelExplainabilityJobDefinitionResponse]
        def job_definition_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_model_explainability_job_definition-instance_method
      def create_model_explainability_job_definition: (
                                                        job_definition_name: ::String,
                                                        ?model_explainability_baseline_config: {
                                                          baselining_job_name: ::String?,
                                                          constraints_resource: {
                                                            s3_uri: ::String?
                                                          }?
                                                        },
                                                        model_explainability_app_specification: {
                                                          image_uri: ::String,
                                                          config_uri: ::String,
                                                          environment: Hash[::String, ::String]?
                                                        },
                                                        model_explainability_job_input: {
                                                          endpoint_input: {
                                                            endpoint_name: ::String,
                                                            local_path: ::String,
                                                            s3_input_mode: ("Pipe" | "File")?,
                                                            s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                            features_attribute: ::String?,
                                                            inference_attribute: ::String?,
                                                            probability_attribute: ::String?,
                                                            probability_threshold_attribute: ::Float?,
                                                            start_time_offset: ::String?,
                                                            end_time_offset: ::String?,
                                                            exclude_features_attribute: ::String?
                                                          }?,
                                                          batch_transform_input: {
                                                            data_captured_destination_s3_uri: ::String,
                                                            dataset_format: {
                                                              csv: {
                                                                header: bool?
                                                              }?,
                                                              json: {
                                                                line: bool?
                                                              }?,
                                                              parquet: {
                                                              }?
                                                            },
                                                            local_path: ::String,
                                                            s3_input_mode: ("Pipe" | "File")?,
                                                            s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                            features_attribute: ::String?,
                                                            inference_attribute: ::String?,
                                                            probability_attribute: ::String?,
                                                            probability_threshold_attribute: ::Float?,
                                                            start_time_offset: ::String?,
                                                            end_time_offset: ::String?,
                                                            exclude_features_attribute: ::String?
                                                          }?
                                                        },
                                                        model_explainability_job_output_config: {
                                                          monitoring_outputs: Array[
                                                            {
                                                              s3_output: {
                                                                s3_uri: ::String,
                                                                local_path: ::String,
                                                                s3_upload_mode: ("Continuous" | "EndOfJob")?
                                                              }
                                                            },
                                                          ],
                                                          kms_key_id: ::String?
                                                        },
                                                        job_resources: {
                                                          cluster_config: {
                                                            instance_count: ::Integer,
                                                            instance_type: ("ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge"),
                                                            volume_size_in_gb: ::Integer,
                                                            volume_kms_key_id: ::String?
                                                          }
                                                        },
                                                        ?network_config: {
                                                          enable_inter_container_traffic_encryption: bool?,
                                                          enable_network_isolation: bool?,
                                                          vpc_config: {
                                                            security_group_ids: Array[::String],
                                                            subnets: Array[::String]
                                                          }?
                                                        },
                                                        role_arn: ::String,
                                                        ?stopping_condition: {
                                                          max_runtime_in_seconds: ::Integer
                                                        },
                                                        ?tags: Array[
                                                          {
                                                            key: ::String,
                                                            value: ::String
                                                          },
                                                        ]
                                                      ) -> _CreateModelExplainabilityJobDefinitionResponseSuccess
                                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelExplainabilityJobDefinitionResponseSuccess

      interface _CreateModelPackageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelPackageOutput]
        def model_package_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_model_package-instance_method
      def create_model_package: (
                                  ?model_package_name: ::String,
                                  ?model_package_group_name: ::String,
                                  ?model_package_description: ::String,
                                  ?inference_specification: {
                                    containers: Array[
                                      {
                                        container_hostname: ::String?,
                                        image: ::String,
                                        image_digest: ::String?,
                                        model_data_url: ::String?,
                                        model_data_source: {
                                          s3_data_source: {
                                            s3_uri: ::String,
                                            s3_data_type: ("S3Prefix" | "S3Object"),
                                            compression_type: ("None" | "Gzip"),
                                            model_access_config: {
                                              accept_eula: bool
                                            }?,
                                            hub_access_config: {
                                              hub_content_arn: ::String
                                            }?,
                                            manifest_s3_uri: ::String?
                                          }?
                                        }?,
                                        product_id: ::String?,
                                        environment: Hash[::String, ::String]?,
                                        model_input: {
                                          data_input_config: ::String
                                        }?,
                                        framework: ::String?,
                                        framework_version: ::String?,
                                        nearest_model_name: ::String?,
                                        additional_s3_data_source: {
                                          s3_data_type: ("S3Object" | "S3Prefix"),
                                          s3_uri: ::String,
                                          compression_type: ("None" | "Gzip")?
                                        }?
                                      },
                                    ],
                                    supported_transform_instance_types: Array[("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge")]?,
                                    supported_realtime_inference_instance_types: Array[("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.12xlarge" | "ml.m5d.24xlarge" | "ml.c4.large" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.large" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.12xlarge" | "ml.r5.24xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.12xlarge" | "ml.r5d.24xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.dl1.24xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.p4d.24xlarge" | "ml.c7g.large" | "ml.c7g.xlarge" | "ml.c7g.2xlarge" | "ml.c7g.4xlarge" | "ml.c7g.8xlarge" | "ml.c7g.12xlarge" | "ml.c7g.16xlarge" | "ml.m6g.large" | "ml.m6g.xlarge" | "ml.m6g.2xlarge" | "ml.m6g.4xlarge" | "ml.m6g.8xlarge" | "ml.m6g.12xlarge" | "ml.m6g.16xlarge" | "ml.m6gd.large" | "ml.m6gd.xlarge" | "ml.m6gd.2xlarge" | "ml.m6gd.4xlarge" | "ml.m6gd.8xlarge" | "ml.m6gd.12xlarge" | "ml.m6gd.16xlarge" | "ml.c6g.large" | "ml.c6g.xlarge" | "ml.c6g.2xlarge" | "ml.c6g.4xlarge" | "ml.c6g.8xlarge" | "ml.c6g.12xlarge" | "ml.c6g.16xlarge" | "ml.c6gd.large" | "ml.c6gd.xlarge" | "ml.c6gd.2xlarge" | "ml.c6gd.4xlarge" | "ml.c6gd.8xlarge" | "ml.c6gd.12xlarge" | "ml.c6gd.16xlarge" | "ml.c6gn.large" | "ml.c6gn.xlarge" | "ml.c6gn.2xlarge" | "ml.c6gn.4xlarge" | "ml.c6gn.8xlarge" | "ml.c6gn.12xlarge" | "ml.c6gn.16xlarge" | "ml.r6g.large" | "ml.r6g.xlarge" | "ml.r6g.2xlarge" | "ml.r6g.4xlarge" | "ml.r6g.8xlarge" | "ml.r6g.12xlarge" | "ml.r6g.16xlarge" | "ml.r6gd.large" | "ml.r6gd.xlarge" | "ml.r6gd.2xlarge" | "ml.r6gd.4xlarge" | "ml.r6gd.8xlarge" | "ml.r6gd.12xlarge" | "ml.r6gd.16xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.inf2.xlarge" | "ml.inf2.8xlarge" | "ml.inf2.24xlarge" | "ml.inf2.48xlarge" | "ml.p5.48xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge")]?,
                                    supported_content_types: Array[::String]?,
                                    supported_response_mime_types: Array[::String]?
                                  },
                                  ?validation_specification: {
                                    validation_role: ::String,
                                    validation_profiles: Array[
                                      {
                                        profile_name: ::String,
                                        transform_job_definition: {
                                          max_concurrent_transforms: ::Integer?,
                                          max_payload_in_mb: ::Integer?,
                                          batch_strategy: ("MultiRecord" | "SingleRecord")?,
                                          environment: Hash[::String, ::String]?,
                                          transform_input: {
                                            data_source: {
                                              s3_data_source: {
                                                s3_data_type: ("ManifestFile" | "S3Prefix" | "AugmentedManifestFile"),
                                                s3_uri: ::String
                                              }
                                            },
                                            content_type: ::String?,
                                            compression_type: ("None" | "Gzip")?,
                                            split_type: ("None" | "Line" | "RecordIO" | "TFRecord")?
                                          },
                                          transform_output: {
                                            s3_output_path: ::String,
                                            accept: ::String?,
                                            assemble_with: ("None" | "Line")?,
                                            kms_key_id: ::String?
                                          },
                                          transform_resources: {
                                            instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge"),
                                            instance_count: ::Integer,
                                            volume_kms_key_id: ::String?
                                          }
                                        }
                                      },
                                    ]
                                  },
                                  ?source_algorithm_specification: {
                                    source_algorithms: Array[
                                      {
                                        model_data_url: ::String?,
                                        model_data_source: {
                                          s3_data_source: {
                                            s3_uri: ::String,
                                            s3_data_type: ("S3Prefix" | "S3Object"),
                                            compression_type: ("None" | "Gzip"),
                                            model_access_config: {
                                              accept_eula: bool
                                            }?,
                                            hub_access_config: {
                                              hub_content_arn: ::String
                                            }?,
                                            manifest_s3_uri: ::String?
                                          }?
                                        }?,
                                        algorithm_name: ::String
                                      },
                                    ]
                                  },
                                  ?certify_for_marketplace: bool,
                                  ?tags: Array[
                                    {
                                      key: ::String,
                                      value: ::String
                                    },
                                  ],
                                  ?model_approval_status: ("Approved" | "Rejected" | "PendingManualApproval"),
                                  ?metadata_properties: {
                                    commit_id: ::String?,
                                    repository: ::String?,
                                    generated_by: ::String?,
                                    project_id: ::String?
                                  },
                                  ?model_metrics: {
                                    model_quality: {
                                      statistics: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?,
                                      constraints: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?
                                    }?,
                                    model_data_quality: {
                                      statistics: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?,
                                      constraints: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?
                                    }?,
                                    bias: {
                                      report: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?,
                                      pre_training_report: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?,
                                      post_training_report: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?
                                    }?,
                                    explainability: {
                                      report: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?
                                    }?
                                  },
                                  ?client_token: ::String,
                                  ?domain: ::String,
                                  ?task: ::String,
                                  ?sample_payload_url: ::String,
                                  ?customer_metadata_properties: Hash[::String, ::String],
                                  ?drift_check_baselines: {
                                    bias: {
                                      config_file: {
                                        content_type: ::String?,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?,
                                      pre_training_constraints: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?,
                                      post_training_constraints: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?
                                    }?,
                                    explainability: {
                                      constraints: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?,
                                      config_file: {
                                        content_type: ::String?,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?
                                    }?,
                                    model_quality: {
                                      statistics: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?,
                                      constraints: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?
                                    }?,
                                    model_data_quality: {
                                      statistics: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?,
                                      constraints: {
                                        content_type: ::String,
                                        content_digest: ::String?,
                                        s3_uri: ::String
                                      }?
                                    }?
                                  },
                                  ?additional_inference_specifications: Array[
                                    {
                                      name: ::String,
                                      description: ::String?,
                                      containers: Array[
                                        {
                                          container_hostname: ::String?,
                                          image: ::String,
                                          image_digest: ::String?,
                                          model_data_url: ::String?,
                                          model_data_source: {
                                            s3_data_source: {
                                              s3_uri: ::String,
                                              s3_data_type: ("S3Prefix" | "S3Object"),
                                              compression_type: ("None" | "Gzip"),
                                              model_access_config: {
                                                accept_eula: bool
                                              }?,
                                              hub_access_config: {
                                                hub_content_arn: ::String
                                              }?,
                                              manifest_s3_uri: ::String?
                                            }?
                                          }?,
                                          product_id: ::String?,
                                          environment: Hash[::String, ::String]?,
                                          model_input: {
                                            data_input_config: ::String
                                          }?,
                                          framework: ::String?,
                                          framework_version: ::String?,
                                          nearest_model_name: ::String?,
                                          additional_s3_data_source: {
                                            s3_data_type: ("S3Object" | "S3Prefix"),
                                            s3_uri: ::String,
                                            compression_type: ("None" | "Gzip")?
                                          }?
                                        },
                                      ],
                                      supported_transform_instance_types: Array[("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge")]?,
                                      supported_realtime_inference_instance_types: Array[("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.12xlarge" | "ml.m5d.24xlarge" | "ml.c4.large" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.large" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.12xlarge" | "ml.r5.24xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.12xlarge" | "ml.r5d.24xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.dl1.24xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.p4d.24xlarge" | "ml.c7g.large" | "ml.c7g.xlarge" | "ml.c7g.2xlarge" | "ml.c7g.4xlarge" | "ml.c7g.8xlarge" | "ml.c7g.12xlarge" | "ml.c7g.16xlarge" | "ml.m6g.large" | "ml.m6g.xlarge" | "ml.m6g.2xlarge" | "ml.m6g.4xlarge" | "ml.m6g.8xlarge" | "ml.m6g.12xlarge" | "ml.m6g.16xlarge" | "ml.m6gd.large" | "ml.m6gd.xlarge" | "ml.m6gd.2xlarge" | "ml.m6gd.4xlarge" | "ml.m6gd.8xlarge" | "ml.m6gd.12xlarge" | "ml.m6gd.16xlarge" | "ml.c6g.large" | "ml.c6g.xlarge" | "ml.c6g.2xlarge" | "ml.c6g.4xlarge" | "ml.c6g.8xlarge" | "ml.c6g.12xlarge" | "ml.c6g.16xlarge" | "ml.c6gd.large" | "ml.c6gd.xlarge" | "ml.c6gd.2xlarge" | "ml.c6gd.4xlarge" | "ml.c6gd.8xlarge" | "ml.c6gd.12xlarge" | "ml.c6gd.16xlarge" | "ml.c6gn.large" | "ml.c6gn.xlarge" | "ml.c6gn.2xlarge" | "ml.c6gn.4xlarge" | "ml.c6gn.8xlarge" | "ml.c6gn.12xlarge" | "ml.c6gn.16xlarge" | "ml.r6g.large" | "ml.r6g.xlarge" | "ml.r6g.2xlarge" | "ml.r6g.4xlarge" | "ml.r6g.8xlarge" | "ml.r6g.12xlarge" | "ml.r6g.16xlarge" | "ml.r6gd.large" | "ml.r6gd.xlarge" | "ml.r6gd.2xlarge" | "ml.r6gd.4xlarge" | "ml.r6gd.8xlarge" | "ml.r6gd.12xlarge" | "ml.r6gd.16xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.inf2.xlarge" | "ml.inf2.8xlarge" | "ml.inf2.24xlarge" | "ml.inf2.48xlarge" | "ml.p5.48xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge")]?,
                                      supported_content_types: Array[::String]?,
                                      supported_response_mime_types: Array[::String]?
                                    },
                                  ],
                                  ?skip_model_validation: ("All" | "None"),
                                  ?source_uri: ::String,
                                  ?security_config: {
                                    kms_key_id: ::String
                                  },
                                  ?model_card: {
                                    model_card_content: ::String?,
                                    model_card_status: ("Draft" | "PendingReview" | "Approved" | "Archived")?
                                  }
                                ) -> _CreateModelPackageResponseSuccess
                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelPackageResponseSuccess

      interface _CreateModelPackageGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelPackageGroupOutput]
        def model_package_group_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_model_package_group-instance_method
      def create_model_package_group: (
                                        model_package_group_name: ::String,
                                        ?model_package_group_description: ::String,
                                        ?tags: Array[
                                          {
                                            key: ::String,
                                            value: ::String
                                          },
                                        ]
                                      ) -> _CreateModelPackageGroupResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelPackageGroupResponseSuccess

      interface _CreateModelQualityJobDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelQualityJobDefinitionResponse]
        def job_definition_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_model_quality_job_definition-instance_method
      def create_model_quality_job_definition: (
                                                 job_definition_name: ::String,
                                                 ?model_quality_baseline_config: {
                                                   baselining_job_name: ::String?,
                                                   constraints_resource: {
                                                     s3_uri: ::String?
                                                   }?
                                                 },
                                                 model_quality_app_specification: {
                                                   image_uri: ::String,
                                                   container_entrypoint: Array[::String]?,
                                                   container_arguments: Array[::String]?,
                                                   record_preprocessor_source_uri: ::String?,
                                                   post_analytics_processor_source_uri: ::String?,
                                                   problem_type: ("BinaryClassification" | "MulticlassClassification" | "Regression")?,
                                                   environment: Hash[::String, ::String]?
                                                 },
                                                 model_quality_job_input: {
                                                   endpoint_input: {
                                                     endpoint_name: ::String,
                                                     local_path: ::String,
                                                     s3_input_mode: ("Pipe" | "File")?,
                                                     s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                     features_attribute: ::String?,
                                                     inference_attribute: ::String?,
                                                     probability_attribute: ::String?,
                                                     probability_threshold_attribute: ::Float?,
                                                     start_time_offset: ::String?,
                                                     end_time_offset: ::String?,
                                                     exclude_features_attribute: ::String?
                                                   }?,
                                                   batch_transform_input: {
                                                     data_captured_destination_s3_uri: ::String,
                                                     dataset_format: {
                                                       csv: {
                                                         header: bool?
                                                       }?,
                                                       json: {
                                                         line: bool?
                                                       }?,
                                                       parquet: {
                                                       }?
                                                     },
                                                     local_path: ::String,
                                                     s3_input_mode: ("Pipe" | "File")?,
                                                     s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                     features_attribute: ::String?,
                                                     inference_attribute: ::String?,
                                                     probability_attribute: ::String?,
                                                     probability_threshold_attribute: ::Float?,
                                                     start_time_offset: ::String?,
                                                     end_time_offset: ::String?,
                                                     exclude_features_attribute: ::String?
                                                   }?,
                                                   ground_truth_s3_input: {
                                                     s3_uri: ::String?
                                                   }
                                                 },
                                                 model_quality_job_output_config: {
                                                   monitoring_outputs: Array[
                                                     {
                                                       s3_output: {
                                                         s3_uri: ::String,
                                                         local_path: ::String,
                                                         s3_upload_mode: ("Continuous" | "EndOfJob")?
                                                       }
                                                     },
                                                   ],
                                                   kms_key_id: ::String?
                                                 },
                                                 job_resources: {
                                                   cluster_config: {
                                                     instance_count: ::Integer,
                                                     instance_type: ("ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge"),
                                                     volume_size_in_gb: ::Integer,
                                                     volume_kms_key_id: ::String?
                                                   }
                                                 },
                                                 ?network_config: {
                                                   enable_inter_container_traffic_encryption: bool?,
                                                   enable_network_isolation: bool?,
                                                   vpc_config: {
                                                     security_group_ids: Array[::String],
                                                     subnets: Array[::String]
                                                   }?
                                                 },
                                                 role_arn: ::String,
                                                 ?stopping_condition: {
                                                   max_runtime_in_seconds: ::Integer
                                                 },
                                                 ?tags: Array[
                                                   {
                                                     key: ::String,
                                                     value: ::String
                                                   },
                                                 ]
                                               ) -> _CreateModelQualityJobDefinitionResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelQualityJobDefinitionResponseSuccess

      interface _CreateMonitoringScheduleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateMonitoringScheduleResponse]
        def monitoring_schedule_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_monitoring_schedule-instance_method
      def create_monitoring_schedule: (
                                        monitoring_schedule_name: ::String,
                                        monitoring_schedule_config: {
                                          schedule_config: {
                                            schedule_expression: ::String,
                                            data_analysis_start_time: ::String?,
                                            data_analysis_end_time: ::String?
                                          }?,
                                          monitoring_job_definition: {
                                            baseline_config: {
                                              baselining_job_name: ::String?,
                                              constraints_resource: {
                                                s3_uri: ::String?
                                              }?,
                                              statistics_resource: {
                                                s3_uri: ::String?
                                              }?
                                            }?,
                                            monitoring_inputs: Array[
                                              {
                                                endpoint_input: {
                                                  endpoint_name: ::String,
                                                  local_path: ::String,
                                                  s3_input_mode: ("Pipe" | "File")?,
                                                  s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                  features_attribute: ::String?,
                                                  inference_attribute: ::String?,
                                                  probability_attribute: ::String?,
                                                  probability_threshold_attribute: ::Float?,
                                                  start_time_offset: ::String?,
                                                  end_time_offset: ::String?,
                                                  exclude_features_attribute: ::String?
                                                }?,
                                                batch_transform_input: {
                                                  data_captured_destination_s3_uri: ::String,
                                                  dataset_format: {
                                                    csv: {
                                                      header: bool?
                                                    }?,
                                                    json: {
                                                      line: bool?
                                                    }?,
                                                    parquet: {
                                                    }?
                                                  },
                                                  local_path: ::String,
                                                  s3_input_mode: ("Pipe" | "File")?,
                                                  s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                  features_attribute: ::String?,
                                                  inference_attribute: ::String?,
                                                  probability_attribute: ::String?,
                                                  probability_threshold_attribute: ::Float?,
                                                  start_time_offset: ::String?,
                                                  end_time_offset: ::String?,
                                                  exclude_features_attribute: ::String?
                                                }?
                                              },
                                            ],
                                            monitoring_output_config: {
                                              monitoring_outputs: Array[
                                                {
                                                  s3_output: {
                                                    s3_uri: ::String,
                                                    local_path: ::String,
                                                    s3_upload_mode: ("Continuous" | "EndOfJob")?
                                                  }
                                                },
                                              ],
                                              kms_key_id: ::String?
                                            },
                                            monitoring_resources: {
                                              cluster_config: {
                                                instance_count: ::Integer,
                                                instance_type: ("ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge"),
                                                volume_size_in_gb: ::Integer,
                                                volume_kms_key_id: ::String?
                                              }
                                            },
                                            monitoring_app_specification: {
                                              image_uri: ::String,
                                              container_entrypoint: Array[::String]?,
                                              container_arguments: Array[::String]?,
                                              record_preprocessor_source_uri: ::String?,
                                              post_analytics_processor_source_uri: ::String?
                                            },
                                            stopping_condition: {
                                              max_runtime_in_seconds: ::Integer
                                            }?,
                                            environment: Hash[::String, ::String]?,
                                            network_config: {
                                              enable_inter_container_traffic_encryption: bool?,
                                              enable_network_isolation: bool?,
                                              vpc_config: {
                                                security_group_ids: Array[::String],
                                                subnets: Array[::String]
                                              }?
                                            }?,
                                            role_arn: ::String
                                          }?,
                                          monitoring_job_definition_name: ::String?,
                                          monitoring_type: ("DataQuality" | "ModelQuality" | "ModelBias" | "ModelExplainability")?
                                        },
                                        ?tags: Array[
                                          {
                                            key: ::String,
                                            value: ::String
                                          },
                                        ]
                                      ) -> _CreateMonitoringScheduleResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateMonitoringScheduleResponseSuccess

      interface _CreateNotebookInstanceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateNotebookInstanceOutput]
        def notebook_instance_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_notebook_instance-instance_method
      def create_notebook_instance: (
                                      notebook_instance_name: ::String,
                                      instance_type: ("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge"),
                                      ?subnet_id: ::String,
                                      ?security_group_ids: Array[::String],
                                      role_arn: ::String,
                                      ?kms_key_id: ::String,
                                      ?tags: Array[
                                        {
                                          key: ::String,
                                          value: ::String
                                        },
                                      ],
                                      ?lifecycle_config_name: ::String,
                                      ?direct_internet_access: ("Enabled" | "Disabled"),
                                      ?volume_size_in_gb: ::Integer,
                                      ?accelerator_types: Array[("ml.eia1.medium" | "ml.eia1.large" | "ml.eia1.xlarge" | "ml.eia2.medium" | "ml.eia2.large" | "ml.eia2.xlarge")],
                                      ?default_code_repository: ::String,
                                      ?additional_code_repositories: Array[::String],
                                      ?root_access: ("Enabled" | "Disabled"),
                                      ?platform_identifier: ::String,
                                      ?instance_metadata_service_configuration: {
                                        minimum_instance_metadata_service_version: ::String
                                      }
                                    ) -> _CreateNotebookInstanceResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateNotebookInstanceResponseSuccess

      interface _CreateNotebookInstanceLifecycleConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateNotebookInstanceLifecycleConfigOutput]
        def notebook_instance_lifecycle_config_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_notebook_instance_lifecycle_config-instance_method
      def create_notebook_instance_lifecycle_config: (
                                                       notebook_instance_lifecycle_config_name: ::String,
                                                       ?on_create: Array[
                                                         {
                                                           content: ::String?
                                                         },
                                                       ],
                                                       ?on_start: Array[
                                                         {
                                                           content: ::String?
                                                         },
                                                       ]
                                                     ) -> _CreateNotebookInstanceLifecycleConfigResponseSuccess
                                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateNotebookInstanceLifecycleConfigResponseSuccess

      interface _CreateOptimizationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateOptimizationJobResponse]
        def optimization_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_optimization_job-instance_method
      def create_optimization_job: (
                                     optimization_job_name: ::String,
                                     role_arn: ::String,
                                     model_source: {
                                       s3: {
                                         s3_uri: ::String?,
                                         model_access_config: {
                                           accept_eula: bool
                                         }?
                                       }?
                                     },
                                     deployment_instance_type: ("ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.inf2.xlarge" | "ml.inf2.8xlarge" | "ml.inf2.24xlarge" | "ml.inf2.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge"),
                                     ?optimization_environment: Hash[::String, ::String],
                                     optimization_configs: Array[
                                       {
                                         model_quantization_config: {
                                           image: ::String?,
                                           override_environment: Hash[::String, ::String]?
                                         }?,
                                         model_compilation_config: {
                                           image: ::String?,
                                           override_environment: Hash[::String, ::String]?
                                         }?
                                       },
                                     ],
                                     output_config: {
                                       kms_key_id: ::String?,
                                       s3_output_location: ::String
                                     },
                                     stopping_condition: {
                                       max_runtime_in_seconds: ::Integer?,
                                       max_wait_time_in_seconds: ::Integer?,
                                       max_pending_time_in_seconds: ::Integer?
                                     },
                                     ?tags: Array[
                                       {
                                         key: ::String,
                                         value: ::String
                                       },
                                     ],
                                     ?vpc_config: {
                                       security_group_ids: Array[::String],
                                       subnets: Array[::String]
                                     }
                                   ) -> _CreateOptimizationJobResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateOptimizationJobResponseSuccess

      interface _CreatePipelineResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreatePipelineResponse]
        def pipeline_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_pipeline-instance_method
      def create_pipeline: (
                             pipeline_name: ::String,
                             ?pipeline_display_name: ::String,
                             ?pipeline_definition: ::String,
                             ?pipeline_definition_s3_location: {
                               bucket: ::String,
                               object_key: ::String,
                               version_id: ::String?
                             },
                             ?pipeline_description: ::String,
                             client_request_token: ::String,
                             role_arn: ::String,
                             ?tags: Array[
                               {
                                 key: ::String,
                                 value: ::String
                               },
                             ],
                             ?parallelism_configuration: {
                               max_parallel_execution_steps: ::Integer
                             }
                           ) -> _CreatePipelineResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreatePipelineResponseSuccess

      interface _CreatePresignedDomainUrlResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreatePresignedDomainUrlResponse]
        def authorized_url: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_presigned_domain_url-instance_method
      def create_presigned_domain_url: (
                                         domain_id: ::String,
                                         user_profile_name: ::String,
                                         ?session_expiration_duration_in_seconds: ::Integer,
                                         ?expires_in_seconds: ::Integer,
                                         ?space_name: ::String,
                                         ?landing_uri: ::String
                                       ) -> _CreatePresignedDomainUrlResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreatePresignedDomainUrlResponseSuccess

      interface _CreatePresignedMlflowTrackingServerUrlResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreatePresignedMlflowTrackingServerUrlResponse]
        def authorized_url: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_presigned_mlflow_tracking_server_url-instance_method
      def create_presigned_mlflow_tracking_server_url: (
                                                         tracking_server_name: ::String,
                                                         ?expires_in_seconds: ::Integer,
                                                         ?session_expiration_duration_in_seconds: ::Integer
                                                       ) -> _CreatePresignedMlflowTrackingServerUrlResponseSuccess
                                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreatePresignedMlflowTrackingServerUrlResponseSuccess

      interface _CreatePresignedNotebookInstanceUrlResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreatePresignedNotebookInstanceUrlOutput]
        def authorized_url: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_presigned_notebook_instance_url-instance_method
      def create_presigned_notebook_instance_url: (
                                                    notebook_instance_name: ::String,
                                                    ?session_expiration_duration_in_seconds: ::Integer
                                                  ) -> _CreatePresignedNotebookInstanceUrlResponseSuccess
                                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreatePresignedNotebookInstanceUrlResponseSuccess

      interface _CreateProcessingJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateProcessingJobResponse]
        def processing_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_processing_job-instance_method
      def create_processing_job: (
                                   ?processing_inputs: Array[
                                     {
                                       input_name: ::String,
                                       app_managed: bool?,
                                       s3_input: {
                                         s3_uri: ::String,
                                         local_path: ::String?,
                                         s3_data_type: ("ManifestFile" | "S3Prefix"),
                                         s3_input_mode: ("Pipe" | "File")?,
                                         s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                         s3_compression_type: ("None" | "Gzip")?
                                       }?,
                                       dataset_definition: {
                                         athena_dataset_definition: {
                                           catalog: ::String,
                                           database: ::String,
                                           query_string: ::String,
                                           work_group: ::String?,
                                           output_s3_uri: ::String,
                                           kms_key_id: ::String?,
                                           output_format: ("PARQUET" | "ORC" | "AVRO" | "JSON" | "TEXTFILE"),
                                           output_compression: ("GZIP" | "SNAPPY" | "ZLIB")?
                                         }?,
                                         redshift_dataset_definition: {
                                           cluster_id: ::String,
                                           database: ::String,
                                           db_user: ::String,
                                           query_string: ::String,
                                           cluster_role_arn: ::String,
                                           output_s3_uri: ::String,
                                           kms_key_id: ::String?,
                                           output_format: ("PARQUET" | "CSV"),
                                           output_compression: ("None" | "GZIP" | "BZIP2" | "ZSTD" | "SNAPPY")?
                                         }?,
                                         local_path: ::String?,
                                         data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                         input_mode: ("Pipe" | "File")?
                                       }?
                                     },
                                   ],
                                   ?processing_output_config: {
                                     outputs: Array[
                                       {
                                         output_name: ::String,
                                         s3_output: {
                                           s3_uri: ::String,
                                           local_path: ::String?,
                                           s3_upload_mode: ("Continuous" | "EndOfJob")
                                         }?,
                                         feature_store_output: {
                                           feature_group_name: ::String
                                         }?,
                                         app_managed: bool?
                                       },
                                     ],
                                     kms_key_id: ::String?
                                   },
                                   processing_job_name: ::String,
                                   processing_resources: {
                                     cluster_config: {
                                       instance_count: ::Integer,
                                       instance_type: ("ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge"),
                                       volume_size_in_gb: ::Integer,
                                       volume_kms_key_id: ::String?
                                     }
                                   },
                                   ?stopping_condition: {
                                     max_runtime_in_seconds: ::Integer
                                   },
                                   app_specification: {
                                     image_uri: ::String,
                                     container_entrypoint: Array[::String]?,
                                     container_arguments: Array[::String]?
                                   },
                                   ?environment: Hash[::String, ::String],
                                   ?network_config: {
                                     enable_inter_container_traffic_encryption: bool?,
                                     enable_network_isolation: bool?,
                                     vpc_config: {
                                       security_group_ids: Array[::String],
                                       subnets: Array[::String]
                                     }?
                                   },
                                   role_arn: ::String,
                                   ?tags: Array[
                                     {
                                       key: ::String,
                                       value: ::String
                                     },
                                   ],
                                   ?experiment_config: {
                                     experiment_name: ::String?,
                                     trial_name: ::String?,
                                     trial_component_display_name: ::String?,
                                     run_name: ::String?
                                   }
                                 ) -> _CreateProcessingJobResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateProcessingJobResponseSuccess

      interface _CreateProjectResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateProjectOutput]
        def project_arn: () -> ::String
        def project_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_project-instance_method
      def create_project: (
                            project_name: ::String,
                            ?project_description: ::String,
                            service_catalog_provisioning_details: {
                              product_id: ::String,
                              provisioning_artifact_id: ::String?,
                              path_id: ::String?,
                              provisioning_parameters: Array[
                                {
                                  key: ::String?,
                                  value: ::String?
                                },
                              ]?
                            },
                            ?tags: Array[
                              {
                                key: ::String,
                                value: ::String
                              },
                            ]
                          ) -> _CreateProjectResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateProjectResponseSuccess

      interface _CreateSpaceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateSpaceResponse]
        def space_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_space-instance_method
      def create_space: (
                          domain_id: ::String,
                          space_name: ::String,
                          ?tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ],
                          ?space_settings: {
                            jupyter_server_app_settings: {
                              default_resource_spec: {
                                sage_maker_image_arn: ::String?,
                                sage_maker_image_version_arn: ::String?,
                                sage_maker_image_version_alias: ::String?,
                                instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                lifecycle_config_arn: ::String?
                              }?,
                              lifecycle_config_arns: Array[::String]?,
                              code_repositories: Array[
                                {
                                  repository_url: ::String
                                },
                              ]?
                            }?,
                            kernel_gateway_app_settings: {
                              default_resource_spec: {
                                sage_maker_image_arn: ::String?,
                                sage_maker_image_version_arn: ::String?,
                                sage_maker_image_version_alias: ::String?,
                                instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                lifecycle_config_arn: ::String?
                              }?,
                              custom_images: Array[
                                {
                                  image_name: ::String,
                                  image_version_number: ::Integer?,
                                  app_image_config_name: ::String
                                },
                              ]?,
                              lifecycle_config_arns: Array[::String]?
                            }?,
                            code_editor_app_settings: {
                              default_resource_spec: {
                                sage_maker_image_arn: ::String?,
                                sage_maker_image_version_arn: ::String?,
                                sage_maker_image_version_alias: ::String?,
                                instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                lifecycle_config_arn: ::String?
                              }?,
                              app_lifecycle_management: {
                                idle_settings: {
                                  idle_timeout_in_minutes: ::Integer?
                                }?
                              }?
                            }?,
                            jupyter_lab_app_settings: {
                              default_resource_spec: {
                                sage_maker_image_arn: ::String?,
                                sage_maker_image_version_arn: ::String?,
                                sage_maker_image_version_alias: ::String?,
                                instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                lifecycle_config_arn: ::String?
                              }?,
                              code_repositories: Array[
                                {
                                  repository_url: ::String
                                },
                              ]?,
                              app_lifecycle_management: {
                                idle_settings: {
                                  idle_timeout_in_minutes: ::Integer?
                                }?
                              }?
                            }?,
                            app_type: ("JupyterServer" | "KernelGateway" | "DetailedProfiler" | "TensorBoard" | "CodeEditor" | "JupyterLab" | "RStudioServerPro" | "RSessionGateway" | "Canvas")?,
                            space_storage_settings: {
                              ebs_storage_settings: {
                                ebs_volume_size_in_gb: ::Integer
                              }?
                            }?,
                            custom_file_systems: Array[
                              {
                                efs_file_system: {
                                  file_system_id: ::String
                                }?
                              },
                            ]?
                          },
                          ?ownership_settings: {
                            owner_user_profile_name: ::String
                          },
                          ?space_sharing_settings: {
                            sharing_type: ("Private" | "Shared")
                          },
                          ?space_display_name: ::String
                        ) -> _CreateSpaceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateSpaceResponseSuccess

      interface _CreateStudioLifecycleConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateStudioLifecycleConfigResponse]
        def studio_lifecycle_config_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_studio_lifecycle_config-instance_method
      def create_studio_lifecycle_config: (
                                            studio_lifecycle_config_name: ::String,
                                            studio_lifecycle_config_content: ::String,
                                            studio_lifecycle_config_app_type: ("JupyterServer" | "KernelGateway" | "CodeEditor" | "JupyterLab"),
                                            ?tags: Array[
                                              {
                                                key: ::String,
                                                value: ::String
                                              },
                                            ]
                                          ) -> _CreateStudioLifecycleConfigResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateStudioLifecycleConfigResponseSuccess

      interface _CreateTrainingJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateTrainingJobResponse]
        def training_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_training_job-instance_method
      def create_training_job: (
                                 training_job_name: ::String,
                                 ?hyper_parameters: Hash[::String, ::String],
                                 algorithm_specification: {
                                   training_image: ::String?,
                                   algorithm_name: ::String?,
                                   training_input_mode: ("Pipe" | "File" | "FastFile"),
                                   metric_definitions: Array[
                                     {
                                       name: ::String,
                                       regex: ::String
                                     },
                                   ]?,
                                   enable_sage_maker_metrics_time_series: bool?,
                                   container_entrypoint: Array[::String]?,
                                   container_arguments: Array[::String]?,
                                   training_image_config: {
                                     training_repository_access_mode: ("Platform" | "Vpc"),
                                     training_repository_auth_config: {
                                       training_repository_credentials_provider_arn: ::String
                                     }?
                                   }?
                                 },
                                 role_arn: ::String,
                                 ?input_data_config: Array[
                                   {
                                     channel_name: ::String,
                                     data_source: {
                                       s3_data_source: {
                                         s3_data_type: ("ManifestFile" | "S3Prefix" | "AugmentedManifestFile"),
                                         s3_uri: ::String,
                                         s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                         attribute_names: Array[::String]?,
                                         instance_group_names: Array[::String]?
                                       }?,
                                       file_system_data_source: {
                                         file_system_id: ::String,
                                         file_system_access_mode: ("rw" | "ro"),
                                         file_system_type: ("EFS" | "FSxLustre"),
                                         directory_path: ::String
                                       }?
                                     },
                                     content_type: ::String?,
                                     compression_type: ("None" | "Gzip")?,
                                     record_wrapper_type: ("None" | "RecordIO")?,
                                     input_mode: ("Pipe" | "File" | "FastFile")?,
                                     shuffle_config: {
                                       seed: ::Integer
                                     }?
                                   },
                                 ],
                                 output_data_config: {
                                   kms_key_id: ::String?,
                                   s3_output_path: ::String,
                                   compression_type: ("GZIP" | "NONE")?
                                 },
                                 resource_config: {
                                   instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge")?,
                                   instance_count: ::Integer?,
                                   volume_size_in_gb: ::Integer,
                                   volume_kms_key_id: ::String?,
                                   keep_alive_period_in_seconds: ::Integer?,
                                   instance_groups: Array[
                                     {
                                       instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5n.xlarge" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.8xlarge" | "ml.c6i.4xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge"),
                                       instance_count: ::Integer,
                                       instance_group_name: ::String
                                     },
                                   ]?
                                 },
                                 ?vpc_config: {
                                   security_group_ids: Array[::String],
                                   subnets: Array[::String]
                                 },
                                 stopping_condition: {
                                   max_runtime_in_seconds: ::Integer?,
                                   max_wait_time_in_seconds: ::Integer?,
                                   max_pending_time_in_seconds: ::Integer?
                                 },
                                 ?tags: Array[
                                   {
                                     key: ::String,
                                     value: ::String
                                   },
                                 ],
                                 ?enable_network_isolation: bool,
                                 ?enable_inter_container_traffic_encryption: bool,
                                 ?enable_managed_spot_training: bool,
                                 ?checkpoint_config: {
                                   s3_uri: ::String,
                                   local_path: ::String?
                                 },
                                 ?debug_hook_config: {
                                   local_path: ::String?,
                                   s3_output_path: ::String,
                                   hook_parameters: Hash[::String, ::String]?,
                                   collection_configurations: Array[
                                     {
                                       collection_name: ::String?,
                                       collection_parameters: Hash[::String, ::String]?
                                     },
                                   ]?
                                 },
                                 ?debug_rule_configurations: Array[
                                   {
                                     rule_configuration_name: ::String,
                                     local_path: ::String?,
                                     s3_output_path: ::String?,
                                     rule_evaluator_image: ::String,
                                     instance_type: ("ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge")?,
                                     volume_size_in_gb: ::Integer?,
                                     rule_parameters: Hash[::String, ::String]?
                                   },
                                 ],
                                 ?tensor_board_output_config: {
                                   local_path: ::String?,
                                   s3_output_path: ::String
                                 },
                                 ?experiment_config: {
                                   experiment_name: ::String?,
                                   trial_name: ::String?,
                                   trial_component_display_name: ::String?,
                                   run_name: ::String?
                                 },
                                 ?profiler_config: {
                                   s3_output_path: ::String?,
                                   profiling_interval_in_milliseconds: ::Integer?,
                                   profiling_parameters: Hash[::String, ::String]?,
                                   disable_profiler: bool?
                                 },
                                 ?profiler_rule_configurations: Array[
                                   {
                                     rule_configuration_name: ::String,
                                     local_path: ::String?,
                                     s3_output_path: ::String?,
                                     rule_evaluator_image: ::String,
                                     instance_type: ("ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge")?,
                                     volume_size_in_gb: ::Integer?,
                                     rule_parameters: Hash[::String, ::String]?
                                   },
                                 ],
                                 ?environment: Hash[::String, ::String],
                                 ?retry_strategy: {
                                   maximum_retry_attempts: ::Integer
                                 },
                                 ?remote_debug_config: {
                                   enable_remote_debug: bool?
                                 },
                                 ?infra_check_config: {
                                   enable_infra_check: bool?
                                 },
                                 ?session_chaining_config: {
                                   enable_session_tag_chaining: bool?
                                 }
                               ) -> _CreateTrainingJobResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateTrainingJobResponseSuccess

      interface _CreateTransformJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateTransformJobResponse]
        def transform_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_transform_job-instance_method
      def create_transform_job: (
                                  transform_job_name: ::String,
                                  model_name: ::String,
                                  ?max_concurrent_transforms: ::Integer,
                                  ?model_client_config: {
                                    invocations_timeout_in_seconds: ::Integer?,
                                    invocations_max_retries: ::Integer?
                                  },
                                  ?max_payload_in_mb: ::Integer,
                                  ?batch_strategy: ("MultiRecord" | "SingleRecord"),
                                  ?environment: Hash[::String, ::String],
                                  transform_input: {
                                    data_source: {
                                      s3_data_source: {
                                        s3_data_type: ("ManifestFile" | "S3Prefix" | "AugmentedManifestFile"),
                                        s3_uri: ::String
                                      }
                                    },
                                    content_type: ::String?,
                                    compression_type: ("None" | "Gzip")?,
                                    split_type: ("None" | "Line" | "RecordIO" | "TFRecord")?
                                  },
                                  transform_output: {
                                    s3_output_path: ::String,
                                    accept: ::String?,
                                    assemble_with: ("None" | "Line")?,
                                    kms_key_id: ::String?
                                  },
                                  ?data_capture_config: {
                                    destination_s3_uri: ::String,
                                    kms_key_id: ::String?,
                                    generate_inference_id: bool?
                                  },
                                  transform_resources: {
                                    instance_type: ("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge"),
                                    instance_count: ::Integer,
                                    volume_kms_key_id: ::String?
                                  },
                                  ?data_processing: {
                                    input_filter: ::String?,
                                    output_filter: ::String?,
                                    join_source: ("Input" | "None")?
                                  },
                                  ?tags: Array[
                                    {
                                      key: ::String,
                                      value: ::String
                                    },
                                  ],
                                  ?experiment_config: {
                                    experiment_name: ::String?,
                                    trial_name: ::String?,
                                    trial_component_display_name: ::String?,
                                    run_name: ::String?
                                  }
                                ) -> _CreateTransformJobResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateTransformJobResponseSuccess

      interface _CreateTrialResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateTrialResponse]
        def trial_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_trial-instance_method
      def create_trial: (
                          trial_name: ::String,
                          ?display_name: ::String,
                          experiment_name: ::String,
                          ?metadata_properties: {
                            commit_id: ::String?,
                            repository: ::String?,
                            generated_by: ::String?,
                            project_id: ::String?
                          },
                          ?tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> _CreateTrialResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateTrialResponseSuccess

      interface _CreateTrialComponentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateTrialComponentResponse]
        def trial_component_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_trial_component-instance_method
      def create_trial_component: (
                                    trial_component_name: ::String,
                                    ?display_name: ::String,
                                    ?status: {
                                      primary_status: ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped")?,
                                      message: ::String?
                                    },
                                    ?start_time: ::Time,
                                    ?end_time: ::Time,
                                    ?parameters: Hash[::String, {
                                        string_value: ::String?,
                                        number_value: ::Float?
                                      }],
                                    ?input_artifacts: Hash[::String, {
                                        media_type: ::String?,
                                        value: ::String
                                      }],
                                    ?output_artifacts: Hash[::String, {
                                        media_type: ::String?,
                                        value: ::String
                                      }],
                                    ?metadata_properties: {
                                      commit_id: ::String?,
                                      repository: ::String?,
                                      generated_by: ::String?,
                                      project_id: ::String?
                                    },
                                    ?tags: Array[
                                      {
                                        key: ::String,
                                        value: ::String
                                      },
                                    ]
                                  ) -> _CreateTrialComponentResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateTrialComponentResponseSuccess

      interface _CreateUserProfileResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateUserProfileResponse]
        def user_profile_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_user_profile-instance_method
      def create_user_profile: (
                                 domain_id: ::String,
                                 user_profile_name: ::String,
                                 ?single_sign_on_user_identifier: ::String,
                                 ?single_sign_on_user_value: ::String,
                                 ?tags: Array[
                                   {
                                     key: ::String,
                                     value: ::String
                                   },
                                 ],
                                 ?user_settings: {
                                   execution_role: ::String?,
                                   security_groups: Array[::String]?,
                                   sharing_settings: {
                                     notebook_output_option: ("Allowed" | "Disabled")?,
                                     s3_output_path: ::String?,
                                     s3_kms_key_id: ::String?
                                   }?,
                                   jupyter_server_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?,
                                     lifecycle_config_arns: Array[::String]?,
                                     code_repositories: Array[
                                       {
                                         repository_url: ::String
                                       },
                                     ]?
                                   }?,
                                   kernel_gateway_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?,
                                     custom_images: Array[
                                       {
                                         image_name: ::String,
                                         image_version_number: ::Integer?,
                                         app_image_config_name: ::String
                                       },
                                     ]?,
                                     lifecycle_config_arns: Array[::String]?
                                   }?,
                                   tensor_board_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?
                                   }?,
                                   r_studio_server_pro_app_settings: {
                                     access_status: ("ENABLED" | "DISABLED")?,
                                     user_group: ("R_STUDIO_ADMIN" | "R_STUDIO_USER")?
                                   }?,
                                   r_session_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?,
                                     custom_images: Array[
                                       {
                                         image_name: ::String,
                                         image_version_number: ::Integer?,
                                         app_image_config_name: ::String
                                       },
                                     ]?
                                   }?,
                                   canvas_app_settings: {
                                     time_series_forecasting_settings: {
                                       status: ("ENABLED" | "DISABLED")?,
                                       amazon_forecast_role_arn: ::String?
                                     }?,
                                     model_register_settings: {
                                       status: ("ENABLED" | "DISABLED")?,
                                       cross_account_model_register_role_arn: ::String?
                                     }?,
                                     workspace_settings: {
                                       s3_artifact_path: ::String?,
                                       s3_kms_key_id: ::String?
                                     }?,
                                     identity_provider_o_auth_settings: Array[
                                       {
                                         data_source_name: ("SalesforceGenie" | "Snowflake")?,
                                         status: ("ENABLED" | "DISABLED")?,
                                         secret_arn: ::String?
                                       },
                                     ]?,
                                     direct_deploy_settings: {
                                       status: ("ENABLED" | "DISABLED")?
                                     }?,
                                     kendra_settings: {
                                       status: ("ENABLED" | "DISABLED")?
                                     }?,
                                     generative_ai_settings: {
                                       amazon_bedrock_role_arn: ::String?
                                     }?,
                                     emr_serverless_settings: {
                                       execution_role_arn: ::String?,
                                       status: ("ENABLED" | "DISABLED")?
                                     }?
                                   }?,
                                   code_editor_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?,
                                     custom_images: Array[
                                       {
                                         image_name: ::String,
                                         image_version_number: ::Integer?,
                                         app_image_config_name: ::String
                                       },
                                     ]?,
                                     lifecycle_config_arns: Array[::String]?,
                                     app_lifecycle_management: {
                                       idle_settings: {
                                         lifecycle_management: ("ENABLED" | "DISABLED")?,
                                         idle_timeout_in_minutes: ::Integer?,
                                         min_idle_timeout_in_minutes: ::Integer?,
                                         max_idle_timeout_in_minutes: ::Integer?
                                       }?
                                     }?,
                                     built_in_lifecycle_config_arn: ::String?
                                   }?,
                                   jupyter_lab_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?,
                                     custom_images: Array[
                                       {
                                         image_name: ::String,
                                         image_version_number: ::Integer?,
                                         app_image_config_name: ::String
                                       },
                                     ]?,
                                     lifecycle_config_arns: Array[::String]?,
                                     code_repositories: Array[
                                       {
                                         repository_url: ::String
                                       },
                                     ]?,
                                     app_lifecycle_management: {
                                       idle_settings: {
                                         lifecycle_management: ("ENABLED" | "DISABLED")?,
                                         idle_timeout_in_minutes: ::Integer?,
                                         min_idle_timeout_in_minutes: ::Integer?,
                                         max_idle_timeout_in_minutes: ::Integer?
                                       }?
                                     }?,
                                     emr_settings: {
                                       assumable_role_arns: Array[::String]?,
                                       execution_role_arns: Array[::String]?
                                     }?,
                                     built_in_lifecycle_config_arn: ::String?
                                   }?,
                                   space_storage_settings: {
                                     default_ebs_storage_settings: {
                                       default_ebs_volume_size_in_gb: ::Integer,
                                       maximum_ebs_volume_size_in_gb: ::Integer
                                     }?
                                   }?,
                                   default_landing_uri: ::String?,
                                   studio_web_portal: ("ENABLED" | "DISABLED")?,
                                   custom_posix_user_config: {
                                     uid: ::Integer,
                                     gid: ::Integer
                                   }?,
                                   custom_file_system_configs: Array[
                                     {
                                       efs_file_system_config: {
                                         file_system_id: ::String,
                                         file_system_path: ::String?
                                       }?
                                     },
                                   ]?,
                                   studio_web_portal_settings: {
                                     hidden_ml_tools: Array[("DataWrangler" | "FeatureStore" | "EmrClusters" | "AutoMl" | "Experiments" | "Training" | "ModelEvaluation" | "Pipelines" | "Models" | "JumpStart" | "InferenceRecommender" | "Endpoints" | "Projects" | "InferenceOptimization" | "PerformanceEvaluation")]?,
                                     hidden_app_types: Array[("JupyterServer" | "KernelGateway" | "DetailedProfiler" | "TensorBoard" | "CodeEditor" | "JupyterLab" | "RStudioServerPro" | "RSessionGateway" | "Canvas")]?,
                                     hidden_instance_types: Array[("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")]?,
                                     hidden_sage_maker_image_version_aliases: Array[
                                       {
                                         sage_maker_image_name: ("sagemaker_distribution")?,
                                         version_aliases: Array[::String]?
                                       },
                                     ]?
                                   }?,
                                   auto_mount_home_efs: ("Enabled" | "Disabled" | "DefaultAsDomain")?
                                 }
                               ) -> _CreateUserProfileResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateUserProfileResponseSuccess

      interface _CreateWorkforceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateWorkforceResponse]
        def workforce_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_workforce-instance_method
      def create_workforce: (
                              ?cognito_config: {
                                user_pool: ::String,
                                client_id: ::String
                              },
                              ?oidc_config: {
                                client_id: ::String,
                                client_secret: ::String,
                                issuer: ::String,
                                authorization_endpoint: ::String,
                                token_endpoint: ::String,
                                user_info_endpoint: ::String,
                                logout_endpoint: ::String,
                                jwks_uri: ::String,
                                scope: ::String?,
                                authentication_request_extra_params: Hash[::String, ::String]?
                              },
                              ?source_ip_config: {
                                cidrs: Array[::String]
                              },
                              workforce_name: ::String,
                              ?tags: Array[
                                {
                                  key: ::String,
                                  value: ::String
                                },
                              ],
                              ?workforce_vpc_config: {
                                vpc_id: ::String?,
                                security_group_ids: Array[::String]?,
                                subnets: Array[::String]?
                              }
                            ) -> _CreateWorkforceResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateWorkforceResponseSuccess

      interface _CreateWorkteamResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateWorkteamResponse]
        def workteam_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#create_workteam-instance_method
      def create_workteam: (
                             workteam_name: ::String,
                             ?workforce_name: ::String,
                             member_definitions: Array[
                               {
                                 cognito_member_definition: {
                                   user_pool: ::String,
                                   user_group: ::String,
                                   client_id: ::String
                                 }?,
                                 oidc_member_definition: {
                                   groups: Array[::String]?
                                 }?
                               },
                             ],
                             description: ::String,
                             ?notification_configuration: {
                               notification_topic_arn: ::String?
                             },
                             ?worker_access_configuration: {
                               s3_presign: {
                                 iam_policy_constraints: {
                                   source_ip: ("Enabled" | "Disabled")?,
                                   vpc_source_ip: ("Enabled" | "Disabled")?
                                 }?
                               }?
                             },
                             ?tags: Array[
                               {
                                 key: ::String,
                                 value: ::String
                               },
                             ]
                           ) -> _CreateWorkteamResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateWorkteamResponseSuccess

      interface _DeleteActionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteActionResponse]
        def action_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_action-instance_method
      def delete_action: (
                           action_name: ::String
                         ) -> _DeleteActionResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteActionResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_algorithm-instance_method
      def delete_algorithm: (
                              algorithm_name: ::String
                            ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_app-instance_method
      def delete_app: (
                        domain_id: ::String,
                        ?user_profile_name: ::String,
                        ?space_name: ::String,
                        app_type: ("JupyterServer" | "KernelGateway" | "DetailedProfiler" | "TensorBoard" | "CodeEditor" | "JupyterLab" | "RStudioServerPro" | "RSessionGateway" | "Canvas"),
                        app_name: ::String
                      ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_app_image_config-instance_method
      def delete_app_image_config: (
                                     app_image_config_name: ::String
                                   ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteArtifactResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteArtifactResponse]
        def artifact_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_artifact-instance_method
      def delete_artifact: (
                             ?artifact_arn: ::String,
                             ?source: {
                               source_uri: ::String,
                               source_types: Array[
                                 {
                                   source_id_type: ("MD5Hash" | "S3ETag" | "S3Version" | "Custom"),
                                   value: ::String
                                 },
                               ]?
                             }
                           ) -> _DeleteArtifactResponseSuccess
                         | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteArtifactResponseSuccess

      interface _DeleteAssociationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteAssociationResponse]
        def source_arn: () -> ::String
        def destination_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_association-instance_method
      def delete_association: (
                                source_arn: ::String,
                                destination_arn: ::String
                              ) -> _DeleteAssociationResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteAssociationResponseSuccess

      interface _DeleteClusterResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteClusterResponse]
        def cluster_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_cluster-instance_method
      def delete_cluster: (
                            cluster_name: ::String
                          ) -> _DeleteClusterResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteClusterResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_code_repository-instance_method
      def delete_code_repository: (
                                    code_repository_name: ::String
                                  ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_compilation_job-instance_method
      def delete_compilation_job: (
                                    compilation_job_name: ::String
                                  ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteContextResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteContextResponse]
        def context_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_context-instance_method
      def delete_context: (
                            context_name: ::String
                          ) -> _DeleteContextResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteContextResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_data_quality_job_definition-instance_method
      def delete_data_quality_job_definition: (
                                                job_definition_name: ::String
                                              ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_device_fleet-instance_method
      def delete_device_fleet: (
                                 device_fleet_name: ::String
                               ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_domain-instance_method
      def delete_domain: (
                           domain_id: ::String,
                           ?retention_policy: {
                             home_efs_file_system: ("Retain" | "Delete")?
                           }
                         ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_edge_deployment_plan-instance_method
      def delete_edge_deployment_plan: (
                                         edge_deployment_plan_name: ::String
                                       ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_edge_deployment_stage-instance_method
      def delete_edge_deployment_stage: (
                                          edge_deployment_plan_name: ::String,
                                          stage_name: ::String
                                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_endpoint-instance_method
      def delete_endpoint: (
                             endpoint_name: ::String
                           ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_endpoint_config-instance_method
      def delete_endpoint_config: (
                                    endpoint_config_name: ::String
                                  ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteExperimentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteExperimentResponse]
        def experiment_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_experiment-instance_method
      def delete_experiment: (
                               experiment_name: ::String
                             ) -> _DeleteExperimentResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteExperimentResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_feature_group-instance_method
      def delete_feature_group: (
                                  feature_group_name: ::String
                                ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteFlowDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteFlowDefinitionResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_flow_definition-instance_method
      def delete_flow_definition: (
                                    flow_definition_name: ::String
                                  ) -> _DeleteFlowDefinitionResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteFlowDefinitionResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_hub-instance_method
      def delete_hub: (
                        hub_name: ::String
                      ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_hub_content-instance_method
      def delete_hub_content: (
                                hub_name: ::String,
                                hub_content_type: ("Model" | "Notebook" | "ModelReference"),
                                hub_content_name: ::String,
                                hub_content_version: ::String
                              ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_hub_content_reference-instance_method
      def delete_hub_content_reference: (
                                          hub_name: ::String,
                                          hub_content_type: ("Model" | "Notebook" | "ModelReference"),
                                          hub_content_name: ::String
                                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteHumanTaskUiResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteHumanTaskUiResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_human_task_ui-instance_method
      def delete_human_task_ui: (
                                  human_task_ui_name: ::String
                                ) -> _DeleteHumanTaskUiResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteHumanTaskUiResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_hyper_parameter_tuning_job-instance_method
      def delete_hyper_parameter_tuning_job: (
                                               hyper_parameter_tuning_job_name: ::String
                                             ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteImageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteImageResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_image-instance_method
      def delete_image: (
                          image_name: ::String
                        ) -> _DeleteImageResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteImageResponseSuccess

      interface _DeleteImageVersionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteImageVersionResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_image_version-instance_method
      def delete_image_version: (
                                  image_name: ::String,
                                  ?version: ::Integer,
                                  ?alias: ::String
                                ) -> _DeleteImageVersionResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteImageVersionResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_inference_component-instance_method
      def delete_inference_component: (
                                        inference_component_name: ::String
                                      ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteInferenceExperimentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteInferenceExperimentResponse]
        def inference_experiment_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_inference_experiment-instance_method
      def delete_inference_experiment: (
                                         name: ::String
                                       ) -> _DeleteInferenceExperimentResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteInferenceExperimentResponseSuccess

      interface _DeleteMlflowTrackingServerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteMlflowTrackingServerResponse]
        def tracking_server_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_mlflow_tracking_server-instance_method
      def delete_mlflow_tracking_server: (
                                           tracking_server_name: ::String
                                         ) -> _DeleteMlflowTrackingServerResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteMlflowTrackingServerResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_model-instance_method
      def delete_model: (
                          model_name: ::String
                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_model_bias_job_definition-instance_method
      def delete_model_bias_job_definition: (
                                              job_definition_name: ::String
                                            ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_model_card-instance_method
      def delete_model_card: (
                               model_card_name: ::String
                             ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_model_explainability_job_definition-instance_method
      def delete_model_explainability_job_definition: (
                                                        job_definition_name: ::String
                                                      ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_model_package-instance_method
      def delete_model_package: (
                                  model_package_name: ::String
                                ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_model_package_group-instance_method
      def delete_model_package_group: (
                                        model_package_group_name: ::String
                                      ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_model_package_group_policy-instance_method
      def delete_model_package_group_policy: (
                                               model_package_group_name: ::String
                                             ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_model_quality_job_definition-instance_method
      def delete_model_quality_job_definition: (
                                                 job_definition_name: ::String
                                               ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_monitoring_schedule-instance_method
      def delete_monitoring_schedule: (
                                        monitoring_schedule_name: ::String
                                      ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_notebook_instance-instance_method
      def delete_notebook_instance: (
                                      notebook_instance_name: ::String
                                    ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_notebook_instance_lifecycle_config-instance_method
      def delete_notebook_instance_lifecycle_config: (
                                                       notebook_instance_lifecycle_config_name: ::String
                                                     ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_optimization_job-instance_method
      def delete_optimization_job: (
                                     optimization_job_name: ::String
                                   ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeletePipelineResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeletePipelineResponse]
        def pipeline_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_pipeline-instance_method
      def delete_pipeline: (
                             pipeline_name: ::String,
                             client_request_token: ::String
                           ) -> _DeletePipelineResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeletePipelineResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_project-instance_method
      def delete_project: (
                            project_name: ::String
                          ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_space-instance_method
      def delete_space: (
                          domain_id: ::String,
                          space_name: ::String
                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_studio_lifecycle_config-instance_method
      def delete_studio_lifecycle_config: (
                                            studio_lifecycle_config_name: ::String
                                          ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteTagsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteTagsOutput]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_tags-instance_method
      def delete_tags: (
                         resource_arn: ::String,
                         tag_keys: Array[::String]
                       ) -> _DeleteTagsResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteTagsResponseSuccess

      interface _DeleteTrialResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteTrialResponse]
        def trial_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_trial-instance_method
      def delete_trial: (
                          trial_name: ::String
                        ) -> _DeleteTrialResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteTrialResponseSuccess

      interface _DeleteTrialComponentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteTrialComponentResponse]
        def trial_component_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_trial_component-instance_method
      def delete_trial_component: (
                                    trial_component_name: ::String
                                  ) -> _DeleteTrialComponentResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteTrialComponentResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_user_profile-instance_method
      def delete_user_profile: (
                                 domain_id: ::String,
                                 user_profile_name: ::String
                               ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteWorkforceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteWorkforceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_workforce-instance_method
      def delete_workforce: (
                              workforce_name: ::String
                            ) -> _DeleteWorkforceResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteWorkforceResponseSuccess

      interface _DeleteWorkteamResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteWorkteamResponse]
        def success: () -> bool
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#delete_workteam-instance_method
      def delete_workteam: (
                             workteam_name: ::String
                           ) -> _DeleteWorkteamResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteWorkteamResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#deregister_devices-instance_method
      def deregister_devices: (
                                device_fleet_name: ::String,
                                device_names: Array[::String]
                              ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DescribeActionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeActionResponse]
        def action_name: () -> ::String
        def action_arn: () -> ::String
        def source: () -> Types::ActionSource
        def action_type: () -> ::String
        def description: () -> ::String
        def status: () -> ("Unknown" | "InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped")
        def properties: () -> ::Hash[::String, ::String]
        def creation_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
        def metadata_properties: () -> Types::MetadataProperties
        def lineage_group_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_action-instance_method
      def describe_action: (
                             action_name: ::String
                           ) -> _DescribeActionResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeActionResponseSuccess

      interface _DescribeAlgorithmResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeAlgorithmOutput]
        def algorithm_name: () -> ::String
        def algorithm_arn: () -> ::String
        def algorithm_description: () -> ::String
        def creation_time: () -> ::Time
        def training_specification: () -> Types::TrainingSpecification
        def inference_specification: () -> Types::InferenceSpecification
        def validation_specification: () -> Types::AlgorithmValidationSpecification
        def algorithm_status: () -> ("Pending" | "InProgress" | "Completed" | "Failed" | "Deleting")
        def algorithm_status_details: () -> Types::AlgorithmStatusDetails
        def product_id: () -> ::String
        def certify_for_marketplace: () -> bool
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_algorithm-instance_method
      def describe_algorithm: (
                                algorithm_name: ::String
                              ) -> _DescribeAlgorithmResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeAlgorithmResponseSuccess

      interface _DescribeAppResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeAppResponse]
        def app_arn: () -> ::String
        def app_type: () -> ("JupyterServer" | "KernelGateway" | "DetailedProfiler" | "TensorBoard" | "CodeEditor" | "JupyterLab" | "RStudioServerPro" | "RSessionGateway" | "Canvas")
        def app_name: () -> ::String
        def domain_id: () -> ::String
        def user_profile_name: () -> ::String
        def space_name: () -> ::String
        def status: () -> ("Deleted" | "Deleting" | "Failed" | "InService" | "Pending")
        def last_health_check_timestamp: () -> ::Time
        def last_user_activity_timestamp: () -> ::Time
        def creation_time: () -> ::Time
        def failure_reason: () -> ::String
        def resource_spec: () -> Types::ResourceSpec
        def built_in_lifecycle_config_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_app-instance_method
      def describe_app: (
                          domain_id: ::String,
                          ?user_profile_name: ::String,
                          ?space_name: ::String,
                          app_type: ("JupyterServer" | "KernelGateway" | "DetailedProfiler" | "TensorBoard" | "CodeEditor" | "JupyterLab" | "RStudioServerPro" | "RSessionGateway" | "Canvas"),
                          app_name: ::String
                        ) -> _DescribeAppResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeAppResponseSuccess

      interface _DescribeAppImageConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeAppImageConfigResponse]
        def app_image_config_arn: () -> ::String
        def app_image_config_name: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def kernel_gateway_image_config: () -> Types::KernelGatewayImageConfig
        def jupyter_lab_app_image_config: () -> Types::JupyterLabAppImageConfig
        def code_editor_app_image_config: () -> Types::CodeEditorAppImageConfig
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_app_image_config-instance_method
      def describe_app_image_config: (
                                       app_image_config_name: ::String
                                     ) -> _DescribeAppImageConfigResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeAppImageConfigResponseSuccess

      interface _DescribeArtifactResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeArtifactResponse]
        def artifact_name: () -> ::String
        def artifact_arn: () -> ::String
        def source: () -> Types::ArtifactSource
        def artifact_type: () -> ::String
        def properties: () -> ::Hash[::String, ::String]
        def creation_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
        def metadata_properties: () -> Types::MetadataProperties
        def lineage_group_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_artifact-instance_method
      def describe_artifact: (
                               artifact_arn: ::String
                             ) -> _DescribeArtifactResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeArtifactResponseSuccess

      interface _DescribeAutoMLJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeAutoMLJobResponse]
        def auto_ml_job_name: () -> ::String
        def auto_ml_job_arn: () -> ::String
        def input_data_config: () -> ::Array[Types::AutoMLChannel]
        def output_data_config: () -> Types::AutoMLOutputDataConfig
        def role_arn: () -> ::String
        def auto_ml_job_objective: () -> Types::AutoMLJobObjective
        def problem_type: () -> ("BinaryClassification" | "MulticlassClassification" | "Regression")
        def auto_ml_job_config: () -> Types::AutoMLJobConfig
        def creation_time: () -> ::Time
        def end_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def failure_reason: () -> ::String
        def partial_failure_reasons: () -> ::Array[Types::AutoMLPartialFailureReason]
        def best_candidate: () -> Types::AutoMLCandidate
        def auto_ml_job_status: () -> ("Completed" | "InProgress" | "Failed" | "Stopped" | "Stopping")
        def auto_ml_job_secondary_status: () -> ("Starting" | "MaxCandidatesReached" | "Failed" | "Stopped" | "MaxAutoMLJobRuntimeReached" | "Stopping" | "CandidateDefinitionsGenerated" | "Completed" | "ExplainabilityError" | "DeployingModel" | "ModelDeploymentError" | "GeneratingModelInsightsReport" | "ModelInsightsError" | "AnalyzingData" | "FeatureEngineering" | "ModelTuning" | "GeneratingExplainabilityReport" | "TrainingModels" | "PreTraining")
        def generate_candidate_definitions_only: () -> bool
        def auto_ml_job_artifacts: () -> Types::AutoMLJobArtifacts
        def resolved_attributes: () -> Types::ResolvedAttributes
        def model_deploy_config: () -> Types::ModelDeployConfig
        def model_deploy_result: () -> Types::ModelDeployResult
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_auto_ml_job-instance_method
      def describe_auto_ml_job: (
                                  auto_ml_job_name: ::String
                                ) -> _DescribeAutoMLJobResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeAutoMLJobResponseSuccess

      interface _DescribeAutoMLJobV2ResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeAutoMLJobV2Response]
        def auto_ml_job_name: () -> ::String
        def auto_ml_job_arn: () -> ::String
        def auto_ml_job_input_data_config: () -> ::Array[Types::AutoMLJobChannel]
        def output_data_config: () -> Types::AutoMLOutputDataConfig
        def role_arn: () -> ::String
        def auto_ml_job_objective: () -> Types::AutoMLJobObjective
        def auto_ml_problem_type_config: () -> Types::AutoMLProblemTypeConfig
        def auto_ml_problem_type_config_name: () -> ("ImageClassification" | "TextClassification" | "TimeSeriesForecasting" | "Tabular" | "TextGeneration")
        def creation_time: () -> ::Time
        def end_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def failure_reason: () -> ::String
        def partial_failure_reasons: () -> ::Array[Types::AutoMLPartialFailureReason]
        def best_candidate: () -> Types::AutoMLCandidate
        def auto_ml_job_status: () -> ("Completed" | "InProgress" | "Failed" | "Stopped" | "Stopping")
        def auto_ml_job_secondary_status: () -> ("Starting" | "MaxCandidatesReached" | "Failed" | "Stopped" | "MaxAutoMLJobRuntimeReached" | "Stopping" | "CandidateDefinitionsGenerated" | "Completed" | "ExplainabilityError" | "DeployingModel" | "ModelDeploymentError" | "GeneratingModelInsightsReport" | "ModelInsightsError" | "AnalyzingData" | "FeatureEngineering" | "ModelTuning" | "GeneratingExplainabilityReport" | "TrainingModels" | "PreTraining")
        def auto_ml_job_artifacts: () -> Types::AutoMLJobArtifacts
        def resolved_attributes: () -> Types::AutoMLResolvedAttributes
        def model_deploy_config: () -> Types::ModelDeployConfig
        def model_deploy_result: () -> Types::ModelDeployResult
        def data_split_config: () -> Types::AutoMLDataSplitConfig
        def security_config: () -> Types::AutoMLSecurityConfig
        def auto_ml_compute_config: () -> Types::AutoMLComputeConfig
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_auto_ml_job_v2-instance_method
      def describe_auto_ml_job_v2: (
                                     auto_ml_job_name: ::String
                                   ) -> _DescribeAutoMLJobV2ResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeAutoMLJobV2ResponseSuccess

      interface _DescribeClusterResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeClusterResponse]
        def cluster_arn: () -> ::String
        def cluster_name: () -> ::String
        def cluster_status: () -> ("Creating" | "Deleting" | "Failed" | "InService" | "RollingBack" | "SystemUpdating" | "Updating")
        def creation_time: () -> ::Time
        def failure_message: () -> ::String
        def instance_groups: () -> ::Array[Types::ClusterInstanceGroupDetails]
        def vpc_config: () -> Types::VpcConfig
        def orchestrator: () -> Types::ClusterOrchestrator
        def node_recovery: () -> ("Automatic" | "None")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_cluster-instance_method
      def describe_cluster: (
                              cluster_name: ::String
                            ) -> _DescribeClusterResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeClusterResponseSuccess

      interface _DescribeClusterNodeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeClusterNodeResponse]
        def node_details: () -> Types::ClusterNodeDetails
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_cluster_node-instance_method
      def describe_cluster_node: (
                                   cluster_name: ::String,
                                   node_id: ::String
                                 ) -> _DescribeClusterNodeResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeClusterNodeResponseSuccess

      interface _DescribeCodeRepositoryResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeCodeRepositoryOutput]
        def code_repository_name: () -> ::String
        def code_repository_arn: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def git_config: () -> Types::GitConfig
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_code_repository-instance_method
      def describe_code_repository: (
                                      code_repository_name: ::String
                                    ) -> _DescribeCodeRepositoryResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeCodeRepositoryResponseSuccess

      interface _DescribeCompilationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeCompilationJobResponse]
        def compilation_job_name: () -> ::String
        def compilation_job_arn: () -> ::String
        def compilation_job_status: () -> ("INPROGRESS" | "COMPLETED" | "FAILED" | "STARTING" | "STOPPING" | "STOPPED")
        def compilation_start_time: () -> ::Time
        def compilation_end_time: () -> ::Time
        def stopping_condition: () -> Types::StoppingCondition
        def inference_image: () -> ::String
        def model_package_version_arn: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def failure_reason: () -> ::String
        def model_artifacts: () -> Types::ModelArtifacts
        def model_digests: () -> Types::ModelDigests
        def role_arn: () -> ::String
        def input_config: () -> Types::InputConfig
        def output_config: () -> Types::OutputConfig
        def vpc_config: () -> Types::NeoVpcConfig
        def derived_information: () -> Types::DerivedInformation
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_compilation_job-instance_method
      def describe_compilation_job: (
                                      compilation_job_name: ::String
                                    ) -> _DescribeCompilationJobResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeCompilationJobResponseSuccess

      interface _DescribeContextResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeContextResponse]
        def context_name: () -> ::String
        def context_arn: () -> ::String
        def source: () -> Types::ContextSource
        def context_type: () -> ::String
        def description: () -> ::String
        def properties: () -> ::Hash[::String, ::String]
        def creation_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
        def lineage_group_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_context-instance_method
      def describe_context: (
                              context_name: ::String
                            ) -> _DescribeContextResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeContextResponseSuccess

      interface _DescribeDataQualityJobDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeDataQualityJobDefinitionResponse]
        def job_definition_arn: () -> ::String
        def job_definition_name: () -> ::String
        def creation_time: () -> ::Time
        def data_quality_baseline_config: () -> Types::DataQualityBaselineConfig
        def data_quality_app_specification: () -> Types::DataQualityAppSpecification
        def data_quality_job_input: () -> Types::DataQualityJobInput
        def data_quality_job_output_config: () -> Types::MonitoringOutputConfig
        def job_resources: () -> Types::MonitoringResources
        def network_config: () -> Types::MonitoringNetworkConfig
        def role_arn: () -> ::String
        def stopping_condition: () -> Types::MonitoringStoppingCondition
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_data_quality_job_definition-instance_method
      def describe_data_quality_job_definition: (
                                                  job_definition_name: ::String
                                                ) -> _DescribeDataQualityJobDefinitionResponseSuccess
                                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeDataQualityJobDefinitionResponseSuccess

      interface _DescribeDeviceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeDeviceResponse]
        def device_arn: () -> ::String
        def device_name: () -> ::String
        def description: () -> ::String
        def device_fleet_name: () -> ::String
        def iot_thing_name: () -> ::String
        def registration_time: () -> ::Time
        def latest_heartbeat: () -> ::Time
        def models: () -> ::Array[Types::EdgeModel]
        def max_models: () -> ::Integer
        def next_token: () -> ::String
        def agent_version: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_device-instance_method
      def describe_device: (
                             ?next_token: ::String,
                             device_name: ::String,
                             device_fleet_name: ::String
                           ) -> _DescribeDeviceResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeDeviceResponseSuccess

      interface _DescribeDeviceFleetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeDeviceFleetResponse]
        def device_fleet_name: () -> ::String
        def device_fleet_arn: () -> ::String
        def output_config: () -> Types::EdgeOutputConfig
        def description: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def role_arn: () -> ::String
        def iot_role_alias: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_device_fleet-instance_method
      def describe_device_fleet: (
                                   device_fleet_name: ::String
                                 ) -> _DescribeDeviceFleetResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeDeviceFleetResponseSuccess

      interface _DescribeDomainResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeDomainResponse]
        def domain_arn: () -> ::String
        def domain_id: () -> ::String
        def domain_name: () -> ::String
        def home_efs_file_system_id: () -> ::String
        def single_sign_on_managed_application_instance_id: () -> ::String
        def single_sign_on_application_arn: () -> ::String
        def status: () -> ("Deleting" | "Failed" | "InService" | "Pending" | "Updating" | "Update_Failed" | "Delete_Failed")
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def failure_reason: () -> ::String
        def security_group_id_for_domain_boundary: () -> ::String
        def auth_mode: () -> ("SSO" | "IAM")
        def default_user_settings: () -> Types::UserSettings
        def domain_settings: () -> Types::DomainSettings
        def app_network_access_type: () -> ("PublicInternetOnly" | "VpcOnly")
        def home_efs_file_system_kms_key_id: () -> ::String
        def subnet_ids: () -> ::Array[::String]
        def url: () -> ::String
        def vpc_id: () -> ::String
        def kms_key_id: () -> ::String
        def app_security_group_management: () -> ("Service" | "Customer")
        def tag_propagation: () -> ("ENABLED" | "DISABLED")
        def default_space_settings: () -> Types::DefaultSpaceSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_domain-instance_method
      def describe_domain: (
                             domain_id: ::String
                           ) -> _DescribeDomainResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeDomainResponseSuccess

      interface _DescribeEdgeDeploymentPlanResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeEdgeDeploymentPlanResponse]
        def edge_deployment_plan_arn: () -> ::String
        def edge_deployment_plan_name: () -> ::String
        def model_configs: () -> ::Array[Types::EdgeDeploymentModelConfig]
        def device_fleet_name: () -> ::String
        def edge_deployment_success: () -> ::Integer
        def edge_deployment_pending: () -> ::Integer
        def edge_deployment_failed: () -> ::Integer
        def stages: () -> ::Array[Types::DeploymentStageStatusSummary]
        def next_token: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_edge_deployment_plan-instance_method
      def describe_edge_deployment_plan: (
                                           edge_deployment_plan_name: ::String,
                                           ?next_token: ::String,
                                           ?max_results: ::Integer
                                         ) -> _DescribeEdgeDeploymentPlanResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeEdgeDeploymentPlanResponseSuccess

      interface _DescribeEdgePackagingJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeEdgePackagingJobResponse]
        def edge_packaging_job_arn: () -> ::String
        def edge_packaging_job_name: () -> ::String
        def compilation_job_name: () -> ::String
        def model_name: () -> ::String
        def model_version: () -> ::String
        def role_arn: () -> ::String
        def output_config: () -> Types::EdgeOutputConfig
        def resource_key: () -> ::String
        def edge_packaging_job_status: () -> ("STARTING" | "INPROGRESS" | "COMPLETED" | "FAILED" | "STOPPING" | "STOPPED")
        def edge_packaging_job_status_message: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def model_artifact: () -> ::String
        def model_signature: () -> ::String
        def preset_deployment_output: () -> Types::EdgePresetDeploymentOutput
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_edge_packaging_job-instance_method
      def describe_edge_packaging_job: (
                                         edge_packaging_job_name: ::String
                                       ) -> _DescribeEdgePackagingJobResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeEdgePackagingJobResponseSuccess

      interface _DescribeEndpointResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeEndpointOutput]
        def endpoint_name: () -> ::String
        def endpoint_arn: () -> ::String
        def endpoint_config_name: () -> ::String
        def production_variants: () -> ::Array[Types::ProductionVariantSummary]
        def data_capture_config: () -> Types::DataCaptureConfigSummary
        def endpoint_status: () -> ("OutOfService" | "Creating" | "Updating" | "SystemUpdating" | "RollingBack" | "InService" | "Deleting" | "Failed" | "UpdateRollbackFailed")
        def failure_reason: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def last_deployment_config: () -> Types::DeploymentConfig
        def async_inference_config: () -> Types::AsyncInferenceConfig
        def pending_deployment_summary: () -> Types::PendingDeploymentSummary
        def explainer_config: () -> Types::ExplainerConfig
        def shadow_production_variants: () -> ::Array[Types::ProductionVariantSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_endpoint-instance_method
      def describe_endpoint: (
                               endpoint_name: ::String
                             ) -> _DescribeEndpointResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeEndpointResponseSuccess

      interface _DescribeEndpointConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeEndpointConfigOutput]
        def endpoint_config_name: () -> ::String
        def endpoint_config_arn: () -> ::String
        def production_variants: () -> ::Array[Types::ProductionVariant]
        def data_capture_config: () -> Types::DataCaptureConfig
        def kms_key_id: () -> ::String
        def creation_time: () -> ::Time
        def async_inference_config: () -> Types::AsyncInferenceConfig
        def explainer_config: () -> Types::ExplainerConfig
        def shadow_production_variants: () -> ::Array[Types::ProductionVariant]
        def execution_role_arn: () -> ::String
        def vpc_config: () -> Types::VpcConfig
        def enable_network_isolation: () -> bool
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_endpoint_config-instance_method
      def describe_endpoint_config: (
                                      endpoint_config_name: ::String
                                    ) -> _DescribeEndpointConfigResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeEndpointConfigResponseSuccess

      interface _DescribeExperimentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeExperimentResponse]
        def experiment_name: () -> ::String
        def experiment_arn: () -> ::String
        def display_name: () -> ::String
        def source: () -> Types::ExperimentSource
        def description: () -> ::String
        def creation_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_experiment-instance_method
      def describe_experiment: (
                                 experiment_name: ::String
                               ) -> _DescribeExperimentResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeExperimentResponseSuccess

      interface _DescribeFeatureGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeFeatureGroupResponse]
        def feature_group_arn: () -> ::String
        def feature_group_name: () -> ::String
        def record_identifier_feature_name: () -> ::String
        def event_time_feature_name: () -> ::String
        def feature_definitions: () -> ::Array[Types::FeatureDefinition]
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def online_store_config: () -> Types::OnlineStoreConfig
        def offline_store_config: () -> Types::OfflineStoreConfig
        def throughput_config: () -> Types::ThroughputConfigDescription
        def role_arn: () -> ::String
        def feature_group_status: () -> ("Creating" | "Created" | "CreateFailed" | "Deleting" | "DeleteFailed")
        def offline_store_status: () -> Types::OfflineStoreStatus
        def last_update_status: () -> Types::LastUpdateStatus
        def failure_reason: () -> ::String
        def description: () -> ::String
        def next_token: () -> ::String
        def online_store_total_size_bytes: () -> ::Integer
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_feature_group-instance_method
      def describe_feature_group: (
                                    feature_group_name: ::String,
                                    ?next_token: ::String
                                  ) -> _DescribeFeatureGroupResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeFeatureGroupResponseSuccess

      interface _DescribeFeatureMetadataResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeFeatureMetadataResponse]
        def feature_group_arn: () -> ::String
        def feature_group_name: () -> ::String
        def feature_name: () -> ::String
        def feature_type: () -> ("Integral" | "Fractional" | "String")
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def description: () -> ::String
        def parameters: () -> ::Array[Types::FeatureParameter]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_feature_metadata-instance_method
      def describe_feature_metadata: (
                                       feature_group_name: ::String,
                                       feature_name: ::String
                                     ) -> _DescribeFeatureMetadataResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeFeatureMetadataResponseSuccess

      interface _DescribeFlowDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeFlowDefinitionResponse]
        def flow_definition_arn: () -> ::String
        def flow_definition_name: () -> ::String
        def flow_definition_status: () -> ("Initializing" | "Active" | "Failed" | "Deleting")
        def creation_time: () -> ::Time
        def human_loop_request_source: () -> Types::HumanLoopRequestSource
        def human_loop_activation_config: () -> Types::HumanLoopActivationConfig
        def human_loop_config: () -> Types::HumanLoopConfig
        def output_config: () -> Types::FlowDefinitionOutputConfig
        def role_arn: () -> ::String
        def failure_reason: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_flow_definition-instance_method
      def describe_flow_definition: (
                                      flow_definition_name: ::String
                                    ) -> _DescribeFlowDefinitionResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeFlowDefinitionResponseSuccess

      interface _DescribeHubResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeHubResponse]
        def hub_name: () -> ::String
        def hub_arn: () -> ::String
        def hub_display_name: () -> ::String
        def hub_description: () -> ::String
        def hub_search_keywords: () -> ::Array[::String]
        def s3_storage_config: () -> Types::HubS3StorageConfig
        def hub_status: () -> ("InService" | "Creating" | "Updating" | "Deleting" | "CreateFailed" | "UpdateFailed" | "DeleteFailed")
        def failure_reason: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_hub-instance_method
      def describe_hub: (
                          hub_name: ::String
                        ) -> _DescribeHubResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeHubResponseSuccess

      interface _DescribeHubContentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeHubContentResponse]
        def hub_content_name: () -> ::String
        def hub_content_arn: () -> ::String
        def hub_content_version: () -> ::String
        def hub_content_type: () -> ("Model" | "Notebook" | "ModelReference")
        def document_schema_version: () -> ::String
        def hub_name: () -> ::String
        def hub_arn: () -> ::String
        def hub_content_display_name: () -> ::String
        def hub_content_description: () -> ::String
        def hub_content_markdown: () -> ::String
        def hub_content_document: () -> ::String
        def sage_maker_public_hub_content_arn: () -> ::String
        def reference_min_version: () -> ::String
        def support_status: () -> ("Supported" | "Deprecated")
        def hub_content_search_keywords: () -> ::Array[::String]
        def hub_content_dependencies: () -> ::Array[Types::HubContentDependency]
        def hub_content_status: () -> ("Available" | "Importing" | "Deleting" | "ImportFailed" | "DeleteFailed")
        def failure_reason: () -> ::String
        def creation_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_hub_content-instance_method
      def describe_hub_content: (
                                  hub_name: ::String,
                                  hub_content_type: ("Model" | "Notebook" | "ModelReference"),
                                  hub_content_name: ::String,
                                  ?hub_content_version: ::String
                                ) -> _DescribeHubContentResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeHubContentResponseSuccess

      interface _DescribeHumanTaskUiResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeHumanTaskUiResponse]
        def human_task_ui_arn: () -> ::String
        def human_task_ui_name: () -> ::String
        def human_task_ui_status: () -> ("Active" | "Deleting")
        def creation_time: () -> ::Time
        def ui_template: () -> Types::UiTemplateInfo
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_human_task_ui-instance_method
      def describe_human_task_ui: (
                                    human_task_ui_name: ::String
                                  ) -> _DescribeHumanTaskUiResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeHumanTaskUiResponseSuccess

      interface _DescribeHyperParameterTuningJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeHyperParameterTuningJobResponse]
        def hyper_parameter_tuning_job_name: () -> ::String
        def hyper_parameter_tuning_job_arn: () -> ::String
        def hyper_parameter_tuning_job_config: () -> Types::HyperParameterTuningJobConfig
        def training_job_definition: () -> Types::HyperParameterTrainingJobDefinition
        def training_job_definitions: () -> ::Array[Types::HyperParameterTrainingJobDefinition]
        def hyper_parameter_tuning_job_status: () -> ("Completed" | "InProgress" | "Failed" | "Stopped" | "Stopping" | "Deleting" | "DeleteFailed")
        def creation_time: () -> ::Time
        def hyper_parameter_tuning_end_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def training_job_status_counters: () -> Types::TrainingJobStatusCounters
        def objective_status_counters: () -> Types::ObjectiveStatusCounters
        def best_training_job: () -> Types::HyperParameterTrainingJobSummary
        def overall_best_training_job: () -> Types::HyperParameterTrainingJobSummary
        def warm_start_config: () -> Types::HyperParameterTuningJobWarmStartConfig
        def autotune: () -> Types::Autotune
        def failure_reason: () -> ::String
        def tuning_job_completion_details: () -> Types::HyperParameterTuningJobCompletionDetails
        def consumed_resources: () -> Types::HyperParameterTuningJobConsumedResources
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_hyper_parameter_tuning_job-instance_method
      def describe_hyper_parameter_tuning_job: (
                                                 hyper_parameter_tuning_job_name: ::String
                                               ) -> _DescribeHyperParameterTuningJobResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeHyperParameterTuningJobResponseSuccess

      interface _DescribeImageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeImageResponse]
        def creation_time: () -> ::Time
        def description: () -> ::String
        def display_name: () -> ::String
        def failure_reason: () -> ::String
        def image_arn: () -> ::String
        def image_name: () -> ::String
        def image_status: () -> ("CREATING" | "CREATED" | "CREATE_FAILED" | "UPDATING" | "UPDATE_FAILED" | "DELETING" | "DELETE_FAILED")
        def last_modified_time: () -> ::Time
        def role_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_image-instance_method
      def describe_image: (
                            image_name: ::String
                          ) -> _DescribeImageResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeImageResponseSuccess

      interface _DescribeImageVersionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeImageVersionResponse]
        def base_image: () -> ::String
        def container_image: () -> ::String
        def creation_time: () -> ::Time
        def failure_reason: () -> ::String
        def image_arn: () -> ::String
        def image_version_arn: () -> ::String
        def image_version_status: () -> ("CREATING" | "CREATED" | "CREATE_FAILED" | "DELETING" | "DELETE_FAILED")
        def last_modified_time: () -> ::Time
        def version: () -> ::Integer
        def vendor_guidance: () -> ("NOT_PROVIDED" | "STABLE" | "TO_BE_ARCHIVED" | "ARCHIVED")
        def job_type: () -> ("TRAINING" | "INFERENCE" | "NOTEBOOK_KERNEL")
        def ml_framework: () -> ::String
        def programming_lang: () -> ::String
        def processor: () -> ("CPU" | "GPU")
        def horovod: () -> bool
        def release_notes: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_image_version-instance_method
      def describe_image_version: (
                                    image_name: ::String,
                                    ?version: ::Integer,
                                    ?alias: ::String
                                  ) -> _DescribeImageVersionResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeImageVersionResponseSuccess

      interface _DescribeInferenceComponentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeInferenceComponentOutput]
        def inference_component_name: () -> ::String
        def inference_component_arn: () -> ::String
        def endpoint_name: () -> ::String
        def endpoint_arn: () -> ::String
        def variant_name: () -> ::String
        def failure_reason: () -> ::String
        def specification: () -> Types::InferenceComponentSpecificationSummary
        def runtime_config: () -> Types::InferenceComponentRuntimeConfigSummary
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def inference_component_status: () -> ("InService" | "Creating" | "Updating" | "Failed" | "Deleting")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_inference_component-instance_method
      def describe_inference_component: (
                                          inference_component_name: ::String
                                        ) -> _DescribeInferenceComponentResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeInferenceComponentResponseSuccess

      interface _DescribeInferenceExperimentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeInferenceExperimentResponse]
        def arn: () -> ::String
        def name: () -> ::String
        def type: () -> ("ShadowMode")
        def schedule: () -> Types::InferenceExperimentSchedule
        def status: () -> ("Creating" | "Created" | "Updating" | "Running" | "Starting" | "Stopping" | "Completed" | "Cancelled")
        def status_reason: () -> ::String
        def description: () -> ::String
        def creation_time: () -> ::Time
        def completion_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def role_arn: () -> ::String
        def endpoint_metadata: () -> Types::EndpointMetadata
        def model_variants: () -> ::Array[Types::ModelVariantConfigSummary]
        def data_storage_config: () -> Types::InferenceExperimentDataStorageConfig
        def shadow_mode_config: () -> Types::ShadowModeConfig
        def kms_key: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_inference_experiment-instance_method
      def describe_inference_experiment: (
                                           name: ::String
                                         ) -> _DescribeInferenceExperimentResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeInferenceExperimentResponseSuccess

      interface _DescribeInferenceRecommendationsJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeInferenceRecommendationsJobResponse]
        def job_name: () -> ::String
        def job_description: () -> ::String
        def job_type: () -> ("Default" | "Advanced")
        def job_arn: () -> ::String
        def role_arn: () -> ::String
        def status: () -> ("PENDING" | "IN_PROGRESS" | "COMPLETED" | "FAILED" | "STOPPING" | "STOPPED" | "DELETING" | "DELETED")
        def creation_time: () -> ::Time
        def completion_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def failure_reason: () -> ::String
        def input_config: () -> Types::RecommendationJobInputConfig
        def stopping_conditions: () -> Types::RecommendationJobStoppingConditions
        def inference_recommendations: () -> ::Array[Types::InferenceRecommendation]
        def endpoint_performances: () -> ::Array[Types::EndpointPerformance]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_inference_recommendations_job-instance_method
      def describe_inference_recommendations_job: (
                                                    job_name: ::String
                                                  ) -> _DescribeInferenceRecommendationsJobResponseSuccess
                                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeInferenceRecommendationsJobResponseSuccess

      interface _DescribeLabelingJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeLabelingJobResponse]
        def labeling_job_status: () -> ("Initializing" | "InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped")
        def label_counters: () -> Types::LabelCounters
        def failure_reason: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def job_reference_code: () -> ::String
        def labeling_job_name: () -> ::String
        def labeling_job_arn: () -> ::String
        def label_attribute_name: () -> ::String
        def input_config: () -> Types::LabelingJobInputConfig
        def output_config: () -> Types::LabelingJobOutputConfig
        def role_arn: () -> ::String
        def label_category_config_s3_uri: () -> ::String
        def stopping_conditions: () -> Types::LabelingJobStoppingConditions
        def labeling_job_algorithms_config: () -> Types::LabelingJobAlgorithmsConfig
        def human_task_config: () -> Types::HumanTaskConfig
        def tags: () -> ::Array[Types::Tag]
        def labeling_job_output: () -> Types::LabelingJobOutput
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_labeling_job-instance_method
      def describe_labeling_job: (
                                   labeling_job_name: ::String
                                 ) -> _DescribeLabelingJobResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeLabelingJobResponseSuccess

      interface _DescribeLineageGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeLineageGroupResponse]
        def lineage_group_name: () -> ::String
        def lineage_group_arn: () -> ::String
        def display_name: () -> ::String
        def description: () -> ::String
        def creation_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_lineage_group-instance_method
      def describe_lineage_group: (
                                    lineage_group_name: ::String
                                  ) -> _DescribeLineageGroupResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeLineageGroupResponseSuccess

      interface _DescribeMlflowTrackingServerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeMlflowTrackingServerResponse]
        def tracking_server_arn: () -> ::String
        def tracking_server_name: () -> ::String
        def artifact_store_uri: () -> ::String
        def tracking_server_size: () -> ("Small" | "Medium" | "Large")
        def mlflow_version: () -> ::String
        def role_arn: () -> ::String
        def tracking_server_status: () -> ("Creating" | "Created" | "CreateFailed" | "Updating" | "Updated" | "UpdateFailed" | "Deleting" | "DeleteFailed" | "Stopping" | "Stopped" | "StopFailed" | "Starting" | "Started" | "StartFailed" | "MaintenanceInProgress" | "MaintenanceComplete" | "MaintenanceFailed")
        def is_active: () -> ("Active" | "Inactive")
        def tracking_server_url: () -> ::String
        def weekly_maintenance_window_start: () -> ::String
        def automatic_model_registration: () -> bool
        def creation_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_mlflow_tracking_server-instance_method
      def describe_mlflow_tracking_server: (
                                             tracking_server_name: ::String
                                           ) -> _DescribeMlflowTrackingServerResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeMlflowTrackingServerResponseSuccess

      interface _DescribeModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeModelOutput]
        def model_name: () -> ::String
        def primary_container: () -> Types::ContainerDefinition
        def containers: () -> ::Array[Types::ContainerDefinition]
        def inference_execution_config: () -> Types::InferenceExecutionConfig
        def execution_role_arn: () -> ::String
        def vpc_config: () -> Types::VpcConfig
        def creation_time: () -> ::Time
        def model_arn: () -> ::String
        def enable_network_isolation: () -> bool
        def deployment_recommendation: () -> Types::DeploymentRecommendation
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_model-instance_method
      def describe_model: (
                            model_name: ::String
                          ) -> _DescribeModelResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeModelResponseSuccess

      interface _DescribeModelBiasJobDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeModelBiasJobDefinitionResponse]
        def job_definition_arn: () -> ::String
        def job_definition_name: () -> ::String
        def creation_time: () -> ::Time
        def model_bias_baseline_config: () -> Types::ModelBiasBaselineConfig
        def model_bias_app_specification: () -> Types::ModelBiasAppSpecification
        def model_bias_job_input: () -> Types::ModelBiasJobInput
        def model_bias_job_output_config: () -> Types::MonitoringOutputConfig
        def job_resources: () -> Types::MonitoringResources
        def network_config: () -> Types::MonitoringNetworkConfig
        def role_arn: () -> ::String
        def stopping_condition: () -> Types::MonitoringStoppingCondition
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_model_bias_job_definition-instance_method
      def describe_model_bias_job_definition: (
                                                job_definition_name: ::String
                                              ) -> _DescribeModelBiasJobDefinitionResponseSuccess
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeModelBiasJobDefinitionResponseSuccess

      interface _DescribeModelCardResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeModelCardResponse]
        def model_card_arn: () -> ::String
        def model_card_name: () -> ::String
        def model_card_version: () -> ::Integer
        def content: () -> ::String
        def model_card_status: () -> ("Draft" | "PendingReview" | "Approved" | "Archived")
        def security_config: () -> Types::ModelCardSecurityConfig
        def creation_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
        def model_card_processing_status: () -> ("DeleteInProgress" | "DeletePending" | "ContentDeleted" | "ExportJobsDeleted" | "DeleteCompleted" | "DeleteFailed")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_model_card-instance_method
      def describe_model_card: (
                                 model_card_name: ::String,
                                 ?model_card_version: ::Integer
                               ) -> _DescribeModelCardResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeModelCardResponseSuccess

      interface _DescribeModelCardExportJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeModelCardExportJobResponse]
        def model_card_export_job_name: () -> ::String
        def model_card_export_job_arn: () -> ::String
        def status: () -> ("InProgress" | "Completed" | "Failed")
        def model_card_name: () -> ::String
        def model_card_version: () -> ::Integer
        def output_config: () -> Types::ModelCardExportOutputConfig
        def created_at: () -> ::Time
        def last_modified_at: () -> ::Time
        def failure_reason: () -> ::String
        def export_artifacts: () -> Types::ModelCardExportArtifacts
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_model_card_export_job-instance_method
      def describe_model_card_export_job: (
                                            model_card_export_job_arn: ::String
                                          ) -> _DescribeModelCardExportJobResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeModelCardExportJobResponseSuccess

      interface _DescribeModelExplainabilityJobDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeModelExplainabilityJobDefinitionResponse]
        def job_definition_arn: () -> ::String
        def job_definition_name: () -> ::String
        def creation_time: () -> ::Time
        def model_explainability_baseline_config: () -> Types::ModelExplainabilityBaselineConfig
        def model_explainability_app_specification: () -> Types::ModelExplainabilityAppSpecification
        def model_explainability_job_input: () -> Types::ModelExplainabilityJobInput
        def model_explainability_job_output_config: () -> Types::MonitoringOutputConfig
        def job_resources: () -> Types::MonitoringResources
        def network_config: () -> Types::MonitoringNetworkConfig
        def role_arn: () -> ::String
        def stopping_condition: () -> Types::MonitoringStoppingCondition
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_model_explainability_job_definition-instance_method
      def describe_model_explainability_job_definition: (
                                                          job_definition_name: ::String
                                                        ) -> _DescribeModelExplainabilityJobDefinitionResponseSuccess
                                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeModelExplainabilityJobDefinitionResponseSuccess

      interface _DescribeModelPackageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeModelPackageOutput]
        def model_package_name: () -> ::String
        def model_package_group_name: () -> ::String
        def model_package_version: () -> ::Integer
        def model_package_arn: () -> ::String
        def model_package_description: () -> ::String
        def creation_time: () -> ::Time
        def inference_specification: () -> Types::InferenceSpecification
        def source_algorithm_specification: () -> Types::SourceAlgorithmSpecification
        def validation_specification: () -> Types::ModelPackageValidationSpecification
        def model_package_status: () -> ("Pending" | "InProgress" | "Completed" | "Failed" | "Deleting")
        def model_package_status_details: () -> Types::ModelPackageStatusDetails
        def certify_for_marketplace: () -> bool
        def model_approval_status: () -> ("Approved" | "Rejected" | "PendingManualApproval")
        def created_by: () -> Types::UserContext
        def metadata_properties: () -> Types::MetadataProperties
        def model_metrics: () -> Types::ModelMetrics
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
        def approval_description: () -> ::String
        def domain: () -> ::String
        def task: () -> ::String
        def sample_payload_url: () -> ::String
        def customer_metadata_properties: () -> ::Hash[::String, ::String]
        def drift_check_baselines: () -> Types::DriftCheckBaselines
        def additional_inference_specifications: () -> ::Array[Types::AdditionalInferenceSpecificationDefinition]
        def skip_model_validation: () -> ("All" | "None")
        def source_uri: () -> ::String
        def security_config: () -> Types::ModelPackageSecurityConfig
        def model_card: () -> Types::ModelPackageModelCard
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_model_package-instance_method
      def describe_model_package: (
                                    model_package_name: ::String
                                  ) -> _DescribeModelPackageResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeModelPackageResponseSuccess

      interface _DescribeModelPackageGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeModelPackageGroupOutput]
        def model_package_group_name: () -> ::String
        def model_package_group_arn: () -> ::String
        def model_package_group_description: () -> ::String
        def creation_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def model_package_group_status: () -> ("Pending" | "InProgress" | "Completed" | "Failed" | "Deleting" | "DeleteFailed")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_model_package_group-instance_method
      def describe_model_package_group: (
                                          model_package_group_name: ::String
                                        ) -> _DescribeModelPackageGroupResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeModelPackageGroupResponseSuccess

      interface _DescribeModelQualityJobDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeModelQualityJobDefinitionResponse]
        def job_definition_arn: () -> ::String
        def job_definition_name: () -> ::String
        def creation_time: () -> ::Time
        def model_quality_baseline_config: () -> Types::ModelQualityBaselineConfig
        def model_quality_app_specification: () -> Types::ModelQualityAppSpecification
        def model_quality_job_input: () -> Types::ModelQualityJobInput
        def model_quality_job_output_config: () -> Types::MonitoringOutputConfig
        def job_resources: () -> Types::MonitoringResources
        def network_config: () -> Types::MonitoringNetworkConfig
        def role_arn: () -> ::String
        def stopping_condition: () -> Types::MonitoringStoppingCondition
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_model_quality_job_definition-instance_method
      def describe_model_quality_job_definition: (
                                                   job_definition_name: ::String
                                                 ) -> _DescribeModelQualityJobDefinitionResponseSuccess
                                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeModelQualityJobDefinitionResponseSuccess

      interface _DescribeMonitoringScheduleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeMonitoringScheduleResponse]
        def monitoring_schedule_arn: () -> ::String
        def monitoring_schedule_name: () -> ::String
        def monitoring_schedule_status: () -> ("Pending" | "Failed" | "Scheduled" | "Stopped")
        def monitoring_type: () -> ("DataQuality" | "ModelQuality" | "ModelBias" | "ModelExplainability")
        def failure_reason: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def monitoring_schedule_config: () -> Types::MonitoringScheduleConfig
        def endpoint_name: () -> ::String
        def last_monitoring_execution_summary: () -> Types::MonitoringExecutionSummary
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_monitoring_schedule-instance_method
      def describe_monitoring_schedule: (
                                          monitoring_schedule_name: ::String
                                        ) -> _DescribeMonitoringScheduleResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeMonitoringScheduleResponseSuccess

      interface _DescribeNotebookInstanceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeNotebookInstanceOutput]
        def notebook_instance_arn: () -> ::String
        def notebook_instance_name: () -> ::String
        def notebook_instance_status: () -> ("Pending" | "InService" | "Stopping" | "Stopped" | "Failed" | "Deleting" | "Updating")
        def failure_reason: () -> ::String
        def url: () -> ::String
        def instance_type: () -> ("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge")
        def subnet_id: () -> ::String
        def security_groups: () -> ::Array[::String]
        def role_arn: () -> ::String
        def kms_key_id: () -> ::String
        def network_interface_id: () -> ::String
        def last_modified_time: () -> ::Time
        def creation_time: () -> ::Time
        def notebook_instance_lifecycle_config_name: () -> ::String
        def direct_internet_access: () -> ("Enabled" | "Disabled")
        def volume_size_in_gb: () -> ::Integer
        def accelerator_types: () -> ::Array[("ml.eia1.medium" | "ml.eia1.large" | "ml.eia1.xlarge" | "ml.eia2.medium" | "ml.eia2.large" | "ml.eia2.xlarge")]
        def default_code_repository: () -> ::String
        def additional_code_repositories: () -> ::Array[::String]
        def root_access: () -> ("Enabled" | "Disabled")
        def platform_identifier: () -> ::String
        def instance_metadata_service_configuration: () -> Types::InstanceMetadataServiceConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_notebook_instance-instance_method
      def describe_notebook_instance: (
                                        notebook_instance_name: ::String
                                      ) -> _DescribeNotebookInstanceResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeNotebookInstanceResponseSuccess

      interface _DescribeNotebookInstanceLifecycleConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeNotebookInstanceLifecycleConfigOutput]
        def notebook_instance_lifecycle_config_arn: () -> ::String
        def notebook_instance_lifecycle_config_name: () -> ::String
        def on_create: () -> ::Array[Types::NotebookInstanceLifecycleHook]
        def on_start: () -> ::Array[Types::NotebookInstanceLifecycleHook]
        def last_modified_time: () -> ::Time
        def creation_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_notebook_instance_lifecycle_config-instance_method
      def describe_notebook_instance_lifecycle_config: (
                                                         notebook_instance_lifecycle_config_name: ::String
                                                       ) -> _DescribeNotebookInstanceLifecycleConfigResponseSuccess
                                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeNotebookInstanceLifecycleConfigResponseSuccess

      interface _DescribeOptimizationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeOptimizationJobResponse]
        def optimization_job_arn: () -> ::String
        def optimization_job_status: () -> ("INPROGRESS" | "COMPLETED" | "FAILED" | "STARTING" | "STOPPING" | "STOPPED")
        def optimization_start_time: () -> ::Time
        def optimization_end_time: () -> ::Time
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def failure_reason: () -> ::String
        def optimization_job_name: () -> ::String
        def model_source: () -> Types::OptimizationJobModelSource
        def optimization_environment: () -> ::Hash[::String, ::String]
        def deployment_instance_type: () -> ("ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.inf2.xlarge" | "ml.inf2.8xlarge" | "ml.inf2.24xlarge" | "ml.inf2.48xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge")
        def optimization_configs: () -> ::Array[Types::OptimizationConfig]
        def output_config: () -> Types::OptimizationJobOutputConfig
        def optimization_output: () -> Types::OptimizationOutput
        def role_arn: () -> ::String
        def stopping_condition: () -> Types::StoppingCondition
        def vpc_config: () -> Types::OptimizationVpcConfig
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_optimization_job-instance_method
      def describe_optimization_job: (
                                       optimization_job_name: ::String
                                     ) -> _DescribeOptimizationJobResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeOptimizationJobResponseSuccess

      interface _DescribePipelineResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribePipelineResponse]
        def pipeline_arn: () -> ::String
        def pipeline_name: () -> ::String
        def pipeline_display_name: () -> ::String
        def pipeline_definition: () -> ::String
        def pipeline_description: () -> ::String
        def role_arn: () -> ::String
        def pipeline_status: () -> ("Active" | "Deleting")
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def last_run_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_by: () -> Types::UserContext
        def parallelism_configuration: () -> Types::ParallelismConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_pipeline-instance_method
      def describe_pipeline: (
                               pipeline_name: ::String
                             ) -> _DescribePipelineResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribePipelineResponseSuccess

      interface _DescribePipelineDefinitionForExecutionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribePipelineDefinitionForExecutionResponse]
        def pipeline_definition: () -> ::String
        def creation_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_pipeline_definition_for_execution-instance_method
      def describe_pipeline_definition_for_execution: (
                                                        pipeline_execution_arn: ::String
                                                      ) -> _DescribePipelineDefinitionForExecutionResponseSuccess
                                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribePipelineDefinitionForExecutionResponseSuccess

      interface _DescribePipelineExecutionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribePipelineExecutionResponse]
        def pipeline_arn: () -> ::String
        def pipeline_execution_arn: () -> ::String
        def pipeline_execution_display_name: () -> ::String
        def pipeline_execution_status: () -> ("Executing" | "Stopping" | "Stopped" | "Failed" | "Succeeded")
        def pipeline_execution_description: () -> ::String
        def pipeline_experiment_config: () -> Types::PipelineExperimentConfig
        def failure_reason: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_by: () -> Types::UserContext
        def parallelism_configuration: () -> Types::ParallelismConfiguration
        def selective_execution_config: () -> Types::SelectiveExecutionConfig
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_pipeline_execution-instance_method
      def describe_pipeline_execution: (
                                         pipeline_execution_arn: ::String
                                       ) -> _DescribePipelineExecutionResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribePipelineExecutionResponseSuccess

      interface _DescribeProcessingJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeProcessingJobResponse]
        def processing_inputs: () -> ::Array[Types::ProcessingInput]
        def processing_output_config: () -> Types::ProcessingOutputConfig
        def processing_job_name: () -> ::String
        def processing_resources: () -> Types::ProcessingResources
        def stopping_condition: () -> Types::ProcessingStoppingCondition
        def app_specification: () -> Types::AppSpecification
        def environment: () -> ::Hash[::String, ::String]
        def network_config: () -> Types::NetworkConfig
        def role_arn: () -> ::String
        def experiment_config: () -> Types::ExperimentConfig
        def processing_job_arn: () -> ::String
        def processing_job_status: () -> ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped")
        def exit_message: () -> ::String
        def failure_reason: () -> ::String
        def processing_end_time: () -> ::Time
        def processing_start_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def creation_time: () -> ::Time
        def monitoring_schedule_arn: () -> ::String
        def auto_ml_job_arn: () -> ::String
        def training_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_processing_job-instance_method
      def describe_processing_job: (
                                     processing_job_name: ::String
                                   ) -> _DescribeProcessingJobResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeProcessingJobResponseSuccess

      interface _DescribeProjectResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeProjectOutput]
        def project_arn: () -> ::String
        def project_name: () -> ::String
        def project_id: () -> ::String
        def project_description: () -> ::String
        def service_catalog_provisioning_details: () -> Types::ServiceCatalogProvisioningDetails
        def service_catalog_provisioned_product_details: () -> Types::ServiceCatalogProvisionedProductDetails
        def project_status: () -> ("Pending" | "CreateInProgress" | "CreateCompleted" | "CreateFailed" | "DeleteInProgress" | "DeleteFailed" | "DeleteCompleted" | "UpdateInProgress" | "UpdateCompleted" | "UpdateFailed")
        def created_by: () -> Types::UserContext
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_project-instance_method
      def describe_project: (
                              project_name: ::String
                            ) -> _DescribeProjectResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeProjectResponseSuccess

      interface _DescribeSpaceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeSpaceResponse]
        def domain_id: () -> ::String
        def space_arn: () -> ::String
        def space_name: () -> ::String
        def home_efs_file_system_uid: () -> ::String
        def status: () -> ("Deleting" | "Failed" | "InService" | "Pending" | "Updating" | "Update_Failed" | "Delete_Failed")
        def last_modified_time: () -> ::Time
        def creation_time: () -> ::Time
        def failure_reason: () -> ::String
        def space_settings: () -> Types::SpaceSettings
        def ownership_settings: () -> Types::OwnershipSettings
        def space_sharing_settings: () -> Types::SpaceSharingSettings
        def space_display_name: () -> ::String
        def url: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_space-instance_method
      def describe_space: (
                            domain_id: ::String,
                            space_name: ::String
                          ) -> _DescribeSpaceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeSpaceResponseSuccess

      interface _DescribeStudioLifecycleConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeStudioLifecycleConfigResponse]
        def studio_lifecycle_config_arn: () -> ::String
        def studio_lifecycle_config_name: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def studio_lifecycle_config_content: () -> ::String
        def studio_lifecycle_config_app_type: () -> ("JupyterServer" | "KernelGateway" | "CodeEditor" | "JupyterLab")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_studio_lifecycle_config-instance_method
      def describe_studio_lifecycle_config: (
                                              studio_lifecycle_config_name: ::String
                                            ) -> _DescribeStudioLifecycleConfigResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeStudioLifecycleConfigResponseSuccess

      interface _DescribeSubscribedWorkteamResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeSubscribedWorkteamResponse]
        def subscribed_workteam: () -> Types::SubscribedWorkteam
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_subscribed_workteam-instance_method
      def describe_subscribed_workteam: (
                                          workteam_arn: ::String
                                        ) -> _DescribeSubscribedWorkteamResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeSubscribedWorkteamResponseSuccess

      interface _DescribeTrainingJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeTrainingJobResponse]
        def training_job_name: () -> ::String
        def training_job_arn: () -> ::String
        def tuning_job_arn: () -> ::String
        def labeling_job_arn: () -> ::String
        def auto_ml_job_arn: () -> ::String
        def model_artifacts: () -> Types::ModelArtifacts
        def training_job_status: () -> ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped")
        def secondary_status: () -> ("Starting" | "LaunchingMLInstances" | "PreparingTrainingStack" | "Downloading" | "DownloadingTrainingImage" | "Training" | "Uploading" | "Stopping" | "Stopped" | "MaxRuntimeExceeded" | "Completed" | "Failed" | "Interrupted" | "MaxWaitTimeExceeded" | "Updating" | "Restarting" | "Pending")
        def failure_reason: () -> ::String
        def hyper_parameters: () -> ::Hash[::String, ::String]
        def algorithm_specification: () -> Types::AlgorithmSpecification
        def role_arn: () -> ::String
        def input_data_config: () -> ::Array[Types::Channel]
        def output_data_config: () -> Types::OutputDataConfig
        def resource_config: () -> Types::ResourceConfig
        def warm_pool_status: () -> Types::WarmPoolStatus
        def vpc_config: () -> Types::VpcConfig
        def stopping_condition: () -> Types::StoppingCondition
        def creation_time: () -> ::Time
        def training_start_time: () -> ::Time
        def training_end_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def secondary_status_transitions: () -> ::Array[Types::SecondaryStatusTransition]
        def final_metric_data_list: () -> ::Array[Types::MetricData]
        def enable_network_isolation: () -> bool
        def enable_inter_container_traffic_encryption: () -> bool
        def enable_managed_spot_training: () -> bool
        def checkpoint_config: () -> Types::CheckpointConfig
        def training_time_in_seconds: () -> ::Integer
        def billable_time_in_seconds: () -> ::Integer
        def debug_hook_config: () -> Types::DebugHookConfig
        def experiment_config: () -> Types::ExperimentConfig
        def debug_rule_configurations: () -> ::Array[Types::DebugRuleConfiguration]
        def tensor_board_output_config: () -> Types::TensorBoardOutputConfig
        def debug_rule_evaluation_statuses: () -> ::Array[Types::DebugRuleEvaluationStatus]
        def profiler_config: () -> Types::ProfilerConfig
        def profiler_rule_configurations: () -> ::Array[Types::ProfilerRuleConfiguration]
        def profiler_rule_evaluation_statuses: () -> ::Array[Types::ProfilerRuleEvaluationStatus]
        def profiling_status: () -> ("Enabled" | "Disabled")
        def environment: () -> ::Hash[::String, ::String]
        def retry_strategy: () -> Types::RetryStrategy
        def remote_debug_config: () -> Types::RemoteDebugConfig
        def infra_check_config: () -> Types::InfraCheckConfig
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_training_job-instance_method
      def describe_training_job: (
                                   training_job_name: ::String
                                 ) -> _DescribeTrainingJobResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeTrainingJobResponseSuccess

      interface _DescribeTransformJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeTransformJobResponse]
        def transform_job_name: () -> ::String
        def transform_job_arn: () -> ::String
        def transform_job_status: () -> ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped")
        def failure_reason: () -> ::String
        def model_name: () -> ::String
        def max_concurrent_transforms: () -> ::Integer
        def model_client_config: () -> Types::ModelClientConfig
        def max_payload_in_mb: () -> ::Integer
        def batch_strategy: () -> ("MultiRecord" | "SingleRecord")
        def environment: () -> ::Hash[::String, ::String]
        def transform_input: () -> Types::TransformInput
        def transform_output: () -> Types::TransformOutput
        def data_capture_config: () -> Types::BatchDataCaptureConfig
        def transform_resources: () -> Types::TransformResources
        def creation_time: () -> ::Time
        def transform_start_time: () -> ::Time
        def transform_end_time: () -> ::Time
        def labeling_job_arn: () -> ::String
        def auto_ml_job_arn: () -> ::String
        def data_processing: () -> Types::DataProcessing
        def experiment_config: () -> Types::ExperimentConfig
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_transform_job-instance_method
      def describe_transform_job: (
                                    transform_job_name: ::String
                                  ) -> _DescribeTransformJobResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeTransformJobResponseSuccess

      interface _DescribeTrialResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeTrialResponse]
        def trial_name: () -> ::String
        def trial_arn: () -> ::String
        def display_name: () -> ::String
        def experiment_name: () -> ::String
        def source: () -> Types::TrialSource
        def creation_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
        def metadata_properties: () -> Types::MetadataProperties
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_trial-instance_method
      def describe_trial: (
                            trial_name: ::String
                          ) -> _DescribeTrialResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeTrialResponseSuccess

      interface _DescribeTrialComponentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeTrialComponentResponse]
        def trial_component_name: () -> ::String
        def trial_component_arn: () -> ::String
        def display_name: () -> ::String
        def source: () -> Types::TrialComponentSource
        def status: () -> Types::TrialComponentStatus
        def start_time: () -> ::Time
        def end_time: () -> ::Time
        def creation_time: () -> ::Time
        def created_by: () -> Types::UserContext
        def last_modified_time: () -> ::Time
        def last_modified_by: () -> Types::UserContext
        def parameters: () -> ::Hash[::String, Types::TrialComponentParameterValue]
        def input_artifacts: () -> ::Hash[::String, Types::TrialComponentArtifact]
        def output_artifacts: () -> ::Hash[::String, Types::TrialComponentArtifact]
        def metadata_properties: () -> Types::MetadataProperties
        def metrics: () -> ::Array[Types::TrialComponentMetricSummary]
        def lineage_group_arn: () -> ::String
        def sources: () -> ::Array[Types::TrialComponentSource]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_trial_component-instance_method
      def describe_trial_component: (
                                      trial_component_name: ::String
                                    ) -> _DescribeTrialComponentResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeTrialComponentResponseSuccess

      interface _DescribeUserProfileResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeUserProfileResponse]
        def domain_id: () -> ::String
        def user_profile_arn: () -> ::String
        def user_profile_name: () -> ::String
        def home_efs_file_system_uid: () -> ::String
        def status: () -> ("Deleting" | "Failed" | "InService" | "Pending" | "Updating" | "Update_Failed" | "Delete_Failed")
        def last_modified_time: () -> ::Time
        def creation_time: () -> ::Time
        def failure_reason: () -> ::String
        def single_sign_on_user_identifier: () -> ::String
        def single_sign_on_user_value: () -> ::String
        def user_settings: () -> Types::UserSettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_user_profile-instance_method
      def describe_user_profile: (
                                   domain_id: ::String,
                                   user_profile_name: ::String
                                 ) -> _DescribeUserProfileResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeUserProfileResponseSuccess

      interface _DescribeWorkforceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeWorkforceResponse]
        def workforce: () -> Types::Workforce
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_workforce-instance_method
      def describe_workforce: (
                                workforce_name: ::String
                              ) -> _DescribeWorkforceResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeWorkforceResponseSuccess

      interface _DescribeWorkteamResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeWorkteamResponse]
        def workteam: () -> Types::Workteam
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#describe_workteam-instance_method
      def describe_workteam: (
                               workteam_name: ::String
                             ) -> _DescribeWorkteamResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeWorkteamResponseSuccess

      interface _DisableSagemakerServicecatalogPortfolioResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisableSagemakerServicecatalogPortfolioOutput]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#disable_sagemaker_servicecatalog_portfolio-instance_method
      def disable_sagemaker_servicecatalog_portfolio: (
                                                      ) -> _DisableSagemakerServicecatalogPortfolioResponseSuccess
                                                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisableSagemakerServicecatalogPortfolioResponseSuccess

      interface _DisassociateTrialComponentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateTrialComponentResponse]
        def trial_component_arn: () -> ::String
        def trial_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#disassociate_trial_component-instance_method
      def disassociate_trial_component: (
                                          trial_component_name: ::String,
                                          trial_name: ::String
                                        ) -> _DisassociateTrialComponentResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateTrialComponentResponseSuccess

      interface _EnableSagemakerServicecatalogPortfolioResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::EnableSagemakerServicecatalogPortfolioOutput]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#enable_sagemaker_servicecatalog_portfolio-instance_method
      def enable_sagemaker_servicecatalog_portfolio: (
                                                     ) -> _EnableSagemakerServicecatalogPortfolioResponseSuccess
                                                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _EnableSagemakerServicecatalogPortfolioResponseSuccess

      interface _GetDeviceFleetReportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetDeviceFleetReportResponse]
        def device_fleet_arn: () -> ::String
        def device_fleet_name: () -> ::String
        def output_config: () -> Types::EdgeOutputConfig
        def description: () -> ::String
        def report_generated: () -> ::Time
        def device_stats: () -> Types::DeviceStats
        def agent_versions: () -> ::Array[Types::AgentVersion]
        def model_stats: () -> ::Array[Types::EdgeModelStat]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#get_device_fleet_report-instance_method
      def get_device_fleet_report: (
                                     device_fleet_name: ::String
                                   ) -> _GetDeviceFleetReportResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetDeviceFleetReportResponseSuccess

      interface _GetLineageGroupPolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetLineageGroupPolicyResponse]
        def lineage_group_arn: () -> ::String
        def resource_policy: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#get_lineage_group_policy-instance_method
      def get_lineage_group_policy: (
                                      lineage_group_name: ::String
                                    ) -> _GetLineageGroupPolicyResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetLineageGroupPolicyResponseSuccess

      interface _GetModelPackageGroupPolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetModelPackageGroupPolicyOutput]
        def resource_policy: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#get_model_package_group_policy-instance_method
      def get_model_package_group_policy: (
                                            model_package_group_name: ::String
                                          ) -> _GetModelPackageGroupPolicyResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetModelPackageGroupPolicyResponseSuccess

      interface _GetSagemakerServicecatalogPortfolioStatusResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetSagemakerServicecatalogPortfolioStatusOutput]
        def status: () -> ("Enabled" | "Disabled")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#get_sagemaker_servicecatalog_portfolio_status-instance_method
      def get_sagemaker_servicecatalog_portfolio_status: (
                                                         ) -> _GetSagemakerServicecatalogPortfolioStatusResponseSuccess
                                                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetSagemakerServicecatalogPortfolioStatusResponseSuccess

      interface _GetScalingConfigurationRecommendationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetScalingConfigurationRecommendationResponse]
        def inference_recommendations_job_name: () -> ::String
        def recommendation_id: () -> ::String
        def endpoint_name: () -> ::String
        def target_cpu_utilization_per_core: () -> ::Integer
        def scaling_policy_objective: () -> Types::ScalingPolicyObjective
        def metric: () -> Types::ScalingPolicyMetric
        def dynamic_scaling_configuration: () -> Types::DynamicScalingConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#get_scaling_configuration_recommendation-instance_method
      def get_scaling_configuration_recommendation: (
                                                      inference_recommendations_job_name: ::String,
                                                      ?recommendation_id: ::String,
                                                      ?endpoint_name: ::String,
                                                      ?target_cpu_utilization_per_core: ::Integer,
                                                      ?scaling_policy_objective: {
                                                        min_invocations_per_minute: ::Integer?,
                                                        max_invocations_per_minute: ::Integer?
                                                      }
                                                    ) -> _GetScalingConfigurationRecommendationResponseSuccess
                                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetScalingConfigurationRecommendationResponseSuccess

      interface _GetSearchSuggestionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetSearchSuggestionsResponse]
        def property_name_suggestions: () -> ::Array[Types::PropertyNameSuggestion]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#get_search_suggestions-instance_method
      def get_search_suggestions: (
                                    resource: ("TrainingJob" | "Experiment" | "ExperimentTrial" | "ExperimentTrialComponent" | "Endpoint" | "Model" | "ModelPackage" | "ModelPackageGroup" | "Pipeline" | "PipelineExecution" | "FeatureGroup" | "FeatureMetadata" | "Image" | "ImageVersion" | "Project" | "HyperParameterTuningJob" | "ModelCard"),
                                    ?suggestion_query: {
                                      property_name_query: {
                                        property_name_hint: ::String
                                      }?
                                    }
                                  ) -> _GetSearchSuggestionsResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetSearchSuggestionsResponseSuccess

      interface _ImportHubContentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ImportHubContentResponse]
        def hub_arn: () -> ::String
        def hub_content_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#import_hub_content-instance_method
      def import_hub_content: (
                                hub_content_name: ::String,
                                ?hub_content_version: ::String,
                                hub_content_type: ("Model" | "Notebook" | "ModelReference"),
                                document_schema_version: ::String,
                                hub_name: ::String,
                                ?hub_content_display_name: ::String,
                                ?hub_content_description: ::String,
                                ?hub_content_markdown: ::String,
                                hub_content_document: ::String,
                                ?hub_content_search_keywords: Array[::String],
                                ?tags: Array[
                                  {
                                    key: ::String,
                                    value: ::String
                                  },
                                ]
                              ) -> _ImportHubContentResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ImportHubContentResponseSuccess

      interface _ListActionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListActionsResponse]
        def action_summaries: () -> ::Array[Types::ActionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_actions-instance_method
      def list_actions: (
                          ?source_uri: ::String,
                          ?action_type: ::String,
                          ?created_after: ::Time,
                          ?created_before: ::Time,
                          ?sort_by: ("Name" | "CreationTime"),
                          ?sort_order: ("Ascending" | "Descending"),
                          ?next_token: ::String,
                          ?max_results: ::Integer
                        ) -> _ListActionsResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListActionsResponseSuccess

      interface _ListAlgorithmsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAlgorithmsOutput]
        def algorithm_summary_list: () -> ::Array[Types::AlgorithmSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_algorithms-instance_method
      def list_algorithms: (
                             ?creation_time_after: ::Time,
                             ?creation_time_before: ::Time,
                             ?max_results: ::Integer,
                             ?name_contains: ::String,
                             ?next_token: ::String,
                             ?sort_by: ("Name" | "CreationTime"),
                             ?sort_order: ("Ascending" | "Descending")
                           ) -> _ListAlgorithmsResponseSuccess
                         | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAlgorithmsResponseSuccess

      interface _ListAliasesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAliasesResponse]
        def sage_maker_image_version_aliases: () -> ::Array[::String]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_aliases-instance_method
      def list_aliases: (
                          image_name: ::String,
                          ?alias: ::String,
                          ?version: ::Integer,
                          ?max_results: ::Integer,
                          ?next_token: ::String
                        ) -> _ListAliasesResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAliasesResponseSuccess

      interface _ListAppImageConfigsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAppImageConfigsResponse]
        def next_token: () -> ::String
        def app_image_configs: () -> ::Array[Types::AppImageConfigDetails]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_app_image_configs-instance_method
      def list_app_image_configs: (
                                    ?max_results: ::Integer,
                                    ?next_token: ::String,
                                    ?name_contains: ::String,
                                    ?creation_time_before: ::Time,
                                    ?creation_time_after: ::Time,
                                    ?modified_time_before: ::Time,
                                    ?modified_time_after: ::Time,
                                    ?sort_by: ("CreationTime" | "LastModifiedTime" | "Name"),
                                    ?sort_order: ("Ascending" | "Descending")
                                  ) -> _ListAppImageConfigsResponseSuccess
                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAppImageConfigsResponseSuccess

      interface _ListAppsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAppsResponse]
        def apps: () -> ::Array[Types::AppDetails]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_apps-instance_method
      def list_apps: (
                       ?next_token: ::String,
                       ?max_results: ::Integer,
                       ?sort_order: ("Ascending" | "Descending"),
                       ?sort_by: ("CreationTime"),
                       ?domain_id_equals: ::String,
                       ?user_profile_name_equals: ::String,
                       ?space_name_equals: ::String
                     ) -> _ListAppsResponseSuccess
                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAppsResponseSuccess

      interface _ListArtifactsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListArtifactsResponse]
        def artifact_summaries: () -> ::Array[Types::ArtifactSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_artifacts-instance_method
      def list_artifacts: (
                            ?source_uri: ::String,
                            ?artifact_type: ::String,
                            ?created_after: ::Time,
                            ?created_before: ::Time,
                            ?sort_by: ("CreationTime"),
                            ?sort_order: ("Ascending" | "Descending"),
                            ?next_token: ::String,
                            ?max_results: ::Integer
                          ) -> _ListArtifactsResponseSuccess
                        | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListArtifactsResponseSuccess

      interface _ListAssociationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAssociationsResponse]
        def association_summaries: () -> ::Array[Types::AssociationSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_associations-instance_method
      def list_associations: (
                               ?source_arn: ::String,
                               ?destination_arn: ::String,
                               ?source_type: ::String,
                               ?destination_type: ::String,
                               ?association_type: ("ContributedTo" | "AssociatedWith" | "DerivedFrom" | "Produced" | "SameAs"),
                               ?created_after: ::Time,
                               ?created_before: ::Time,
                               ?sort_by: ("SourceArn" | "DestinationArn" | "SourceType" | "DestinationType" | "CreationTime"),
                               ?sort_order: ("Ascending" | "Descending"),
                               ?next_token: ::String,
                               ?max_results: ::Integer
                             ) -> _ListAssociationsResponseSuccess
                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAssociationsResponseSuccess

      interface _ListAutoMLJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAutoMLJobsResponse]
        def auto_ml_job_summaries: () -> ::Array[Types::AutoMLJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_auto_ml_jobs-instance_method
      def list_auto_ml_jobs: (
                               ?creation_time_after: ::Time,
                               ?creation_time_before: ::Time,
                               ?last_modified_time_after: ::Time,
                               ?last_modified_time_before: ::Time,
                               ?name_contains: ::String,
                               ?status_equals: ("Completed" | "InProgress" | "Failed" | "Stopped" | "Stopping"),
                               ?sort_order: ("Ascending" | "Descending"),
                               ?sort_by: ("Name" | "CreationTime" | "Status"),
                               ?max_results: ::Integer,
                               ?next_token: ::String
                             ) -> _ListAutoMLJobsResponseSuccess
                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAutoMLJobsResponseSuccess

      interface _ListCandidatesForAutoMLJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListCandidatesForAutoMLJobResponse]
        def candidates: () -> ::Array[Types::AutoMLCandidate]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_candidates_for_auto_ml_job-instance_method
      def list_candidates_for_auto_ml_job: (
                                             auto_ml_job_name: ::String,
                                             ?status_equals: ("Completed" | "InProgress" | "Failed" | "Stopped" | "Stopping"),
                                             ?candidate_name_equals: ::String,
                                             ?sort_order: ("Ascending" | "Descending"),
                                             ?sort_by: ("CreationTime" | "Status" | "FinalObjectiveMetricValue"),
                                             ?max_results: ::Integer,
                                             ?next_token: ::String
                                           ) -> _ListCandidatesForAutoMLJobResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListCandidatesForAutoMLJobResponseSuccess

      interface _ListClusterNodesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListClusterNodesResponse]
        def next_token: () -> ::String
        def cluster_node_summaries: () -> ::Array[Types::ClusterNodeSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_cluster_nodes-instance_method
      def list_cluster_nodes: (
                                cluster_name: ::String,
                                ?creation_time_after: ::Time,
                                ?creation_time_before: ::Time,
                                ?instance_group_name_contains: ::String,
                                ?max_results: ::Integer,
                                ?next_token: ::String,
                                ?sort_by: ("CREATION_TIME" | "NAME"),
                                ?sort_order: ("Ascending" | "Descending")
                              ) -> _ListClusterNodesResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListClusterNodesResponseSuccess

      interface _ListClustersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListClustersResponse]
        def next_token: () -> ::String
        def cluster_summaries: () -> ::Array[Types::ClusterSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_clusters-instance_method
      def list_clusters: (
                           ?creation_time_after: ::Time,
                           ?creation_time_before: ::Time,
                           ?max_results: ::Integer,
                           ?name_contains: ::String,
                           ?next_token: ::String,
                           ?sort_by: ("CREATION_TIME" | "NAME"),
                           ?sort_order: ("Ascending" | "Descending")
                         ) -> _ListClustersResponseSuccess
                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListClustersResponseSuccess

      interface _ListCodeRepositoriesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListCodeRepositoriesOutput]
        def code_repository_summary_list: () -> ::Array[Types::CodeRepositorySummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_code_repositories-instance_method
      def list_code_repositories: (
                                    ?creation_time_after: ::Time,
                                    ?creation_time_before: ::Time,
                                    ?last_modified_time_after: ::Time,
                                    ?last_modified_time_before: ::Time,
                                    ?max_results: ::Integer,
                                    ?name_contains: ::String,
                                    ?next_token: ::String,
                                    ?sort_by: ("Name" | "CreationTime" | "LastModifiedTime"),
                                    ?sort_order: ("Ascending" | "Descending")
                                  ) -> _ListCodeRepositoriesResponseSuccess
                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListCodeRepositoriesResponseSuccess

      interface _ListCompilationJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListCompilationJobsResponse]
        def compilation_job_summaries: () -> ::Array[Types::CompilationJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_compilation_jobs-instance_method
      def list_compilation_jobs: (
                                   ?next_token: ::String,
                                   ?max_results: ::Integer,
                                   ?creation_time_after: ::Time,
                                   ?creation_time_before: ::Time,
                                   ?last_modified_time_after: ::Time,
                                   ?last_modified_time_before: ::Time,
                                   ?name_contains: ::String,
                                   ?status_equals: ("INPROGRESS" | "COMPLETED" | "FAILED" | "STARTING" | "STOPPING" | "STOPPED"),
                                   ?sort_by: ("Name" | "CreationTime" | "Status"),
                                   ?sort_order: ("Ascending" | "Descending")
                                 ) -> _ListCompilationJobsResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListCompilationJobsResponseSuccess

      interface _ListContextsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListContextsResponse]
        def context_summaries: () -> ::Array[Types::ContextSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_contexts-instance_method
      def list_contexts: (
                           ?source_uri: ::String,
                           ?context_type: ::String,
                           ?created_after: ::Time,
                           ?created_before: ::Time,
                           ?sort_by: ("Name" | "CreationTime"),
                           ?sort_order: ("Ascending" | "Descending"),
                           ?next_token: ::String,
                           ?max_results: ::Integer
                         ) -> _ListContextsResponseSuccess
                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListContextsResponseSuccess

      interface _ListDataQualityJobDefinitionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListDataQualityJobDefinitionsResponse]
        def job_definition_summaries: () -> ::Array[Types::MonitoringJobDefinitionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_data_quality_job_definitions-instance_method
      def list_data_quality_job_definitions: (
                                               ?endpoint_name: ::String,
                                               ?sort_by: ("Name" | "CreationTime"),
                                               ?sort_order: ("Ascending" | "Descending"),
                                               ?next_token: ::String,
                                               ?max_results: ::Integer,
                                               ?name_contains: ::String,
                                               ?creation_time_before: ::Time,
                                               ?creation_time_after: ::Time
                                             ) -> _ListDataQualityJobDefinitionsResponseSuccess
                                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListDataQualityJobDefinitionsResponseSuccess

      interface _ListDeviceFleetsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListDeviceFleetsResponse]
        def device_fleet_summaries: () -> ::Array[Types::DeviceFleetSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_device_fleets-instance_method
      def list_device_fleets: (
                                ?next_token: ::String,
                                ?max_results: ::Integer,
                                ?creation_time_after: ::Time,
                                ?creation_time_before: ::Time,
                                ?last_modified_time_after: ::Time,
                                ?last_modified_time_before: ::Time,
                                ?name_contains: ::String,
                                ?sort_by: ("NAME" | "CREATION_TIME" | "LAST_MODIFIED_TIME"),
                                ?sort_order: ("Ascending" | "Descending")
                              ) -> _ListDeviceFleetsResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListDeviceFleetsResponseSuccess

      interface _ListDevicesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListDevicesResponse]
        def device_summaries: () -> ::Array[Types::DeviceSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_devices-instance_method
      def list_devices: (
                          ?next_token: ::String,
                          ?max_results: ::Integer,
                          ?latest_heartbeat_after: ::Time,
                          ?model_name: ::String,
                          ?device_fleet_name: ::String
                        ) -> _ListDevicesResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListDevicesResponseSuccess

      interface _ListDomainsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListDomainsResponse]
        def domains: () -> ::Array[Types::DomainDetails]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_domains-instance_method
      def list_domains: (
                          ?next_token: ::String,
                          ?max_results: ::Integer
                        ) -> _ListDomainsResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListDomainsResponseSuccess

      interface _ListEdgeDeploymentPlansResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListEdgeDeploymentPlansResponse]
        def edge_deployment_plan_summaries: () -> ::Array[Types::EdgeDeploymentPlanSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_edge_deployment_plans-instance_method
      def list_edge_deployment_plans: (
                                        ?next_token: ::String,
                                        ?max_results: ::Integer,
                                        ?creation_time_after: ::Time,
                                        ?creation_time_before: ::Time,
                                        ?last_modified_time_after: ::Time,
                                        ?last_modified_time_before: ::Time,
                                        ?name_contains: ::String,
                                        ?device_fleet_name_contains: ::String,
                                        ?sort_by: ("NAME" | "DEVICE_FLEET_NAME" | "CREATION_TIME" | "LAST_MODIFIED_TIME"),
                                        ?sort_order: ("Ascending" | "Descending")
                                      ) -> _ListEdgeDeploymentPlansResponseSuccess
                                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListEdgeDeploymentPlansResponseSuccess

      interface _ListEdgePackagingJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListEdgePackagingJobsResponse]
        def edge_packaging_job_summaries: () -> ::Array[Types::EdgePackagingJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_edge_packaging_jobs-instance_method
      def list_edge_packaging_jobs: (
                                      ?next_token: ::String,
                                      ?max_results: ::Integer,
                                      ?creation_time_after: ::Time,
                                      ?creation_time_before: ::Time,
                                      ?last_modified_time_after: ::Time,
                                      ?last_modified_time_before: ::Time,
                                      ?name_contains: ::String,
                                      ?model_name_contains: ::String,
                                      ?status_equals: ("STARTING" | "INPROGRESS" | "COMPLETED" | "FAILED" | "STOPPING" | "STOPPED"),
                                      ?sort_by: ("NAME" | "MODEL_NAME" | "CREATION_TIME" | "LAST_MODIFIED_TIME" | "STATUS"),
                                      ?sort_order: ("Ascending" | "Descending")
                                    ) -> _ListEdgePackagingJobsResponseSuccess
                                  | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListEdgePackagingJobsResponseSuccess

      interface _ListEndpointConfigsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListEndpointConfigsOutput]
        def endpoint_configs: () -> ::Array[Types::EndpointConfigSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_endpoint_configs-instance_method
      def list_endpoint_configs: (
                                   ?sort_by: ("Name" | "CreationTime"),
                                   ?sort_order: ("Ascending" | "Descending"),
                                   ?next_token: ::String,
                                   ?max_results: ::Integer,
                                   ?name_contains: ::String,
                                   ?creation_time_before: ::Time,
                                   ?creation_time_after: ::Time
                                 ) -> _ListEndpointConfigsResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListEndpointConfigsResponseSuccess

      interface _ListEndpointsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListEndpointsOutput]
        def endpoints: () -> ::Array[Types::EndpointSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_endpoints-instance_method
      def list_endpoints: (
                            ?sort_by: ("Name" | "CreationTime" | "Status"),
                            ?sort_order: ("Ascending" | "Descending"),
                            ?next_token: ::String,
                            ?max_results: ::Integer,
                            ?name_contains: ::String,
                            ?creation_time_before: ::Time,
                            ?creation_time_after: ::Time,
                            ?last_modified_time_before: ::Time,
                            ?last_modified_time_after: ::Time,
                            ?status_equals: ("OutOfService" | "Creating" | "Updating" | "SystemUpdating" | "RollingBack" | "InService" | "Deleting" | "Failed" | "UpdateRollbackFailed")
                          ) -> _ListEndpointsResponseSuccess
                        | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListEndpointsResponseSuccess

      interface _ListExperimentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListExperimentsResponse]
        def experiment_summaries: () -> ::Array[Types::ExperimentSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_experiments-instance_method
      def list_experiments: (
                              ?created_after: ::Time,
                              ?created_before: ::Time,
                              ?sort_by: ("Name" | "CreationTime"),
                              ?sort_order: ("Ascending" | "Descending"),
                              ?next_token: ::String,
                              ?max_results: ::Integer
                            ) -> _ListExperimentsResponseSuccess
                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListExperimentsResponseSuccess

      interface _ListFeatureGroupsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListFeatureGroupsResponse]
        def feature_group_summaries: () -> ::Array[Types::FeatureGroupSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_feature_groups-instance_method
      def list_feature_groups: (
                                 ?name_contains: ::String,
                                 ?feature_group_status_equals: ("Creating" | "Created" | "CreateFailed" | "Deleting" | "DeleteFailed"),
                                 ?offline_store_status_equals: ("Active" | "Blocked" | "Disabled"),
                                 ?creation_time_after: ::Time,
                                 ?creation_time_before: ::Time,
                                 ?sort_order: ("Ascending" | "Descending"),
                                 ?sort_by: ("Name" | "FeatureGroupStatus" | "OfflineStoreStatus" | "CreationTime"),
                                 ?max_results: ::Integer,
                                 ?next_token: ::String
                               ) -> _ListFeatureGroupsResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListFeatureGroupsResponseSuccess

      interface _ListFlowDefinitionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListFlowDefinitionsResponse]
        def flow_definition_summaries: () -> ::Array[Types::FlowDefinitionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_flow_definitions-instance_method
      def list_flow_definitions: (
                                   ?creation_time_after: ::Time,
                                   ?creation_time_before: ::Time,
                                   ?sort_order: ("Ascending" | "Descending"),
                                   ?next_token: ::String,
                                   ?max_results: ::Integer
                                 ) -> _ListFlowDefinitionsResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListFlowDefinitionsResponseSuccess

      interface _ListHubContentVersionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListHubContentVersionsResponse]
        def hub_content_summaries: () -> ::Array[Types::HubContentInfo]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_hub_content_versions-instance_method
      def list_hub_content_versions: (
                                       hub_name: ::String,
                                       hub_content_type: ("Model" | "Notebook" | "ModelReference"),
                                       hub_content_name: ::String,
                                       ?min_version: ::String,
                                       ?max_schema_version: ::String,
                                       ?creation_time_before: ::Time,
                                       ?creation_time_after: ::Time,
                                       ?sort_by: ("HubContentName" | "CreationTime" | "HubContentStatus"),
                                       ?sort_order: ("Ascending" | "Descending"),
                                       ?max_results: ::Integer,
                                       ?next_token: ::String
                                     ) -> _ListHubContentVersionsResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListHubContentVersionsResponseSuccess

      interface _ListHubContentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListHubContentsResponse]
        def hub_content_summaries: () -> ::Array[Types::HubContentInfo]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_hub_contents-instance_method
      def list_hub_contents: (
                               hub_name: ::String,
                               hub_content_type: ("Model" | "Notebook" | "ModelReference"),
                               ?name_contains: ::String,
                               ?max_schema_version: ::String,
                               ?creation_time_before: ::Time,
                               ?creation_time_after: ::Time,
                               ?sort_by: ("HubContentName" | "CreationTime" | "HubContentStatus"),
                               ?sort_order: ("Ascending" | "Descending"),
                               ?max_results: ::Integer,
                               ?next_token: ::String
                             ) -> _ListHubContentsResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListHubContentsResponseSuccess

      interface _ListHubsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListHubsResponse]
        def hub_summaries: () -> ::Array[Types::HubInfo]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_hubs-instance_method
      def list_hubs: (
                       ?name_contains: ::String,
                       ?creation_time_before: ::Time,
                       ?creation_time_after: ::Time,
                       ?last_modified_time_before: ::Time,
                       ?last_modified_time_after: ::Time,
                       ?sort_by: ("HubName" | "CreationTime" | "HubStatus" | "AccountIdOwner"),
                       ?sort_order: ("Ascending" | "Descending"),
                       ?max_results: ::Integer,
                       ?next_token: ::String
                     ) -> _ListHubsResponseSuccess
                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListHubsResponseSuccess

      interface _ListHumanTaskUisResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListHumanTaskUisResponse]
        def human_task_ui_summaries: () -> ::Array[Types::HumanTaskUiSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_human_task_uis-instance_method
      def list_human_task_uis: (
                                 ?creation_time_after: ::Time,
                                 ?creation_time_before: ::Time,
                                 ?sort_order: ("Ascending" | "Descending"),
                                 ?next_token: ::String,
                                 ?max_results: ::Integer
                               ) -> _ListHumanTaskUisResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListHumanTaskUisResponseSuccess

      interface _ListHyperParameterTuningJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListHyperParameterTuningJobsResponse]
        def hyper_parameter_tuning_job_summaries: () -> ::Array[Types::HyperParameterTuningJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_hyper_parameter_tuning_jobs-instance_method
      def list_hyper_parameter_tuning_jobs: (
                                              ?next_token: ::String,
                                              ?max_results: ::Integer,
                                              ?sort_by: ("Name" | "Status" | "CreationTime"),
                                              ?sort_order: ("Ascending" | "Descending"),
                                              ?name_contains: ::String,
                                              ?creation_time_after: ::Time,
                                              ?creation_time_before: ::Time,
                                              ?last_modified_time_after: ::Time,
                                              ?last_modified_time_before: ::Time,
                                              ?status_equals: ("Completed" | "InProgress" | "Failed" | "Stopped" | "Stopping" | "Deleting" | "DeleteFailed")
                                            ) -> _ListHyperParameterTuningJobsResponseSuccess
                                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListHyperParameterTuningJobsResponseSuccess

      interface _ListImageVersionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListImageVersionsResponse]
        def image_versions: () -> ::Array[Types::ImageVersion]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_image_versions-instance_method
      def list_image_versions: (
                                 ?creation_time_after: ::Time,
                                 ?creation_time_before: ::Time,
                                 image_name: ::String,
                                 ?last_modified_time_after: ::Time,
                                 ?last_modified_time_before: ::Time,
                                 ?max_results: ::Integer,
                                 ?next_token: ::String,
                                 ?sort_by: ("CREATION_TIME" | "LAST_MODIFIED_TIME" | "VERSION"),
                                 ?sort_order: ("ASCENDING" | "DESCENDING")
                               ) -> _ListImageVersionsResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListImageVersionsResponseSuccess

      interface _ListImagesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListImagesResponse]
        def images: () -> ::Array[Types::Image]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_images-instance_method
      def list_images: (
                         ?creation_time_after: ::Time,
                         ?creation_time_before: ::Time,
                         ?last_modified_time_after: ::Time,
                         ?last_modified_time_before: ::Time,
                         ?max_results: ::Integer,
                         ?name_contains: ::String,
                         ?next_token: ::String,
                         ?sort_by: ("CREATION_TIME" | "LAST_MODIFIED_TIME" | "IMAGE_NAME"),
                         ?sort_order: ("ASCENDING" | "DESCENDING")
                       ) -> _ListImagesResponseSuccess
                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListImagesResponseSuccess

      interface _ListInferenceComponentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListInferenceComponentsOutput]
        def inference_components: () -> ::Array[Types::InferenceComponentSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_inference_components-instance_method
      def list_inference_components: (
                                       ?sort_by: ("Name" | "CreationTime" | "Status"),
                                       ?sort_order: ("Ascending" | "Descending"),
                                       ?next_token: ::String,
                                       ?max_results: ::Integer,
                                       ?name_contains: ::String,
                                       ?creation_time_before: ::Time,
                                       ?creation_time_after: ::Time,
                                       ?last_modified_time_before: ::Time,
                                       ?last_modified_time_after: ::Time,
                                       ?status_equals: ("InService" | "Creating" | "Updating" | "Failed" | "Deleting"),
                                       ?endpoint_name_equals: ::String,
                                       ?variant_name_equals: ::String
                                     ) -> _ListInferenceComponentsResponseSuccess
                                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListInferenceComponentsResponseSuccess

      interface _ListInferenceExperimentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListInferenceExperimentsResponse]
        def inference_experiments: () -> ::Array[Types::InferenceExperimentSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_inference_experiments-instance_method
      def list_inference_experiments: (
                                        ?name_contains: ::String,
                                        ?type: ("ShadowMode"),
                                        ?status_equals: ("Creating" | "Created" | "Updating" | "Running" | "Starting" | "Stopping" | "Completed" | "Cancelled"),
                                        ?creation_time_after: ::Time,
                                        ?creation_time_before: ::Time,
                                        ?last_modified_time_after: ::Time,
                                        ?last_modified_time_before: ::Time,
                                        ?sort_by: ("Name" | "CreationTime" | "Status"),
                                        ?sort_order: ("Ascending" | "Descending"),
                                        ?next_token: ::String,
                                        ?max_results: ::Integer
                                      ) -> _ListInferenceExperimentsResponseSuccess
                                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListInferenceExperimentsResponseSuccess

      interface _ListInferenceRecommendationsJobStepsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListInferenceRecommendationsJobStepsResponse]
        def steps: () -> ::Array[Types::InferenceRecommendationsJobStep]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_inference_recommendations_job_steps-instance_method
      def list_inference_recommendations_job_steps: (
                                                      job_name: ::String,
                                                      ?status: ("PENDING" | "IN_PROGRESS" | "COMPLETED" | "FAILED" | "STOPPING" | "STOPPED" | "DELETING" | "DELETED"),
                                                      ?step_type: ("BENCHMARK"),
                                                      ?max_results: ::Integer,
                                                      ?next_token: ::String
                                                    ) -> _ListInferenceRecommendationsJobStepsResponseSuccess
                                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListInferenceRecommendationsJobStepsResponseSuccess

      interface _ListInferenceRecommendationsJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListInferenceRecommendationsJobsResponse]
        def inference_recommendations_jobs: () -> ::Array[Types::InferenceRecommendationsJob]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_inference_recommendations_jobs-instance_method
      def list_inference_recommendations_jobs: (
                                                 ?creation_time_after: ::Time,
                                                 ?creation_time_before: ::Time,
                                                 ?last_modified_time_after: ::Time,
                                                 ?last_modified_time_before: ::Time,
                                                 ?name_contains: ::String,
                                                 ?status_equals: ("PENDING" | "IN_PROGRESS" | "COMPLETED" | "FAILED" | "STOPPING" | "STOPPED" | "DELETING" | "DELETED"),
                                                 ?sort_by: ("Name" | "CreationTime" | "Status"),
                                                 ?sort_order: ("Ascending" | "Descending"),
                                                 ?next_token: ::String,
                                                 ?max_results: ::Integer,
                                                 ?model_name_equals: ::String,
                                                 ?model_package_version_arn_equals: ::String
                                               ) -> _ListInferenceRecommendationsJobsResponseSuccess
                                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListInferenceRecommendationsJobsResponseSuccess

      interface _ListLabelingJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListLabelingJobsResponse]
        def labeling_job_summary_list: () -> ::Array[Types::LabelingJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_labeling_jobs-instance_method
      def list_labeling_jobs: (
                                ?creation_time_after: ::Time,
                                ?creation_time_before: ::Time,
                                ?last_modified_time_after: ::Time,
                                ?last_modified_time_before: ::Time,
                                ?max_results: ::Integer,
                                ?next_token: ::String,
                                ?name_contains: ::String,
                                ?sort_by: ("Name" | "CreationTime" | "Status"),
                                ?sort_order: ("Ascending" | "Descending"),
                                ?status_equals: ("Initializing" | "InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped")
                              ) -> _ListLabelingJobsResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListLabelingJobsResponseSuccess

      interface _ListLabelingJobsForWorkteamResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListLabelingJobsForWorkteamResponse]
        def labeling_job_summary_list: () -> ::Array[Types::LabelingJobForWorkteamSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_labeling_jobs_for_workteam-instance_method
      def list_labeling_jobs_for_workteam: (
                                             workteam_arn: ::String,
                                             ?max_results: ::Integer,
                                             ?next_token: ::String,
                                             ?creation_time_after: ::Time,
                                             ?creation_time_before: ::Time,
                                             ?job_reference_code_contains: ::String,
                                             ?sort_by: ("CreationTime"),
                                             ?sort_order: ("Ascending" | "Descending")
                                           ) -> _ListLabelingJobsForWorkteamResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListLabelingJobsForWorkteamResponseSuccess

      interface _ListLineageGroupsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListLineageGroupsResponse]
        def lineage_group_summaries: () -> ::Array[Types::LineageGroupSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_lineage_groups-instance_method
      def list_lineage_groups: (
                                 ?created_after: ::Time,
                                 ?created_before: ::Time,
                                 ?sort_by: ("Name" | "CreationTime"),
                                 ?sort_order: ("Ascending" | "Descending"),
                                 ?next_token: ::String,
                                 ?max_results: ::Integer
                               ) -> _ListLineageGroupsResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListLineageGroupsResponseSuccess

      interface _ListMlflowTrackingServersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListMlflowTrackingServersResponse]
        def tracking_server_summaries: () -> ::Array[Types::TrackingServerSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_mlflow_tracking_servers-instance_method
      def list_mlflow_tracking_servers: (
                                          ?created_after: ::Time,
                                          ?created_before: ::Time,
                                          ?tracking_server_status: ("Creating" | "Created" | "CreateFailed" | "Updating" | "Updated" | "UpdateFailed" | "Deleting" | "DeleteFailed" | "Stopping" | "Stopped" | "StopFailed" | "Starting" | "Started" | "StartFailed" | "MaintenanceInProgress" | "MaintenanceComplete" | "MaintenanceFailed"),
                                          ?mlflow_version: ::String,
                                          ?sort_by: ("Name" | "CreationTime" | "Status"),
                                          ?sort_order: ("Ascending" | "Descending"),
                                          ?next_token: ::String,
                                          ?max_results: ::Integer
                                        ) -> _ListMlflowTrackingServersResponseSuccess
                                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListMlflowTrackingServersResponseSuccess

      interface _ListModelBiasJobDefinitionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelBiasJobDefinitionsResponse]
        def job_definition_summaries: () -> ::Array[Types::MonitoringJobDefinitionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_model_bias_job_definitions-instance_method
      def list_model_bias_job_definitions: (
                                             ?endpoint_name: ::String,
                                             ?sort_by: ("Name" | "CreationTime"),
                                             ?sort_order: ("Ascending" | "Descending"),
                                             ?next_token: ::String,
                                             ?max_results: ::Integer,
                                             ?name_contains: ::String,
                                             ?creation_time_before: ::Time,
                                             ?creation_time_after: ::Time
                                           ) -> _ListModelBiasJobDefinitionsResponseSuccess
                                         | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelBiasJobDefinitionsResponseSuccess

      interface _ListModelCardExportJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelCardExportJobsResponse]
        def model_card_export_job_summaries: () -> ::Array[Types::ModelCardExportJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_model_card_export_jobs-instance_method
      def list_model_card_export_jobs: (
                                         model_card_name: ::String,
                                         ?model_card_version: ::Integer,
                                         ?creation_time_after: ::Time,
                                         ?creation_time_before: ::Time,
                                         ?model_card_export_job_name_contains: ::String,
                                         ?status_equals: ("InProgress" | "Completed" | "Failed"),
                                         ?sort_by: ("Name" | "CreationTime" | "Status"),
                                         ?sort_order: ("Ascending" | "Descending"),
                                         ?next_token: ::String,
                                         ?max_results: ::Integer
                                       ) -> _ListModelCardExportJobsResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelCardExportJobsResponseSuccess

      interface _ListModelCardVersionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelCardVersionsResponse]
        def model_card_version_summary_list: () -> ::Array[Types::ModelCardVersionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_model_card_versions-instance_method
      def list_model_card_versions: (
                                      ?creation_time_after: ::Time,
                                      ?creation_time_before: ::Time,
                                      ?max_results: ::Integer,
                                      model_card_name: ::String,
                                      ?model_card_status: ("Draft" | "PendingReview" | "Approved" | "Archived"),
                                      ?next_token: ::String,
                                      ?sort_by: ("Version"),
                                      ?sort_order: ("Ascending" | "Descending")
                                    ) -> _ListModelCardVersionsResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelCardVersionsResponseSuccess

      interface _ListModelCardsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelCardsResponse]
        def model_card_summaries: () -> ::Array[Types::ModelCardSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_model_cards-instance_method
      def list_model_cards: (
                              ?creation_time_after: ::Time,
                              ?creation_time_before: ::Time,
                              ?max_results: ::Integer,
                              ?name_contains: ::String,
                              ?model_card_status: ("Draft" | "PendingReview" | "Approved" | "Archived"),
                              ?next_token: ::String,
                              ?sort_by: ("Name" | "CreationTime"),
                              ?sort_order: ("Ascending" | "Descending")
                            ) -> _ListModelCardsResponseSuccess
                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelCardsResponseSuccess

      interface _ListModelExplainabilityJobDefinitionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelExplainabilityJobDefinitionsResponse]
        def job_definition_summaries: () -> ::Array[Types::MonitoringJobDefinitionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_model_explainability_job_definitions-instance_method
      def list_model_explainability_job_definitions: (
                                                       ?endpoint_name: ::String,
                                                       ?sort_by: ("Name" | "CreationTime"),
                                                       ?sort_order: ("Ascending" | "Descending"),
                                                       ?next_token: ::String,
                                                       ?max_results: ::Integer,
                                                       ?name_contains: ::String,
                                                       ?creation_time_before: ::Time,
                                                       ?creation_time_after: ::Time
                                                     ) -> _ListModelExplainabilityJobDefinitionsResponseSuccess
                                                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelExplainabilityJobDefinitionsResponseSuccess

      interface _ListModelMetadataResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelMetadataResponse]
        def model_metadata_summaries: () -> ::Array[Types::ModelMetadataSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_model_metadata-instance_method
      def list_model_metadata: (
                                 ?search_expression: {
                                   filters: Array[
                                     {
                                       name: ("Domain" | "Framework" | "Task" | "FrameworkVersion"),
                                       value: ::String
                                     },
                                   ]?
                                 },
                                 ?next_token: ::String,
                                 ?max_results: ::Integer
                               ) -> _ListModelMetadataResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelMetadataResponseSuccess

      interface _ListModelPackageGroupsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelPackageGroupsOutput]
        def model_package_group_summary_list: () -> ::Array[Types::ModelPackageGroupSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_model_package_groups-instance_method
      def list_model_package_groups: (
                                       ?creation_time_after: ::Time,
                                       ?creation_time_before: ::Time,
                                       ?max_results: ::Integer,
                                       ?name_contains: ::String,
                                       ?next_token: ::String,
                                       ?sort_by: ("Name" | "CreationTime"),
                                       ?sort_order: ("Ascending" | "Descending"),
                                       ?cross_account_filter_option: ("SameAccount" | "CrossAccount")
                                     ) -> _ListModelPackageGroupsResponseSuccess
                                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelPackageGroupsResponseSuccess

      interface _ListModelPackagesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelPackagesOutput]
        def model_package_summary_list: () -> ::Array[Types::ModelPackageSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_model_packages-instance_method
      def list_model_packages: (
                                 ?creation_time_after: ::Time,
                                 ?creation_time_before: ::Time,
                                 ?max_results: ::Integer,
                                 ?name_contains: ::String,
                                 ?model_approval_status: ("Approved" | "Rejected" | "PendingManualApproval"),
                                 ?model_package_group_name: ::String,
                                 ?model_package_type: ("Versioned" | "Unversioned" | "Both"),
                                 ?next_token: ::String,
                                 ?sort_by: ("Name" | "CreationTime"),
                                 ?sort_order: ("Ascending" | "Descending")
                               ) -> _ListModelPackagesResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelPackagesResponseSuccess

      interface _ListModelQualityJobDefinitionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelQualityJobDefinitionsResponse]
        def job_definition_summaries: () -> ::Array[Types::MonitoringJobDefinitionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_model_quality_job_definitions-instance_method
      def list_model_quality_job_definitions: (
                                                ?endpoint_name: ::String,
                                                ?sort_by: ("Name" | "CreationTime"),
                                                ?sort_order: ("Ascending" | "Descending"),
                                                ?next_token: ::String,
                                                ?max_results: ::Integer,
                                                ?name_contains: ::String,
                                                ?creation_time_before: ::Time,
                                                ?creation_time_after: ::Time
                                              ) -> _ListModelQualityJobDefinitionsResponseSuccess
                                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelQualityJobDefinitionsResponseSuccess

      interface _ListModelsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelsOutput]
        def models: () -> ::Array[Types::ModelSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_models-instance_method
      def list_models: (
                         ?sort_by: ("Name" | "CreationTime"),
                         ?sort_order: ("Ascending" | "Descending"),
                         ?next_token: ::String,
                         ?max_results: ::Integer,
                         ?name_contains: ::String,
                         ?creation_time_before: ::Time,
                         ?creation_time_after: ::Time
                       ) -> _ListModelsResponseSuccess
                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelsResponseSuccess

      interface _ListMonitoringAlertHistoryResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListMonitoringAlertHistoryResponse]
        def monitoring_alert_history: () -> ::Array[Types::MonitoringAlertHistorySummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_monitoring_alert_history-instance_method
      def list_monitoring_alert_history: (
                                           ?monitoring_schedule_name: ::String,
                                           ?monitoring_alert_name: ::String,
                                           ?sort_by: ("CreationTime" | "Status"),
                                           ?sort_order: ("Ascending" | "Descending"),
                                           ?next_token: ::String,
                                           ?max_results: ::Integer,
                                           ?creation_time_before: ::Time,
                                           ?creation_time_after: ::Time,
                                           ?status_equals: ("InAlert" | "OK")
                                         ) -> _ListMonitoringAlertHistoryResponseSuccess
                                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListMonitoringAlertHistoryResponseSuccess

      interface _ListMonitoringAlertsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListMonitoringAlertsResponse]
        def monitoring_alert_summaries: () -> ::Array[Types::MonitoringAlertSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_monitoring_alerts-instance_method
      def list_monitoring_alerts: (
                                    monitoring_schedule_name: ::String,
                                    ?next_token: ::String,
                                    ?max_results: ::Integer
                                  ) -> _ListMonitoringAlertsResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListMonitoringAlertsResponseSuccess

      interface _ListMonitoringExecutionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListMonitoringExecutionsResponse]
        def monitoring_execution_summaries: () -> ::Array[Types::MonitoringExecutionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_monitoring_executions-instance_method
      def list_monitoring_executions: (
                                        ?monitoring_schedule_name: ::String,
                                        ?endpoint_name: ::String,
                                        ?sort_by: ("CreationTime" | "ScheduledTime" | "Status"),
                                        ?sort_order: ("Ascending" | "Descending"),
                                        ?next_token: ::String,
                                        ?max_results: ::Integer,
                                        ?scheduled_time_before: ::Time,
                                        ?scheduled_time_after: ::Time,
                                        ?creation_time_before: ::Time,
                                        ?creation_time_after: ::Time,
                                        ?last_modified_time_before: ::Time,
                                        ?last_modified_time_after: ::Time,
                                        ?status_equals: ("Pending" | "Completed" | "CompletedWithViolations" | "InProgress" | "Failed" | "Stopping" | "Stopped"),
                                        ?monitoring_job_definition_name: ::String,
                                        ?monitoring_type_equals: ("DataQuality" | "ModelQuality" | "ModelBias" | "ModelExplainability")
                                      ) -> _ListMonitoringExecutionsResponseSuccess
                                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListMonitoringExecutionsResponseSuccess

      interface _ListMonitoringSchedulesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListMonitoringSchedulesResponse]
        def monitoring_schedule_summaries: () -> ::Array[Types::MonitoringScheduleSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_monitoring_schedules-instance_method
      def list_monitoring_schedules: (
                                       ?endpoint_name: ::String,
                                       ?sort_by: ("Name" | "CreationTime" | "Status"),
                                       ?sort_order: ("Ascending" | "Descending"),
                                       ?next_token: ::String,
                                       ?max_results: ::Integer,
                                       ?name_contains: ::String,
                                       ?creation_time_before: ::Time,
                                       ?creation_time_after: ::Time,
                                       ?last_modified_time_before: ::Time,
                                       ?last_modified_time_after: ::Time,
                                       ?status_equals: ("Pending" | "Failed" | "Scheduled" | "Stopped"),
                                       ?monitoring_job_definition_name: ::String,
                                       ?monitoring_type_equals: ("DataQuality" | "ModelQuality" | "ModelBias" | "ModelExplainability")
                                     ) -> _ListMonitoringSchedulesResponseSuccess
                                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListMonitoringSchedulesResponseSuccess

      interface _ListNotebookInstanceLifecycleConfigsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListNotebookInstanceLifecycleConfigsOutput]
        def next_token: () -> ::String
        def notebook_instance_lifecycle_configs: () -> ::Array[Types::NotebookInstanceLifecycleConfigSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_notebook_instance_lifecycle_configs-instance_method
      def list_notebook_instance_lifecycle_configs: (
                                                      ?next_token: ::String,
                                                      ?max_results: ::Integer,
                                                      ?sort_by: ("Name" | "CreationTime" | "LastModifiedTime"),
                                                      ?sort_order: ("Ascending" | "Descending"),
                                                      ?name_contains: ::String,
                                                      ?creation_time_before: ::Time,
                                                      ?creation_time_after: ::Time,
                                                      ?last_modified_time_before: ::Time,
                                                      ?last_modified_time_after: ::Time
                                                    ) -> _ListNotebookInstanceLifecycleConfigsResponseSuccess
                                                  | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListNotebookInstanceLifecycleConfigsResponseSuccess

      interface _ListNotebookInstancesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListNotebookInstancesOutput]
        def next_token: () -> ::String
        def notebook_instances: () -> ::Array[Types::NotebookInstanceSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_notebook_instances-instance_method
      def list_notebook_instances: (
                                     ?next_token: ::String,
                                     ?max_results: ::Integer,
                                     ?sort_by: ("Name" | "CreationTime" | "Status"),
                                     ?sort_order: ("Ascending" | "Descending"),
                                     ?name_contains: ::String,
                                     ?creation_time_before: ::Time,
                                     ?creation_time_after: ::Time,
                                     ?last_modified_time_before: ::Time,
                                     ?last_modified_time_after: ::Time,
                                     ?status_equals: ("Pending" | "InService" | "Stopping" | "Stopped" | "Failed" | "Deleting" | "Updating"),
                                     ?notebook_instance_lifecycle_config_name_contains: ::String,
                                     ?default_code_repository_contains: ::String,
                                     ?additional_code_repository_equals: ::String
                                   ) -> _ListNotebookInstancesResponseSuccess
                                 | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListNotebookInstancesResponseSuccess

      interface _ListOptimizationJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListOptimizationJobsResponse]
        def optimization_job_summaries: () -> ::Array[Types::OptimizationJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_optimization_jobs-instance_method
      def list_optimization_jobs: (
                                    ?next_token: ::String,
                                    ?max_results: ::Integer,
                                    ?creation_time_after: ::Time,
                                    ?creation_time_before: ::Time,
                                    ?last_modified_time_after: ::Time,
                                    ?last_modified_time_before: ::Time,
                                    ?optimization_contains: ::String,
                                    ?name_contains: ::String,
                                    ?status_equals: ("INPROGRESS" | "COMPLETED" | "FAILED" | "STARTING" | "STOPPING" | "STOPPED"),
                                    ?sort_by: ("Name" | "CreationTime" | "Status"),
                                    ?sort_order: ("Ascending" | "Descending")
                                  ) -> _ListOptimizationJobsResponseSuccess
                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListOptimizationJobsResponseSuccess

      interface _ListPipelineExecutionStepsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListPipelineExecutionStepsResponse]
        def pipeline_execution_steps: () -> ::Array[Types::PipelineExecutionStep]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_pipeline_execution_steps-instance_method
      def list_pipeline_execution_steps: (
                                           ?pipeline_execution_arn: ::String,
                                           ?next_token: ::String,
                                           ?max_results: ::Integer,
                                           ?sort_order: ("Ascending" | "Descending")
                                         ) -> _ListPipelineExecutionStepsResponseSuccess
                                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListPipelineExecutionStepsResponseSuccess

      interface _ListPipelineExecutionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListPipelineExecutionsResponse]
        def pipeline_execution_summaries: () -> ::Array[Types::PipelineExecutionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_pipeline_executions-instance_method
      def list_pipeline_executions: (
                                      pipeline_name: ::String,
                                      ?created_after: ::Time,
                                      ?created_before: ::Time,
                                      ?sort_by: ("CreationTime" | "PipelineExecutionArn"),
                                      ?sort_order: ("Ascending" | "Descending"),
                                      ?next_token: ::String,
                                      ?max_results: ::Integer
                                    ) -> _ListPipelineExecutionsResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListPipelineExecutionsResponseSuccess

      interface _ListPipelineParametersForExecutionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListPipelineParametersForExecutionResponse]
        def pipeline_parameters: () -> ::Array[Types::Parameter]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_pipeline_parameters_for_execution-instance_method
      def list_pipeline_parameters_for_execution: (
                                                    pipeline_execution_arn: ::String,
                                                    ?next_token: ::String,
                                                    ?max_results: ::Integer
                                                  ) -> _ListPipelineParametersForExecutionResponseSuccess
                                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListPipelineParametersForExecutionResponseSuccess

      interface _ListPipelinesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListPipelinesResponse]
        def pipeline_summaries: () -> ::Array[Types::PipelineSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_pipelines-instance_method
      def list_pipelines: (
                            ?pipeline_name_prefix: ::String,
                            ?created_after: ::Time,
                            ?created_before: ::Time,
                            ?sort_by: ("Name" | "CreationTime"),
                            ?sort_order: ("Ascending" | "Descending"),
                            ?next_token: ::String,
                            ?max_results: ::Integer
                          ) -> _ListPipelinesResponseSuccess
                        | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListPipelinesResponseSuccess

      interface _ListProcessingJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListProcessingJobsResponse]
        def processing_job_summaries: () -> ::Array[Types::ProcessingJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_processing_jobs-instance_method
      def list_processing_jobs: (
                                  ?creation_time_after: ::Time,
                                  ?creation_time_before: ::Time,
                                  ?last_modified_time_after: ::Time,
                                  ?last_modified_time_before: ::Time,
                                  ?name_contains: ::String,
                                  ?status_equals: ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped"),
                                  ?sort_by: ("Name" | "CreationTime" | "Status"),
                                  ?sort_order: ("Ascending" | "Descending"),
                                  ?next_token: ::String,
                                  ?max_results: ::Integer
                                ) -> _ListProcessingJobsResponseSuccess
                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListProcessingJobsResponseSuccess

      interface _ListProjectsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListProjectsOutput]
        def project_summary_list: () -> ::Array[Types::ProjectSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_projects-instance_method
      def list_projects: (
                           ?creation_time_after: ::Time,
                           ?creation_time_before: ::Time,
                           ?max_results: ::Integer,
                           ?name_contains: ::String,
                           ?next_token: ::String,
                           ?sort_by: ("Name" | "CreationTime"),
                           ?sort_order: ("Ascending" | "Descending")
                         ) -> _ListProjectsResponseSuccess
                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListProjectsResponseSuccess

      interface _ListResourceCatalogsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListResourceCatalogsResponse]
        def resource_catalogs: () -> ::Array[Types::ResourceCatalog]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_resource_catalogs-instance_method
      def list_resource_catalogs: (
                                    ?name_contains: ::String,
                                    ?creation_time_after: ::Time,
                                    ?creation_time_before: ::Time,
                                    ?sort_order: ("Ascending" | "Descending"),
                                    ?sort_by: ("CreationTime"),
                                    ?max_results: ::Integer,
                                    ?next_token: ::String
                                  ) -> _ListResourceCatalogsResponseSuccess
                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListResourceCatalogsResponseSuccess

      interface _ListSpacesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListSpacesResponse]
        def spaces: () -> ::Array[Types::SpaceDetails]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_spaces-instance_method
      def list_spaces: (
                         ?next_token: ::String,
                         ?max_results: ::Integer,
                         ?sort_order: ("Ascending" | "Descending"),
                         ?sort_by: ("CreationTime" | "LastModifiedTime"),
                         ?domain_id_equals: ::String,
                         ?space_name_contains: ::String
                       ) -> _ListSpacesResponseSuccess
                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListSpacesResponseSuccess

      interface _ListStageDevicesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListStageDevicesResponse]
        def device_deployment_summaries: () -> ::Array[Types::DeviceDeploymentSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_stage_devices-instance_method
      def list_stage_devices: (
                                ?next_token: ::String,
                                ?max_results: ::Integer,
                                edge_deployment_plan_name: ::String,
                                ?exclude_devices_deployed_in_other_stage: bool,
                                stage_name: ::String
                              ) -> _ListStageDevicesResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListStageDevicesResponseSuccess

      interface _ListStudioLifecycleConfigsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListStudioLifecycleConfigsResponse]
        def next_token: () -> ::String
        def studio_lifecycle_configs: () -> ::Array[Types::StudioLifecycleConfigDetails]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_studio_lifecycle_configs-instance_method
      def list_studio_lifecycle_configs: (
                                           ?max_results: ::Integer,
                                           ?next_token: ::String,
                                           ?name_contains: ::String,
                                           ?app_type_equals: ("JupyterServer" | "KernelGateway" | "CodeEditor" | "JupyterLab"),
                                           ?creation_time_before: ::Time,
                                           ?creation_time_after: ::Time,
                                           ?modified_time_before: ::Time,
                                           ?modified_time_after: ::Time,
                                           ?sort_by: ("CreationTime" | "LastModifiedTime" | "Name"),
                                           ?sort_order: ("Ascending" | "Descending")
                                         ) -> _ListStudioLifecycleConfigsResponseSuccess
                                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListStudioLifecycleConfigsResponseSuccess

      interface _ListSubscribedWorkteamsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListSubscribedWorkteamsResponse]
        def subscribed_workteams: () -> ::Array[Types::SubscribedWorkteam]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_subscribed_workteams-instance_method
      def list_subscribed_workteams: (
                                       ?name_contains: ::String,
                                       ?next_token: ::String,
                                       ?max_results: ::Integer
                                     ) -> _ListSubscribedWorkteamsResponseSuccess
                                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListSubscribedWorkteamsResponseSuccess

      interface _ListTagsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsOutput]
        def tags: () -> ::Array[Types::Tag]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_tags-instance_method
      def list_tags: (
                       resource_arn: ::String,
                       ?next_token: ::String,
                       ?max_results: ::Integer
                     ) -> _ListTagsResponseSuccess
                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsResponseSuccess

      interface _ListTrainingJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTrainingJobsResponse]
        def training_job_summaries: () -> ::Array[Types::TrainingJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_training_jobs-instance_method
      def list_training_jobs: (
                                ?next_token: ::String,
                                ?max_results: ::Integer,
                                ?creation_time_after: ::Time,
                                ?creation_time_before: ::Time,
                                ?last_modified_time_after: ::Time,
                                ?last_modified_time_before: ::Time,
                                ?name_contains: ::String,
                                ?status_equals: ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped"),
                                ?sort_by: ("Name" | "CreationTime" | "Status"),
                                ?sort_order: ("Ascending" | "Descending"),
                                ?warm_pool_status_equals: ("Available" | "Terminated" | "Reused" | "InUse")
                              ) -> _ListTrainingJobsResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTrainingJobsResponseSuccess

      interface _ListTrainingJobsForHyperParameterTuningJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTrainingJobsForHyperParameterTuningJobResponse]
        def training_job_summaries: () -> ::Array[Types::HyperParameterTrainingJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_training_jobs_for_hyper_parameter_tuning_job-instance_method
      def list_training_jobs_for_hyper_parameter_tuning_job: (
                                                               hyper_parameter_tuning_job_name: ::String,
                                                               ?next_token: ::String,
                                                               ?max_results: ::Integer,
                                                               ?status_equals: ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped"),
                                                               ?sort_by: ("Name" | "CreationTime" | "Status" | "FinalObjectiveMetricValue"),
                                                               ?sort_order: ("Ascending" | "Descending")
                                                             ) -> _ListTrainingJobsForHyperParameterTuningJobResponseSuccess
                                                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTrainingJobsForHyperParameterTuningJobResponseSuccess

      interface _ListTransformJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTransformJobsResponse]
        def transform_job_summaries: () -> ::Array[Types::TransformJobSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_transform_jobs-instance_method
      def list_transform_jobs: (
                                 ?creation_time_after: ::Time,
                                 ?creation_time_before: ::Time,
                                 ?last_modified_time_after: ::Time,
                                 ?last_modified_time_before: ::Time,
                                 ?name_contains: ::String,
                                 ?status_equals: ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped"),
                                 ?sort_by: ("Name" | "CreationTime" | "Status"),
                                 ?sort_order: ("Ascending" | "Descending"),
                                 ?next_token: ::String,
                                 ?max_results: ::Integer
                               ) -> _ListTransformJobsResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTransformJobsResponseSuccess

      interface _ListTrialComponentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTrialComponentsResponse]
        def trial_component_summaries: () -> ::Array[Types::TrialComponentSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_trial_components-instance_method
      def list_trial_components: (
                                   ?experiment_name: ::String,
                                   ?trial_name: ::String,
                                   ?source_arn: ::String,
                                   ?created_after: ::Time,
                                   ?created_before: ::Time,
                                   ?sort_by: ("Name" | "CreationTime"),
                                   ?sort_order: ("Ascending" | "Descending"),
                                   ?max_results: ::Integer,
                                   ?next_token: ::String
                                 ) -> _ListTrialComponentsResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTrialComponentsResponseSuccess

      interface _ListTrialsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTrialsResponse]
        def trial_summaries: () -> ::Array[Types::TrialSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_trials-instance_method
      def list_trials: (
                         ?experiment_name: ::String,
                         ?trial_component_name: ::String,
                         ?created_after: ::Time,
                         ?created_before: ::Time,
                         ?sort_by: ("Name" | "CreationTime"),
                         ?sort_order: ("Ascending" | "Descending"),
                         ?max_results: ::Integer,
                         ?next_token: ::String
                       ) -> _ListTrialsResponseSuccess
                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTrialsResponseSuccess

      interface _ListUserProfilesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListUserProfilesResponse]
        def user_profiles: () -> ::Array[Types::UserProfileDetails]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_user_profiles-instance_method
      def list_user_profiles: (
                                ?next_token: ::String,
                                ?max_results: ::Integer,
                                ?sort_order: ("Ascending" | "Descending"),
                                ?sort_by: ("CreationTime" | "LastModifiedTime"),
                                ?domain_id_equals: ::String,
                                ?user_profile_name_contains: ::String
                              ) -> _ListUserProfilesResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListUserProfilesResponseSuccess

      interface _ListWorkforcesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListWorkforcesResponse]
        def workforces: () -> ::Array[Types::Workforce]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_workforces-instance_method
      def list_workforces: (
                             ?sort_by: ("Name" | "CreateDate"),
                             ?sort_order: ("Ascending" | "Descending"),
                             ?name_contains: ::String,
                             ?next_token: ::String,
                             ?max_results: ::Integer
                           ) -> _ListWorkforcesResponseSuccess
                         | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListWorkforcesResponseSuccess

      interface _ListWorkteamsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListWorkteamsResponse]
        def workteams: () -> ::Array[Types::Workteam]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#list_workteams-instance_method
      def list_workteams: (
                            ?sort_by: ("Name" | "CreateDate"),
                            ?sort_order: ("Ascending" | "Descending"),
                            ?name_contains: ::String,
                            ?next_token: ::String,
                            ?max_results: ::Integer
                          ) -> _ListWorkteamsResponseSuccess
                        | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListWorkteamsResponseSuccess

      interface _PutModelPackageGroupPolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutModelPackageGroupPolicyOutput]
        def model_package_group_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#put_model_package_group_policy-instance_method
      def put_model_package_group_policy: (
                                            model_package_group_name: ::String,
                                            resource_policy: ::String
                                          ) -> _PutModelPackageGroupPolicyResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutModelPackageGroupPolicyResponseSuccess

      interface _QueryLineageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::QueryLineageResponse]
        def vertices: () -> ::Array[Types::Vertex]
        def edges: () -> ::Array[Types::Edge]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#query_lineage-instance_method
      def query_lineage: (
                           ?start_arns: Array[::String],
                           ?direction: ("Both" | "Ascendants" | "Descendants"),
                           ?include_edges: bool,
                           ?filters: {
                             types: Array[::String]?,
                             lineage_types: Array[("TrialComponent" | "Artifact" | "Context" | "Action")]?,
                             created_before: ::Time?,
                             created_after: ::Time?,
                             modified_before: ::Time?,
                             modified_after: ::Time?,
                             properties: Hash[::String, ::String]?
                           },
                           ?max_depth: ::Integer,
                           ?max_results: ::Integer,
                           ?next_token: ::String
                         ) -> _QueryLineageResponseSuccess
                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _QueryLineageResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#register_devices-instance_method
      def register_devices: (
                              device_fleet_name: ::String,
                              devices: Array[
                                {
                                  device_name: ::String,
                                  description: ::String?,
                                  iot_thing_name: ::String?
                                },
                              ],
                              ?tags: Array[
                                {
                                  key: ::String,
                                  value: ::String
                                },
                              ]
                            ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _RenderUiTemplateResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::RenderUiTemplateResponse]
        def rendered_content: () -> ::String
        def errors: () -> ::Array[Types::RenderingError]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#render_ui_template-instance_method
      def render_ui_template: (
                                ?ui_template: {
                                  content: ::String
                                },
                                task: {
                                  input: ::String
                                },
                                role_arn: ::String,
                                ?human_task_ui_arn: ::String
                              ) -> _RenderUiTemplateResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _RenderUiTemplateResponseSuccess

      interface _RetryPipelineExecutionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::RetryPipelineExecutionResponse]
        def pipeline_execution_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#retry_pipeline_execution-instance_method
      def retry_pipeline_execution: (
                                      pipeline_execution_arn: ::String,
                                      client_request_token: ::String,
                                      ?parallelism_configuration: {
                                        max_parallel_execution_steps: ::Integer
                                      }
                                    ) -> _RetryPipelineExecutionResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _RetryPipelineExecutionResponseSuccess

      interface _SearchResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::SearchResponse]
        def results: () -> ::Array[Types::SearchRecord]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#search-instance_method
      def search: (
                    resource: ("TrainingJob" | "Experiment" | "ExperimentTrial" | "ExperimentTrialComponent" | "Endpoint" | "Model" | "ModelPackage" | "ModelPackageGroup" | "Pipeline" | "PipelineExecution" | "FeatureGroup" | "FeatureMetadata" | "Image" | "ImageVersion" | "Project" | "HyperParameterTuningJob" | "ModelCard"),
                    ?search_expression: {
                      filters: Array[
                        {
                          name: ::String,
                          operator: ("Equals" | "NotEquals" | "GreaterThan" | "GreaterThanOrEqualTo" | "LessThan" | "LessThanOrEqualTo" | "Contains" | "Exists" | "NotExists" | "In")?,
                          value: ::String?
                        },
                      ]?,
                      nested_filters: Array[
                        {
                          nested_property_name: ::String,
                          filters: Array[
                            {
                              name: ::String,
                              operator: ("Equals" | "NotEquals" | "GreaterThan" | "GreaterThanOrEqualTo" | "LessThan" | "LessThanOrEqualTo" | "Contains" | "Exists" | "NotExists" | "In")?,
                              value: ::String?
                            },
                          ]
                        },
                      ]?,
                      sub_expressions: Array[
                        untyped,
                      ]?,
                      operator: ("And" | "Or")?
                    },
                    ?sort_by: ::String,
                    ?sort_order: ("Ascending" | "Descending"),
                    ?next_token: ::String,
                    ?max_results: ::Integer,
                    ?cross_account_filter_option: ("SameAccount" | "CrossAccount"),
                    ?visibility_conditions: Array[
                      {
                        key: ::String?,
                        value: ::String?
                      },
                    ]
                  ) -> _SearchResponseSuccess
                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _SearchResponseSuccess

      interface _SendPipelineExecutionStepFailureResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::SendPipelineExecutionStepFailureResponse]
        def pipeline_execution_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#send_pipeline_execution_step_failure-instance_method
      def send_pipeline_execution_step_failure: (
                                                  callback_token: ::String,
                                                  ?failure_reason: ::String,
                                                  ?client_request_token: ::String
                                                ) -> _SendPipelineExecutionStepFailureResponseSuccess
                                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _SendPipelineExecutionStepFailureResponseSuccess

      interface _SendPipelineExecutionStepSuccessResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::SendPipelineExecutionStepSuccessResponse]
        def pipeline_execution_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#send_pipeline_execution_step_success-instance_method
      def send_pipeline_execution_step_success: (
                                                  callback_token: ::String,
                                                  ?output_parameters: Array[
                                                    {
                                                      name: ::String,
                                                      value: ::String
                                                    },
                                                  ],
                                                  ?client_request_token: ::String
                                                ) -> _SendPipelineExecutionStepSuccessResponseSuccess
                                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _SendPipelineExecutionStepSuccessResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#start_edge_deployment_stage-instance_method
      def start_edge_deployment_stage: (
                                         edge_deployment_plan_name: ::String,
                                         stage_name: ::String
                                       ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _StartInferenceExperimentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartInferenceExperimentResponse]
        def inference_experiment_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#start_inference_experiment-instance_method
      def start_inference_experiment: (
                                        name: ::String
                                      ) -> _StartInferenceExperimentResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartInferenceExperimentResponseSuccess

      interface _StartMlflowTrackingServerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartMlflowTrackingServerResponse]
        def tracking_server_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#start_mlflow_tracking_server-instance_method
      def start_mlflow_tracking_server: (
                                          tracking_server_name: ::String
                                        ) -> _StartMlflowTrackingServerResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartMlflowTrackingServerResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#start_monitoring_schedule-instance_method
      def start_monitoring_schedule: (
                                       monitoring_schedule_name: ::String
                                     ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#start_notebook_instance-instance_method
      def start_notebook_instance: (
                                     notebook_instance_name: ::String
                                   ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _StartPipelineExecutionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartPipelineExecutionResponse]
        def pipeline_execution_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#start_pipeline_execution-instance_method
      def start_pipeline_execution: (
                                      pipeline_name: ::String,
                                      ?pipeline_execution_display_name: ::String,
                                      ?pipeline_parameters: Array[
                                        {
                                          name: ::String,
                                          value: ::String
                                        },
                                      ],
                                      ?pipeline_execution_description: ::String,
                                      client_request_token: ::String,
                                      ?parallelism_configuration: {
                                        max_parallel_execution_steps: ::Integer
                                      },
                                      ?selective_execution_config: {
                                        source_pipeline_execution_arn: ::String?,
                                        selected_steps: Array[
                                          {
                                            step_name: ::String
                                          },
                                        ]
                                      }
                                    ) -> _StartPipelineExecutionResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartPipelineExecutionResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_auto_ml_job-instance_method
      def stop_auto_ml_job: (
                              auto_ml_job_name: ::String
                            ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_compilation_job-instance_method
      def stop_compilation_job: (
                                  compilation_job_name: ::String
                                ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_edge_deployment_stage-instance_method
      def stop_edge_deployment_stage: (
                                        edge_deployment_plan_name: ::String,
                                        stage_name: ::String
                                      ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_edge_packaging_job-instance_method
      def stop_edge_packaging_job: (
                                     edge_packaging_job_name: ::String
                                   ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_hyper_parameter_tuning_job-instance_method
      def stop_hyper_parameter_tuning_job: (
                                             hyper_parameter_tuning_job_name: ::String
                                           ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _StopInferenceExperimentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StopInferenceExperimentResponse]
        def inference_experiment_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_inference_experiment-instance_method
      def stop_inference_experiment: (
                                       name: ::String,
                                       model_variant_actions: Hash[::String, ("Retain" | "Remove" | "Promote")],
                                       ?desired_model_variants: Array[
                                         {
                                           model_name: ::String,
                                           variant_name: ::String,
                                           infrastructure_config: {
                                             infrastructure_type: ("RealTimeInference"),
                                             real_time_inference_config: {
                                               instance_type: ("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge"),
                                               instance_count: ::Integer
                                             }
                                           }
                                         },
                                       ],
                                       ?desired_state: ("Completed" | "Cancelled"),
                                       ?reason: ::String
                                     ) -> _StopInferenceExperimentResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StopInferenceExperimentResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_inference_recommendations_job-instance_method
      def stop_inference_recommendations_job: (
                                                job_name: ::String
                                              ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_labeling_job-instance_method
      def stop_labeling_job: (
                               labeling_job_name: ::String
                             ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _StopMlflowTrackingServerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StopMlflowTrackingServerResponse]
        def tracking_server_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_mlflow_tracking_server-instance_method
      def stop_mlflow_tracking_server: (
                                         tracking_server_name: ::String
                                       ) -> _StopMlflowTrackingServerResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StopMlflowTrackingServerResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_monitoring_schedule-instance_method
      def stop_monitoring_schedule: (
                                      monitoring_schedule_name: ::String
                                    ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_notebook_instance-instance_method
      def stop_notebook_instance: (
                                    notebook_instance_name: ::String
                                  ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_optimization_job-instance_method
      def stop_optimization_job: (
                                   optimization_job_name: ::String
                                 ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _StopPipelineExecutionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StopPipelineExecutionResponse]
        def pipeline_execution_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_pipeline_execution-instance_method
      def stop_pipeline_execution: (
                                     pipeline_execution_arn: ::String,
                                     client_request_token: ::String
                                   ) -> _StopPipelineExecutionResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StopPipelineExecutionResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_processing_job-instance_method
      def stop_processing_job: (
                                 processing_job_name: ::String
                               ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_training_job-instance_method
      def stop_training_job: (
                               training_job_name: ::String
                             ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#stop_transform_job-instance_method
      def stop_transform_job: (
                                transform_job_name: ::String
                              ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _UpdateActionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateActionResponse]
        def action_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_action-instance_method
      def update_action: (
                           action_name: ::String,
                           ?description: ::String,
                           ?status: ("Unknown" | "InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped"),
                           ?properties: Hash[::String, ::String],
                           ?properties_to_remove: Array[::String]
                         ) -> _UpdateActionResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateActionResponseSuccess

      interface _UpdateAppImageConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateAppImageConfigResponse]
        def app_image_config_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_app_image_config-instance_method
      def update_app_image_config: (
                                     app_image_config_name: ::String,
                                     ?kernel_gateway_image_config: {
                                       kernel_specs: Array[
                                         {
                                           name: ::String,
                                           display_name: ::String?
                                         },
                                       ],
                                       file_system_config: {
                                         mount_path: ::String?,
                                         default_uid: ::Integer?,
                                         default_gid: ::Integer?
                                       }?
                                     },
                                     ?jupyter_lab_app_image_config: {
                                       file_system_config: {
                                         mount_path: ::String?,
                                         default_uid: ::Integer?,
                                         default_gid: ::Integer?
                                       }?,
                                       container_config: {
                                         container_arguments: Array[::String]?,
                                         container_entrypoint: Array[::String]?,
                                         container_environment_variables: Hash[::String, ::String]?
                                       }?
                                     },
                                     ?code_editor_app_image_config: {
                                       file_system_config: {
                                         mount_path: ::String?,
                                         default_uid: ::Integer?,
                                         default_gid: ::Integer?
                                       }?,
                                       container_config: {
                                         container_arguments: Array[::String]?,
                                         container_entrypoint: Array[::String]?,
                                         container_environment_variables: Hash[::String, ::String]?
                                       }?
                                     }
                                   ) -> _UpdateAppImageConfigResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateAppImageConfigResponseSuccess

      interface _UpdateArtifactResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateArtifactResponse]
        def artifact_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_artifact-instance_method
      def update_artifact: (
                             artifact_arn: ::String,
                             ?artifact_name: ::String,
                             ?properties: Hash[::String, ::String],
                             ?properties_to_remove: Array[::String]
                           ) -> _UpdateArtifactResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateArtifactResponseSuccess

      interface _UpdateClusterResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateClusterResponse]
        def cluster_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_cluster-instance_method
      def update_cluster: (
                            cluster_name: ::String,
                            instance_groups: Array[
                              {
                                instance_count: ::Integer,
                                instance_group_name: ::String,
                                instance_type: ("ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.c5n.large" | "ml.c5n.2xlarge" | "ml.c5n.4xlarge" | "ml.c5n.9xlarge" | "ml.c5n.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge"),
                                life_cycle_config: {
                                  source_s3_uri: ::String,
                                  on_create: ::String
                                },
                                execution_role: ::String,
                                threads_per_core: ::Integer?,
                                instance_storage_configs: Array[
                                  {
                                    ebs_volume_config: {
                                      volume_size_in_gb: ::Integer
                                    }?
                                  },
                                ]?,
                                on_start_deep_health_checks: Array[("InstanceStress" | "InstanceConnectivity")]?
                              },
                            ],
                            ?node_recovery: ("Automatic" | "None")
                          ) -> _UpdateClusterResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateClusterResponseSuccess

      interface _UpdateClusterSoftwareResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateClusterSoftwareResponse]
        def cluster_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_cluster_software-instance_method
      def update_cluster_software: (
                                     cluster_name: ::String
                                   ) -> _UpdateClusterSoftwareResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateClusterSoftwareResponseSuccess

      interface _UpdateCodeRepositoryResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateCodeRepositoryOutput]
        def code_repository_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_code_repository-instance_method
      def update_code_repository: (
                                    code_repository_name: ::String,
                                    ?git_config: {
                                      secret_arn: ::String?
                                    }
                                  ) -> _UpdateCodeRepositoryResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateCodeRepositoryResponseSuccess

      interface _UpdateContextResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateContextResponse]
        def context_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_context-instance_method
      def update_context: (
                            context_name: ::String,
                            ?description: ::String,
                            ?properties: Hash[::String, ::String],
                            ?properties_to_remove: Array[::String]
                          ) -> _UpdateContextResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateContextResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_device_fleet-instance_method
      def update_device_fleet: (
                                 device_fleet_name: ::String,
                                 ?role_arn: ::String,
                                 ?description: ::String,
                                 output_config: {
                                   s3_output_location: ::String,
                                   kms_key_id: ::String?,
                                   preset_deployment_type: ("GreengrassV2Component")?,
                                   preset_deployment_config: ::String?
                                 },
                                 ?enable_iot_role_alias: bool
                               ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_devices-instance_method
      def update_devices: (
                            device_fleet_name: ::String,
                            devices: Array[
                              {
                                device_name: ::String,
                                description: ::String?,
                                iot_thing_name: ::String?
                              },
                            ]
                          ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _UpdateDomainResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateDomainResponse]
        def domain_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_domain-instance_method
      def update_domain: (
                           domain_id: ::String,
                           ?default_user_settings: {
                             execution_role: ::String?,
                             security_groups: Array[::String]?,
                             sharing_settings: {
                               notebook_output_option: ("Allowed" | "Disabled")?,
                               s3_output_path: ::String?,
                               s3_kms_key_id: ::String?
                             }?,
                             jupyter_server_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               lifecycle_config_arns: Array[::String]?,
                               code_repositories: Array[
                                 {
                                   repository_url: ::String
                                 },
                               ]?
                             }?,
                             kernel_gateway_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?,
                               lifecycle_config_arns: Array[::String]?
                             }?,
                             tensor_board_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?
                             }?,
                             r_studio_server_pro_app_settings: {
                               access_status: ("ENABLED" | "DISABLED")?,
                               user_group: ("R_STUDIO_ADMIN" | "R_STUDIO_USER")?
                             }?,
                             r_session_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?
                             }?,
                             canvas_app_settings: {
                               time_series_forecasting_settings: {
                                 status: ("ENABLED" | "DISABLED")?,
                                 amazon_forecast_role_arn: ::String?
                               }?,
                               model_register_settings: {
                                 status: ("ENABLED" | "DISABLED")?,
                                 cross_account_model_register_role_arn: ::String?
                               }?,
                               workspace_settings: {
                                 s3_artifact_path: ::String?,
                                 s3_kms_key_id: ::String?
                               }?,
                               identity_provider_o_auth_settings: Array[
                                 {
                                   data_source_name: ("SalesforceGenie" | "Snowflake")?,
                                   status: ("ENABLED" | "DISABLED")?,
                                   secret_arn: ::String?
                                 },
                               ]?,
                               direct_deploy_settings: {
                                 status: ("ENABLED" | "DISABLED")?
                               }?,
                               kendra_settings: {
                                 status: ("ENABLED" | "DISABLED")?
                               }?,
                               generative_ai_settings: {
                                 amazon_bedrock_role_arn: ::String?
                               }?,
                               emr_serverless_settings: {
                                 execution_role_arn: ::String?,
                                 status: ("ENABLED" | "DISABLED")?
                               }?
                             }?,
                             code_editor_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?,
                               lifecycle_config_arns: Array[::String]?,
                               app_lifecycle_management: {
                                 idle_settings: {
                                   lifecycle_management: ("ENABLED" | "DISABLED")?,
                                   idle_timeout_in_minutes: ::Integer?,
                                   min_idle_timeout_in_minutes: ::Integer?,
                                   max_idle_timeout_in_minutes: ::Integer?
                                 }?
                               }?,
                               built_in_lifecycle_config_arn: ::String?
                             }?,
                             jupyter_lab_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?,
                               lifecycle_config_arns: Array[::String]?,
                               code_repositories: Array[
                                 {
                                   repository_url: ::String
                                 },
                               ]?,
                               app_lifecycle_management: {
                                 idle_settings: {
                                   lifecycle_management: ("ENABLED" | "DISABLED")?,
                                   idle_timeout_in_minutes: ::Integer?,
                                   min_idle_timeout_in_minutes: ::Integer?,
                                   max_idle_timeout_in_minutes: ::Integer?
                                 }?
                               }?,
                               emr_settings: {
                                 assumable_role_arns: Array[::String]?,
                                 execution_role_arns: Array[::String]?
                               }?,
                               built_in_lifecycle_config_arn: ::String?
                             }?,
                             space_storage_settings: {
                               default_ebs_storage_settings: {
                                 default_ebs_volume_size_in_gb: ::Integer,
                                 maximum_ebs_volume_size_in_gb: ::Integer
                               }?
                             }?,
                             default_landing_uri: ::String?,
                             studio_web_portal: ("ENABLED" | "DISABLED")?,
                             custom_posix_user_config: {
                               uid: ::Integer,
                               gid: ::Integer
                             }?,
                             custom_file_system_configs: Array[
                               {
                                 efs_file_system_config: {
                                   file_system_id: ::String,
                                   file_system_path: ::String?
                                 }?
                               },
                             ]?,
                             studio_web_portal_settings: {
                               hidden_ml_tools: Array[("DataWrangler" | "FeatureStore" | "EmrClusters" | "AutoMl" | "Experiments" | "Training" | "ModelEvaluation" | "Pipelines" | "Models" | "JumpStart" | "InferenceRecommender" | "Endpoints" | "Projects" | "InferenceOptimization" | "PerformanceEvaluation")]?,
                               hidden_app_types: Array[("JupyterServer" | "KernelGateway" | "DetailedProfiler" | "TensorBoard" | "CodeEditor" | "JupyterLab" | "RStudioServerPro" | "RSessionGateway" | "Canvas")]?,
                               hidden_instance_types: Array[("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")]?,
                               hidden_sage_maker_image_version_aliases: Array[
                                 {
                                   sage_maker_image_name: ("sagemaker_distribution")?,
                                   version_aliases: Array[::String]?
                                 },
                               ]?
                             }?,
                             auto_mount_home_efs: ("Enabled" | "Disabled" | "DefaultAsDomain")?
                           },
                           ?domain_settings_for_update: {
                             r_studio_server_pro_domain_settings_for_update: {
                               domain_execution_role_arn: ::String,
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               r_studio_connect_url: ::String?,
                               r_studio_package_manager_url: ::String?
                             }?,
                             execution_role_identity_config: ("USER_PROFILE_NAME" | "DISABLED")?,
                             security_group_ids: Array[::String]?,
                             docker_settings: {
                               enable_docker_access: ("ENABLED" | "DISABLED")?,
                               vpc_only_trusted_accounts: Array[::String]?
                             }?,
                             amazon_q_settings: {
                               status: ("ENABLED" | "DISABLED")?,
                               q_profile_arn: ::String?
                             }?
                           },
                           ?app_security_group_management: ("Service" | "Customer"),
                           ?default_space_settings: {
                             execution_role: ::String?,
                             security_groups: Array[::String]?,
                             jupyter_server_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               lifecycle_config_arns: Array[::String]?,
                               code_repositories: Array[
                                 {
                                   repository_url: ::String
                                 },
                               ]?
                             }?,
                             kernel_gateway_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?,
                               lifecycle_config_arns: Array[::String]?
                             }?,
                             jupyter_lab_app_settings: {
                               default_resource_spec: {
                                 sage_maker_image_arn: ::String?,
                                 sage_maker_image_version_arn: ::String?,
                                 sage_maker_image_version_alias: ::String?,
                                 instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                 lifecycle_config_arn: ::String?
                               }?,
                               custom_images: Array[
                                 {
                                   image_name: ::String,
                                   image_version_number: ::Integer?,
                                   app_image_config_name: ::String
                                 },
                               ]?,
                               lifecycle_config_arns: Array[::String]?,
                               code_repositories: Array[
                                 {
                                   repository_url: ::String
                                 },
                               ]?,
                               app_lifecycle_management: {
                                 idle_settings: {
                                   lifecycle_management: ("ENABLED" | "DISABLED")?,
                                   idle_timeout_in_minutes: ::Integer?,
                                   min_idle_timeout_in_minutes: ::Integer?,
                                   max_idle_timeout_in_minutes: ::Integer?
                                 }?
                               }?,
                               emr_settings: {
                                 assumable_role_arns: Array[::String]?,
                                 execution_role_arns: Array[::String]?
                               }?,
                               built_in_lifecycle_config_arn: ::String?
                             }?,
                             space_storage_settings: {
                               default_ebs_storage_settings: {
                                 default_ebs_volume_size_in_gb: ::Integer,
                                 maximum_ebs_volume_size_in_gb: ::Integer
                               }?
                             }?,
                             custom_posix_user_config: {
                               uid: ::Integer,
                               gid: ::Integer
                             }?,
                             custom_file_system_configs: Array[
                               {
                                 efs_file_system_config: {
                                   file_system_id: ::String,
                                   file_system_path: ::String?
                                 }?
                               },
                             ]?
                           },
                           ?subnet_ids: Array[::String],
                           ?app_network_access_type: ("PublicInternetOnly" | "VpcOnly"),
                           ?tag_propagation: ("ENABLED" | "DISABLED")
                         ) -> _UpdateDomainResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateDomainResponseSuccess

      interface _UpdateEndpointResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateEndpointOutput]
        def endpoint_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_endpoint-instance_method
      def update_endpoint: (
                             endpoint_name: ::String,
                             endpoint_config_name: ::String,
                             ?retain_all_variant_properties: bool,
                             ?exclude_retained_variant_properties: Array[
                               {
                                 variant_property_type: ("DesiredInstanceCount" | "DesiredWeight" | "DataCaptureConfig")
                               },
                             ],
                             ?deployment_config: {
                               blue_green_update_policy: {
                                 traffic_routing_configuration: {
                                   type: ("ALL_AT_ONCE" | "CANARY" | "LINEAR"),
                                   wait_interval_in_seconds: ::Integer,
                                   canary_size: {
                                     type: ("INSTANCE_COUNT" | "CAPACITY_PERCENT"),
                                     value: ::Integer
                                   }?,
                                   linear_step_size: {
                                     type: ("INSTANCE_COUNT" | "CAPACITY_PERCENT"),
                                     value: ::Integer
                                   }?
                                 },
                                 termination_wait_in_seconds: ::Integer?,
                                 maximum_execution_timeout_in_seconds: ::Integer?
                               }?,
                               rolling_update_policy: {
                                 maximum_batch_size: {
                                   type: ("INSTANCE_COUNT" | "CAPACITY_PERCENT"),
                                   value: ::Integer
                                 },
                                 wait_interval_in_seconds: ::Integer,
                                 maximum_execution_timeout_in_seconds: ::Integer?,
                                 rollback_maximum_batch_size: {
                                   type: ("INSTANCE_COUNT" | "CAPACITY_PERCENT"),
                                   value: ::Integer
                                 }?
                               }?,
                               auto_rollback_configuration: {
                                 alarms: Array[
                                   {
                                     alarm_name: ::String?
                                   },
                                 ]?
                               }?
                             },
                             ?retain_deployment_config: bool
                           ) -> _UpdateEndpointResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateEndpointResponseSuccess

      interface _UpdateEndpointWeightsAndCapacitiesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateEndpointWeightsAndCapacitiesOutput]
        def endpoint_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_endpoint_weights_and_capacities-instance_method
      def update_endpoint_weights_and_capacities: (
                                                    endpoint_name: ::String,
                                                    desired_weights_and_capacities: Array[
                                                      {
                                                        variant_name: ::String,
                                                        desired_weight: ::Float?,
                                                        desired_instance_count: ::Integer?,
                                                        serverless_update_config: {
                                                          max_concurrency: ::Integer?,
                                                          provisioned_concurrency: ::Integer?
                                                        }?
                                                      },
                                                    ]
                                                  ) -> _UpdateEndpointWeightsAndCapacitiesResponseSuccess
                                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateEndpointWeightsAndCapacitiesResponseSuccess

      interface _UpdateExperimentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateExperimentResponse]
        def experiment_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_experiment-instance_method
      def update_experiment: (
                               experiment_name: ::String,
                               ?display_name: ::String,
                               ?description: ::String
                             ) -> _UpdateExperimentResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateExperimentResponseSuccess

      interface _UpdateFeatureGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateFeatureGroupResponse]
        def feature_group_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_feature_group-instance_method
      def update_feature_group: (
                                  feature_group_name: ::String,
                                  ?feature_additions: Array[
                                    {
                                      feature_name: ::String,
                                      feature_type: ("Integral" | "Fractional" | "String"),
                                      collection_type: ("List" | "Set" | "Vector")?,
                                      collection_config: {
                                        vector_config: {
                                          dimension: ::Integer
                                        }?
                                      }?
                                    },
                                  ],
                                  ?online_store_config: {
                                    ttl_duration: {
                                      unit: ("Seconds" | "Minutes" | "Hours" | "Days" | "Weeks")?,
                                      value: ::Integer?
                                    }?
                                  },
                                  ?throughput_config: {
                                    throughput_mode: ("OnDemand" | "Provisioned")?,
                                    provisioned_read_capacity_units: ::Integer?,
                                    provisioned_write_capacity_units: ::Integer?
                                  }
                                ) -> _UpdateFeatureGroupResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateFeatureGroupResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_feature_metadata-instance_method
      def update_feature_metadata: (
                                     feature_group_name: ::String,
                                     feature_name: ::String,
                                     ?description: ::String,
                                     ?parameter_additions: Array[
                                       {
                                         key: ::String?,
                                         value: ::String?
                                       },
                                     ],
                                     ?parameter_removals: Array[::String]
                                   ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _UpdateHubResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateHubResponse]
        def hub_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_hub-instance_method
      def update_hub: (
                        hub_name: ::String,
                        ?hub_description: ::String,
                        ?hub_display_name: ::String,
                        ?hub_search_keywords: Array[::String]
                      ) -> _UpdateHubResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateHubResponseSuccess

      interface _UpdateImageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateImageResponse]
        def image_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_image-instance_method
      def update_image: (
                          ?delete_properties: Array[::String],
                          ?description: ::String,
                          ?display_name: ::String,
                          image_name: ::String,
                          ?role_arn: ::String
                        ) -> _UpdateImageResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateImageResponseSuccess

      interface _UpdateImageVersionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateImageVersionResponse]
        def image_version_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_image_version-instance_method
      def update_image_version: (
                                  image_name: ::String,
                                  ?alias: ::String,
                                  ?version: ::Integer,
                                  ?aliases_to_add: Array[::String],
                                  ?aliases_to_delete: Array[::String],
                                  ?vendor_guidance: ("NOT_PROVIDED" | "STABLE" | "TO_BE_ARCHIVED" | "ARCHIVED"),
                                  ?job_type: ("TRAINING" | "INFERENCE" | "NOTEBOOK_KERNEL"),
                                  ?ml_framework: ::String,
                                  ?programming_lang: ::String,
                                  ?processor: ("CPU" | "GPU"),
                                  ?horovod: bool,
                                  ?release_notes: ::String
                                ) -> _UpdateImageVersionResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateImageVersionResponseSuccess

      interface _UpdateInferenceComponentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateInferenceComponentOutput]
        def inference_component_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_inference_component-instance_method
      def update_inference_component: (
                                        inference_component_name: ::String,
                                        ?specification: {
                                          model_name: ::String?,
                                          container: {
                                            image: ::String?,
                                            artifact_url: ::String?,
                                            environment: Hash[::String, ::String]?
                                          }?,
                                          startup_parameters: {
                                            model_data_download_timeout_in_seconds: ::Integer?,
                                            container_startup_health_check_timeout_in_seconds: ::Integer?
                                          }?,
                                          compute_resource_requirements: {
                                            number_of_cpu_cores_required: ::Float?,
                                            number_of_accelerator_devices_required: ::Float?,
                                            min_memory_required_in_mb: ::Integer,
                                            max_memory_required_in_mb: ::Integer?
                                          }
                                        },
                                        ?runtime_config: {
                                          copy_count: ::Integer
                                        }
                                      ) -> _UpdateInferenceComponentResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateInferenceComponentResponseSuccess

      interface _UpdateInferenceComponentRuntimeConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateInferenceComponentRuntimeConfigOutput]
        def inference_component_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_inference_component_runtime_config-instance_method
      def update_inference_component_runtime_config: (
                                                       inference_component_name: ::String,
                                                       desired_runtime_config: {
                                                         copy_count: ::Integer
                                                       }
                                                     ) -> _UpdateInferenceComponentRuntimeConfigResponseSuccess
                                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateInferenceComponentRuntimeConfigResponseSuccess

      interface _UpdateInferenceExperimentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateInferenceExperimentResponse]
        def inference_experiment_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_inference_experiment-instance_method
      def update_inference_experiment: (
                                         name: ::String,
                                         ?schedule: {
                                           start_time: ::Time?,
                                           end_time: ::Time?
                                         },
                                         ?description: ::String,
                                         ?model_variants: Array[
                                           {
                                             model_name: ::String,
                                             variant_name: ::String,
                                             infrastructure_config: {
                                               infrastructure_type: ("RealTimeInference"),
                                               real_time_inference_config: {
                                                 instance_type: ("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge"),
                                                 instance_count: ::Integer
                                               }
                                             }
                                           },
                                         ],
                                         ?data_storage_config: {
                                           destination: ::String,
                                           kms_key: ::String?,
                                           content_type: {
                                             csv_content_types: Array[::String]?,
                                             json_content_types: Array[::String]?
                                           }?
                                         },
                                         ?shadow_mode_config: {
                                           source_model_variant_name: ::String,
                                           shadow_model_variants: Array[
                                             {
                                               shadow_model_variant_name: ::String,
                                               sampling_percentage: ::Integer
                                             },
                                           ]
                                         }
                                       ) -> _UpdateInferenceExperimentResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateInferenceExperimentResponseSuccess

      interface _UpdateMlflowTrackingServerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateMlflowTrackingServerResponse]
        def tracking_server_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_mlflow_tracking_server-instance_method
      def update_mlflow_tracking_server: (
                                           tracking_server_name: ::String,
                                           ?artifact_store_uri: ::String,
                                           ?tracking_server_size: ("Small" | "Medium" | "Large"),
                                           ?automatic_model_registration: bool,
                                           ?weekly_maintenance_window_start: ::String
                                         ) -> _UpdateMlflowTrackingServerResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateMlflowTrackingServerResponseSuccess

      interface _UpdateModelCardResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateModelCardResponse]
        def model_card_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_model_card-instance_method
      def update_model_card: (
                               model_card_name: ::String,
                               ?content: ::String,
                               ?model_card_status: ("Draft" | "PendingReview" | "Approved" | "Archived")
                             ) -> _UpdateModelCardResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateModelCardResponseSuccess

      interface _UpdateModelPackageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateModelPackageOutput]
        def model_package_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_model_package-instance_method
      def update_model_package: (
                                  model_package_arn: ::String,
                                  ?model_approval_status: ("Approved" | "Rejected" | "PendingManualApproval"),
                                  ?approval_description: ::String,
                                  ?customer_metadata_properties: Hash[::String, ::String],
                                  ?customer_metadata_properties_to_remove: Array[::String],
                                  ?additional_inference_specifications_to_add: Array[
                                    {
                                      name: ::String,
                                      description: ::String?,
                                      containers: Array[
                                        {
                                          container_hostname: ::String?,
                                          image: ::String,
                                          image_digest: ::String?,
                                          model_data_url: ::String?,
                                          model_data_source: {
                                            s3_data_source: {
                                              s3_uri: ::String,
                                              s3_data_type: ("S3Prefix" | "S3Object"),
                                              compression_type: ("None" | "Gzip"),
                                              model_access_config: {
                                                accept_eula: bool
                                              }?,
                                              hub_access_config: {
                                                hub_content_arn: ::String
                                              }?,
                                              manifest_s3_uri: ::String?
                                            }?
                                          }?,
                                          product_id: ::String?,
                                          environment: Hash[::String, ::String]?,
                                          model_input: {
                                            data_input_config: ::String
                                          }?,
                                          framework: ::String?,
                                          framework_version: ::String?,
                                          nearest_model_name: ::String?,
                                          additional_s3_data_source: {
                                            s3_data_type: ("S3Object" | "S3Prefix"),
                                            s3_uri: ::String,
                                            compression_type: ("None" | "Gzip")?
                                          }?
                                        },
                                      ],
                                      supported_transform_instance_types: Array[("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge")]?,
                                      supported_realtime_inference_instance_types: Array[("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.12xlarge" | "ml.m5d.24xlarge" | "ml.c4.large" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.large" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.12xlarge" | "ml.r5.24xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.12xlarge" | "ml.r5d.24xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.dl1.24xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.p4d.24xlarge" | "ml.c7g.large" | "ml.c7g.xlarge" | "ml.c7g.2xlarge" | "ml.c7g.4xlarge" | "ml.c7g.8xlarge" | "ml.c7g.12xlarge" | "ml.c7g.16xlarge" | "ml.m6g.large" | "ml.m6g.xlarge" | "ml.m6g.2xlarge" | "ml.m6g.4xlarge" | "ml.m6g.8xlarge" | "ml.m6g.12xlarge" | "ml.m6g.16xlarge" | "ml.m6gd.large" | "ml.m6gd.xlarge" | "ml.m6gd.2xlarge" | "ml.m6gd.4xlarge" | "ml.m6gd.8xlarge" | "ml.m6gd.12xlarge" | "ml.m6gd.16xlarge" | "ml.c6g.large" | "ml.c6g.xlarge" | "ml.c6g.2xlarge" | "ml.c6g.4xlarge" | "ml.c6g.8xlarge" | "ml.c6g.12xlarge" | "ml.c6g.16xlarge" | "ml.c6gd.large" | "ml.c6gd.xlarge" | "ml.c6gd.2xlarge" | "ml.c6gd.4xlarge" | "ml.c6gd.8xlarge" | "ml.c6gd.12xlarge" | "ml.c6gd.16xlarge" | "ml.c6gn.large" | "ml.c6gn.xlarge" | "ml.c6gn.2xlarge" | "ml.c6gn.4xlarge" | "ml.c6gn.8xlarge" | "ml.c6gn.12xlarge" | "ml.c6gn.16xlarge" | "ml.r6g.large" | "ml.r6g.xlarge" | "ml.r6g.2xlarge" | "ml.r6g.4xlarge" | "ml.r6g.8xlarge" | "ml.r6g.12xlarge" | "ml.r6g.16xlarge" | "ml.r6gd.large" | "ml.r6gd.xlarge" | "ml.r6gd.2xlarge" | "ml.r6gd.4xlarge" | "ml.r6gd.8xlarge" | "ml.r6gd.12xlarge" | "ml.r6gd.16xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.inf2.xlarge" | "ml.inf2.8xlarge" | "ml.inf2.24xlarge" | "ml.inf2.48xlarge" | "ml.p5.48xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge")]?,
                                      supported_content_types: Array[::String]?,
                                      supported_response_mime_types: Array[::String]?
                                    },
                                  ],
                                  ?inference_specification: {
                                    containers: Array[
                                      {
                                        container_hostname: ::String?,
                                        image: ::String,
                                        image_digest: ::String?,
                                        model_data_url: ::String?,
                                        model_data_source: {
                                          s3_data_source: {
                                            s3_uri: ::String,
                                            s3_data_type: ("S3Prefix" | "S3Object"),
                                            compression_type: ("None" | "Gzip"),
                                            model_access_config: {
                                              accept_eula: bool
                                            }?,
                                            hub_access_config: {
                                              hub_content_arn: ::String
                                            }?,
                                            manifest_s3_uri: ::String?
                                          }?
                                        }?,
                                        product_id: ::String?,
                                        environment: Hash[::String, ::String]?,
                                        model_input: {
                                          data_input_config: ::String
                                        }?,
                                        framework: ::String?,
                                        framework_version: ::String?,
                                        nearest_model_name: ::String?,
                                        additional_s3_data_source: {
                                          s3_data_type: ("S3Object" | "S3Prefix"),
                                          s3_uri: ::String,
                                          compression_type: ("None" | "Gzip")?
                                        }?
                                      },
                                    ],
                                    supported_transform_instance_types: Array[("ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge")]?,
                                    supported_realtime_inference_instance_types: Array[("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.12xlarge" | "ml.m5d.24xlarge" | "ml.c4.large" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.large" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.12xlarge" | "ml.r5.24xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.12xlarge" | "ml.r5d.24xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.dl1.24xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.12xlarge" | "ml.g5.16xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.p4d.24xlarge" | "ml.c7g.large" | "ml.c7g.xlarge" | "ml.c7g.2xlarge" | "ml.c7g.4xlarge" | "ml.c7g.8xlarge" | "ml.c7g.12xlarge" | "ml.c7g.16xlarge" | "ml.m6g.large" | "ml.m6g.xlarge" | "ml.m6g.2xlarge" | "ml.m6g.4xlarge" | "ml.m6g.8xlarge" | "ml.m6g.12xlarge" | "ml.m6g.16xlarge" | "ml.m6gd.large" | "ml.m6gd.xlarge" | "ml.m6gd.2xlarge" | "ml.m6gd.4xlarge" | "ml.m6gd.8xlarge" | "ml.m6gd.12xlarge" | "ml.m6gd.16xlarge" | "ml.c6g.large" | "ml.c6g.xlarge" | "ml.c6g.2xlarge" | "ml.c6g.4xlarge" | "ml.c6g.8xlarge" | "ml.c6g.12xlarge" | "ml.c6g.16xlarge" | "ml.c6gd.large" | "ml.c6gd.xlarge" | "ml.c6gd.2xlarge" | "ml.c6gd.4xlarge" | "ml.c6gd.8xlarge" | "ml.c6gd.12xlarge" | "ml.c6gd.16xlarge" | "ml.c6gn.large" | "ml.c6gn.xlarge" | "ml.c6gn.2xlarge" | "ml.c6gn.4xlarge" | "ml.c6gn.8xlarge" | "ml.c6gn.12xlarge" | "ml.c6gn.16xlarge" | "ml.r6g.large" | "ml.r6g.xlarge" | "ml.r6g.2xlarge" | "ml.r6g.4xlarge" | "ml.r6g.8xlarge" | "ml.r6g.12xlarge" | "ml.r6g.16xlarge" | "ml.r6gd.large" | "ml.r6gd.xlarge" | "ml.r6gd.2xlarge" | "ml.r6gd.4xlarge" | "ml.r6gd.8xlarge" | "ml.r6gd.12xlarge" | "ml.r6gd.16xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.inf2.xlarge" | "ml.inf2.8xlarge" | "ml.inf2.24xlarge" | "ml.inf2.48xlarge" | "ml.p5.48xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge")]?,
                                    supported_content_types: Array[::String]?,
                                    supported_response_mime_types: Array[::String]?
                                  },
                                  ?source_uri: ::String,
                                  ?model_card: {
                                    model_card_content: ::String?,
                                    model_card_status: ("Draft" | "PendingReview" | "Approved" | "Archived")?
                                  }
                                ) -> _UpdateModelPackageResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateModelPackageResponseSuccess

      interface _UpdateMonitoringAlertResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateMonitoringAlertResponse]
        def monitoring_schedule_arn: () -> ::String
        def monitoring_alert_name: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_monitoring_alert-instance_method
      def update_monitoring_alert: (
                                     monitoring_schedule_name: ::String,
                                     monitoring_alert_name: ::String,
                                     datapoints_to_alert: ::Integer,
                                     evaluation_period: ::Integer
                                   ) -> _UpdateMonitoringAlertResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateMonitoringAlertResponseSuccess

      interface _UpdateMonitoringScheduleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateMonitoringScheduleResponse]
        def monitoring_schedule_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_monitoring_schedule-instance_method
      def update_monitoring_schedule: (
                                        monitoring_schedule_name: ::String,
                                        monitoring_schedule_config: {
                                          schedule_config: {
                                            schedule_expression: ::String,
                                            data_analysis_start_time: ::String?,
                                            data_analysis_end_time: ::String?
                                          }?,
                                          monitoring_job_definition: {
                                            baseline_config: {
                                              baselining_job_name: ::String?,
                                              constraints_resource: {
                                                s3_uri: ::String?
                                              }?,
                                              statistics_resource: {
                                                s3_uri: ::String?
                                              }?
                                            }?,
                                            monitoring_inputs: Array[
                                              {
                                                endpoint_input: {
                                                  endpoint_name: ::String,
                                                  local_path: ::String,
                                                  s3_input_mode: ("Pipe" | "File")?,
                                                  s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                  features_attribute: ::String?,
                                                  inference_attribute: ::String?,
                                                  probability_attribute: ::String?,
                                                  probability_threshold_attribute: ::Float?,
                                                  start_time_offset: ::String?,
                                                  end_time_offset: ::String?,
                                                  exclude_features_attribute: ::String?
                                                }?,
                                                batch_transform_input: {
                                                  data_captured_destination_s3_uri: ::String,
                                                  dataset_format: {
                                                    csv: {
                                                      header: bool?
                                                    }?,
                                                    json: {
                                                      line: bool?
                                                    }?,
                                                    parquet: {
                                                    }?
                                                  },
                                                  local_path: ::String,
                                                  s3_input_mode: ("Pipe" | "File")?,
                                                  s3_data_distribution_type: ("FullyReplicated" | "ShardedByS3Key")?,
                                                  features_attribute: ::String?,
                                                  inference_attribute: ::String?,
                                                  probability_attribute: ::String?,
                                                  probability_threshold_attribute: ::Float?,
                                                  start_time_offset: ::String?,
                                                  end_time_offset: ::String?,
                                                  exclude_features_attribute: ::String?
                                                }?
                                              },
                                            ],
                                            monitoring_output_config: {
                                              monitoring_outputs: Array[
                                                {
                                                  s3_output: {
                                                    s3_uri: ::String,
                                                    local_path: ::String,
                                                    s3_upload_mode: ("Continuous" | "EndOfJob")?
                                                  }
                                                },
                                              ],
                                              kms_key_id: ::String?
                                            },
                                            monitoring_resources: {
                                              cluster_config: {
                                                instance_count: ::Integer,
                                                instance_type: ("ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge"),
                                                volume_size_in_gb: ::Integer,
                                                volume_kms_key_id: ::String?
                                              }
                                            },
                                            monitoring_app_specification: {
                                              image_uri: ::String,
                                              container_entrypoint: Array[::String]?,
                                              container_arguments: Array[::String]?,
                                              record_preprocessor_source_uri: ::String?,
                                              post_analytics_processor_source_uri: ::String?
                                            },
                                            stopping_condition: {
                                              max_runtime_in_seconds: ::Integer
                                            }?,
                                            environment: Hash[::String, ::String]?,
                                            network_config: {
                                              enable_inter_container_traffic_encryption: bool?,
                                              enable_network_isolation: bool?,
                                              vpc_config: {
                                                security_group_ids: Array[::String],
                                                subnets: Array[::String]
                                              }?
                                            }?,
                                            role_arn: ::String
                                          }?,
                                          monitoring_job_definition_name: ::String?,
                                          monitoring_type: ("DataQuality" | "ModelQuality" | "ModelBias" | "ModelExplainability")?
                                        }
                                      ) -> _UpdateMonitoringScheduleResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateMonitoringScheduleResponseSuccess

      interface _UpdateNotebookInstanceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateNotebookInstanceOutput]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_notebook_instance-instance_method
      def update_notebook_instance: (
                                      notebook_instance_name: ::String,
                                      ?instance_type: ("ml.t2.medium" | "ml.t2.large" | "ml.t2.xlarge" | "ml.t2.2xlarge" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.c5d.xlarge" | "ml.c5d.2xlarge" | "ml.c5d.4xlarge" | "ml.c5d.9xlarge" | "ml.c5d.18xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.inf1.xlarge" | "ml.inf1.2xlarge" | "ml.inf1.6xlarge" | "ml.inf1.24xlarge" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge"),
                                      ?role_arn: ::String,
                                      ?lifecycle_config_name: ::String,
                                      ?disassociate_lifecycle_config: bool,
                                      ?volume_size_in_gb: ::Integer,
                                      ?default_code_repository: ::String,
                                      ?additional_code_repositories: Array[::String],
                                      ?accelerator_types: Array[("ml.eia1.medium" | "ml.eia1.large" | "ml.eia1.xlarge" | "ml.eia2.medium" | "ml.eia2.large" | "ml.eia2.xlarge")],
                                      ?disassociate_accelerator_types: bool,
                                      ?disassociate_default_code_repository: bool,
                                      ?disassociate_additional_code_repositories: bool,
                                      ?root_access: ("Enabled" | "Disabled"),
                                      ?instance_metadata_service_configuration: {
                                        minimum_instance_metadata_service_version: ::String
                                      }
                                    ) -> _UpdateNotebookInstanceResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateNotebookInstanceResponseSuccess

      interface _UpdateNotebookInstanceLifecycleConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateNotebookInstanceLifecycleConfigOutput]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_notebook_instance_lifecycle_config-instance_method
      def update_notebook_instance_lifecycle_config: (
                                                       notebook_instance_lifecycle_config_name: ::String,
                                                       ?on_create: Array[
                                                         {
                                                           content: ::String?
                                                         },
                                                       ],
                                                       ?on_start: Array[
                                                         {
                                                           content: ::String?
                                                         },
                                                       ]
                                                     ) -> _UpdateNotebookInstanceLifecycleConfigResponseSuccess
                                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateNotebookInstanceLifecycleConfigResponseSuccess

      interface _UpdatePipelineResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdatePipelineResponse]
        def pipeline_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_pipeline-instance_method
      def update_pipeline: (
                             pipeline_name: ::String,
                             ?pipeline_display_name: ::String,
                             ?pipeline_definition: ::String,
                             ?pipeline_definition_s3_location: {
                               bucket: ::String,
                               object_key: ::String,
                               version_id: ::String?
                             },
                             ?pipeline_description: ::String,
                             ?role_arn: ::String,
                             ?parallelism_configuration: {
                               max_parallel_execution_steps: ::Integer
                             }
                           ) -> _UpdatePipelineResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdatePipelineResponseSuccess

      interface _UpdatePipelineExecutionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdatePipelineExecutionResponse]
        def pipeline_execution_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_pipeline_execution-instance_method
      def update_pipeline_execution: (
                                       pipeline_execution_arn: ::String,
                                       ?pipeline_execution_description: ::String,
                                       ?pipeline_execution_display_name: ::String,
                                       ?parallelism_configuration: {
                                         max_parallel_execution_steps: ::Integer
                                       }
                                     ) -> _UpdatePipelineExecutionResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdatePipelineExecutionResponseSuccess

      interface _UpdateProjectResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateProjectOutput]
        def project_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_project-instance_method
      def update_project: (
                            project_name: ::String,
                            ?project_description: ::String,
                            ?service_catalog_provisioning_update_details: {
                              provisioning_artifact_id: ::String?,
                              provisioning_parameters: Array[
                                {
                                  key: ::String?,
                                  value: ::String?
                                },
                              ]?
                            },
                            ?tags: Array[
                              {
                                key: ::String,
                                value: ::String
                              },
                            ]
                          ) -> _UpdateProjectResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateProjectResponseSuccess

      interface _UpdateSpaceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateSpaceResponse]
        def space_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_space-instance_method
      def update_space: (
                          domain_id: ::String,
                          space_name: ::String,
                          ?space_settings: {
                            jupyter_server_app_settings: {
                              default_resource_spec: {
                                sage_maker_image_arn: ::String?,
                                sage_maker_image_version_arn: ::String?,
                                sage_maker_image_version_alias: ::String?,
                                instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                lifecycle_config_arn: ::String?
                              }?,
                              lifecycle_config_arns: Array[::String]?,
                              code_repositories: Array[
                                {
                                  repository_url: ::String
                                },
                              ]?
                            }?,
                            kernel_gateway_app_settings: {
                              default_resource_spec: {
                                sage_maker_image_arn: ::String?,
                                sage_maker_image_version_arn: ::String?,
                                sage_maker_image_version_alias: ::String?,
                                instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                lifecycle_config_arn: ::String?
                              }?,
                              custom_images: Array[
                                {
                                  image_name: ::String,
                                  image_version_number: ::Integer?,
                                  app_image_config_name: ::String
                                },
                              ]?,
                              lifecycle_config_arns: Array[::String]?
                            }?,
                            code_editor_app_settings: {
                              default_resource_spec: {
                                sage_maker_image_arn: ::String?,
                                sage_maker_image_version_arn: ::String?,
                                sage_maker_image_version_alias: ::String?,
                                instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                lifecycle_config_arn: ::String?
                              }?,
                              app_lifecycle_management: {
                                idle_settings: {
                                  idle_timeout_in_minutes: ::Integer?
                                }?
                              }?
                            }?,
                            jupyter_lab_app_settings: {
                              default_resource_spec: {
                                sage_maker_image_arn: ::String?,
                                sage_maker_image_version_arn: ::String?,
                                sage_maker_image_version_alias: ::String?,
                                instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                lifecycle_config_arn: ::String?
                              }?,
                              code_repositories: Array[
                                {
                                  repository_url: ::String
                                },
                              ]?,
                              app_lifecycle_management: {
                                idle_settings: {
                                  idle_timeout_in_minutes: ::Integer?
                                }?
                              }?
                            }?,
                            app_type: ("JupyterServer" | "KernelGateway" | "DetailedProfiler" | "TensorBoard" | "CodeEditor" | "JupyterLab" | "RStudioServerPro" | "RSessionGateway" | "Canvas")?,
                            space_storage_settings: {
                              ebs_storage_settings: {
                                ebs_volume_size_in_gb: ::Integer
                              }?
                            }?,
                            custom_file_systems: Array[
                              {
                                efs_file_system: {
                                  file_system_id: ::String
                                }?
                              },
                            ]?
                          },
                          ?space_display_name: ::String
                        ) -> _UpdateSpaceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateSpaceResponseSuccess

      interface _UpdateTrainingJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateTrainingJobResponse]
        def training_job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_training_job-instance_method
      def update_training_job: (
                                 training_job_name: ::String,
                                 ?profiler_config: {
                                   s3_output_path: ::String?,
                                   profiling_interval_in_milliseconds: ::Integer?,
                                   profiling_parameters: Hash[::String, ::String]?,
                                   disable_profiler: bool?
                                 },
                                 ?profiler_rule_configurations: Array[
                                   {
                                     rule_configuration_name: ::String,
                                     local_path: ::String?,
                                     s3_output_path: ::String?,
                                     rule_evaluator_image: ::String,
                                     instance_type: ("ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m4.xlarge" | "ml.m4.2xlarge" | "ml.m4.4xlarge" | "ml.m4.10xlarge" | "ml.m4.16xlarge" | "ml.c4.xlarge" | "ml.c4.2xlarge" | "ml.c4.4xlarge" | "ml.c4.8xlarge" | "ml.p2.xlarge" | "ml.p2.8xlarge" | "ml.p2.16xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.18xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.12xlarge" | "ml.m5.24xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.r5d.large" | "ml.r5d.xlarge" | "ml.r5d.2xlarge" | "ml.r5d.4xlarge" | "ml.r5d.8xlarge" | "ml.r5d.12xlarge" | "ml.r5d.16xlarge" | "ml.r5d.24xlarge")?,
                                     volume_size_in_gb: ::Integer?,
                                     rule_parameters: Hash[::String, ::String]?
                                   },
                                 ],
                                 ?resource_config: {
                                   keep_alive_period_in_seconds: ::Integer
                                 },
                                 ?remote_debug_config: {
                                   enable_remote_debug: bool?
                                 }
                               ) -> _UpdateTrainingJobResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateTrainingJobResponseSuccess

      interface _UpdateTrialResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateTrialResponse]
        def trial_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_trial-instance_method
      def update_trial: (
                          trial_name: ::String,
                          ?display_name: ::String
                        ) -> _UpdateTrialResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateTrialResponseSuccess

      interface _UpdateTrialComponentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateTrialComponentResponse]
        def trial_component_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_trial_component-instance_method
      def update_trial_component: (
                                    trial_component_name: ::String,
                                    ?display_name: ::String,
                                    ?status: {
                                      primary_status: ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped")?,
                                      message: ::String?
                                    },
                                    ?start_time: ::Time,
                                    ?end_time: ::Time,
                                    ?parameters: Hash[::String, {
                                        string_value: ::String?,
                                        number_value: ::Float?
                                      }],
                                    ?parameters_to_remove: Array[::String],
                                    ?input_artifacts: Hash[::String, {
                                        media_type: ::String?,
                                        value: ::String
                                      }],
                                    ?input_artifacts_to_remove: Array[::String],
                                    ?output_artifacts: Hash[::String, {
                                        media_type: ::String?,
                                        value: ::String
                                      }],
                                    ?output_artifacts_to_remove: Array[::String]
                                  ) -> _UpdateTrialComponentResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateTrialComponentResponseSuccess

      interface _UpdateUserProfileResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateUserProfileResponse]
        def user_profile_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_user_profile-instance_method
      def update_user_profile: (
                                 domain_id: ::String,
                                 user_profile_name: ::String,
                                 ?user_settings: {
                                   execution_role: ::String?,
                                   security_groups: Array[::String]?,
                                   sharing_settings: {
                                     notebook_output_option: ("Allowed" | "Disabled")?,
                                     s3_output_path: ::String?,
                                     s3_kms_key_id: ::String?
                                   }?,
                                   jupyter_server_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?,
                                     lifecycle_config_arns: Array[::String]?,
                                     code_repositories: Array[
                                       {
                                         repository_url: ::String
                                       },
                                     ]?
                                   }?,
                                   kernel_gateway_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?,
                                     custom_images: Array[
                                       {
                                         image_name: ::String,
                                         image_version_number: ::Integer?,
                                         app_image_config_name: ::String
                                       },
                                     ]?,
                                     lifecycle_config_arns: Array[::String]?
                                   }?,
                                   tensor_board_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?
                                   }?,
                                   r_studio_server_pro_app_settings: {
                                     access_status: ("ENABLED" | "DISABLED")?,
                                     user_group: ("R_STUDIO_ADMIN" | "R_STUDIO_USER")?
                                   }?,
                                   r_session_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?,
                                     custom_images: Array[
                                       {
                                         image_name: ::String,
                                         image_version_number: ::Integer?,
                                         app_image_config_name: ::String
                                       },
                                     ]?
                                   }?,
                                   canvas_app_settings: {
                                     time_series_forecasting_settings: {
                                       status: ("ENABLED" | "DISABLED")?,
                                       amazon_forecast_role_arn: ::String?
                                     }?,
                                     model_register_settings: {
                                       status: ("ENABLED" | "DISABLED")?,
                                       cross_account_model_register_role_arn: ::String?
                                     }?,
                                     workspace_settings: {
                                       s3_artifact_path: ::String?,
                                       s3_kms_key_id: ::String?
                                     }?,
                                     identity_provider_o_auth_settings: Array[
                                       {
                                         data_source_name: ("SalesforceGenie" | "Snowflake")?,
                                         status: ("ENABLED" | "DISABLED")?,
                                         secret_arn: ::String?
                                       },
                                     ]?,
                                     direct_deploy_settings: {
                                       status: ("ENABLED" | "DISABLED")?
                                     }?,
                                     kendra_settings: {
                                       status: ("ENABLED" | "DISABLED")?
                                     }?,
                                     generative_ai_settings: {
                                       amazon_bedrock_role_arn: ::String?
                                     }?,
                                     emr_serverless_settings: {
                                       execution_role_arn: ::String?,
                                       status: ("ENABLED" | "DISABLED")?
                                     }?
                                   }?,
                                   code_editor_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?,
                                     custom_images: Array[
                                       {
                                         image_name: ::String,
                                         image_version_number: ::Integer?,
                                         app_image_config_name: ::String
                                       },
                                     ]?,
                                     lifecycle_config_arns: Array[::String]?,
                                     app_lifecycle_management: {
                                       idle_settings: {
                                         lifecycle_management: ("ENABLED" | "DISABLED")?,
                                         idle_timeout_in_minutes: ::Integer?,
                                         min_idle_timeout_in_minutes: ::Integer?,
                                         max_idle_timeout_in_minutes: ::Integer?
                                       }?
                                     }?,
                                     built_in_lifecycle_config_arn: ::String?
                                   }?,
                                   jupyter_lab_app_settings: {
                                     default_resource_spec: {
                                       sage_maker_image_arn: ::String?,
                                       sage_maker_image_version_arn: ::String?,
                                       sage_maker_image_version_alias: ::String?,
                                       instance_type: ("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")?,
                                       lifecycle_config_arn: ::String?
                                     }?,
                                     custom_images: Array[
                                       {
                                         image_name: ::String,
                                         image_version_number: ::Integer?,
                                         app_image_config_name: ::String
                                       },
                                     ]?,
                                     lifecycle_config_arns: Array[::String]?,
                                     code_repositories: Array[
                                       {
                                         repository_url: ::String
                                       },
                                     ]?,
                                     app_lifecycle_management: {
                                       idle_settings: {
                                         lifecycle_management: ("ENABLED" | "DISABLED")?,
                                         idle_timeout_in_minutes: ::Integer?,
                                         min_idle_timeout_in_minutes: ::Integer?,
                                         max_idle_timeout_in_minutes: ::Integer?
                                       }?
                                     }?,
                                     emr_settings: {
                                       assumable_role_arns: Array[::String]?,
                                       execution_role_arns: Array[::String]?
                                     }?,
                                     built_in_lifecycle_config_arn: ::String?
                                   }?,
                                   space_storage_settings: {
                                     default_ebs_storage_settings: {
                                       default_ebs_volume_size_in_gb: ::Integer,
                                       maximum_ebs_volume_size_in_gb: ::Integer
                                     }?
                                   }?,
                                   default_landing_uri: ::String?,
                                   studio_web_portal: ("ENABLED" | "DISABLED")?,
                                   custom_posix_user_config: {
                                     uid: ::Integer,
                                     gid: ::Integer
                                   }?,
                                   custom_file_system_configs: Array[
                                     {
                                       efs_file_system_config: {
                                         file_system_id: ::String,
                                         file_system_path: ::String?
                                       }?
                                     },
                                   ]?,
                                   studio_web_portal_settings: {
                                     hidden_ml_tools: Array[("DataWrangler" | "FeatureStore" | "EmrClusters" | "AutoMl" | "Experiments" | "Training" | "ModelEvaluation" | "Pipelines" | "Models" | "JumpStart" | "InferenceRecommender" | "Endpoints" | "Projects" | "InferenceOptimization" | "PerformanceEvaluation")]?,
                                     hidden_app_types: Array[("JupyterServer" | "KernelGateway" | "DetailedProfiler" | "TensorBoard" | "CodeEditor" | "JupyterLab" | "RStudioServerPro" | "RSessionGateway" | "Canvas")]?,
                                     hidden_instance_types: Array[("system" | "ml.t3.micro" | "ml.t3.small" | "ml.t3.medium" | "ml.t3.large" | "ml.t3.xlarge" | "ml.t3.2xlarge" | "ml.m5.large" | "ml.m5.xlarge" | "ml.m5.2xlarge" | "ml.m5.4xlarge" | "ml.m5.8xlarge" | "ml.m5.12xlarge" | "ml.m5.16xlarge" | "ml.m5.24xlarge" | "ml.m5d.large" | "ml.m5d.xlarge" | "ml.m5d.2xlarge" | "ml.m5d.4xlarge" | "ml.m5d.8xlarge" | "ml.m5d.12xlarge" | "ml.m5d.16xlarge" | "ml.m5d.24xlarge" | "ml.c5.large" | "ml.c5.xlarge" | "ml.c5.2xlarge" | "ml.c5.4xlarge" | "ml.c5.9xlarge" | "ml.c5.12xlarge" | "ml.c5.18xlarge" | "ml.c5.24xlarge" | "ml.p3.2xlarge" | "ml.p3.8xlarge" | "ml.p3.16xlarge" | "ml.p3dn.24xlarge" | "ml.g4dn.xlarge" | "ml.g4dn.2xlarge" | "ml.g4dn.4xlarge" | "ml.g4dn.8xlarge" | "ml.g4dn.12xlarge" | "ml.g4dn.16xlarge" | "ml.r5.large" | "ml.r5.xlarge" | "ml.r5.2xlarge" | "ml.r5.4xlarge" | "ml.r5.8xlarge" | "ml.r5.12xlarge" | "ml.r5.16xlarge" | "ml.r5.24xlarge" | "ml.g5.xlarge" | "ml.g5.2xlarge" | "ml.g5.4xlarge" | "ml.g5.8xlarge" | "ml.g5.16xlarge" | "ml.g5.12xlarge" | "ml.g5.24xlarge" | "ml.g5.48xlarge" | "ml.g6.xlarge" | "ml.g6.2xlarge" | "ml.g6.4xlarge" | "ml.g6.8xlarge" | "ml.g6.12xlarge" | "ml.g6.16xlarge" | "ml.g6.24xlarge" | "ml.g6.48xlarge" | "ml.g6e.xlarge" | "ml.g6e.2xlarge" | "ml.g6e.4xlarge" | "ml.g6e.8xlarge" | "ml.g6e.12xlarge" | "ml.g6e.16xlarge" | "ml.g6e.24xlarge" | "ml.g6e.48xlarge" | "ml.geospatial.interactive" | "ml.p4d.24xlarge" | "ml.p4de.24xlarge" | "ml.trn1.2xlarge" | "ml.trn1.32xlarge" | "ml.trn1n.32xlarge" | "ml.p5.48xlarge" | "ml.m6i.large" | "ml.m6i.xlarge" | "ml.m6i.2xlarge" | "ml.m6i.4xlarge" | "ml.m6i.8xlarge" | "ml.m6i.12xlarge" | "ml.m6i.16xlarge" | "ml.m6i.24xlarge" | "ml.m6i.32xlarge" | "ml.m7i.large" | "ml.m7i.xlarge" | "ml.m7i.2xlarge" | "ml.m7i.4xlarge" | "ml.m7i.8xlarge" | "ml.m7i.12xlarge" | "ml.m7i.16xlarge" | "ml.m7i.24xlarge" | "ml.m7i.48xlarge" | "ml.c6i.large" | "ml.c6i.xlarge" | "ml.c6i.2xlarge" | "ml.c6i.4xlarge" | "ml.c6i.8xlarge" | "ml.c6i.12xlarge" | "ml.c6i.16xlarge" | "ml.c6i.24xlarge" | "ml.c6i.32xlarge" | "ml.c7i.large" | "ml.c7i.xlarge" | "ml.c7i.2xlarge" | "ml.c7i.4xlarge" | "ml.c7i.8xlarge" | "ml.c7i.12xlarge" | "ml.c7i.16xlarge" | "ml.c7i.24xlarge" | "ml.c7i.48xlarge" | "ml.r6i.large" | "ml.r6i.xlarge" | "ml.r6i.2xlarge" | "ml.r6i.4xlarge" | "ml.r6i.8xlarge" | "ml.r6i.12xlarge" | "ml.r6i.16xlarge" | "ml.r6i.24xlarge" | "ml.r6i.32xlarge" | "ml.r7i.large" | "ml.r7i.xlarge" | "ml.r7i.2xlarge" | "ml.r7i.4xlarge" | "ml.r7i.8xlarge" | "ml.r7i.12xlarge" | "ml.r7i.16xlarge" | "ml.r7i.24xlarge" | "ml.r7i.48xlarge" | "ml.m6id.large" | "ml.m6id.xlarge" | "ml.m6id.2xlarge" | "ml.m6id.4xlarge" | "ml.m6id.8xlarge" | "ml.m6id.12xlarge" | "ml.m6id.16xlarge" | "ml.m6id.24xlarge" | "ml.m6id.32xlarge" | "ml.c6id.large" | "ml.c6id.xlarge" | "ml.c6id.2xlarge" | "ml.c6id.4xlarge" | "ml.c6id.8xlarge" | "ml.c6id.12xlarge" | "ml.c6id.16xlarge" | "ml.c6id.24xlarge" | "ml.c6id.32xlarge" | "ml.r6id.large" | "ml.r6id.xlarge" | "ml.r6id.2xlarge" | "ml.r6id.4xlarge" | "ml.r6id.8xlarge" | "ml.r6id.12xlarge" | "ml.r6id.16xlarge" | "ml.r6id.24xlarge" | "ml.r6id.32xlarge")]?,
                                     hidden_sage_maker_image_version_aliases: Array[
                                       {
                                         sage_maker_image_name: ("sagemaker_distribution")?,
                                         version_aliases: Array[::String]?
                                       },
                                     ]?
                                   }?,
                                   auto_mount_home_efs: ("Enabled" | "Disabled" | "DefaultAsDomain")?
                                 }
                               ) -> _UpdateUserProfileResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateUserProfileResponseSuccess

      interface _UpdateWorkforceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateWorkforceResponse]
        def workforce: () -> Types::Workforce
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_workforce-instance_method
      def update_workforce: (
                              workforce_name: ::String,
                              ?source_ip_config: {
                                cidrs: Array[::String]
                              },
                              ?oidc_config: {
                                client_id: ::String,
                                client_secret: ::String,
                                issuer: ::String,
                                authorization_endpoint: ::String,
                                token_endpoint: ::String,
                                user_info_endpoint: ::String,
                                logout_endpoint: ::String,
                                jwks_uri: ::String,
                                scope: ::String?,
                                authentication_request_extra_params: Hash[::String, ::String]?
                              },
                              ?workforce_vpc_config: {
                                vpc_id: ::String?,
                                security_group_ids: Array[::String]?,
                                subnets: Array[::String]?
                              }
                            ) -> _UpdateWorkforceResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateWorkforceResponseSuccess

      interface _UpdateWorkteamResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateWorkteamResponse]
        def workteam: () -> Types::Workteam
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#update_workteam-instance_method
      def update_workteam: (
                             workteam_name: ::String,
                             ?member_definitions: Array[
                               {
                                 cognito_member_definition: {
                                   user_pool: ::String,
                                   user_group: ::String,
                                   client_id: ::String
                                 }?,
                                 oidc_member_definition: {
                                   groups: Array[::String]?
                                 }?
                               },
                             ],
                             ?description: ::String,
                             ?notification_configuration: {
                               notification_topic_arn: ::String?
                             },
                             ?worker_access_configuration: {
                               s3_presign: {
                                 iam_policy_constraints: {
                                   source_ip: ("Enabled" | "Disabled")?,
                                   vpc_source_ip: ("Enabled" | "Disabled")?
                                 }?
                               }?
                             }
                           ) -> _UpdateWorkteamResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateWorkteamResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SageMaker/Client.html#wait_until-instance_method
      def wait_until: (:endpoint_deleted waiter_name, 
                    endpoint_name: ::String
                  ) -> Client::_DescribeEndpointResponseSuccess
                    | (:endpoint_deleted waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeEndpointResponseSuccess
                    | (:endpoint_in_service waiter_name, 
                    endpoint_name: ::String
                  ) -> Client::_DescribeEndpointResponseSuccess
                    | (:endpoint_in_service waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeEndpointResponseSuccess
                    | (:image_created waiter_name, 
                    image_name: ::String
                  ) -> Client::_DescribeImageResponseSuccess
                    | (:image_created waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeImageResponseSuccess
                    | (:image_deleted waiter_name, 
                    image_name: ::String
                  ) -> Client::_DescribeImageResponseSuccess
                    | (:image_deleted waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeImageResponseSuccess
                    | (:image_updated waiter_name, 
                    image_name: ::String
                  ) -> Client::_DescribeImageResponseSuccess
                    | (:image_updated waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeImageResponseSuccess
                    | (:image_version_created waiter_name, 
                    image_name: ::String,
                    ?version: ::Integer,
                    ?alias: ::String
                  ) -> Client::_DescribeImageVersionResponseSuccess
                    | (:image_version_created waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeImageVersionResponseSuccess
                    | (:image_version_deleted waiter_name, 
                    image_name: ::String,
                    ?version: ::Integer,
                    ?alias: ::String
                  ) -> Client::_DescribeImageVersionResponseSuccess
                    | (:image_version_deleted waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeImageVersionResponseSuccess
                    | (:notebook_instance_deleted waiter_name, 
                    notebook_instance_name: ::String
                  ) -> Client::_DescribeNotebookInstanceResponseSuccess
                    | (:notebook_instance_deleted waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeNotebookInstanceResponseSuccess
                    | (:notebook_instance_in_service waiter_name, 
                    notebook_instance_name: ::String
                  ) -> Client::_DescribeNotebookInstanceResponseSuccess
                    | (:notebook_instance_in_service waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeNotebookInstanceResponseSuccess
                    | (:notebook_instance_stopped waiter_name, 
                    notebook_instance_name: ::String
                  ) -> Client::_DescribeNotebookInstanceResponseSuccess
                    | (:notebook_instance_stopped waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeNotebookInstanceResponseSuccess
                    | (:processing_job_completed_or_stopped waiter_name, 
                    processing_job_name: ::String
                  ) -> Client::_DescribeProcessingJobResponseSuccess
                    | (:processing_job_completed_or_stopped waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeProcessingJobResponseSuccess
                    | (:training_job_completed_or_stopped waiter_name, 
                    training_job_name: ::String
                  ) -> Client::_DescribeTrainingJobResponseSuccess
                    | (:training_job_completed_or_stopped waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeTrainingJobResponseSuccess
                    | (:transform_job_completed_or_stopped waiter_name, 
                    transform_job_name: ::String
                  ) -> Client::_DescribeTransformJobResponseSuccess
                    | (:transform_job_completed_or_stopped waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeTransformJobResponseSuccess
    end
  end
end

