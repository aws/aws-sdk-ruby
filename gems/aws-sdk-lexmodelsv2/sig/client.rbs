# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module LexModelsV2
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?account_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?sigv4a_signing_region_set: Array[String],
                      ?stub_responses: untyped,
                      ?telemetry_provider: Aws::Telemetry::TelemetryProviderBase,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _BatchCreateCustomVocabularyItemResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchCreateCustomVocabularyItemResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def errors: () -> ::Array[Types::FailedCustomVocabularyItem]
        def resources: () -> ::Array[Types::CustomVocabularyItem]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#batch_create_custom_vocabulary_item-instance_method
      def batch_create_custom_vocabulary_item: (
                                                 bot_id: ::String,
                                                 bot_version: ::String,
                                                 locale_id: ::String,
                                                 custom_vocabulary_item_list: Array[
                                                   {
                                                     phrase: ::String,
                                                     weight: ::Integer?,
                                                     display_as: ::String?
                                                   },
                                                 ]
                                               ) -> _BatchCreateCustomVocabularyItemResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchCreateCustomVocabularyItemResponseSuccess

      interface _BatchDeleteCustomVocabularyItemResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchDeleteCustomVocabularyItemResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def errors: () -> ::Array[Types::FailedCustomVocabularyItem]
        def resources: () -> ::Array[Types::CustomVocabularyItem]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#batch_delete_custom_vocabulary_item-instance_method
      def batch_delete_custom_vocabulary_item: (
                                                 bot_id: ::String,
                                                 bot_version: ::String,
                                                 locale_id: ::String,
                                                 custom_vocabulary_item_list: Array[
                                                   {
                                                     item_id: ::String
                                                   },
                                                 ]
                                               ) -> _BatchDeleteCustomVocabularyItemResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchDeleteCustomVocabularyItemResponseSuccess

      interface _BatchUpdateCustomVocabularyItemResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchUpdateCustomVocabularyItemResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def errors: () -> ::Array[Types::FailedCustomVocabularyItem]
        def resources: () -> ::Array[Types::CustomVocabularyItem]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#batch_update_custom_vocabulary_item-instance_method
      def batch_update_custom_vocabulary_item: (
                                                 bot_id: ::String,
                                                 bot_version: ::String,
                                                 locale_id: ::String,
                                                 custom_vocabulary_item_list: Array[
                                                   {
                                                     item_id: ::String,
                                                     phrase: ::String,
                                                     weight: ::Integer?,
                                                     display_as: ::String?
                                                   },
                                                 ]
                                               ) -> _BatchUpdateCustomVocabularyItemResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchUpdateCustomVocabularyItemResponseSuccess

      interface _BuildBotLocaleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BuildBotLocaleResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def bot_locale_status: () -> ("Creating" | "Building" | "Built" | "ReadyExpressTesting" | "Failed" | "Deleting" | "NotBuilt" | "Importing" | "Processing")
        def last_build_submitted_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#build_bot_locale-instance_method
      def build_bot_locale: (
                              bot_id: ::String,
                              bot_version: ::String,
                              locale_id: ::String
                            ) -> _BuildBotLocaleResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BuildBotLocaleResponseSuccess

      interface _CreateBotResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateBotResponse]
        def bot_id: () -> ::String
        def bot_name: () -> ::String
        def description: () -> ::String
        def role_arn: () -> ::String
        def data_privacy: () -> Types::DataPrivacy
        def idle_session_ttl_in_seconds: () -> ::Integer
        def bot_status: () -> ("Creating" | "Available" | "Inactive" | "Deleting" | "Failed" | "Versioning" | "Importing" | "Updating")
        def creation_date_time: () -> ::Time
        def bot_tags: () -> ::Hash[::String, ::String]
        def test_bot_alias_tags: () -> ::Hash[::String, ::String]
        def bot_type: () -> ("Bot" | "BotNetwork")
        def bot_members: () -> ::Array[Types::BotMember]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_bot-instance_method
      def create_bot: (
                        bot_name: ::String,
                        ?description: ::String,
                        role_arn: ::String,
                        data_privacy: {
                          child_directed: bool
                        },
                        idle_session_ttl_in_seconds: ::Integer,
                        ?bot_tags: Hash[::String, ::String],
                        ?test_bot_alias_tags: Hash[::String, ::String],
                        ?bot_type: ("Bot" | "BotNetwork"),
                        ?bot_members: Array[
                          {
                            bot_member_id: ::String,
                            bot_member_name: ::String,
                            bot_member_alias_id: ::String,
                            bot_member_alias_name: ::String,
                            bot_member_version: ::String
                          },
                        ]
                      ) -> _CreateBotResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateBotResponseSuccess

      interface _CreateBotAliasResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateBotAliasResponse]
        def bot_alias_id: () -> ::String
        def bot_alias_name: () -> ::String
        def description: () -> ::String
        def bot_version: () -> ::String
        def bot_alias_locale_settings: () -> ::Hash[::String, Types::BotAliasLocaleSettings]
        def conversation_log_settings: () -> Types::ConversationLogSettings
        def sentiment_analysis_settings: () -> Types::SentimentAnalysisSettings
        def bot_alias_status: () -> ("Creating" | "Available" | "Deleting" | "Failed")
        def bot_id: () -> ::String
        def creation_date_time: () -> ::Time
        def tags: () -> ::Hash[::String, ::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_bot_alias-instance_method
      def create_bot_alias: (
                              bot_alias_name: ::String,
                              ?description: ::String,
                              ?bot_version: ::String,
                              ?bot_alias_locale_settings: Hash[::String, {
                                  enabled: bool,
                                  code_hook_specification: {
                                    lambda_code_hook: {
                                      lambda_arn: ::String,
                                      code_hook_interface_version: ::String
                                    }
                                  }?
                                }],
                              ?conversation_log_settings: {
                                text_log_settings: Array[
                                  {
                                    enabled: bool,
                                    destination: {
                                      cloud_watch: {
                                        cloud_watch_log_group_arn: ::String,
                                        log_prefix: ::String
                                      }
                                    },
                                    selective_logging_enabled: bool?
                                  },
                                ]?,
                                audio_log_settings: Array[
                                  {
                                    enabled: bool,
                                    destination: {
                                      s3_bucket: {
                                        kms_key_arn: ::String?,
                                        s3_bucket_arn: ::String,
                                        log_prefix: ::String
                                      }
                                    },
                                    selective_logging_enabled: bool?
                                  },
                                ]?
                              },
                              ?sentiment_analysis_settings: {
                                detect_sentiment: bool
                              },
                              bot_id: ::String,
                              ?tags: Hash[::String, ::String]
                            ) -> _CreateBotAliasResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateBotAliasResponseSuccess

      interface _CreateBotLocaleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateBotLocaleResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_name: () -> ::String
        def locale_id: () -> ::String
        def description: () -> ::String
        def nlu_intent_confidence_threshold: () -> ::Float
        def voice_settings: () -> Types::VoiceSettings
        def bot_locale_status: () -> ("Creating" | "Building" | "Built" | "ReadyExpressTesting" | "Failed" | "Deleting" | "NotBuilt" | "Importing" | "Processing")
        def creation_date_time: () -> ::Time
        def generative_ai_settings: () -> Types::GenerativeAISettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_bot_locale-instance_method
      def create_bot_locale: (
                               bot_id: ::String,
                               bot_version: ::String,
                               locale_id: ::String,
                               ?description: ::String,
                               nlu_intent_confidence_threshold: ::Float,
                               ?voice_settings: {
                                 voice_id: ::String,
                                 engine: ("standard" | "neural" | "long-form" | "generative")?
                               },
                               ?generative_ai_settings: {
                                 runtime_settings: {
                                   slot_resolution_improvement: {
                                     enabled: bool,
                                     bedrock_model_specification: {
                                       model_arn: ::String,
                                       guardrail: {
                                         identifier: ::String,
                                         version: ::String
                                       }?,
                                       trace_status: ("ENABLED" | "DISABLED")?,
                                       custom_prompt: ::String?
                                     }?
                                   }?
                                 }?,
                                 buildtime_settings: {
                                   descriptive_bot_builder: {
                                     enabled: bool,
                                     bedrock_model_specification: {
                                       model_arn: ::String,
                                       guardrail: {
                                         identifier: ::String,
                                         version: ::String
                                       }?,
                                       trace_status: ("ENABLED" | "DISABLED")?,
                                       custom_prompt: ::String?
                                     }?
                                   }?,
                                   sample_utterance_generation: {
                                     enabled: bool,
                                     bedrock_model_specification: {
                                       model_arn: ::String,
                                       guardrail: {
                                         identifier: ::String,
                                         version: ::String
                                       }?,
                                       trace_status: ("ENABLED" | "DISABLED")?,
                                       custom_prompt: ::String?
                                     }?
                                   }?
                                 }?
                               }
                             ) -> _CreateBotLocaleResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateBotLocaleResponseSuccess

      interface _CreateBotReplicaResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateBotReplicaResponse]
        def bot_id: () -> ::String
        def replica_region: () -> ::String
        def source_region: () -> ::String
        def creation_date_time: () -> ::Time
        def bot_replica_status: () -> ("Enabling" | "Enabled" | "Deleting" | "Failed")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_bot_replica-instance_method
      def create_bot_replica: (
                                bot_id: ::String,
                                replica_region: ::String
                              ) -> _CreateBotReplicaResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateBotReplicaResponseSuccess

      interface _CreateBotVersionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateBotVersionResponse]
        def bot_id: () -> ::String
        def description: () -> ::String
        def bot_version: () -> ::String
        def bot_version_locale_specification: () -> ::Hash[::String, Types::BotVersionLocaleDetails]
        def bot_status: () -> ("Creating" | "Available" | "Inactive" | "Deleting" | "Failed" | "Versioning" | "Importing" | "Updating")
        def creation_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_bot_version-instance_method
      def create_bot_version: (
                                bot_id: ::String,
                                ?description: ::String,
                                bot_version_locale_specification: Hash[::String, {
                                    source_bot_version: ::String
                                  }]
                              ) -> _CreateBotVersionResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateBotVersionResponseSuccess

      interface _CreateExportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateExportResponse]
        def export_id: () -> ::String
        def resource_specification: () -> Types::ExportResourceSpecification
        def file_format: () -> ("LexJson" | "TSV" | "CSV")
        def export_status: () -> ("InProgress" | "Completed" | "Failed" | "Deleting")
        def creation_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_export-instance_method
      def create_export: (
                           resource_specification: {
                             bot_export_specification: {
                               bot_id: ::String,
                               bot_version: ::String
                             }?,
                             bot_locale_export_specification: {
                               bot_id: ::String,
                               bot_version: ::String,
                               locale_id: ::String
                             }?,
                             custom_vocabulary_export_specification: {
                               bot_id: ::String,
                               bot_version: ::String,
                               locale_id: ::String
                             }?,
                             test_set_export_specification: {
                               test_set_id: ::String
                             }?
                           },
                           file_format: ("LexJson" | "TSV" | "CSV"),
                           ?file_password: ::String
                         ) -> _CreateExportResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateExportResponseSuccess

      interface _CreateIntentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateIntentResponse]
        def intent_id: () -> ::String
        def intent_name: () -> ::String
        def description: () -> ::String
        def parent_intent_signature: () -> ::String
        def sample_utterances: () -> ::Array[Types::SampleUtterance]
        def dialog_code_hook: () -> Types::DialogCodeHookSettings
        def fulfillment_code_hook: () -> Types::FulfillmentCodeHookSettings
        def intent_confirmation_setting: () -> Types::IntentConfirmationSetting
        def intent_closing_setting: () -> Types::IntentClosingSetting
        def input_contexts: () -> ::Array[Types::InputContext]
        def output_contexts: () -> ::Array[Types::OutputContext]
        def kendra_configuration: () -> Types::KendraConfiguration
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def creation_date_time: () -> ::Time
        def initial_response_setting: () -> Types::InitialResponseSetting
        def qn_a_intent_configuration: () -> Types::QnAIntentConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_intent-instance_method
      def create_intent: (
                           intent_name: ::String,
                           ?description: ::String,
                           ?parent_intent_signature: ::String,
                           ?sample_utterances: Array[
                             {
                               utterance: ::String
                             },
                           ],
                           ?dialog_code_hook: {
                             enabled: bool
                           },
                           ?fulfillment_code_hook: {
                             enabled: bool,
                             post_fulfillment_status_specification: {
                               success_response: {
                                 message_groups: Array[
                                   {
                                     message: {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                     variations: Array[
                                       {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                     ]?
                                   },
                                 ],
                                 allow_interrupt: bool?
                               }?,
                               failure_response: {
                                 message_groups: Array[
                                   {
                                     message: {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                     variations: Array[
                                       {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                     ]?
                                   },
                                 ],
                                 allow_interrupt: bool?
                               }?,
                               timeout_response: {
                                 message_groups: Array[
                                   {
                                     message: {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                     variations: Array[
                                       {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                     ]?
                                   },
                                 ],
                                 allow_interrupt: bool?
                               }?,
                               success_next_step: {
                                 dialog_action: {
                                   type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                   slot_to_elicit: ::String?,
                                   suppress_next_message: bool?
                                 }?,
                                 intent: {
                                   name: ::String?,
                                   slots: Hash[::String, {
                                       shape: ("Scalar" | "List")?,
                                       value: {
                                         interpreted_value: ::String?
                                       }?,
                                       values: Array[
                                         untyped,
                                       ]?
                                     }]?
                                 }?,
                                 session_attributes: Hash[::String, ::String]?
                               }?,
                               success_conditional: {
                                 active: bool,
                                 conditional_branches: Array[
                                   {
                                     name: ::String,
                                     condition: {
                                       expression_string: ::String
                                     },
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     },
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   },
                                 ],
                                 default_branch: {
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   }?,
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 }
                               }?,
                               failure_next_step: {
                                 dialog_action: {
                                   type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                   slot_to_elicit: ::String?,
                                   suppress_next_message: bool?
                                 }?,
                                 intent: {
                                   name: ::String?,
                                   slots: Hash[::String, {
                                       shape: ("Scalar" | "List")?,
                                       value: {
                                         interpreted_value: ::String?
                                       }?,
                                       values: Array[
                                         untyped,
                                       ]?
                                     }]?
                                 }?,
                                 session_attributes: Hash[::String, ::String]?
                               }?,
                               failure_conditional: {
                                 active: bool,
                                 conditional_branches: Array[
                                   {
                                     name: ::String,
                                     condition: {
                                       expression_string: ::String
                                     },
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     },
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   },
                                 ],
                                 default_branch: {
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   }?,
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 }
                               }?,
                               timeout_next_step: {
                                 dialog_action: {
                                   type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                   slot_to_elicit: ::String?,
                                   suppress_next_message: bool?
                                 }?,
                                 intent: {
                                   name: ::String?,
                                   slots: Hash[::String, {
                                       shape: ("Scalar" | "List")?,
                                       value: {
                                         interpreted_value: ::String?
                                       }?,
                                       values: Array[
                                         untyped,
                                       ]?
                                     }]?
                                 }?,
                                 session_attributes: Hash[::String, ::String]?
                               }?,
                               timeout_conditional: {
                                 active: bool,
                                 conditional_branches: Array[
                                   {
                                     name: ::String,
                                     condition: {
                                       expression_string: ::String
                                     },
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     },
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   },
                                 ],
                                 default_branch: {
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   }?,
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 }
                               }?
                             }?,
                             fulfillment_updates_specification: {
                               active: bool,
                               start_response: {
                                 delay_in_seconds: ::Integer,
                                 message_groups: Array[
                                   {
                                     message: {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                     variations: Array[
                                       {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                     ]?
                                   },
                                 ],
                                 allow_interrupt: bool?
                               }?,
                               update_response: {
                                 frequency_in_seconds: ::Integer,
                                 message_groups: Array[
                                   {
                                     message: {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                     variations: Array[
                                       {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                     ]?
                                   },
                                 ],
                                 allow_interrupt: bool?
                               }?,
                               timeout_in_seconds: ::Integer?
                             }?,
                             active: bool?
                           },
                           ?intent_confirmation_setting: {
                             prompt_specification: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               max_retries: ::Integer,
                               allow_interrupt: bool?,
                               message_selection_strategy: ("Random" | "Ordered")?,
                               prompt_attempts_specification: Hash[("Initial" | "Retry1" | "Retry2" | "Retry3" | "Retry4" | "Retry5"), {
                                   allow_interrupt: bool?,
                                   allowed_input_types: {
                                     allow_audio_input: bool,
                                     allow_dtmf_input: bool
                                   },
                                   audio_and_dtmf_input_specification: {
                                     start_timeout_ms: ::Integer,
                                     audio_specification: {
                                       max_length_ms: ::Integer,
                                       end_timeout_ms: ::Integer
                                     }?,
                                     dtmf_specification: {
                                       max_length: ::Integer,
                                       end_timeout_ms: ::Integer,
                                       deletion_character: ::String,
                                       end_character: ::String
                                     }?
                                   }?,
                                   text_input_specification: {
                                     start_timeout_ms: ::Integer
                                   }?
                                 }]?
                             },
                             declination_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             active: bool?,
                             confirmation_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             confirmation_next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             confirmation_conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             declination_next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             declination_conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             failure_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             failure_next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             failure_conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             code_hook: {
                               enable_code_hook_invocation: bool,
                               active: bool,
                               invocation_label: ::String?,
                               post_code_hook_specification: {
                                 success_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 success_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 success_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 failure_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 failure_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 failure_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 timeout_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 timeout_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 timeout_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?
                               }
                             }?,
                             elicitation_code_hook: {
                               enable_code_hook_invocation: bool,
                               invocation_label: ::String?
                             }?
                           },
                           ?intent_closing_setting: {
                             closing_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             active: bool?,
                             next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?
                           },
                           ?input_contexts: Array[
                             {
                               name: ::String
                             },
                           ],
                           ?output_contexts: Array[
                             {
                               name: ::String,
                               time_to_live_in_seconds: ::Integer,
                               turns_to_live: ::Integer
                             },
                           ],
                           ?kendra_configuration: {
                             kendra_index: ::String,
                             query_filter_string_enabled: bool?,
                             query_filter_string: ::String?
                           },
                           bot_id: ::String,
                           bot_version: ::String,
                           locale_id: ::String,
                           ?initial_response_setting: {
                             initial_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             code_hook: {
                               enable_code_hook_invocation: bool,
                               active: bool,
                               invocation_label: ::String?,
                               post_code_hook_specification: {
                                 success_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 success_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 success_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 failure_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 failure_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 failure_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 timeout_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 timeout_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 timeout_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?
                               }
                             }?
                           },
                           ?qn_a_intent_configuration: {
                             data_source_configuration: {
                               opensearch_configuration: {
                                 domain_endpoint: ::String,
                                 index_name: ::String,
                                 exact_response: bool?,
                                 exact_response_fields: {
                                   question_field: ::String,
                                   answer_field: ::String
                                 }?,
                                 include_fields: Array[::String]?
                               }?,
                               kendra_configuration: {
                                 kendra_index: ::String,
                                 query_filter_string_enabled: bool?,
                                 query_filter_string: ::String?,
                                 exact_response: bool?
                               }?,
                               bedrock_knowledge_store_configuration: {
                                 bedrock_knowledge_base_arn: ::String,
                                 exact_response: bool?,
                                 exact_response_fields: {
                                   answer_field: ::String?
                                 }?
                               }?
                             }?,
                             bedrock_model_configuration: {
                               model_arn: ::String,
                               guardrail: {
                                 identifier: ::String,
                                 version: ::String
                               }?,
                               trace_status: ("ENABLED" | "DISABLED")?,
                               custom_prompt: ::String?
                             }?
                           }
                         ) -> _CreateIntentResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateIntentResponseSuccess

      interface _CreateResourcePolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateResourcePolicyResponse]
        def resource_arn: () -> ::String
        def revision_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_resource_policy-instance_method
      def create_resource_policy: (
                                    resource_arn: ::String,
                                    policy: ::String
                                  ) -> _CreateResourcePolicyResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateResourcePolicyResponseSuccess

      interface _CreateResourcePolicyStatementResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateResourcePolicyStatementResponse]
        def resource_arn: () -> ::String
        def revision_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_resource_policy_statement-instance_method
      def create_resource_policy_statement: (
                                              resource_arn: ::String,
                                              statement_id: ::String,
                                              effect: ("Allow" | "Deny"),
                                              principal: Array[
                                                {
                                                  service: ::String?,
                                                  arn: ::String?
                                                },
                                              ],
                                              action: Array[::String],
                                              ?condition: Hash[::String, Hash[::String, ::String]],
                                              ?expected_revision_id: ::String
                                            ) -> _CreateResourcePolicyStatementResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateResourcePolicyStatementResponseSuccess

      interface _CreateSlotResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateSlotResponse]
        def slot_id: () -> ::String
        def slot_name: () -> ::String
        def description: () -> ::String
        def slot_type_id: () -> ::String
        def value_elicitation_setting: () -> Types::SlotValueElicitationSetting
        def obfuscation_setting: () -> Types::ObfuscationSetting
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def intent_id: () -> ::String
        def creation_date_time: () -> ::Time
        def multiple_values_setting: () -> Types::MultipleValuesSetting
        def sub_slot_setting: () -> Types::SubSlotSetting
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_slot-instance_method
      def create_slot: (
                         slot_name: ::String,
                         ?description: ::String,
                         ?slot_type_id: ::String,
                         value_elicitation_setting: {
                           default_value_specification: {
                             default_value_list: Array[
                               {
                                 default_value: ::String
                               },
                             ]
                           }?,
                           slot_constraint: ("Required" | "Optional"),
                           prompt_specification: {
                             message_groups: Array[
                               {
                                 message: {
                                   plain_text_message: {
                                     value: ::String
                                   }?,
                                   custom_payload: {
                                     value: ::String
                                   }?,
                                   ssml_message: {
                                     value: ::String
                                   }?,
                                   image_response_card: {
                                     title: ::String,
                                     subtitle: ::String?,
                                     image_url: ::String?,
                                     buttons: Array[
                                       {
                                         text: ::String,
                                         value: ::String
                                       },
                                     ]?
                                   }?
                                 },
                                 variations: Array[
                                   {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                 ]?
                               },
                             ],
                             max_retries: ::Integer,
                             allow_interrupt: bool?,
                             message_selection_strategy: ("Random" | "Ordered")?,
                             prompt_attempts_specification: Hash[("Initial" | "Retry1" | "Retry2" | "Retry3" | "Retry4" | "Retry5"), {
                                 allow_interrupt: bool?,
                                 allowed_input_types: {
                                   allow_audio_input: bool,
                                   allow_dtmf_input: bool
                                 },
                                 audio_and_dtmf_input_specification: {
                                   start_timeout_ms: ::Integer,
                                   audio_specification: {
                                     max_length_ms: ::Integer,
                                     end_timeout_ms: ::Integer
                                   }?,
                                   dtmf_specification: {
                                     max_length: ::Integer,
                                     end_timeout_ms: ::Integer,
                                     deletion_character: ::String,
                                     end_character: ::String
                                   }?
                                 }?,
                                 text_input_specification: {
                                   start_timeout_ms: ::Integer
                                 }?
                               }]?
                           }?,
                           sample_utterances: Array[
                             {
                               utterance: ::String
                             },
                           ]?,
                           wait_and_continue_specification: {
                             waiting_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             },
                             continue_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             },
                             still_waiting_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               frequency_in_seconds: ::Integer,
                               timeout_in_seconds: ::Integer,
                               allow_interrupt: bool?
                             }?,
                             active: bool?
                           }?,
                           slot_capture_setting: {
                             capture_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             capture_next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             capture_conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             failure_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             failure_next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             failure_conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             code_hook: {
                               enable_code_hook_invocation: bool,
                               active: bool,
                               invocation_label: ::String?,
                               post_code_hook_specification: {
                                 success_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 success_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 success_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 failure_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 failure_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 failure_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 timeout_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 timeout_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 timeout_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?
                               }
                             }?,
                             elicitation_code_hook: {
                               enable_code_hook_invocation: bool,
                               invocation_label: ::String?
                             }?
                           }?,
                           slot_resolution_setting: {
                             slot_resolution_strategy: ("EnhancedFallback" | "Default")
                           }?
                         },
                         ?obfuscation_setting: {
                           obfuscation_setting_type: ("None" | "DefaultObfuscation")
                         },
                         bot_id: ::String,
                         bot_version: ::String,
                         locale_id: ::String,
                         intent_id: ::String,
                         ?multiple_values_setting: {
                           allow_multiple_values: bool?
                         },
                         ?sub_slot_setting: {
                           expression: ::String?,
                           slot_specifications: Hash[::String, {
                               slot_type_id: ::String,
                               value_elicitation_setting: {
                                 default_value_specification: {
                                   default_value_list: Array[
                                     {
                                       default_value: ::String
                                     },
                                   ]
                                 }?,
                                 prompt_specification: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   max_retries: ::Integer,
                                   allow_interrupt: bool?,
                                   message_selection_strategy: ("Random" | "Ordered")?,
                                   prompt_attempts_specification: Hash[("Initial" | "Retry1" | "Retry2" | "Retry3" | "Retry4" | "Retry5"), {
                                       allow_interrupt: bool?,
                                       allowed_input_types: {
                                         allow_audio_input: bool,
                                         allow_dtmf_input: bool
                                       },
                                       audio_and_dtmf_input_specification: {
                                         start_timeout_ms: ::Integer,
                                         audio_specification: {
                                           max_length_ms: ::Integer,
                                           end_timeout_ms: ::Integer
                                         }?,
                                         dtmf_specification: {
                                           max_length: ::Integer,
                                           end_timeout_ms: ::Integer,
                                           deletion_character: ::String,
                                           end_character: ::String
                                         }?
                                       }?,
                                       text_input_specification: {
                                         start_timeout_ms: ::Integer
                                       }?
                                     }]?
                                 },
                                 sample_utterances: Array[
                                   {
                                     utterance: ::String
                                   },
                                 ]?,
                                 wait_and_continue_specification: {
                                   waiting_response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   },
                                   continue_response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   },
                                   still_waiting_response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     frequency_in_seconds: ::Integer,
                                     timeout_in_seconds: ::Integer,
                                     allow_interrupt: bool?
                                   }?,
                                   active: bool?
                                 }?
                               }
                             }]?
                         }
                       ) -> _CreateSlotResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateSlotResponseSuccess

      interface _CreateSlotTypeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateSlotTypeResponse]
        def slot_type_id: () -> ::String
        def slot_type_name: () -> ::String
        def description: () -> ::String
        def slot_type_values: () -> ::Array[Types::SlotTypeValue]
        def value_selection_setting: () -> Types::SlotValueSelectionSetting
        def parent_slot_type_signature: () -> ::String
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def creation_date_time: () -> ::Time
        def external_source_setting: () -> Types::ExternalSourceSetting
        def composite_slot_type_setting: () -> Types::CompositeSlotTypeSetting
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_slot_type-instance_method
      def create_slot_type: (
                              slot_type_name: ::String,
                              ?description: ::String,
                              ?slot_type_values: Array[
                                {
                                  sample_value: {
                                    value: ::String
                                  }?,
                                  synonyms: Array[
                                    {
                                      value: ::String
                                    },
                                  ]?
                                },
                              ],
                              ?value_selection_setting: {
                                resolution_strategy: ("OriginalValue" | "TopResolution" | "Concatenation"),
                                regex_filter: {
                                  pattern: ::String
                                }?,
                                advanced_recognition_setting: {
                                  audio_recognition_strategy: ("UseSlotValuesAsCustomVocabulary")?
                                }?
                              },
                              ?parent_slot_type_signature: ::String,
                              bot_id: ::String,
                              bot_version: ::String,
                              locale_id: ::String,
                              ?external_source_setting: {
                                grammar_slot_type_setting: {
                                  source: {
                                    s3_bucket_name: ::String,
                                    s3_object_key: ::String,
                                    kms_key_arn: ::String?
                                  }?
                                }?
                              },
                              ?composite_slot_type_setting: {
                                sub_slots: Array[
                                  {
                                    name: ::String,
                                    slot_type_id: ::String
                                  },
                                ]?
                              }
                            ) -> _CreateSlotTypeResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateSlotTypeResponseSuccess

      interface _CreateTestSetDiscrepancyReportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateTestSetDiscrepancyReportResponse]
        def test_set_discrepancy_report_id: () -> ::String
        def creation_date_time: () -> ::Time
        def test_set_id: () -> ::String
        def target: () -> Types::TestSetDiscrepancyReportResourceTarget
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_test_set_discrepancy_report-instance_method
      def create_test_set_discrepancy_report: (
                                                test_set_id: ::String,
                                                target: {
                                                  bot_alias_target: {
                                                    bot_id: ::String,
                                                    bot_alias_id: ::String,
                                                    locale_id: ::String
                                                  }?
                                                }
                                              ) -> _CreateTestSetDiscrepancyReportResponseSuccess
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateTestSetDiscrepancyReportResponseSuccess

      interface _CreateUploadUrlResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateUploadUrlResponse]
        def import_id: () -> ::String
        def upload_url: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#create_upload_url-instance_method
      def create_upload_url: (
                             ) -> _CreateUploadUrlResponseSuccess
                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateUploadUrlResponseSuccess

      interface _DeleteBotResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteBotResponse]
        def bot_id: () -> ::String
        def bot_status: () -> ("Creating" | "Available" | "Inactive" | "Deleting" | "Failed" | "Versioning" | "Importing" | "Updating")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_bot-instance_method
      def delete_bot: (
                        bot_id: ::String,
                        ?skip_resource_in_use_check: bool
                      ) -> _DeleteBotResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteBotResponseSuccess

      interface _DeleteBotAliasResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteBotAliasResponse]
        def bot_alias_id: () -> ::String
        def bot_id: () -> ::String
        def bot_alias_status: () -> ("Creating" | "Available" | "Deleting" | "Failed")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_bot_alias-instance_method
      def delete_bot_alias: (
                              bot_alias_id: ::String,
                              bot_id: ::String,
                              ?skip_resource_in_use_check: bool
                            ) -> _DeleteBotAliasResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteBotAliasResponseSuccess

      interface _DeleteBotLocaleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteBotLocaleResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def bot_locale_status: () -> ("Creating" | "Building" | "Built" | "ReadyExpressTesting" | "Failed" | "Deleting" | "NotBuilt" | "Importing" | "Processing")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_bot_locale-instance_method
      def delete_bot_locale: (
                               bot_id: ::String,
                               bot_version: ::String,
                               locale_id: ::String
                             ) -> _DeleteBotLocaleResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteBotLocaleResponseSuccess

      interface _DeleteBotReplicaResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteBotReplicaResponse]
        def bot_id: () -> ::String
        def replica_region: () -> ::String
        def bot_replica_status: () -> ("Enabling" | "Enabled" | "Deleting" | "Failed")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_bot_replica-instance_method
      def delete_bot_replica: (
                                bot_id: ::String,
                                replica_region: ::String
                              ) -> _DeleteBotReplicaResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteBotReplicaResponseSuccess

      interface _DeleteBotVersionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteBotVersionResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def bot_status: () -> ("Creating" | "Available" | "Inactive" | "Deleting" | "Failed" | "Versioning" | "Importing" | "Updating")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_bot_version-instance_method
      def delete_bot_version: (
                                bot_id: ::String,
                                bot_version: ::String,
                                ?skip_resource_in_use_check: bool
                              ) -> _DeleteBotVersionResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteBotVersionResponseSuccess

      interface _DeleteCustomVocabularyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteCustomVocabularyResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def custom_vocabulary_status: () -> ("Ready" | "Deleting" | "Exporting" | "Importing" | "Creating")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_custom_vocabulary-instance_method
      def delete_custom_vocabulary: (
                                      bot_id: ::String,
                                      bot_version: ::String,
                                      locale_id: ::String
                                    ) -> _DeleteCustomVocabularyResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteCustomVocabularyResponseSuccess

      interface _DeleteExportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteExportResponse]
        def export_id: () -> ::String
        def export_status: () -> ("InProgress" | "Completed" | "Failed" | "Deleting")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_export-instance_method
      def delete_export: (
                           export_id: ::String
                         ) -> _DeleteExportResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteExportResponseSuccess

      interface _DeleteImportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteImportResponse]
        def import_id: () -> ::String
        def import_status: () -> ("InProgress" | "Completed" | "Failed" | "Deleting")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_import-instance_method
      def delete_import: (
                           import_id: ::String
                         ) -> _DeleteImportResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteImportResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_intent-instance_method
      def delete_intent: (
                           intent_id: ::String,
                           bot_id: ::String,
                           bot_version: ::String,
                           locale_id: ::String
                         ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteResourcePolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteResourcePolicyResponse]
        def resource_arn: () -> ::String
        def revision_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_resource_policy-instance_method
      def delete_resource_policy: (
                                    resource_arn: ::String,
                                    ?expected_revision_id: ::String
                                  ) -> _DeleteResourcePolicyResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteResourcePolicyResponseSuccess

      interface _DeleteResourcePolicyStatementResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteResourcePolicyStatementResponse]
        def resource_arn: () -> ::String
        def revision_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_resource_policy_statement-instance_method
      def delete_resource_policy_statement: (
                                              resource_arn: ::String,
                                              statement_id: ::String,
                                              ?expected_revision_id: ::String
                                            ) -> _DeleteResourcePolicyStatementResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteResourcePolicyStatementResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_slot-instance_method
      def delete_slot: (
                         slot_id: ::String,
                         bot_id: ::String,
                         bot_version: ::String,
                         locale_id: ::String,
                         intent_id: ::String
                       ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_slot_type-instance_method
      def delete_slot_type: (
                              slot_type_id: ::String,
                              bot_id: ::String,
                              bot_version: ::String,
                              locale_id: ::String,
                              ?skip_resource_in_use_check: bool
                            ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_test_set-instance_method
      def delete_test_set: (
                             test_set_id: ::String
                           ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DeleteUtterancesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteUtterancesResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#delete_utterances-instance_method
      def delete_utterances: (
                               bot_id: ::String,
                               ?locale_id: ::String,
                               ?session_id: ::String
                             ) -> _DeleteUtterancesResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteUtterancesResponseSuccess

      interface _DescribeBotResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeBotResponse]
        def bot_id: () -> ::String
        def bot_name: () -> ::String
        def description: () -> ::String
        def role_arn: () -> ::String
        def data_privacy: () -> Types::DataPrivacy
        def idle_session_ttl_in_seconds: () -> ::Integer
        def bot_status: () -> ("Creating" | "Available" | "Inactive" | "Deleting" | "Failed" | "Versioning" | "Importing" | "Updating")
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def bot_type: () -> ("Bot" | "BotNetwork")
        def bot_members: () -> ::Array[Types::BotMember]
        def failure_reasons: () -> ::Array[::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_bot-instance_method
      def describe_bot: (
                          bot_id: ::String
                        ) -> _DescribeBotResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeBotResponseSuccess

      interface _DescribeBotAliasResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeBotAliasResponse]
        def bot_alias_id: () -> ::String
        def bot_alias_name: () -> ::String
        def description: () -> ::String
        def bot_version: () -> ::String
        def bot_alias_locale_settings: () -> ::Hash[::String, Types::BotAliasLocaleSettings]
        def conversation_log_settings: () -> Types::ConversationLogSettings
        def sentiment_analysis_settings: () -> Types::SentimentAnalysisSettings
        def bot_alias_history_events: () -> ::Array[Types::BotAliasHistoryEvent]
        def bot_alias_status: () -> ("Creating" | "Available" | "Deleting" | "Failed")
        def bot_id: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def parent_bot_networks: () -> ::Array[Types::ParentBotNetwork]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_bot_alias-instance_method
      def describe_bot_alias: (
                                bot_alias_id: ::String,
                                bot_id: ::String
                              ) -> _DescribeBotAliasResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeBotAliasResponseSuccess

      interface _DescribeBotLocaleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeBotLocaleResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def locale_name: () -> ::String
        def description: () -> ::String
        def nlu_intent_confidence_threshold: () -> ::Float
        def voice_settings: () -> Types::VoiceSettings
        def intents_count: () -> ::Integer
        def slot_types_count: () -> ::Integer
        def bot_locale_status: () -> ("Creating" | "Building" | "Built" | "ReadyExpressTesting" | "Failed" | "Deleting" | "NotBuilt" | "Importing" | "Processing")
        def failure_reasons: () -> ::Array[::String]
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def last_build_submitted_date_time: () -> ::Time
        def bot_locale_history_events: () -> ::Array[Types::BotLocaleHistoryEvent]
        def recommended_actions: () -> ::Array[::String]
        def generative_ai_settings: () -> Types::GenerativeAISettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_bot_locale-instance_method
      def describe_bot_locale: (
                                 bot_id: ::String,
                                 bot_version: ::String,
                                 locale_id: ::String
                               ) -> _DescribeBotLocaleResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeBotLocaleResponseSuccess

      interface _DescribeBotRecommendationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeBotRecommendationResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def bot_recommendation_status: () -> ("Processing" | "Deleting" | "Deleted" | "Downloading" | "Updating" | "Available" | "Failed" | "Stopping" | "Stopped")
        def bot_recommendation_id: () -> ::String
        def failure_reasons: () -> ::Array[::String]
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def transcript_source_setting: () -> Types::TranscriptSourceSetting
        def encryption_setting: () -> Types::EncryptionSetting
        def bot_recommendation_results: () -> Types::BotRecommendationResults
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_bot_recommendation-instance_method
      def describe_bot_recommendation: (
                                         bot_id: ::String,
                                         bot_version: ::String,
                                         locale_id: ::String,
                                         bot_recommendation_id: ::String
                                       ) -> _DescribeBotRecommendationResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeBotRecommendationResponseSuccess

      interface _DescribeBotReplicaResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeBotReplicaResponse]
        def bot_id: () -> ::String
        def replica_region: () -> ::String
        def source_region: () -> ::String
        def creation_date_time: () -> ::Time
        def bot_replica_status: () -> ("Enabling" | "Enabled" | "Deleting" | "Failed")
        def failure_reasons: () -> ::Array[::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_bot_replica-instance_method
      def describe_bot_replica: (
                                  bot_id: ::String,
                                  replica_region: ::String
                                ) -> _DescribeBotReplicaResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeBotReplicaResponseSuccess

      interface _DescribeBotResourceGenerationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeBotResourceGenerationResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def generation_id: () -> ::String
        def failure_reasons: () -> ::Array[::String]
        def generation_status: () -> ("Failed" | "Complete" | "InProgress")
        def generation_input_prompt: () -> ::String
        def generated_bot_locale_url: () -> ::String
        def creation_date_time: () -> ::Time
        def model_arn: () -> ::String
        def last_updated_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_bot_resource_generation-instance_method
      def describe_bot_resource_generation: (
                                              bot_id: ::String,
                                              bot_version: ::String,
                                              locale_id: ::String,
                                              generation_id: ::String
                                            ) -> _DescribeBotResourceGenerationResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeBotResourceGenerationResponseSuccess

      interface _DescribeBotVersionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeBotVersionResponse]
        def bot_id: () -> ::String
        def bot_name: () -> ::String
        def bot_version: () -> ::String
        def description: () -> ::String
        def role_arn: () -> ::String
        def data_privacy: () -> Types::DataPrivacy
        def idle_session_ttl_in_seconds: () -> ::Integer
        def bot_status: () -> ("Creating" | "Available" | "Inactive" | "Deleting" | "Failed" | "Versioning" | "Importing" | "Updating")
        def failure_reasons: () -> ::Array[::String]
        def creation_date_time: () -> ::Time
        def parent_bot_networks: () -> ::Array[Types::ParentBotNetwork]
        def bot_type: () -> ("Bot" | "BotNetwork")
        def bot_members: () -> ::Array[Types::BotMember]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_bot_version-instance_method
      def describe_bot_version: (
                                  bot_id: ::String,
                                  bot_version: ::String
                                ) -> _DescribeBotVersionResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeBotVersionResponseSuccess

      interface _DescribeCustomVocabularyMetadataResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeCustomVocabularyMetadataResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def custom_vocabulary_status: () -> ("Ready" | "Deleting" | "Exporting" | "Importing" | "Creating")
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_custom_vocabulary_metadata-instance_method
      def describe_custom_vocabulary_metadata: (
                                                 bot_id: ::String,
                                                 bot_version: ::String,
                                                 locale_id: ::String
                                               ) -> _DescribeCustomVocabularyMetadataResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeCustomVocabularyMetadataResponseSuccess

      interface _DescribeExportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeExportResponse]
        def export_id: () -> ::String
        def resource_specification: () -> Types::ExportResourceSpecification
        def file_format: () -> ("LexJson" | "TSV" | "CSV")
        def export_status: () -> ("InProgress" | "Completed" | "Failed" | "Deleting")
        def failure_reasons: () -> ::Array[::String]
        def download_url: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_export-instance_method
      def describe_export: (
                             export_id: ::String
                           ) -> _DescribeExportResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeExportResponseSuccess

      interface _DescribeImportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeImportResponse]
        def import_id: () -> ::String
        def resource_specification: () -> Types::ImportResourceSpecification
        def imported_resource_id: () -> ::String
        def imported_resource_name: () -> ::String
        def merge_strategy: () -> ("Overwrite" | "FailOnConflict" | "Append")
        def import_status: () -> ("InProgress" | "Completed" | "Failed" | "Deleting")
        def failure_reasons: () -> ::Array[::String]
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_import-instance_method
      def describe_import: (
                             import_id: ::String
                           ) -> _DescribeImportResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeImportResponseSuccess

      interface _DescribeIntentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeIntentResponse]
        def intent_id: () -> ::String
        def intent_name: () -> ::String
        def description: () -> ::String
        def parent_intent_signature: () -> ::String
        def sample_utterances: () -> ::Array[Types::SampleUtterance]
        def dialog_code_hook: () -> Types::DialogCodeHookSettings
        def fulfillment_code_hook: () -> Types::FulfillmentCodeHookSettings
        def slot_priorities: () -> ::Array[Types::SlotPriority]
        def intent_confirmation_setting: () -> Types::IntentConfirmationSetting
        def intent_closing_setting: () -> Types::IntentClosingSetting
        def input_contexts: () -> ::Array[Types::InputContext]
        def output_contexts: () -> ::Array[Types::OutputContext]
        def kendra_configuration: () -> Types::KendraConfiguration
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def initial_response_setting: () -> Types::InitialResponseSetting
        def qn_a_intent_configuration: () -> Types::QnAIntentConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_intent-instance_method
      def describe_intent: (
                             intent_id: ::String,
                             bot_id: ::String,
                             bot_version: ::String,
                             locale_id: ::String
                           ) -> _DescribeIntentResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeIntentResponseSuccess

      interface _DescribeResourcePolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeResourcePolicyResponse]
        def resource_arn: () -> ::String
        def policy: () -> ::String
        def revision_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_resource_policy-instance_method
      def describe_resource_policy: (
                                      resource_arn: ::String
                                    ) -> _DescribeResourcePolicyResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeResourcePolicyResponseSuccess

      interface _DescribeSlotResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeSlotResponse]
        def slot_id: () -> ::String
        def slot_name: () -> ::String
        def description: () -> ::String
        def slot_type_id: () -> ::String
        def value_elicitation_setting: () -> Types::SlotValueElicitationSetting
        def obfuscation_setting: () -> Types::ObfuscationSetting
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def intent_id: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def multiple_values_setting: () -> Types::MultipleValuesSetting
        def sub_slot_setting: () -> Types::SubSlotSetting
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_slot-instance_method
      def describe_slot: (
                           slot_id: ::String,
                           bot_id: ::String,
                           bot_version: ::String,
                           locale_id: ::String,
                           intent_id: ::String
                         ) -> _DescribeSlotResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeSlotResponseSuccess

      interface _DescribeSlotTypeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeSlotTypeResponse]
        def slot_type_id: () -> ::String
        def slot_type_name: () -> ::String
        def description: () -> ::String
        def slot_type_values: () -> ::Array[Types::SlotTypeValue]
        def value_selection_setting: () -> Types::SlotValueSelectionSetting
        def parent_slot_type_signature: () -> ::String
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def external_source_setting: () -> Types::ExternalSourceSetting
        def composite_slot_type_setting: () -> Types::CompositeSlotTypeSetting
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_slot_type-instance_method
      def describe_slot_type: (
                                slot_type_id: ::String,
                                bot_id: ::String,
                                bot_version: ::String,
                                locale_id: ::String
                              ) -> _DescribeSlotTypeResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeSlotTypeResponseSuccess

      interface _DescribeTestExecutionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeTestExecutionResponse]
        def test_execution_id: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def test_execution_status: () -> ("Pending" | "Waiting" | "InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped")
        def test_set_id: () -> ::String
        def test_set_name: () -> ::String
        def target: () -> Types::TestExecutionTarget
        def api_mode: () -> ("Streaming" | "NonStreaming")
        def test_execution_modality: () -> ("Text" | "Audio")
        def failure_reasons: () -> ::Array[::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_test_execution-instance_method
      def describe_test_execution: (
                                     test_execution_id: ::String
                                   ) -> _DescribeTestExecutionResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeTestExecutionResponseSuccess

      interface _DescribeTestSetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeTestSetResponse]
        def test_set_id: () -> ::String
        def test_set_name: () -> ::String
        def description: () -> ::String
        def modality: () -> ("Text" | "Audio")
        def status: () -> ("Importing" | "PendingAnnotation" | "Deleting" | "ValidationError" | "Ready")
        def role_arn: () -> ::String
        def num_turns: () -> ::Integer
        def storage_location: () -> Types::TestSetStorageLocation
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_test_set-instance_method
      def describe_test_set: (
                               test_set_id: ::String
                             ) -> _DescribeTestSetResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeTestSetResponseSuccess

      interface _DescribeTestSetDiscrepancyReportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeTestSetDiscrepancyReportResponse]
        def test_set_discrepancy_report_id: () -> ::String
        def test_set_id: () -> ::String
        def creation_date_time: () -> ::Time
        def target: () -> Types::TestSetDiscrepancyReportResourceTarget
        def test_set_discrepancy_report_status: () -> ("InProgress" | "Completed" | "Failed")
        def last_updated_data_time: () -> ::Time
        def test_set_discrepancy_top_errors: () -> Types::TestSetDiscrepancyErrors
        def test_set_discrepancy_raw_output_url: () -> ::String
        def failure_reasons: () -> ::Array[::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_test_set_discrepancy_report-instance_method
      def describe_test_set_discrepancy_report: (
                                                  test_set_discrepancy_report_id: ::String
                                                ) -> _DescribeTestSetDiscrepancyReportResponseSuccess
                                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeTestSetDiscrepancyReportResponseSuccess

      interface _DescribeTestSetGenerationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeTestSetGenerationResponse]
        def test_set_generation_id: () -> ::String
        def test_set_generation_status: () -> ("Generating" | "Ready" | "Failed" | "Pending")
        def failure_reasons: () -> ::Array[::String]
        def test_set_id: () -> ::String
        def test_set_name: () -> ::String
        def description: () -> ::String
        def storage_location: () -> Types::TestSetStorageLocation
        def generation_data_source: () -> Types::TestSetGenerationDataSource
        def role_arn: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#describe_test_set_generation-instance_method
      def describe_test_set_generation: (
                                          test_set_generation_id: ::String
                                        ) -> _DescribeTestSetGenerationResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeTestSetGenerationResponseSuccess

      interface _GenerateBotElementResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GenerateBotElementResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def intent_id: () -> ::String
        def sample_utterances: () -> ::Array[Types::SampleUtterance]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#generate_bot_element-instance_method
      def generate_bot_element: (
                                  intent_id: ::String,
                                  bot_id: ::String,
                                  bot_version: ::String,
                                  locale_id: ::String
                                ) -> _GenerateBotElementResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GenerateBotElementResponseSuccess

      interface _GetTestExecutionArtifactsUrlResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetTestExecutionArtifactsUrlResponse]
        def test_execution_id: () -> ::String
        def download_artifacts_url: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#get_test_execution_artifacts_url-instance_method
      def get_test_execution_artifacts_url: (
                                              test_execution_id: ::String
                                            ) -> _GetTestExecutionArtifactsUrlResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetTestExecutionArtifactsUrlResponseSuccess

      interface _ListAggregatedUtterancesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAggregatedUtterancesResponse]
        def bot_id: () -> ::String
        def bot_alias_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def aggregation_duration: () -> Types::UtteranceAggregationDuration
        def aggregation_window_start_time: () -> ::Time
        def aggregation_window_end_time: () -> ::Time
        def aggregation_last_refreshed_date_time: () -> ::Time
        def aggregated_utterances_summaries: () -> ::Array[Types::AggregatedUtterancesSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_aggregated_utterances-instance_method
      def list_aggregated_utterances: (
                                        bot_id: ::String,
                                        ?bot_alias_id: ::String,
                                        ?bot_version: ::String,
                                        locale_id: ::String,
                                        aggregation_duration: {
                                          relative_aggregation_duration: {
                                            time_dimension: ("Hours" | "Days" | "Weeks"),
                                            time_value: ::Integer
                                          }
                                        },
                                        ?sort_by: {
                                          attribute: ("HitCount" | "MissedCount"),
                                          order: ("Ascending" | "Descending")
                                        },
                                        ?filters: Array[
                                          {
                                            name: ("Utterance"),
                                            values: Array[::String],
                                            operator: ("CO" | "EQ")
                                          },
                                        ],
                                        ?max_results: ::Integer,
                                        ?next_token: ::String
                                      ) -> _ListAggregatedUtterancesResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAggregatedUtterancesResponseSuccess

      interface _ListBotAliasReplicasResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBotAliasReplicasResponse]
        def bot_id: () -> ::String
        def source_region: () -> ::String
        def replica_region: () -> ::String
        def bot_alias_replica_summaries: () -> ::Array[Types::BotAliasReplicaSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_bot_alias_replicas-instance_method
      def list_bot_alias_replicas: (
                                     bot_id: ::String,
                                     replica_region: ::String,
                                     ?max_results: ::Integer,
                                     ?next_token: ::String
                                   ) -> _ListBotAliasReplicasResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBotAliasReplicasResponseSuccess

      interface _ListBotAliasesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBotAliasesResponse]
        def bot_alias_summaries: () -> ::Array[Types::BotAliasSummary]
        def next_token: () -> ::String
        def bot_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_bot_aliases-instance_method
      def list_bot_aliases: (
                              bot_id: ::String,
                              ?max_results: ::Integer,
                              ?next_token: ::String
                            ) -> _ListBotAliasesResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBotAliasesResponseSuccess

      interface _ListBotLocalesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBotLocalesResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def next_token: () -> ::String
        def bot_locale_summaries: () -> ::Array[Types::BotLocaleSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_bot_locales-instance_method
      def list_bot_locales: (
                              bot_id: ::String,
                              bot_version: ::String,
                              ?sort_by: {
                                attribute: ("BotLocaleName"),
                                order: ("Ascending" | "Descending")
                              },
                              ?filters: Array[
                                {
                                  name: ("BotLocaleName"),
                                  values: Array[::String],
                                  operator: ("CO" | "EQ")
                                },
                              ],
                              ?max_results: ::Integer,
                              ?next_token: ::String
                            ) -> _ListBotLocalesResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBotLocalesResponseSuccess

      interface _ListBotRecommendationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBotRecommendationsResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def bot_recommendation_summaries: () -> ::Array[Types::BotRecommendationSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_bot_recommendations-instance_method
      def list_bot_recommendations: (
                                      bot_id: ::String,
                                      bot_version: ::String,
                                      locale_id: ::String,
                                      ?max_results: ::Integer,
                                      ?next_token: ::String
                                    ) -> _ListBotRecommendationsResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBotRecommendationsResponseSuccess

      interface _ListBotReplicasResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBotReplicasResponse]
        def bot_id: () -> ::String
        def source_region: () -> ::String
        def bot_replica_summaries: () -> ::Array[Types::BotReplicaSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_bot_replicas-instance_method
      def list_bot_replicas: (
                               bot_id: ::String
                             ) -> _ListBotReplicasResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBotReplicasResponseSuccess

      interface _ListBotResourceGenerationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBotResourceGenerationsResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def generation_summaries: () -> ::Array[Types::GenerationSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_bot_resource_generations-instance_method
      def list_bot_resource_generations: (
                                           bot_id: ::String,
                                           bot_version: ::String,
                                           locale_id: ::String,
                                           ?sort_by: {
                                             attribute: ("creationStartTime" | "lastUpdatedTime"),
                                             order: ("Ascending" | "Descending")
                                           },
                                           ?max_results: ::Integer,
                                           ?next_token: ::String
                                         ) -> _ListBotResourceGenerationsResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBotResourceGenerationsResponseSuccess

      interface _ListBotVersionReplicasResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBotVersionReplicasResponse]
        def bot_id: () -> ::String
        def source_region: () -> ::String
        def replica_region: () -> ::String
        def bot_version_replica_summaries: () -> ::Array[Types::BotVersionReplicaSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_bot_version_replicas-instance_method
      def list_bot_version_replicas: (
                                       bot_id: ::String,
                                       replica_region: ::String,
                                       ?max_results: ::Integer,
                                       ?next_token: ::String,
                                       ?sort_by: {
                                         attribute: ("BotVersion"),
                                         order: ("Ascending" | "Descending")
                                       }
                                     ) -> _ListBotVersionReplicasResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBotVersionReplicasResponseSuccess

      interface _ListBotVersionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBotVersionsResponse]
        def bot_id: () -> ::String
        def bot_version_summaries: () -> ::Array[Types::BotVersionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_bot_versions-instance_method
      def list_bot_versions: (
                               bot_id: ::String,
                               ?sort_by: {
                                 attribute: ("BotVersion"),
                                 order: ("Ascending" | "Descending")
                               },
                               ?max_results: ::Integer,
                               ?next_token: ::String
                             ) -> _ListBotVersionsResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBotVersionsResponseSuccess

      interface _ListBotsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBotsResponse]
        def bot_summaries: () -> ::Array[Types::BotSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_bots-instance_method
      def list_bots: (
                       ?sort_by: {
                         attribute: ("BotName"),
                         order: ("Ascending" | "Descending")
                       },
                       ?filters: Array[
                         {
                           name: ("BotName" | "BotType"),
                           values: Array[::String],
                           operator: ("CO" | "EQ" | "NE")
                         },
                       ],
                       ?max_results: ::Integer,
                       ?next_token: ::String
                     ) -> _ListBotsResponseSuccess
                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBotsResponseSuccess

      interface _ListBuiltInIntentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBuiltInIntentsResponse]
        def built_in_intent_summaries: () -> ::Array[Types::BuiltInIntentSummary]
        def next_token: () -> ::String
        def locale_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_built_in_intents-instance_method
      def list_built_in_intents: (
                                   locale_id: ::String,
                                   ?sort_by: {
                                     attribute: ("IntentSignature"),
                                     order: ("Ascending" | "Descending")
                                   },
                                   ?max_results: ::Integer,
                                   ?next_token: ::String
                                 ) -> _ListBuiltInIntentsResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBuiltInIntentsResponseSuccess

      interface _ListBuiltInSlotTypesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListBuiltInSlotTypesResponse]
        def built_in_slot_type_summaries: () -> ::Array[Types::BuiltInSlotTypeSummary]
        def next_token: () -> ::String
        def locale_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_built_in_slot_types-instance_method
      def list_built_in_slot_types: (
                                      locale_id: ::String,
                                      ?sort_by: {
                                        attribute: ("SlotTypeSignature"),
                                        order: ("Ascending" | "Descending")
                                      },
                                      ?max_results: ::Integer,
                                      ?next_token: ::String
                                    ) -> _ListBuiltInSlotTypesResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListBuiltInSlotTypesResponseSuccess

      interface _ListCustomVocabularyItemsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListCustomVocabularyItemsResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def custom_vocabulary_items: () -> ::Array[Types::CustomVocabularyItem]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_custom_vocabulary_items-instance_method
      def list_custom_vocabulary_items: (
                                          bot_id: ::String,
                                          bot_version: ::String,
                                          locale_id: ::String,
                                          ?max_results: ::Integer,
                                          ?next_token: ::String
                                        ) -> _ListCustomVocabularyItemsResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListCustomVocabularyItemsResponseSuccess

      interface _ListExportsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListExportsResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def export_summaries: () -> ::Array[Types::ExportSummary]
        def next_token: () -> ::String
        def locale_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_exports-instance_method
      def list_exports: (
                          ?bot_id: ::String,
                          ?bot_version: ::String,
                          ?sort_by: {
                            attribute: ("LastUpdatedDateTime"),
                            order: ("Ascending" | "Descending")
                          },
                          ?filters: Array[
                            {
                              name: ("ExportResourceType"),
                              values: Array[::String],
                              operator: ("CO" | "EQ")
                            },
                          ],
                          ?max_results: ::Integer,
                          ?next_token: ::String,
                          ?locale_id: ::String
                        ) -> _ListExportsResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListExportsResponseSuccess

      interface _ListImportsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListImportsResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def import_summaries: () -> ::Array[Types::ImportSummary]
        def next_token: () -> ::String
        def locale_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_imports-instance_method
      def list_imports: (
                          ?bot_id: ::String,
                          ?bot_version: ::String,
                          ?sort_by: {
                            attribute: ("LastUpdatedDateTime"),
                            order: ("Ascending" | "Descending")
                          },
                          ?filters: Array[
                            {
                              name: ("ImportResourceType"),
                              values: Array[::String],
                              operator: ("CO" | "EQ")
                            },
                          ],
                          ?max_results: ::Integer,
                          ?next_token: ::String,
                          ?locale_id: ::String
                        ) -> _ListImportsResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListImportsResponseSuccess

      interface _ListIntentMetricsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListIntentMetricsResponse]
        def bot_id: () -> ::String
        def results: () -> ::Array[Types::AnalyticsIntentResult]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_intent_metrics-instance_method
      def list_intent_metrics: (
                                 bot_id: ::String,
                                 start_date_time: ::Time,
                                 end_date_time: ::Time,
                                 metrics: Array[
                                   {
                                     name: ("Count" | "Success" | "Failure" | "Switched" | "Dropped"),
                                     statistic: ("Sum" | "Avg" | "Max"),
                                     order: ("Ascending" | "Descending")?
                                   },
                                 ],
                                 ?bin_by: Array[
                                   {
                                     name: ("ConversationStartTime" | "UtteranceTimestamp"),
                                     interval: ("OneHour" | "OneDay"),
                                     order: ("Ascending" | "Descending")?
                                   },
                                 ],
                                 ?group_by: Array[
                                   {
                                     name: ("IntentName" | "IntentEndState" | "IntentLevel")
                                   },
                                 ],
                                 ?filters: Array[
                                   {
                                     name: ("BotAliasId" | "BotVersion" | "LocaleId" | "Modality" | "Channel" | "SessionId" | "OriginatingRequestId" | "IntentName" | "IntentEndState"),
                                     operator: ("EQ" | "GT" | "LT"),
                                     values: Array[::String]
                                   },
                                 ],
                                 ?max_results: ::Integer,
                                 ?next_token: ::String
                               ) -> _ListIntentMetricsResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListIntentMetricsResponseSuccess

      interface _ListIntentPathsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListIntentPathsResponse]
        def node_summaries: () -> ::Array[Types::AnalyticsIntentNodeSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_intent_paths-instance_method
      def list_intent_paths: (
                               bot_id: ::String,
                               start_date_time: ::Time,
                               end_date_time: ::Time,
                               intent_path: ::String,
                               ?filters: Array[
                                 {
                                   name: ("BotAliasId" | "BotVersion" | "LocaleId" | "Modality" | "Channel"),
                                   operator: ("EQ" | "GT" | "LT"),
                                   values: Array[::String]
                                 },
                               ]
                             ) -> _ListIntentPathsResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListIntentPathsResponseSuccess

      interface _ListIntentStageMetricsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListIntentStageMetricsResponse]
        def bot_id: () -> ::String
        def results: () -> ::Array[Types::AnalyticsIntentStageResult]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_intent_stage_metrics-instance_method
      def list_intent_stage_metrics: (
                                       bot_id: ::String,
                                       start_date_time: ::Time,
                                       end_date_time: ::Time,
                                       metrics: Array[
                                         {
                                           name: ("Count" | "Success" | "Failed" | "Dropped" | "Retry"),
                                           statistic: ("Sum" | "Avg" | "Max"),
                                           order: ("Ascending" | "Descending")?
                                         },
                                       ],
                                       ?bin_by: Array[
                                         {
                                           name: ("ConversationStartTime" | "UtteranceTimestamp"),
                                           interval: ("OneHour" | "OneDay"),
                                           order: ("Ascending" | "Descending")?
                                         },
                                       ],
                                       ?group_by: Array[
                                         {
                                           name: ("IntentStageName" | "SwitchedToIntent")
                                         },
                                       ],
                                       ?filters: Array[
                                         {
                                           name: ("BotAliasId" | "BotVersion" | "LocaleId" | "Modality" | "Channel" | "SessionId" | "OriginatingRequestId" | "IntentName" | "IntentStageName"),
                                           operator: ("EQ" | "GT" | "LT"),
                                           values: Array[::String]
                                         },
                                       ],
                                       ?max_results: ::Integer,
                                       ?next_token: ::String
                                     ) -> _ListIntentStageMetricsResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListIntentStageMetricsResponseSuccess

      interface _ListIntentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListIntentsResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def intent_summaries: () -> ::Array[Types::IntentSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_intents-instance_method
      def list_intents: (
                          bot_id: ::String,
                          bot_version: ::String,
                          locale_id: ::String,
                          ?sort_by: {
                            attribute: ("IntentName" | "LastUpdatedDateTime"),
                            order: ("Ascending" | "Descending")
                          },
                          ?filters: Array[
                            {
                              name: ("IntentName"),
                              values: Array[::String],
                              operator: ("CO" | "EQ")
                            },
                          ],
                          ?max_results: ::Integer,
                          ?next_token: ::String
                        ) -> _ListIntentsResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListIntentsResponseSuccess

      interface _ListRecommendedIntentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListRecommendedIntentsResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def bot_recommendation_id: () -> ::String
        def summary_list: () -> ::Array[Types::RecommendedIntentSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_recommended_intents-instance_method
      def list_recommended_intents: (
                                      bot_id: ::String,
                                      bot_version: ::String,
                                      locale_id: ::String,
                                      bot_recommendation_id: ::String,
                                      ?next_token: ::String,
                                      ?max_results: ::Integer
                                    ) -> _ListRecommendedIntentsResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListRecommendedIntentsResponseSuccess

      interface _ListSessionAnalyticsDataResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListSessionAnalyticsDataResponse]
        def bot_id: () -> ::String
        def next_token: () -> ::String
        def sessions: () -> ::Array[Types::SessionSpecification]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_session_analytics_data-instance_method
      def list_session_analytics_data: (
                                         bot_id: ::String,
                                         start_date_time: ::Time,
                                         end_date_time: ::Time,
                                         ?sort_by: {
                                           name: ("ConversationStartTime" | "NumberOfTurns" | "Duration"),
                                           order: ("Ascending" | "Descending")
                                         },
                                         ?filters: Array[
                                           {
                                             name: ("BotAliasId" | "BotVersion" | "LocaleId" | "Modality" | "Channel" | "Duration" | "ConversationEndState" | "SessionId" | "OriginatingRequestId" | "IntentPath"),
                                             operator: ("EQ" | "GT" | "LT"),
                                             values: Array[::String]
                                           },
                                         ],
                                         ?max_results: ::Integer,
                                         ?next_token: ::String
                                       ) -> _ListSessionAnalyticsDataResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListSessionAnalyticsDataResponseSuccess

      interface _ListSessionMetricsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListSessionMetricsResponse]
        def bot_id: () -> ::String
        def results: () -> ::Array[Types::AnalyticsSessionResult]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_session_metrics-instance_method
      def list_session_metrics: (
                                  bot_id: ::String,
                                  start_date_time: ::Time,
                                  end_date_time: ::Time,
                                  metrics: Array[
                                    {
                                      name: ("Count" | "Success" | "Failure" | "Dropped" | "Duration" | "TurnsPerConversation" | "Concurrency"),
                                      statistic: ("Sum" | "Avg" | "Max"),
                                      order: ("Ascending" | "Descending")?
                                    },
                                  ],
                                  ?bin_by: Array[
                                    {
                                      name: ("ConversationStartTime" | "UtteranceTimestamp"),
                                      interval: ("OneHour" | "OneDay"),
                                      order: ("Ascending" | "Descending")?
                                    },
                                  ],
                                  ?group_by: Array[
                                    {
                                      name: ("ConversationEndState" | "LocaleId")
                                    },
                                  ],
                                  ?filters: Array[
                                    {
                                      name: ("BotAliasId" | "BotVersion" | "LocaleId" | "Modality" | "Channel" | "Duration" | "ConversationEndState" | "SessionId" | "OriginatingRequestId" | "IntentPath"),
                                      operator: ("EQ" | "GT" | "LT"),
                                      values: Array[::String]
                                    },
                                  ],
                                  ?max_results: ::Integer,
                                  ?next_token: ::String
                                ) -> _ListSessionMetricsResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListSessionMetricsResponseSuccess

      interface _ListSlotTypesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListSlotTypesResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def slot_type_summaries: () -> ::Array[Types::SlotTypeSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_slot_types-instance_method
      def list_slot_types: (
                             bot_id: ::String,
                             bot_version: ::String,
                             locale_id: ::String,
                             ?sort_by: {
                               attribute: ("SlotTypeName" | "LastUpdatedDateTime"),
                               order: ("Ascending" | "Descending")
                             },
                             ?filters: Array[
                               {
                                 name: ("SlotTypeName" | "ExternalSourceType"),
                                 values: Array[::String],
                                 operator: ("CO" | "EQ")
                               },
                             ],
                             ?max_results: ::Integer,
                             ?next_token: ::String
                           ) -> _ListSlotTypesResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListSlotTypesResponseSuccess

      interface _ListSlotsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListSlotsResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def intent_id: () -> ::String
        def slot_summaries: () -> ::Array[Types::SlotSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_slots-instance_method
      def list_slots: (
                        bot_id: ::String,
                        bot_version: ::String,
                        locale_id: ::String,
                        intent_id: ::String,
                        ?sort_by: {
                          attribute: ("SlotName" | "LastUpdatedDateTime"),
                          order: ("Ascending" | "Descending")
                        },
                        ?filters: Array[
                          {
                            name: ("SlotName"),
                            values: Array[::String],
                            operator: ("CO" | "EQ")
                          },
                        ],
                        ?max_results: ::Integer,
                        ?next_token: ::String
                      ) -> _ListSlotsResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListSlotsResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Hash[::String, ::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _ListTestExecutionResultItemsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTestExecutionResultItemsResponse]
        def test_execution_results: () -> Types::TestExecutionResultItems
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_test_execution_result_items-instance_method
      def list_test_execution_result_items: (
                                              test_execution_id: ::String,
                                              result_filter_by: {
                                                result_type_filter: ("OverallTestResults" | "ConversationLevelTestResults" | "IntentClassificationTestResults" | "SlotResolutionTestResults" | "UtteranceLevelResults"),
                                                conversation_level_test_results_filter_by: {
                                                  end_to_end_result: ("Matched" | "Mismatched" | "ExecutionError")?
                                                }?
                                              },
                                              ?max_results: ::Integer,
                                              ?next_token: ::String
                                            ) -> _ListTestExecutionResultItemsResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTestExecutionResultItemsResponseSuccess

      interface _ListTestExecutionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTestExecutionsResponse]
        def test_executions: () -> ::Array[Types::TestExecutionSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_test_executions-instance_method
      def list_test_executions: (
                                  ?sort_by: {
                                    attribute: ("TestSetName" | "CreationDateTime"),
                                    order: ("Ascending" | "Descending")
                                  },
                                  ?max_results: ::Integer,
                                  ?next_token: ::String
                                ) -> _ListTestExecutionsResponseSuccess
                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTestExecutionsResponseSuccess

      interface _ListTestSetRecordsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTestSetRecordsResponse]
        def test_set_records: () -> ::Array[Types::TestSetTurnRecord]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_test_set_records-instance_method
      def list_test_set_records: (
                                   test_set_id: ::String,
                                   ?max_results: ::Integer,
                                   ?next_token: ::String
                                 ) -> _ListTestSetRecordsResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTestSetRecordsResponseSuccess

      interface _ListTestSetsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTestSetsResponse]
        def test_sets: () -> ::Array[Types::TestSetSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_test_sets-instance_method
      def list_test_sets: (
                            ?sort_by: {
                              attribute: ("TestSetName" | "LastUpdatedDateTime"),
                              order: ("Ascending" | "Descending")
                            },
                            ?max_results: ::Integer,
                            ?next_token: ::String
                          ) -> _ListTestSetsResponseSuccess
                        | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTestSetsResponseSuccess

      interface _ListUtteranceAnalyticsDataResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListUtteranceAnalyticsDataResponse]
        def bot_id: () -> ::String
        def next_token: () -> ::String
        def utterances: () -> ::Array[Types::UtteranceSpecification]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_utterance_analytics_data-instance_method
      def list_utterance_analytics_data: (
                                           bot_id: ::String,
                                           start_date_time: ::Time,
                                           end_date_time: ::Time,
                                           ?sort_by: {
                                             name: ("UtteranceTimestamp"),
                                             order: ("Ascending" | "Descending")
                                           },
                                           ?filters: Array[
                                             {
                                               name: ("BotAliasId" | "BotVersion" | "LocaleId" | "Modality" | "Channel" | "SessionId" | "OriginatingRequestId" | "UtteranceState" | "UtteranceText"),
                                               operator: ("EQ" | "GT" | "LT"),
                                               values: Array[::String]
                                             },
                                           ],
                                           ?max_results: ::Integer,
                                           ?next_token: ::String
                                         ) -> _ListUtteranceAnalyticsDataResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListUtteranceAnalyticsDataResponseSuccess

      interface _ListUtteranceMetricsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListUtteranceMetricsResponse]
        def bot_id: () -> ::String
        def results: () -> ::Array[Types::AnalyticsUtteranceResult]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#list_utterance_metrics-instance_method
      def list_utterance_metrics: (
                                    bot_id: ::String,
                                    start_date_time: ::Time,
                                    end_date_time: ::Time,
                                    metrics: Array[
                                      {
                                        name: ("Count" | "Missed" | "Detected" | "UtteranceTimestamp"),
                                        statistic: ("Sum" | "Avg" | "Max"),
                                        order: ("Ascending" | "Descending")?
                                      },
                                    ],
                                    ?bin_by: Array[
                                      {
                                        name: ("ConversationStartTime" | "UtteranceTimestamp"),
                                        interval: ("OneHour" | "OneDay"),
                                        order: ("Ascending" | "Descending")?
                                      },
                                    ],
                                    ?group_by: Array[
                                      {
                                        name: ("UtteranceText" | "UtteranceState")
                                      },
                                    ],
                                    ?attributes: Array[
                                      {
                                        name: ("LastUsedIntent")
                                      },
                                    ],
                                    ?filters: Array[
                                      {
                                        name: ("BotAliasId" | "BotVersion" | "LocaleId" | "Modality" | "Channel" | "SessionId" | "OriginatingRequestId" | "UtteranceState" | "UtteranceText"),
                                        operator: ("EQ" | "GT" | "LT"),
                                        values: Array[::String]
                                      },
                                    ],
                                    ?max_results: ::Integer,
                                    ?next_token: ::String
                                  ) -> _ListUtteranceMetricsResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListUtteranceMetricsResponseSuccess

      interface _SearchAssociatedTranscriptsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::SearchAssociatedTranscriptsResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def bot_recommendation_id: () -> ::String
        def next_index: () -> ::Integer
        def associated_transcripts: () -> ::Array[Types::AssociatedTranscript]
        def total_results: () -> ::Integer
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#search_associated_transcripts-instance_method
      def search_associated_transcripts: (
                                           bot_id: ::String,
                                           bot_version: ::String,
                                           locale_id: ::String,
                                           bot_recommendation_id: ::String,
                                           ?search_order: ("Ascending" | "Descending"),
                                           filters: Array[
                                             {
                                               name: ("IntentId" | "SlotTypeId"),
                                               values: Array[::String]
                                             },
                                           ],
                                           ?max_results: ::Integer,
                                           ?next_index: ::Integer
                                         ) -> _SearchAssociatedTranscriptsResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _SearchAssociatedTranscriptsResponseSuccess

      interface _StartBotRecommendationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartBotRecommendationResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def bot_recommendation_status: () -> ("Processing" | "Deleting" | "Deleted" | "Downloading" | "Updating" | "Available" | "Failed" | "Stopping" | "Stopped")
        def bot_recommendation_id: () -> ::String
        def creation_date_time: () -> ::Time
        def transcript_source_setting: () -> Types::TranscriptSourceSetting
        def encryption_setting: () -> Types::EncryptionSetting
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#start_bot_recommendation-instance_method
      def start_bot_recommendation: (
                                      bot_id: ::String,
                                      bot_version: ::String,
                                      locale_id: ::String,
                                      transcript_source_setting: {
                                        s3_bucket_transcript_source: {
                                          s3_bucket_name: ::String,
                                          path_format: {
                                            object_prefixes: Array[::String]?
                                          }?,
                                          transcript_format: ("Lex"),
                                          transcript_filter: {
                                            lex_transcript_filter: {
                                              date_range_filter: {
                                                start_date_time: ::Time,
                                                end_date_time: ::Time
                                              }?
                                            }?
                                          }?,
                                          kms_key_arn: ::String?
                                        }?
                                      },
                                      ?encryption_setting: {
                                        kms_key_arn: ::String?,
                                        bot_locale_export_password: ::String?,
                                        associated_transcripts_password: ::String?
                                      }
                                    ) -> _StartBotRecommendationResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartBotRecommendationResponseSuccess

      interface _StartBotResourceGenerationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartBotResourceGenerationResponse]
        def generation_input_prompt: () -> ::String
        def generation_id: () -> ::String
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def generation_status: () -> ("Failed" | "Complete" | "InProgress")
        def creation_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#start_bot_resource_generation-instance_method
      def start_bot_resource_generation: (
                                           generation_input_prompt: ::String,
                                           bot_id: ::String,
                                           bot_version: ::String,
                                           locale_id: ::String
                                         ) -> _StartBotResourceGenerationResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartBotResourceGenerationResponseSuccess

      interface _StartImportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartImportResponse]
        def import_id: () -> ::String
        def resource_specification: () -> Types::ImportResourceSpecification
        def merge_strategy: () -> ("Overwrite" | "FailOnConflict" | "Append")
        def import_status: () -> ("InProgress" | "Completed" | "Failed" | "Deleting")
        def creation_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#start_import-instance_method
      def start_import: (
                          import_id: ::String,
                          resource_specification: {
                            bot_import_specification: {
                              bot_name: ::String,
                              role_arn: ::String,
                              data_privacy: {
                                child_directed: bool
                              },
                              idle_session_ttl_in_seconds: ::Integer?,
                              bot_tags: Hash[::String, ::String]?,
                              test_bot_alias_tags: Hash[::String, ::String]?
                            }?,
                            bot_locale_import_specification: {
                              bot_id: ::String,
                              bot_version: ::String,
                              locale_id: ::String,
                              nlu_intent_confidence_threshold: ::Float?,
                              voice_settings: {
                                voice_id: ::String,
                                engine: ("standard" | "neural" | "long-form" | "generative")?
                              }?
                            }?,
                            custom_vocabulary_import_specification: {
                              bot_id: ::String,
                              bot_version: ::String,
                              locale_id: ::String
                            }?,
                            test_set_import_resource_specification: {
                              test_set_name: ::String,
                              description: ::String?,
                              role_arn: ::String,
                              storage_location: {
                                s3_bucket_name: ::String,
                                s3_path: ::String,
                                kms_key_arn: ::String?
                              },
                              import_input_location: {
                                s3_bucket_name: ::String,
                                s3_path: ::String
                              },
                              modality: ("Text" | "Audio"),
                              test_set_tags: Hash[::String, ::String]?
                            }?
                          },
                          merge_strategy: ("Overwrite" | "FailOnConflict" | "Append"),
                          ?file_password: ::String
                        ) -> _StartImportResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartImportResponseSuccess

      interface _StartTestExecutionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartTestExecutionResponse]
        def test_execution_id: () -> ::String
        def creation_date_time: () -> ::Time
        def test_set_id: () -> ::String
        def target: () -> Types::TestExecutionTarget
        def api_mode: () -> ("Streaming" | "NonStreaming")
        def test_execution_modality: () -> ("Text" | "Audio")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#start_test_execution-instance_method
      def start_test_execution: (
                                  test_set_id: ::String,
                                  target: {
                                    bot_alias_target: {
                                      bot_id: ::String,
                                      bot_alias_id: ::String,
                                      locale_id: ::String
                                    }?
                                  },
                                  api_mode: ("Streaming" | "NonStreaming"),
                                  ?test_execution_modality: ("Text" | "Audio")
                                ) -> _StartTestExecutionResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartTestExecutionResponseSuccess

      interface _StartTestSetGenerationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartTestSetGenerationResponse]
        def test_set_generation_id: () -> ::String
        def creation_date_time: () -> ::Time
        def test_set_generation_status: () -> ("Generating" | "Ready" | "Failed" | "Pending")
        def test_set_name: () -> ::String
        def description: () -> ::String
        def storage_location: () -> Types::TestSetStorageLocation
        def generation_data_source: () -> Types::TestSetGenerationDataSource
        def role_arn: () -> ::String
        def test_set_tags: () -> ::Hash[::String, ::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#start_test_set_generation-instance_method
      def start_test_set_generation: (
                                       test_set_name: ::String,
                                       ?description: ::String,
                                       storage_location: {
                                         s3_bucket_name: ::String,
                                         s3_path: ::String,
                                         kms_key_arn: ::String?
                                       },
                                       generation_data_source: {
                                         conversation_logs_data_source: {
                                           bot_id: ::String,
                                           bot_alias_id: ::String,
                                           locale_id: ::String,
                                           filter: {
                                             start_time: ::Time,
                                             end_time: ::Time,
                                             input_mode: ("Speech" | "Text")
                                           }
                                         }?
                                       },
                                       role_arn: ::String,
                                       ?test_set_tags: Hash[::String, ::String]
                                     ) -> _StartTestSetGenerationResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartTestSetGenerationResponseSuccess

      interface _StopBotRecommendationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StopBotRecommendationResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def bot_recommendation_status: () -> ("Processing" | "Deleting" | "Deleted" | "Downloading" | "Updating" | "Available" | "Failed" | "Stopping" | "Stopped")
        def bot_recommendation_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#stop_bot_recommendation-instance_method
      def stop_bot_recommendation: (
                                     bot_id: ::String,
                                     bot_version: ::String,
                                     locale_id: ::String,
                                     bot_recommendation_id: ::String
                                   ) -> _StopBotRecommendationResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StopBotRecommendationResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Hash[::String, ::String]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      interface _UpdateBotResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateBotResponse]
        def bot_id: () -> ::String
        def bot_name: () -> ::String
        def description: () -> ::String
        def role_arn: () -> ::String
        def data_privacy: () -> Types::DataPrivacy
        def idle_session_ttl_in_seconds: () -> ::Integer
        def bot_status: () -> ("Creating" | "Available" | "Inactive" | "Deleting" | "Failed" | "Versioning" | "Importing" | "Updating")
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def bot_type: () -> ("Bot" | "BotNetwork")
        def bot_members: () -> ::Array[Types::BotMember]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#update_bot-instance_method
      def update_bot: (
                        bot_id: ::String,
                        bot_name: ::String,
                        ?description: ::String,
                        role_arn: ::String,
                        data_privacy: {
                          child_directed: bool
                        },
                        idle_session_ttl_in_seconds: ::Integer,
                        ?bot_type: ("Bot" | "BotNetwork"),
                        ?bot_members: Array[
                          {
                            bot_member_id: ::String,
                            bot_member_name: ::String,
                            bot_member_alias_id: ::String,
                            bot_member_alias_name: ::String,
                            bot_member_version: ::String
                          },
                        ]
                      ) -> _UpdateBotResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateBotResponseSuccess

      interface _UpdateBotAliasResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateBotAliasResponse]
        def bot_alias_id: () -> ::String
        def bot_alias_name: () -> ::String
        def description: () -> ::String
        def bot_version: () -> ::String
        def bot_alias_locale_settings: () -> ::Hash[::String, Types::BotAliasLocaleSettings]
        def conversation_log_settings: () -> Types::ConversationLogSettings
        def sentiment_analysis_settings: () -> Types::SentimentAnalysisSettings
        def bot_alias_status: () -> ("Creating" | "Available" | "Deleting" | "Failed")
        def bot_id: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#update_bot_alias-instance_method
      def update_bot_alias: (
                              bot_alias_id: ::String,
                              bot_alias_name: ::String,
                              ?description: ::String,
                              ?bot_version: ::String,
                              ?bot_alias_locale_settings: Hash[::String, {
                                  enabled: bool,
                                  code_hook_specification: {
                                    lambda_code_hook: {
                                      lambda_arn: ::String,
                                      code_hook_interface_version: ::String
                                    }
                                  }?
                                }],
                              ?conversation_log_settings: {
                                text_log_settings: Array[
                                  {
                                    enabled: bool,
                                    destination: {
                                      cloud_watch: {
                                        cloud_watch_log_group_arn: ::String,
                                        log_prefix: ::String
                                      }
                                    },
                                    selective_logging_enabled: bool?
                                  },
                                ]?,
                                audio_log_settings: Array[
                                  {
                                    enabled: bool,
                                    destination: {
                                      s3_bucket: {
                                        kms_key_arn: ::String?,
                                        s3_bucket_arn: ::String,
                                        log_prefix: ::String
                                      }
                                    },
                                    selective_logging_enabled: bool?
                                  },
                                ]?
                              },
                              ?sentiment_analysis_settings: {
                                detect_sentiment: bool
                              },
                              bot_id: ::String
                            ) -> _UpdateBotAliasResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateBotAliasResponseSuccess

      interface _UpdateBotLocaleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateBotLocaleResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def locale_name: () -> ::String
        def description: () -> ::String
        def nlu_intent_confidence_threshold: () -> ::Float
        def voice_settings: () -> Types::VoiceSettings
        def bot_locale_status: () -> ("Creating" | "Building" | "Built" | "ReadyExpressTesting" | "Failed" | "Deleting" | "NotBuilt" | "Importing" | "Processing")
        def failure_reasons: () -> ::Array[::String]
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def recommended_actions: () -> ::Array[::String]
        def generative_ai_settings: () -> Types::GenerativeAISettings
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#update_bot_locale-instance_method
      def update_bot_locale: (
                               bot_id: ::String,
                               bot_version: ::String,
                               locale_id: ::String,
                               ?description: ::String,
                               nlu_intent_confidence_threshold: ::Float,
                               ?voice_settings: {
                                 voice_id: ::String,
                                 engine: ("standard" | "neural" | "long-form" | "generative")?
                               },
                               ?generative_ai_settings: {
                                 runtime_settings: {
                                   slot_resolution_improvement: {
                                     enabled: bool,
                                     bedrock_model_specification: {
                                       model_arn: ::String,
                                       guardrail: {
                                         identifier: ::String,
                                         version: ::String
                                       }?,
                                       trace_status: ("ENABLED" | "DISABLED")?,
                                       custom_prompt: ::String?
                                     }?
                                   }?
                                 }?,
                                 buildtime_settings: {
                                   descriptive_bot_builder: {
                                     enabled: bool,
                                     bedrock_model_specification: {
                                       model_arn: ::String,
                                       guardrail: {
                                         identifier: ::String,
                                         version: ::String
                                       }?,
                                       trace_status: ("ENABLED" | "DISABLED")?,
                                       custom_prompt: ::String?
                                     }?
                                   }?,
                                   sample_utterance_generation: {
                                     enabled: bool,
                                     bedrock_model_specification: {
                                       model_arn: ::String,
                                       guardrail: {
                                         identifier: ::String,
                                         version: ::String
                                       }?,
                                       trace_status: ("ENABLED" | "DISABLED")?,
                                       custom_prompt: ::String?
                                     }?
                                   }?
                                 }?
                               }
                             ) -> _UpdateBotLocaleResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateBotLocaleResponseSuccess

      interface _UpdateBotRecommendationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateBotRecommendationResponse]
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def bot_recommendation_status: () -> ("Processing" | "Deleting" | "Deleted" | "Downloading" | "Updating" | "Available" | "Failed" | "Stopping" | "Stopped")
        def bot_recommendation_id: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def transcript_source_setting: () -> Types::TranscriptSourceSetting
        def encryption_setting: () -> Types::EncryptionSetting
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#update_bot_recommendation-instance_method
      def update_bot_recommendation: (
                                       bot_id: ::String,
                                       bot_version: ::String,
                                       locale_id: ::String,
                                       bot_recommendation_id: ::String,
                                       encryption_setting: {
                                         kms_key_arn: ::String?,
                                         bot_locale_export_password: ::String?,
                                         associated_transcripts_password: ::String?
                                       }
                                     ) -> _UpdateBotRecommendationResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateBotRecommendationResponseSuccess

      interface _UpdateExportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateExportResponse]
        def export_id: () -> ::String
        def resource_specification: () -> Types::ExportResourceSpecification
        def file_format: () -> ("LexJson" | "TSV" | "CSV")
        def export_status: () -> ("InProgress" | "Completed" | "Failed" | "Deleting")
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#update_export-instance_method
      def update_export: (
                           export_id: ::String,
                           ?file_password: ::String
                         ) -> _UpdateExportResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateExportResponseSuccess

      interface _UpdateIntentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateIntentResponse]
        def intent_id: () -> ::String
        def intent_name: () -> ::String
        def description: () -> ::String
        def parent_intent_signature: () -> ::String
        def sample_utterances: () -> ::Array[Types::SampleUtterance]
        def dialog_code_hook: () -> Types::DialogCodeHookSettings
        def fulfillment_code_hook: () -> Types::FulfillmentCodeHookSettings
        def slot_priorities: () -> ::Array[Types::SlotPriority]
        def intent_confirmation_setting: () -> Types::IntentConfirmationSetting
        def intent_closing_setting: () -> Types::IntentClosingSetting
        def input_contexts: () -> ::Array[Types::InputContext]
        def output_contexts: () -> ::Array[Types::OutputContext]
        def kendra_configuration: () -> Types::KendraConfiguration
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def initial_response_setting: () -> Types::InitialResponseSetting
        def qn_a_intent_configuration: () -> Types::QnAIntentConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#update_intent-instance_method
      def update_intent: (
                           intent_id: ::String,
                           intent_name: ::String,
                           ?description: ::String,
                           ?parent_intent_signature: ::String,
                           ?sample_utterances: Array[
                             {
                               utterance: ::String
                             },
                           ],
                           ?dialog_code_hook: {
                             enabled: bool
                           },
                           ?fulfillment_code_hook: {
                             enabled: bool,
                             post_fulfillment_status_specification: {
                               success_response: {
                                 message_groups: Array[
                                   {
                                     message: {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                     variations: Array[
                                       {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                     ]?
                                   },
                                 ],
                                 allow_interrupt: bool?
                               }?,
                               failure_response: {
                                 message_groups: Array[
                                   {
                                     message: {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                     variations: Array[
                                       {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                     ]?
                                   },
                                 ],
                                 allow_interrupt: bool?
                               }?,
                               timeout_response: {
                                 message_groups: Array[
                                   {
                                     message: {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                     variations: Array[
                                       {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                     ]?
                                   },
                                 ],
                                 allow_interrupt: bool?
                               }?,
                               success_next_step: {
                                 dialog_action: {
                                   type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                   slot_to_elicit: ::String?,
                                   suppress_next_message: bool?
                                 }?,
                                 intent: {
                                   name: ::String?,
                                   slots: Hash[::String, {
                                       shape: ("Scalar" | "List")?,
                                       value: {
                                         interpreted_value: ::String?
                                       }?,
                                       values: Array[
                                         untyped,
                                       ]?
                                     }]?
                                 }?,
                                 session_attributes: Hash[::String, ::String]?
                               }?,
                               success_conditional: {
                                 active: bool,
                                 conditional_branches: Array[
                                   {
                                     name: ::String,
                                     condition: {
                                       expression_string: ::String
                                     },
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     },
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   },
                                 ],
                                 default_branch: {
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   }?,
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 }
                               }?,
                               failure_next_step: {
                                 dialog_action: {
                                   type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                   slot_to_elicit: ::String?,
                                   suppress_next_message: bool?
                                 }?,
                                 intent: {
                                   name: ::String?,
                                   slots: Hash[::String, {
                                       shape: ("Scalar" | "List")?,
                                       value: {
                                         interpreted_value: ::String?
                                       }?,
                                       values: Array[
                                         untyped,
                                       ]?
                                     }]?
                                 }?,
                                 session_attributes: Hash[::String, ::String]?
                               }?,
                               failure_conditional: {
                                 active: bool,
                                 conditional_branches: Array[
                                   {
                                     name: ::String,
                                     condition: {
                                       expression_string: ::String
                                     },
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     },
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   },
                                 ],
                                 default_branch: {
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   }?,
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 }
                               }?,
                               timeout_next_step: {
                                 dialog_action: {
                                   type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                   slot_to_elicit: ::String?,
                                   suppress_next_message: bool?
                                 }?,
                                 intent: {
                                   name: ::String?,
                                   slots: Hash[::String, {
                                       shape: ("Scalar" | "List")?,
                                       value: {
                                         interpreted_value: ::String?
                                       }?,
                                       values: Array[
                                         untyped,
                                       ]?
                                     }]?
                                 }?,
                                 session_attributes: Hash[::String, ::String]?
                               }?,
                               timeout_conditional: {
                                 active: bool,
                                 conditional_branches: Array[
                                   {
                                     name: ::String,
                                     condition: {
                                       expression_string: ::String
                                     },
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     },
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   },
                                 ],
                                 default_branch: {
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   }?,
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 }
                               }?
                             }?,
                             fulfillment_updates_specification: {
                               active: bool,
                               start_response: {
                                 delay_in_seconds: ::Integer,
                                 message_groups: Array[
                                   {
                                     message: {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                     variations: Array[
                                       {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                     ]?
                                   },
                                 ],
                                 allow_interrupt: bool?
                               }?,
                               update_response: {
                                 frequency_in_seconds: ::Integer,
                                 message_groups: Array[
                                   {
                                     message: {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                     variations: Array[
                                       {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                     ]?
                                   },
                                 ],
                                 allow_interrupt: bool?
                               }?,
                               timeout_in_seconds: ::Integer?
                             }?,
                             active: bool?
                           },
                           ?slot_priorities: Array[
                             {
                               priority: ::Integer,
                               slot_id: ::String
                             },
                           ],
                           ?intent_confirmation_setting: {
                             prompt_specification: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               max_retries: ::Integer,
                               allow_interrupt: bool?,
                               message_selection_strategy: ("Random" | "Ordered")?,
                               prompt_attempts_specification: Hash[("Initial" | "Retry1" | "Retry2" | "Retry3" | "Retry4" | "Retry5"), {
                                   allow_interrupt: bool?,
                                   allowed_input_types: {
                                     allow_audio_input: bool,
                                     allow_dtmf_input: bool
                                   },
                                   audio_and_dtmf_input_specification: {
                                     start_timeout_ms: ::Integer,
                                     audio_specification: {
                                       max_length_ms: ::Integer,
                                       end_timeout_ms: ::Integer
                                     }?,
                                     dtmf_specification: {
                                       max_length: ::Integer,
                                       end_timeout_ms: ::Integer,
                                       deletion_character: ::String,
                                       end_character: ::String
                                     }?
                                   }?,
                                   text_input_specification: {
                                     start_timeout_ms: ::Integer
                                   }?
                                 }]?
                             },
                             declination_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             active: bool?,
                             confirmation_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             confirmation_next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             confirmation_conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             declination_next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             declination_conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             failure_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             failure_next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             failure_conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             code_hook: {
                               enable_code_hook_invocation: bool,
                               active: bool,
                               invocation_label: ::String?,
                               post_code_hook_specification: {
                                 success_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 success_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 success_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 failure_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 failure_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 failure_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 timeout_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 timeout_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 timeout_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?
                               }
                             }?,
                             elicitation_code_hook: {
                               enable_code_hook_invocation: bool,
                               invocation_label: ::String?
                             }?
                           },
                           ?intent_closing_setting: {
                             closing_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             active: bool?,
                             next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?
                           },
                           ?input_contexts: Array[
                             {
                               name: ::String
                             },
                           ],
                           ?output_contexts: Array[
                             {
                               name: ::String,
                               time_to_live_in_seconds: ::Integer,
                               turns_to_live: ::Integer
                             },
                           ],
                           ?kendra_configuration: {
                             kendra_index: ::String,
                             query_filter_string_enabled: bool?,
                             query_filter_string: ::String?
                           },
                           bot_id: ::String,
                           bot_version: ::String,
                           locale_id: ::String,
                           ?initial_response_setting: {
                             initial_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             code_hook: {
                               enable_code_hook_invocation: bool,
                               active: bool,
                               invocation_label: ::String?,
                               post_code_hook_specification: {
                                 success_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 success_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 success_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 failure_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 failure_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 failure_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 timeout_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 timeout_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 timeout_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?
                               }
                             }?
                           },
                           ?qn_a_intent_configuration: {
                             data_source_configuration: {
                               opensearch_configuration: {
                                 domain_endpoint: ::String,
                                 index_name: ::String,
                                 exact_response: bool?,
                                 exact_response_fields: {
                                   question_field: ::String,
                                   answer_field: ::String
                                 }?,
                                 include_fields: Array[::String]?
                               }?,
                               kendra_configuration: {
                                 kendra_index: ::String,
                                 query_filter_string_enabled: bool?,
                                 query_filter_string: ::String?,
                                 exact_response: bool?
                               }?,
                               bedrock_knowledge_store_configuration: {
                                 bedrock_knowledge_base_arn: ::String,
                                 exact_response: bool?,
                                 exact_response_fields: {
                                   answer_field: ::String?
                                 }?
                               }?
                             }?,
                             bedrock_model_configuration: {
                               model_arn: ::String,
                               guardrail: {
                                 identifier: ::String,
                                 version: ::String
                               }?,
                               trace_status: ("ENABLED" | "DISABLED")?,
                               custom_prompt: ::String?
                             }?
                           }
                         ) -> _UpdateIntentResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateIntentResponseSuccess

      interface _UpdateResourcePolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateResourcePolicyResponse]
        def resource_arn: () -> ::String
        def revision_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#update_resource_policy-instance_method
      def update_resource_policy: (
                                    resource_arn: ::String,
                                    policy: ::String,
                                    ?expected_revision_id: ::String
                                  ) -> _UpdateResourcePolicyResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateResourcePolicyResponseSuccess

      interface _UpdateSlotResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateSlotResponse]
        def slot_id: () -> ::String
        def slot_name: () -> ::String
        def description: () -> ::String
        def slot_type_id: () -> ::String
        def value_elicitation_setting: () -> Types::SlotValueElicitationSetting
        def obfuscation_setting: () -> Types::ObfuscationSetting
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def intent_id: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def multiple_values_setting: () -> Types::MultipleValuesSetting
        def sub_slot_setting: () -> Types::SubSlotSetting
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#update_slot-instance_method
      def update_slot: (
                         slot_id: ::String,
                         slot_name: ::String,
                         ?description: ::String,
                         ?slot_type_id: ::String,
                         value_elicitation_setting: {
                           default_value_specification: {
                             default_value_list: Array[
                               {
                                 default_value: ::String
                               },
                             ]
                           }?,
                           slot_constraint: ("Required" | "Optional"),
                           prompt_specification: {
                             message_groups: Array[
                               {
                                 message: {
                                   plain_text_message: {
                                     value: ::String
                                   }?,
                                   custom_payload: {
                                     value: ::String
                                   }?,
                                   ssml_message: {
                                     value: ::String
                                   }?,
                                   image_response_card: {
                                     title: ::String,
                                     subtitle: ::String?,
                                     image_url: ::String?,
                                     buttons: Array[
                                       {
                                         text: ::String,
                                         value: ::String
                                       },
                                     ]?
                                   }?
                                 },
                                 variations: Array[
                                   {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                 ]?
                               },
                             ],
                             max_retries: ::Integer,
                             allow_interrupt: bool?,
                             message_selection_strategy: ("Random" | "Ordered")?,
                             prompt_attempts_specification: Hash[("Initial" | "Retry1" | "Retry2" | "Retry3" | "Retry4" | "Retry5"), {
                                 allow_interrupt: bool?,
                                 allowed_input_types: {
                                   allow_audio_input: bool,
                                   allow_dtmf_input: bool
                                 },
                                 audio_and_dtmf_input_specification: {
                                   start_timeout_ms: ::Integer,
                                   audio_specification: {
                                     max_length_ms: ::Integer,
                                     end_timeout_ms: ::Integer
                                   }?,
                                   dtmf_specification: {
                                     max_length: ::Integer,
                                     end_timeout_ms: ::Integer,
                                     deletion_character: ::String,
                                     end_character: ::String
                                   }?
                                 }?,
                                 text_input_specification: {
                                   start_timeout_ms: ::Integer
                                 }?
                               }]?
                           }?,
                           sample_utterances: Array[
                             {
                               utterance: ::String
                             },
                           ]?,
                           wait_and_continue_specification: {
                             waiting_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             },
                             continue_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             },
                             still_waiting_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               frequency_in_seconds: ::Integer,
                               timeout_in_seconds: ::Integer,
                               allow_interrupt: bool?
                             }?,
                             active: bool?
                           }?,
                           slot_capture_setting: {
                             capture_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             capture_next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             capture_conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             failure_response: {
                               message_groups: Array[
                                 {
                                   message: {
                                     plain_text_message: {
                                       value: ::String
                                     }?,
                                     custom_payload: {
                                       value: ::String
                                     }?,
                                     ssml_message: {
                                       value: ::String
                                     }?,
                                     image_response_card: {
                                       title: ::String,
                                       subtitle: ::String?,
                                       image_url: ::String?,
                                       buttons: Array[
                                         {
                                           text: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     }?
                                   },
                                   variations: Array[
                                     {
                                       plain_text_message: {
                                         value: ::String
                                       }?,
                                       custom_payload: {
                                         value: ::String
                                       }?,
                                       ssml_message: {
                                         value: ::String
                                       }?,
                                       image_response_card: {
                                         title: ::String,
                                         subtitle: ::String?,
                                         image_url: ::String?,
                                         buttons: Array[
                                           {
                                             text: ::String,
                                             value: ::String
                                           },
                                         ]?
                                       }?
                                     },
                                   ]?
                                 },
                               ],
                               allow_interrupt: bool?
                             }?,
                             failure_next_step: {
                               dialog_action: {
                                 type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                 slot_to_elicit: ::String?,
                                 suppress_next_message: bool?
                               }?,
                               intent: {
                                 name: ::String?,
                                 slots: Hash[::String, {
                                     shape: ("Scalar" | "List")?,
                                     value: {
                                       interpreted_value: ::String?
                                     }?,
                                     values: Array[
                                       untyped,
                                     ]?
                                   }]?
                               }?,
                               session_attributes: Hash[::String, ::String]?
                             }?,
                             failure_conditional: {
                               active: bool,
                               conditional_branches: Array[
                                 {
                                   name: ::String,
                                   condition: {
                                     expression_string: ::String
                                   },
                                   next_step: {
                                     dialog_action: {
                                       type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                       slot_to_elicit: ::String?,
                                       suppress_next_message: bool?
                                     }?,
                                     intent: {
                                       name: ::String?,
                                       slots: Hash[::String, {
                                           shape: ("Scalar" | "List")?,
                                           value: {
                                             interpreted_value: ::String?
                                           }?,
                                           values: Array[
                                             untyped,
                                           ]?
                                         }]?
                                     }?,
                                     session_attributes: Hash[::String, ::String]?
                                   },
                                   response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   }?
                                 },
                               ],
                               default_branch: {
                                 next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?
                               }
                             }?,
                             code_hook: {
                               enable_code_hook_invocation: bool,
                               active: bool,
                               invocation_label: ::String?,
                               post_code_hook_specification: {
                                 success_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 success_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 success_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 failure_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 failure_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 failure_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?,
                                 timeout_response: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   allow_interrupt: bool?
                                 }?,
                                 timeout_next_step: {
                                   dialog_action: {
                                     type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                     slot_to_elicit: ::String?,
                                     suppress_next_message: bool?
                                   }?,
                                   intent: {
                                     name: ::String?,
                                     slots: Hash[::String, {
                                         shape: ("Scalar" | "List")?,
                                         value: {
                                           interpreted_value: ::String?
                                         }?,
                                         values: Array[
                                           untyped,
                                         ]?
                                       }]?
                                   }?,
                                   session_attributes: Hash[::String, ::String]?
                                 }?,
                                 timeout_conditional: {
                                   active: bool,
                                   conditional_branches: Array[
                                     {
                                       name: ::String,
                                       condition: {
                                         expression_string: ::String
                                       },
                                       next_step: {
                                         dialog_action: {
                                           type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                           slot_to_elicit: ::String?,
                                           suppress_next_message: bool?
                                         }?,
                                         intent: {
                                           name: ::String?,
                                           slots: Hash[::String, {
                                               shape: ("Scalar" | "List")?,
                                               value: {
                                                 interpreted_value: ::String?
                                               }?,
                                               values: Array[
                                                 untyped,
                                               ]?
                                             }]?
                                         }?,
                                         session_attributes: Hash[::String, ::String]?
                                       },
                                       response: {
                                         message_groups: Array[
                                           {
                                             message: {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                             variations: Array[
                                               {
                                                 plain_text_message: {
                                                   value: ::String
                                                 }?,
                                                 custom_payload: {
                                                   value: ::String
                                                 }?,
                                                 ssml_message: {
                                                   value: ::String
                                                 }?,
                                                 image_response_card: {
                                                   title: ::String,
                                                   subtitle: ::String?,
                                                   image_url: ::String?,
                                                   buttons: Array[
                                                     {
                                                       text: ::String,
                                                       value: ::String
                                                     },
                                                   ]?
                                                 }?
                                               },
                                             ]?
                                           },
                                         ],
                                         allow_interrupt: bool?
                                       }?
                                     },
                                   ],
                                   default_branch: {
                                     next_step: {
                                       dialog_action: {
                                         type: ("ElicitIntent" | "StartIntent" | "ElicitSlot" | "EvaluateConditional" | "InvokeDialogCodeHook" | "ConfirmIntent" | "FulfillIntent" | "CloseIntent" | "EndConversation"),
                                         slot_to_elicit: ::String?,
                                         suppress_next_message: bool?
                                       }?,
                                       intent: {
                                         name: ::String?,
                                         slots: Hash[::String, {
                                             shape: ("Scalar" | "List")?,
                                             value: {
                                               interpreted_value: ::String?
                                             }?,
                                             values: Array[
                                               untyped,
                                             ]?
                                           }]?
                                       }?,
                                       session_attributes: Hash[::String, ::String]?
                                     }?,
                                     response: {
                                       message_groups: Array[
                                         {
                                           message: {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                           variations: Array[
                                             {
                                               plain_text_message: {
                                                 value: ::String
                                               }?,
                                               custom_payload: {
                                                 value: ::String
                                               }?,
                                               ssml_message: {
                                                 value: ::String
                                               }?,
                                               image_response_card: {
                                                 title: ::String,
                                                 subtitle: ::String?,
                                                 image_url: ::String?,
                                                 buttons: Array[
                                                   {
                                                     text: ::String,
                                                     value: ::String
                                                   },
                                                 ]?
                                               }?
                                             },
                                           ]?
                                         },
                                       ],
                                       allow_interrupt: bool?
                                     }?
                                   }
                                 }?
                               }
                             }?,
                             elicitation_code_hook: {
                               enable_code_hook_invocation: bool,
                               invocation_label: ::String?
                             }?
                           }?,
                           slot_resolution_setting: {
                             slot_resolution_strategy: ("EnhancedFallback" | "Default")
                           }?
                         },
                         ?obfuscation_setting: {
                           obfuscation_setting_type: ("None" | "DefaultObfuscation")
                         },
                         bot_id: ::String,
                         bot_version: ::String,
                         locale_id: ::String,
                         intent_id: ::String,
                         ?multiple_values_setting: {
                           allow_multiple_values: bool?
                         },
                         ?sub_slot_setting: {
                           expression: ::String?,
                           slot_specifications: Hash[::String, {
                               slot_type_id: ::String,
                               value_elicitation_setting: {
                                 default_value_specification: {
                                   default_value_list: Array[
                                     {
                                       default_value: ::String
                                     },
                                   ]
                                 }?,
                                 prompt_specification: {
                                   message_groups: Array[
                                     {
                                       message: {
                                         plain_text_message: {
                                           value: ::String
                                         }?,
                                         custom_payload: {
                                           value: ::String
                                         }?,
                                         ssml_message: {
                                           value: ::String
                                         }?,
                                         image_response_card: {
                                           title: ::String,
                                           subtitle: ::String?,
                                           image_url: ::String?,
                                           buttons: Array[
                                             {
                                               text: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }?
                                       },
                                       variations: Array[
                                         {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                       ]?
                                     },
                                   ],
                                   max_retries: ::Integer,
                                   allow_interrupt: bool?,
                                   message_selection_strategy: ("Random" | "Ordered")?,
                                   prompt_attempts_specification: Hash[("Initial" | "Retry1" | "Retry2" | "Retry3" | "Retry4" | "Retry5"), {
                                       allow_interrupt: bool?,
                                       allowed_input_types: {
                                         allow_audio_input: bool,
                                         allow_dtmf_input: bool
                                       },
                                       audio_and_dtmf_input_specification: {
                                         start_timeout_ms: ::Integer,
                                         audio_specification: {
                                           max_length_ms: ::Integer,
                                           end_timeout_ms: ::Integer
                                         }?,
                                         dtmf_specification: {
                                           max_length: ::Integer,
                                           end_timeout_ms: ::Integer,
                                           deletion_character: ::String,
                                           end_character: ::String
                                         }?
                                       }?,
                                       text_input_specification: {
                                         start_timeout_ms: ::Integer
                                       }?
                                     }]?
                                 },
                                 sample_utterances: Array[
                                   {
                                     utterance: ::String
                                   },
                                 ]?,
                                 wait_and_continue_specification: {
                                   waiting_response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   },
                                   continue_response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     allow_interrupt: bool?
                                   },
                                   still_waiting_response: {
                                     message_groups: Array[
                                       {
                                         message: {
                                           plain_text_message: {
                                             value: ::String
                                           }?,
                                           custom_payload: {
                                             value: ::String
                                           }?,
                                           ssml_message: {
                                             value: ::String
                                           }?,
                                           image_response_card: {
                                             title: ::String,
                                             subtitle: ::String?,
                                             image_url: ::String?,
                                             buttons: Array[
                                               {
                                                 text: ::String,
                                                 value: ::String
                                               },
                                             ]?
                                           }?
                                         },
                                         variations: Array[
                                           {
                                             plain_text_message: {
                                               value: ::String
                                             }?,
                                             custom_payload: {
                                               value: ::String
                                             }?,
                                             ssml_message: {
                                               value: ::String
                                             }?,
                                             image_response_card: {
                                               title: ::String,
                                               subtitle: ::String?,
                                               image_url: ::String?,
                                               buttons: Array[
                                                 {
                                                   text: ::String,
                                                   value: ::String
                                                 },
                                               ]?
                                             }?
                                           },
                                         ]?
                                       },
                                     ],
                                     frequency_in_seconds: ::Integer,
                                     timeout_in_seconds: ::Integer,
                                     allow_interrupt: bool?
                                   }?,
                                   active: bool?
                                 }?
                               }
                             }]?
                         }
                       ) -> _UpdateSlotResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateSlotResponseSuccess

      interface _UpdateSlotTypeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateSlotTypeResponse]
        def slot_type_id: () -> ::String
        def slot_type_name: () -> ::String
        def description: () -> ::String
        def slot_type_values: () -> ::Array[Types::SlotTypeValue]
        def value_selection_setting: () -> Types::SlotValueSelectionSetting
        def parent_slot_type_signature: () -> ::String
        def bot_id: () -> ::String
        def bot_version: () -> ::String
        def locale_id: () -> ::String
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
        def external_source_setting: () -> Types::ExternalSourceSetting
        def composite_slot_type_setting: () -> Types::CompositeSlotTypeSetting
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#update_slot_type-instance_method
      def update_slot_type: (
                              slot_type_id: ::String,
                              slot_type_name: ::String,
                              ?description: ::String,
                              ?slot_type_values: Array[
                                {
                                  sample_value: {
                                    value: ::String
                                  }?,
                                  synonyms: Array[
                                    {
                                      value: ::String
                                    },
                                  ]?
                                },
                              ],
                              ?value_selection_setting: {
                                resolution_strategy: ("OriginalValue" | "TopResolution" | "Concatenation"),
                                regex_filter: {
                                  pattern: ::String
                                }?,
                                advanced_recognition_setting: {
                                  audio_recognition_strategy: ("UseSlotValuesAsCustomVocabulary")?
                                }?
                              },
                              ?parent_slot_type_signature: ::String,
                              bot_id: ::String,
                              bot_version: ::String,
                              locale_id: ::String,
                              ?external_source_setting: {
                                grammar_slot_type_setting: {
                                  source: {
                                    s3_bucket_name: ::String,
                                    s3_object_key: ::String,
                                    kms_key_arn: ::String?
                                  }?
                                }?
                              },
                              ?composite_slot_type_setting: {
                                sub_slots: Array[
                                  {
                                    name: ::String,
                                    slot_type_id: ::String
                                  },
                                ]?
                              }
                            ) -> _UpdateSlotTypeResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateSlotTypeResponseSuccess

      interface _UpdateTestSetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateTestSetResponse]
        def test_set_id: () -> ::String
        def test_set_name: () -> ::String
        def description: () -> ::String
        def modality: () -> ("Text" | "Audio")
        def status: () -> ("Importing" | "PendingAnnotation" | "Deleting" | "ValidationError" | "Ready")
        def role_arn: () -> ::String
        def num_turns: () -> ::Integer
        def storage_location: () -> Types::TestSetStorageLocation
        def creation_date_time: () -> ::Time
        def last_updated_date_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#update_test_set-instance_method
      def update_test_set: (
                             test_set_id: ::String,
                             test_set_name: ::String,
                             ?description: ::String
                           ) -> _UpdateTestSetResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateTestSetResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LexModelsV2/Client.html#wait_until-instance_method
      def wait_until: (:bot_alias_available waiter_name, 
                    bot_alias_id: ::String,
                    bot_id: ::String
                  ) -> Client::_DescribeBotAliasResponseSuccess
                    | (:bot_alias_available waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeBotAliasResponseSuccess
                    | (:bot_available waiter_name, 
                    bot_id: ::String
                  ) -> Client::_DescribeBotResponseSuccess
                    | (:bot_available waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeBotResponseSuccess
                    | (:bot_export_completed waiter_name, 
                    export_id: ::String
                  ) -> Client::_DescribeExportResponseSuccess
                    | (:bot_export_completed waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeExportResponseSuccess
                    | (:bot_import_completed waiter_name, 
                    import_id: ::String
                  ) -> Client::_DescribeImportResponseSuccess
                    | (:bot_import_completed waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeImportResponseSuccess
                    | (:bot_locale_built waiter_name, 
                    bot_id: ::String,
                    bot_version: ::String,
                    locale_id: ::String
                  ) -> Client::_DescribeBotLocaleResponseSuccess
                    | (:bot_locale_built waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeBotLocaleResponseSuccess
                    | (:bot_locale_created waiter_name, 
                    bot_id: ::String,
                    bot_version: ::String,
                    locale_id: ::String
                  ) -> Client::_DescribeBotLocaleResponseSuccess
                    | (:bot_locale_created waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeBotLocaleResponseSuccess
                    | (:bot_locale_express_testing_available waiter_name, 
                    bot_id: ::String,
                    bot_version: ::String,
                    locale_id: ::String
                  ) -> Client::_DescribeBotLocaleResponseSuccess
                    | (:bot_locale_express_testing_available waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeBotLocaleResponseSuccess
                    | (:bot_version_available waiter_name, 
                    bot_id: ::String,
                    bot_version: ::String
                  ) -> Client::_DescribeBotVersionResponseSuccess
                    | (:bot_version_available waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeBotVersionResponseSuccess
    end
  end
end

