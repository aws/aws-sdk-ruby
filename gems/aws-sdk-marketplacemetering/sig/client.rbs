# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module MarketplaceMetering
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/MarketplaceMetering/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?simple_json: bool,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _BatchMeterUsageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchMeterUsageResult]
        def results: () -> ::Array[Types::UsageRecordResult]
        def unprocessed_records: () -> ::Array[Types::UsageRecord]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/MarketplaceMetering/Client.html#batch_meter_usage-instance_method
      def batch_meter_usage: (
                               usage_records: Array[
                                 {
                                   timestamp: ::Time,
                                   customer_identifier: ::String,
                                   dimension: ::String,
                                   quantity: ::Integer?,
                                   usage_allocations: Array[
                                     {
                                       allocated_usage_quantity: ::Integer,
                                       tags: Array[
                                         {
                                           key: ::String,
                                           value: ::String
                                         },
                                       ]?
                                     },
                                   ]?
                                 },
                               ],
                               product_code: ::String
                             ) -> _BatchMeterUsageResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchMeterUsageResponseSuccess

      interface _MeterUsageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::MeterUsageResult]
        def metering_record_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/MarketplaceMetering/Client.html#meter_usage-instance_method
      def meter_usage: (
                         product_code: ::String,
                         timestamp: ::Time,
                         usage_dimension: ::String,
                         ?usage_quantity: ::Integer,
                         ?dry_run: bool,
                         ?usage_allocations: Array[
                           {
                             allocated_usage_quantity: ::Integer,
                             tags: Array[
                               {
                                 key: ::String,
                                 value: ::String
                               },
                             ]?
                           },
                         ]
                       ) -> _MeterUsageResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _MeterUsageResponseSuccess

      interface _RegisterUsageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::RegisterUsageResult]
        def public_key_rotation_timestamp: () -> ::Time
        def signature: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/MarketplaceMetering/Client.html#register_usage-instance_method
      def register_usage: (
                            product_code: ::String,
                            public_key_version: ::Integer,
                            ?nonce: ::String
                          ) -> _RegisterUsageResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _RegisterUsageResponseSuccess

      interface _ResolveCustomerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ResolveCustomerResult]
        def customer_identifier: () -> ::String
        def product_code: () -> ::String
        def customer_aws_account_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/MarketplaceMetering/Client.html#resolve_customer-instance_method
      def resolve_customer: (
                              registration_token: ::String
                            ) -> _ResolveCustomerResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ResolveCustomerResponseSuccess
    end
  end
end

