# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module LookoutforVision
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _CreateDatasetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateDatasetResponse]
        def dataset_metadata: () -> Types::DatasetMetadata
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#create_dataset-instance_method
      def create_dataset: (
                            project_name: ::String,
                            dataset_type: ::String,
                            ?dataset_source: {
                              ground_truth_manifest: {
                                s3_object: {
                                  bucket: ::String,
                                  key: ::String,
                                  version_id: ::String?
                                }?
                              }?
                            },
                            ?client_token: ::String
                          ) -> _CreateDatasetResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateDatasetResponseSuccess

      interface _CreateModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelResponse]
        def model_metadata: () -> Types::ModelMetadata
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#create_model-instance_method
      def create_model: (
                          project_name: ::String,
                          ?description: ::String,
                          ?client_token: ::String,
                          output_config: {
                            s3_location: {
                              bucket: ::String,
                              prefix: ::String?
                            }
                          },
                          ?kms_key_id: ::String,
                          ?tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> _CreateModelResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelResponseSuccess

      interface _CreateProjectResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateProjectResponse]
        def project_metadata: () -> Types::ProjectMetadata
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#create_project-instance_method
      def create_project: (
                            project_name: ::String,
                            ?client_token: ::String
                          ) -> _CreateProjectResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateProjectResponseSuccess

      interface _DeleteDatasetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteDatasetResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#delete_dataset-instance_method
      def delete_dataset: (
                            project_name: ::String,
                            dataset_type: ::String,
                            ?client_token: ::String
                          ) -> _DeleteDatasetResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteDatasetResponseSuccess

      interface _DeleteModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteModelResponse]
        def model_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#delete_model-instance_method
      def delete_model: (
                          project_name: ::String,
                          model_version: ::String,
                          ?client_token: ::String
                        ) -> _DeleteModelResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteModelResponseSuccess

      interface _DeleteProjectResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteProjectResponse]
        def project_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#delete_project-instance_method
      def delete_project: (
                            project_name: ::String,
                            ?client_token: ::String
                          ) -> _DeleteProjectResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteProjectResponseSuccess

      interface _DescribeDatasetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeDatasetResponse]
        def dataset_description: () -> Types::DatasetDescription
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#describe_dataset-instance_method
      def describe_dataset: (
                              project_name: ::String,
                              dataset_type: ::String
                            ) -> _DescribeDatasetResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeDatasetResponseSuccess

      interface _DescribeModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeModelResponse]
        def model_description: () -> Types::ModelDescription
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#describe_model-instance_method
      def describe_model: (
                            project_name: ::String,
                            model_version: ::String
                          ) -> _DescribeModelResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeModelResponseSuccess

      interface _DescribeModelPackagingJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeModelPackagingJobResponse]
        def model_packaging_description: () -> Types::ModelPackagingDescription
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#describe_model_packaging_job-instance_method
      def describe_model_packaging_job: (
                                          project_name: ::String,
                                          job_name: ::String
                                        ) -> _DescribeModelPackagingJobResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeModelPackagingJobResponseSuccess

      interface _DescribeProjectResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeProjectResponse]
        def project_description: () -> Types::ProjectDescription
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#describe_project-instance_method
      def describe_project: (
                              project_name: ::String
                            ) -> _DescribeProjectResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeProjectResponseSuccess

      interface _DetectAnomaliesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DetectAnomaliesResponse]
        def detect_anomaly_result: () -> Types::DetectAnomalyResult
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#detect_anomalies-instance_method
      def detect_anomalies: (
                              project_name: ::String,
                              model_version: ::String,
                              body: ::String,
                              content_type: ::String
                            ) -> _DetectAnomaliesResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DetectAnomaliesResponseSuccess

      interface _ListDatasetEntriesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListDatasetEntriesResponse]
        def dataset_entries: () -> ::Array[::String]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#list_dataset_entries-instance_method
      def list_dataset_entries: (
                                  project_name: ::String,
                                  dataset_type: ::String,
                                  ?labeled: bool,
                                  ?anomaly_class: ::String,
                                  ?before_creation_date: ::Time,
                                  ?after_creation_date: ::Time,
                                  ?next_token: ::String,
                                  ?max_results: ::Integer,
                                  ?source_ref_contains: ::String
                                ) -> _ListDatasetEntriesResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListDatasetEntriesResponseSuccess

      interface _ListModelPackagingJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelPackagingJobsResponse]
        def model_packaging_jobs: () -> ::Array[Types::ModelPackagingJobMetadata]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#list_model_packaging_jobs-instance_method
      def list_model_packaging_jobs: (
                                       project_name: ::String,
                                       ?next_token: ::String,
                                       ?max_results: ::Integer
                                     ) -> _ListModelPackagingJobsResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelPackagingJobsResponseSuccess

      interface _ListModelsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelsResponse]
        def models: () -> ::Array[Types::ModelMetadata]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#list_models-instance_method
      def list_models: (
                         project_name: ::String,
                         ?next_token: ::String,
                         ?max_results: ::Integer
                       ) -> _ListModelsResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelsResponseSuccess

      interface _ListProjectsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListProjectsResponse]
        def projects: () -> ::Array[Types::ProjectMetadata]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#list_projects-instance_method
      def list_projects: (
                           ?next_token: ::String,
                           ?max_results: ::Integer
                         ) -> _ListProjectsResponseSuccess
                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListProjectsResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Array[Types::Tag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _StartModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartModelResponse]
        def status: () -> ("STARTING_HOSTING" | "HOSTED" | "HOSTING_FAILED" | "STOPPING_HOSTING" | "SYSTEM_UPDATING")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#start_model-instance_method
      def start_model: (
                         project_name: ::String,
                         model_version: ::String,
                         min_inference_units: ::Integer,
                         ?client_token: ::String,
                         ?max_inference_units: ::Integer
                       ) -> _StartModelResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartModelResponseSuccess

      interface _StartModelPackagingJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartModelPackagingJobResponse]
        def job_name: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#start_model_packaging_job-instance_method
      def start_model_packaging_job: (
                                       project_name: ::String,
                                       model_version: ::String,
                                       ?job_name: ::String,
                                       configuration: {
                                         greengrass: {
                                           compiler_options: ::String?,
                                           target_device: ("jetson_xavier")?,
                                           target_platform: {
                                             os: ("LINUX"),
                                             arch: ("ARM64" | "X86_64"),
                                             accelerator: ("NVIDIA")?
                                           }?,
                                           s3_output_location: {
                                             bucket: ::String,
                                             prefix: ::String?
                                           },
                                           component_name: ::String,
                                           component_version: ::String?,
                                           component_description: ::String?,
                                           tags: Array[
                                             {
                                               key: ::String,
                                               value: ::String
                                             },
                                           ]?
                                         }
                                       },
                                       ?description: ::String,
                                       ?client_token: ::String
                                     ) -> _StartModelPackagingJobResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartModelPackagingJobResponseSuccess

      interface _StopModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StopModelResponse]
        def status: () -> ("STARTING_HOSTING" | "HOSTED" | "HOSTING_FAILED" | "STOPPING_HOSTING" | "SYSTEM_UPDATING")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#stop_model-instance_method
      def stop_model: (
                        project_name: ::String,
                        model_version: ::String,
                        ?client_token: ::String
                      ) -> _StopModelResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StopModelResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      interface _UpdateDatasetEntriesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateDatasetEntriesResponse]
        def status: () -> ("CREATE_IN_PROGRESS" | "CREATE_COMPLETE" | "CREATE_FAILED" | "UPDATE_IN_PROGRESS" | "UPDATE_COMPLETE" | "UPDATE_FAILED_ROLLBACK_IN_PROGRESS" | "UPDATE_FAILED_ROLLBACK_COMPLETE" | "DELETE_IN_PROGRESS" | "DELETE_COMPLETE" | "DELETE_FAILED")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutforVision/Client.html#update_dataset_entries-instance_method
      def update_dataset_entries: (
                                    project_name: ::String,
                                    dataset_type: ::String,
                                    changes: ::String,
                                    ?client_token: ::String
                                  ) -> _UpdateDatasetEntriesResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateDatasetEntriesResponseSuccess
    end
  end
end

