# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module RDSDataService
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RDSDataService/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _BatchExecuteStatementResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchExecuteStatementResponse]
        def update_results: () -> ::Array[Types::UpdateResult]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RDSDataService/Client.html#batch_execute_statement-instance_method
      def batch_execute_statement: (
                                     resource_arn: ::String,
                                     secret_arn: ::String,
                                     sql: ::String,
                                     ?database: ::String,
                                     ?schema: ::String,
                                     ?parameter_sets: Array[
                                       Array[
                                         {
                                           name: ::String?,
                                           value: {
                                             is_null: bool?,
                                             boolean_value: bool?,
                                             long_value: ::Integer?,
                                             double_value: ::Float?,
                                             string_value: ::String?,
                                             blob_value: ::String?,
                                             array_value: {
                                               boolean_values: Array[bool]?,
                                               long_values: Array[::Integer]?,
                                               double_values: Array[::Float]?,
                                               string_values: Array[::String]?,
                                               array_values: Array[
                                                 untyped,
                                               ]?
                                             }?
                                           }?,
                                           type_hint: ("JSON" | "UUID" | "TIMESTAMP" | "DATE" | "TIME" | "DECIMAL")?
                                         },
                                       ],
                                     ],
                                     ?transaction_id: ::String
                                   ) -> _BatchExecuteStatementResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchExecuteStatementResponseSuccess

      interface _BeginTransactionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BeginTransactionResponse]
        def transaction_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RDSDataService/Client.html#begin_transaction-instance_method
      def begin_transaction: (
                               resource_arn: ::String,
                               secret_arn: ::String,
                               ?database: ::String,
                               ?schema: ::String
                             ) -> _BeginTransactionResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BeginTransactionResponseSuccess

      interface _CommitTransactionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CommitTransactionResponse]
        def transaction_status: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RDSDataService/Client.html#commit_transaction-instance_method
      def commit_transaction: (
                                resource_arn: ::String,
                                secret_arn: ::String,
                                transaction_id: ::String
                              ) -> _CommitTransactionResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CommitTransactionResponseSuccess

      interface _ExecuteSqlResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ExecuteSqlResponse]
        def sql_statement_results: () -> ::Array[Types::SqlStatementResult]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RDSDataService/Client.html#execute_sql-instance_method
      def execute_sql: (
                         db_cluster_or_instance_arn: ::String,
                         aws_secret_store_arn: ::String,
                         sql_statements: ::String,
                         ?database: ::String,
                         ?schema: ::String
                       ) -> _ExecuteSqlResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ExecuteSqlResponseSuccess

      interface _ExecuteStatementResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ExecuteStatementResponse]
        def records: () -> ::Array[::Array[Types::Field]]
        def column_metadata: () -> ::Array[Types::ColumnMetadata]
        def number_of_records_updated: () -> ::Integer
        def generated_fields: () -> ::Array[Types::Field]
        def formatted_records: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RDSDataService/Client.html#execute_statement-instance_method
      def execute_statement: (
                               resource_arn: ::String,
                               secret_arn: ::String,
                               sql: ::String,
                               ?database: ::String,
                               ?schema: ::String,
                               ?parameters: Array[
                                 {
                                   name: ::String?,
                                   value: {
                                     is_null: bool?,
                                     boolean_value: bool?,
                                     long_value: ::Integer?,
                                     double_value: ::Float?,
                                     string_value: ::String?,
                                     blob_value: ::String?,
                                     array_value: {
                                       boolean_values: Array[bool]?,
                                       long_values: Array[::Integer]?,
                                       double_values: Array[::Float]?,
                                       string_values: Array[::String]?,
                                       array_values: Array[
                                         untyped,
                                       ]?
                                     }?
                                   }?,
                                   type_hint: ("JSON" | "UUID" | "TIMESTAMP" | "DATE" | "TIME" | "DECIMAL")?
                                 },
                               ],
                               ?transaction_id: ::String,
                               ?include_result_metadata: bool,
                               ?continue_after_timeout: bool,
                               ?result_set_options: {
                                 decimal_return_type: ("STRING" | "DOUBLE_OR_LONG")?,
                                 long_return_type: ("STRING" | "LONG")?
                               },
                               ?format_records_as: ("NONE" | "JSON")
                             ) -> _ExecuteStatementResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ExecuteStatementResponseSuccess

      interface _RollbackTransactionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::RollbackTransactionResponse]
        def transaction_status: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RDSDataService/Client.html#rollback_transaction-instance_method
      def rollback_transaction: (
                                  resource_arn: ::String,
                                  secret_arn: ::String,
                                  transaction_id: ::String
                                ) -> _RollbackTransactionResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _RollbackTransactionResponseSuccess
    end
  end
end

