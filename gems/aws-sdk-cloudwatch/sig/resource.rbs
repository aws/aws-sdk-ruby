# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module CloudWatch
    # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudWatch/Resource.html
    class Resource
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudWatch/Resource.html#initialize-instance_method
      def initialize: (
                        ?client: Client,
                        ?credentials: untyped,
                        ?region: String,
                        ?access_key_id: String,
                        ?active_endpoint_cache: bool,
                        ?adaptive_retry_wait_to_fill: bool,
                        ?client_side_monitoring: bool,
                        ?client_side_monitoring_client_id: String,
                        ?client_side_monitoring_host: String,
                        ?client_side_monitoring_port: Integer,
                        ?client_side_monitoring_publisher: untyped,
                        ?convert_params: bool,
                        ?correct_clock_skew: bool,
                        ?defaults_mode: String,
                        ?disable_host_prefix_injection: bool,
                        ?disable_request_compression: bool,
                        ?endpoint: String,
                        ?endpoint_cache_max_entries: Integer,
                        ?endpoint_cache_max_threads: Integer,
                        ?endpoint_cache_poll_interval: Integer,
                        ?endpoint_discovery: bool,
                        ?ignore_configured_endpoint_urls: bool,
                        ?log_formatter: untyped,
                        ?log_level: Symbol,
                        ?logger: untyped,
                        ?max_attempts: Integer,
                        ?profile: String,
                        ?request_min_compression_size_bytes: Integer,
                        ?retry_backoff: Proc,
                        ?retry_base_delay: Float,
                        ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                        ?retry_limit: Integer,
                        ?retry_max_delay: Integer,
                        ?retry_mode: ("legacy" | "standard" | "adaptive"),
                        ?sdk_ua_app_id: String,
                        ?secret_access_key: String,
                        ?session_token: String,
                        ?stub_responses: untyped,
                        ?token_provider: untyped,
                        ?use_dualstack_endpoint: bool,
                        ?use_fips_endpoint: bool,
                        ?validate_params: bool,
                        ?endpoint_provider: untyped,
                        ?http_proxy: String,
                        ?http_open_timeout: (Float | Integer),
                        ?http_read_timeout: (Float | Integer),
                        ?http_idle_timeout: (Float | Integer),
                        ?http_continue_timeout: (Float | Integer),
                        ?ssl_timeout: (Float | Integer | nil),
                        ?http_wire_trace: bool,
                        ?ssl_verify_peer: bool,
                        ?ssl_ca_bundle: String,
                        ?ssl_ca_directory: String,
                        ?ssl_ca_store: String,
                        ?on_chunk_received: Proc,
                        ?on_chunk_sent: Proc,
                        ?raise_response_errors: bool
                      ) -> void
                    | (?Hash[Symbol, untyped]) -> void

      def client: () -> Client



      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudWatch/Resource.html#alarm-instance_method
      def alarm: (String name) -> Alarm

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudWatch/Resource.html#alarms-instance_method
      def alarms: (
                    ?alarm_names: Array[::String],
                    ?alarm_name_prefix: ::String,
                    ?alarm_types: Array[("CompositeAlarm" | "MetricAlarm")],
                    ?children_of_alarm_name: ::String,
                    ?parents_of_alarm_name: ::String,
                    ?state_value: ("OK" | "ALARM" | "INSUFFICIENT_DATA"),
                    ?action_prefix: ::String
                  ) -> Alarm::Collection
                | (?Hash[Symbol, untyped]) -> Alarm::Collection

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudWatch/Resource.html#composite_alarm-instance_method
      def composite_alarm: (String name) -> CompositeAlarm

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudWatch/Resource.html#composite_alarms-instance_method
      def composite_alarms: (
                              ?alarm_names: Array[::String],
                              ?alarm_name_prefix: ::String,
                              ?alarm_types: Array[("CompositeAlarm" | "MetricAlarm")],
                              ?children_of_alarm_name: ::String,
                              ?parents_of_alarm_name: ::String,
                              ?state_value: ("OK" | "ALARM" | "INSUFFICIENT_DATA"),
                              ?action_prefix: ::String
                            ) -> CompositeAlarm::Collection
                          | (?Hash[Symbol, untyped]) -> CompositeAlarm::Collection

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudWatch/Resource.html#metric-instance_method
      def metric: (String namespace, String name) -> Metric

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudWatch/Resource.html#metrics-instance_method
      def metrics: (
                     ?namespace: ::String,
                     ?metric_name: ::String,
                     ?dimensions: Array[
                       {
                         name: ::String,
                         value: ::String?
                       },
                     ],
                     ?recently_active: ("PT3H"),
                     ?include_linked_accounts: bool,
                     ?owning_account: ::String
                   ) -> Metric::Collection
                 | (?Hash[Symbol, untyped]) -> Metric::Collection
    end
  end
end
