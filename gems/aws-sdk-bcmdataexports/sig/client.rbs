# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module BCMDataExports
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?simple_json: bool,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _CreateExportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateExportResponse]
        def export_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#create_export-instance_method
      def create_export: (
                           export: {
                             data_query: {
                               query_statement: ::String,
                               table_configurations: Hash[::String, Hash[::String, ::String]]?
                             },
                             description: ::String?,
                             destination_configurations: {
                               s3_destination: {
                                 s3_bucket: ::String,
                                 s3_output_configurations: {
                                   compression: ("GZIP" | "PARQUET"),
                                   format: ("TEXT_OR_CSV" | "PARQUET"),
                                   output_type: ("CUSTOM"),
                                   overwrite: ("CREATE_NEW_REPORT" | "OVERWRITE_REPORT")
                                 },
                                 s3_prefix: ::String,
                                 s3_region: ::String
                               }
                             },
                             export_arn: ::String?,
                             name: ::String,
                             refresh_cadence: {
                               frequency: ("SYNCHRONOUS")
                             }
                           },
                           ?resource_tags: Array[
                             {
                               key: ::String,
                               value: ::String
                             },
                           ]
                         ) -> _CreateExportResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateExportResponseSuccess

      interface _DeleteExportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteExportResponse]
        def export_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#delete_export-instance_method
      def delete_export: (
                           export_arn: ::String
                         ) -> _DeleteExportResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteExportResponseSuccess

      interface _GetExecutionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetExecutionResponse]
        def execution_id: () -> ::String
        def execution_status: () -> Types::ExecutionStatus
        def export: () -> Types::Export
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#get_execution-instance_method
      def get_execution: (
                           execution_id: ::String,
                           export_arn: ::String
                         ) -> _GetExecutionResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetExecutionResponseSuccess

      interface _GetExportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetExportResponse]
        def export: () -> Types::Export
        def export_status: () -> Types::ExportStatus
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#get_export-instance_method
      def get_export: (
                        export_arn: ::String
                      ) -> _GetExportResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetExportResponseSuccess

      interface _GetTableResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetTableResponse]
        def description: () -> ::String
        def schema: () -> ::Array[Types::Column]
        def table_name: () -> ::String
        def table_properties: () -> ::Hash[::String, ::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#get_table-instance_method
      def get_table: (
                       table_name: ::String,
                       ?table_properties: Hash[::String, ::String]
                     ) -> _GetTableResponseSuccess
                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetTableResponseSuccess

      interface _ListExecutionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListExecutionsResponse]
        def executions: () -> ::Array[Types::ExecutionReference]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#list_executions-instance_method
      def list_executions: (
                             export_arn: ::String,
                             ?max_results: ::Integer,
                             ?next_token: ::String
                           ) -> _ListExecutionsResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListExecutionsResponseSuccess

      interface _ListExportsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListExportsResponse]
        def exports: () -> ::Array[Types::ExportReference]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#list_exports-instance_method
      def list_exports: (
                          ?max_results: ::Integer,
                          ?next_token: ::String
                        ) -> _ListExportsResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListExportsResponseSuccess

      interface _ListTablesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTablesResponse]
        def next_token: () -> ::String
        def tables: () -> ::Array[Types::Table]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#list_tables-instance_method
      def list_tables: (
                         ?max_results: ::Integer,
                         ?next_token: ::String
                       ) -> _ListTablesResponseSuccess
                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTablesResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def next_token: () -> ::String
        def resource_tags: () -> ::Array[Types::ResourceTag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    ?max_results: ::Integer,
                                    ?next_token: ::String,
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          resource_tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            resource_tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      interface _UpdateExportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateExportResponse]
        def export_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BCMDataExports/Client.html#update_export-instance_method
      def update_export: (
                           export: {
                             data_query: {
                               query_statement: ::String,
                               table_configurations: Hash[::String, Hash[::String, ::String]]?
                             },
                             description: ::String?,
                             destination_configurations: {
                               s3_destination: {
                                 s3_bucket: ::String,
                                 s3_output_configurations: {
                                   compression: ("GZIP" | "PARQUET"),
                                   format: ("TEXT_OR_CSV" | "PARQUET"),
                                   output_type: ("CUSTOM"),
                                   overwrite: ("CREATE_NEW_REPORT" | "OVERWRITE_REPORT")
                                 },
                                 s3_prefix: ::String,
                                 s3_region: ::String
                               }
                             },
                             export_arn: ::String?,
                             name: ::String,
                             refresh_cadence: {
                               frequency: ("SYNCHRONOUS")
                             }
                           },
                           export_arn: ::String
                         ) -> _UpdateExportResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateExportResponseSuccess
    end
  end
end

