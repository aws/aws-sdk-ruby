# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module SNS
    # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html
    class Resource
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html#initialize-instance_method
      def initialize: (
                        ?client: Client,
                        ?credentials: untyped,
                        ?region: String,
                        ?access_key_id: String,
                        ?active_endpoint_cache: bool,
                        ?adaptive_retry_wait_to_fill: bool,
                        ?client_side_monitoring: bool,
                        ?client_side_monitoring_client_id: String,
                        ?client_side_monitoring_host: String,
                        ?client_side_monitoring_port: Integer,
                        ?client_side_monitoring_publisher: untyped,
                        ?convert_params: bool,
                        ?correct_clock_skew: bool,
                        ?defaults_mode: String,
                        ?disable_host_prefix_injection: bool,
                        ?disable_request_compression: bool,
                        ?endpoint: String,
                        ?endpoint_cache_max_entries: Integer,
                        ?endpoint_cache_max_threads: Integer,
                        ?endpoint_cache_poll_interval: Integer,
                        ?endpoint_discovery: bool,
                        ?ignore_configured_endpoint_urls: bool,
                        ?log_formatter: untyped,
                        ?log_level: Symbol,
                        ?logger: untyped,
                        ?max_attempts: Integer,
                        ?profile: String,
                        ?request_min_compression_size_bytes: Integer,
                        ?retry_backoff: Proc,
                        ?retry_base_delay: Float,
                        ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                        ?retry_limit: Integer,
                        ?retry_max_delay: Integer,
                        ?retry_mode: ("legacy" | "standard" | "adaptive"),
                        ?sdk_ua_app_id: String,
                        ?secret_access_key: String,
                        ?session_token: String,
                        ?stub_responses: untyped,
                        ?token_provider: untyped,
                        ?use_dualstack_endpoint: bool,
                        ?use_fips_endpoint: bool,
                        ?validate_params: bool,
                        ?endpoint_provider: untyped,
                        ?http_proxy: String,
                        ?http_open_timeout: (Float | Integer),
                        ?http_read_timeout: (Float | Integer),
                        ?http_idle_timeout: (Float | Integer),
                        ?http_continue_timeout: (Float | Integer),
                        ?ssl_timeout: (Float | Integer | nil),
                        ?http_wire_trace: bool,
                        ?ssl_verify_peer: bool,
                        ?ssl_ca_bundle: String,
                        ?ssl_ca_directory: String,
                        ?ssl_ca_store: String,
                        ?on_chunk_received: Proc,
                        ?on_chunk_sent: Proc,
                        ?raise_response_errors: bool
                      ) -> void
                    | (?Hash[Symbol, untyped]) -> void

      def client: () -> Client


      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html#create_platform_application-instance_method
      def create_platform_application: (
                                         name: ::String,
                                         platform: ::String,
                                         attributes: Hash[::String, ::String]
                                       ) -> PlatformApplication
                                     | (?Hash[Symbol, untyped]) -> PlatformApplication

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html#create_topic-instance_method
      def create_topic: (
                          name: ::String,
                          ?attributes: Hash[::String, ::String],
                          ?tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ],
                          ?data_protection_policy: ::String
                        ) -> Topic
                      | (?Hash[Symbol, untyped]) -> Topic


      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html#platform_application-instance_method
      def platform_application: (String arn) -> PlatformApplication

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html#platform_applications-instance_method
      def platform_applications: (
                                 ) -> PlatformApplication::Collection
                               | (?Hash[Symbol, untyped]) -> PlatformApplication::Collection

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html#platform_endpoint-instance_method
      def platform_endpoint: (String arn) -> PlatformEndpoint

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html#subscription-instance_method
      def subscription: (String arn) -> Subscription

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html#subscriptions-instance_method
      def subscriptions: (
                         ) -> Subscription::Collection
                       | (?Hash[Symbol, untyped]) -> Subscription::Collection

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html#topic-instance_method
      def topic: (String arn) -> Topic

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SNS/Resource.html#topics-instance_method
      def topics: (
                  ) -> Topic::Collection
                | (?Hash[Symbol, untyped]) -> Topic::Collection
    end
  end
end
