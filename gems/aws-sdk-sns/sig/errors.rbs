# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module SNS
    module Errors
      class ServiceError < ::Aws::Errors::ServiceError
      end

      class AuthorizationErrorException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class BatchEntryIdsNotDistinctException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class BatchRequestTooLongException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class ConcurrentAccessException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class EmptyBatchRequestException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class EndpointDisabledException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class FilterPolicyLimitExceededException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InternalErrorException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidBatchEntryIdException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidParameterException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidParameterValueException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidSecurityException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class InvalidStateException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class KMSAccessDeniedException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class KMSDisabledException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class KMSInvalidStateException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class KMSNotFoundException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class KMSOptInRequired < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class KMSThrottlingException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class NotFoundException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class OptedOutException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class PlatformApplicationDisabledException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class ReplayLimitExceededException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class ResourceNotFoundException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class StaleTagException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class SubscriptionLimitExceededException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class TagLimitExceededException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class TagPolicyException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class ThrottledException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class TooManyEntriesInBatchRequestException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class TopicLimitExceededException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class UserErrorException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class ValidationException < ::Aws::Errors::ServiceError
        def message: () -> ::String
      end
      class VerificationException < ::Aws::Errors::ServiceError
        def message: () -> ::String
        def status: () -> ::String
      end
    end
  end
end
