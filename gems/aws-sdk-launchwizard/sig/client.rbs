# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module LaunchWizard
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LaunchWizard/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _CreateDeploymentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateDeploymentOutput]
        def deployment_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LaunchWizard/Client.html#create_deployment-instance_method
      def create_deployment: (
                               deployment_pattern_name: ::String,
                               ?dry_run: bool,
                               name: ::String,
                               specifications: Hash[::String, ::String],
                               workload_name: ::String
                             ) -> _CreateDeploymentResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateDeploymentResponseSuccess

      interface _DeleteDeploymentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteDeploymentOutput]
        def status: () -> ("COMPLETED" | "CREATING" | "DELETE_IN_PROGRESS" | "DELETE_INITIATING" | "DELETE_FAILED" | "DELETED" | "FAILED" | "IN_PROGRESS" | "VALIDATING")
        def status_reason: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LaunchWizard/Client.html#delete_deployment-instance_method
      def delete_deployment: (
                               deployment_id: ::String
                             ) -> _DeleteDeploymentResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteDeploymentResponseSuccess

      interface _GetDeploymentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetDeploymentOutput]
        def deployment: () -> Types::DeploymentData
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LaunchWizard/Client.html#get_deployment-instance_method
      def get_deployment: (
                            deployment_id: ::String
                          ) -> _GetDeploymentResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetDeploymentResponseSuccess

      interface _GetWorkloadResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetWorkloadOutput]
        def workload: () -> Types::WorkloadData
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LaunchWizard/Client.html#get_workload-instance_method
      def get_workload: (
                          workload_name: ::String
                        ) -> _GetWorkloadResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetWorkloadResponseSuccess

      interface _ListDeploymentEventsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListDeploymentEventsOutput]
        def deployment_events: () -> ::Array[Types::DeploymentEventDataSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LaunchWizard/Client.html#list_deployment_events-instance_method
      def list_deployment_events: (
                                    deployment_id: ::String,
                                    ?max_results: ::Integer,
                                    ?next_token: ::String
                                  ) -> _ListDeploymentEventsResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListDeploymentEventsResponseSuccess

      interface _ListDeploymentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListDeploymentsOutput]
        def deployments: () -> ::Array[Types::DeploymentDataSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LaunchWizard/Client.html#list_deployments-instance_method
      def list_deployments: (
                              ?filters: Array[
                                {
                                  name: ("WORKLOAD_NAME" | "DEPLOYMENT_STATUS")?,
                                  values: Array[::String]?
                                },
                              ],
                              ?max_results: ::Integer,
                              ?next_token: ::String
                            ) -> _ListDeploymentsResponseSuccess
                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListDeploymentsResponseSuccess

      interface _ListWorkloadDeploymentPatternsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListWorkloadDeploymentPatternsOutput]
        def next_token: () -> ::String
        def workload_deployment_patterns: () -> ::Array[Types::WorkloadDeploymentPatternDataSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LaunchWizard/Client.html#list_workload_deployment_patterns-instance_method
      def list_workload_deployment_patterns: (
                                               ?max_results: ::Integer,
                                               ?next_token: ::String,
                                               workload_name: ::String
                                             ) -> _ListWorkloadDeploymentPatternsResponseSuccess
                                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListWorkloadDeploymentPatternsResponseSuccess

      interface _ListWorkloadsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListWorkloadsOutput]
        def next_token: () -> ::String
        def workloads: () -> ::Array[Types::WorkloadDataSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LaunchWizard/Client.html#list_workloads-instance_method
      def list_workloads: (
                            ?max_results: ::Integer,
                            ?next_token: ::String
                          ) -> _ListWorkloadsResponseSuccess
                        | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListWorkloadsResponseSuccess
    end
  end
end

