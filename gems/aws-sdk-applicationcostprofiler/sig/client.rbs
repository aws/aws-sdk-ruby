# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module ApplicationCostProfiler
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ApplicationCostProfiler/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _DeleteReportDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteReportDefinitionResult]
        def report_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ApplicationCostProfiler/Client.html#delete_report_definition-instance_method
      def delete_report_definition: (
                                      report_id: ::String
                                    ) -> _DeleteReportDefinitionResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteReportDefinitionResponseSuccess

      interface _GetReportDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetReportDefinitionResult]
        def report_id: () -> ::String
        def report_description: () -> ::String
        def report_frequency: () -> ("MONTHLY" | "DAILY" | "ALL")
        def format: () -> ("CSV" | "PARQUET")
        def destination_s3_location: () -> Types::S3Location
        def created_at: () -> ::Time
        def last_updated: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ApplicationCostProfiler/Client.html#get_report_definition-instance_method
      def get_report_definition: (
                                   report_id: ::String
                                 ) -> _GetReportDefinitionResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetReportDefinitionResponseSuccess

      interface _ImportApplicationUsageResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ImportApplicationUsageResult]
        def import_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ApplicationCostProfiler/Client.html#import_application_usage-instance_method
      def import_application_usage: (
                                      source_s3_location: {
                                        bucket: ::String,
                                        key: ::String,
                                        region: ("ap-east-1" | "me-south-1" | "eu-south-1" | "af-south-1")?
                                      }
                                    ) -> _ImportApplicationUsageResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ImportApplicationUsageResponseSuccess

      interface _ListReportDefinitionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListReportDefinitionsResult]
        def report_definitions: () -> ::Array[Types::ReportDefinition]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ApplicationCostProfiler/Client.html#list_report_definitions-instance_method
      def list_report_definitions: (
                                     ?next_token: ::String,
                                     ?max_results: ::Integer
                                   ) -> _ListReportDefinitionsResponseSuccess
                                 | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListReportDefinitionsResponseSuccess

      interface _PutReportDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutReportDefinitionResult]
        def report_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ApplicationCostProfiler/Client.html#put_report_definition-instance_method
      def put_report_definition: (
                                   report_id: ::String,
                                   report_description: ::String,
                                   report_frequency: ("MONTHLY" | "DAILY" | "ALL"),
                                   format: ("CSV" | "PARQUET"),
                                   destination_s3_location: {
                                     bucket: ::String,
                                     prefix: ::String
                                   }
                                 ) -> _PutReportDefinitionResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutReportDefinitionResponseSuccess

      interface _UpdateReportDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateReportDefinitionResult]
        def report_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ApplicationCostProfiler/Client.html#update_report_definition-instance_method
      def update_report_definition: (
                                      report_id: ::String,
                                      report_description: ::String,
                                      report_frequency: ("MONTHLY" | "DAILY" | "ALL"),
                                      format: ("CSV" | "PARQUET"),
                                      destination_s3_location: {
                                        bucket: ::String,
                                        prefix: ::String
                                      }
                                    ) -> _UpdateReportDefinitionResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateReportDefinitionResponseSuccess
    end
  end
end

