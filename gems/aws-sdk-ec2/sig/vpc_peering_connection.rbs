# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module EC2
    # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html
    class VpcPeeringConnection
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#initialize-instance_method
      def initialize: (String id, Hash[Symbol, untyped] options) -> void
                    | (id: String, ?client: Client) -> void
                    | (Hash[Symbol, untyped] args) -> void

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#id-instance_method
      def id: () -> String
      alias vpc_peering_connection_id id

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#accepter_vpc_info-instance_method
      def accepter_vpc_info: () -> Types::VpcPeeringConnectionVpcInfo

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#expiration_time-instance_method
      def expiration_time: () -> ::Time

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#requester_vpc_info-instance_method
      def requester_vpc_info: () -> Types::VpcPeeringConnectionVpcInfo

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#status-instance_method
      def status: () -> Types::VpcPeeringConnectionStateReason

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#tags-instance_method
      def tags: () -> ::Array[Types::Tag]

      def client: () -> Client

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#load-instance_method
      def load: () -> self
      alias reload load

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#data-instance_method
      def data: () -> Types::VpcPeeringConnection

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#data_loaded?-instance_method
      def data_loaded?: () -> bool

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#exists?-instance_method
      def exists?: (?max_attempts: Integer, ?delay: Numeric, ?before_attempt: (^(Integer attempts) -> void), ?before_wait: (^(Integer attempts, untyped response) -> void)) -> bool
                 | (?Hash[Symbol, untyped]) -> bool

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#wait_until_exists-instance_method
      def wait_until_exists: (?max_attempts: Integer, ?delay: Numeric, ?before_attempt: (^(Integer attempts) -> void), ?before_wait: (^(Integer attempts, untyped response) -> void)) ?{ (untyped waiter) -> void } -> VpcPeeringConnection
                           | (?Hash[Symbol, untyped]) ?{ (untyped waiter) -> void } -> VpcPeeringConnection

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#accept-instance_method
      def accept: (
                    ?dry_run: bool
                  ) -> Types::AcceptVpcPeeringConnectionResult
                | (?Hash[Symbol, untyped]) -> Types::AcceptVpcPeeringConnectionResult

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#delete-instance_method
      def delete: (
                    ?dry_run: bool
                  ) -> Types::DeleteVpcPeeringConnectionResult
                | (?Hash[Symbol, untyped]) -> Types::DeleteVpcPeeringConnectionResult

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#reject-instance_method
      def reject: (
                    ?dry_run: bool
                  ) -> Types::RejectVpcPeeringConnectionResult
                | (?Hash[Symbol, untyped]) -> Types::RejectVpcPeeringConnectionResult

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#accepter_vpc-instance_method
      def accepter_vpc: () -> Vpc?

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/EC2/VpcPeeringConnection.html#requester_vpc-instance_method
      def requester_vpc: () -> Vpc?

      class Collection < ::Aws::Resources::Collection[VpcPeeringConnection]
      end
    end
  end
end
