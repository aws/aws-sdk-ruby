# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module SMS
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?simple_json: bool,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _CreateAppResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateAppResponse]
        def app_summary: () -> Types::AppSummary
        def server_groups: () -> ::Array[Types::ServerGroup]
        def tags: () -> ::Array[Types::Tag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#create_app-instance_method
      def create_app: (
                        ?name: ::String,
                        ?description: ::String,
                        ?role_name: ::String,
                        ?client_token: ::String,
                        ?server_groups: Array[
                          {
                            server_group_id: ::String?,
                            name: ::String?,
                            server_list: Array[
                              {
                                server_id: ::String?,
                                server_type: ("VIRTUAL_MACHINE")?,
                                vm_server: {
                                  vm_server_address: {
                                    vm_manager_id: ::String?,
                                    vm_id: ::String?
                                  }?,
                                  vm_name: ::String?,
                                  vm_manager_name: ::String?,
                                  vm_manager_type: ("VSPHERE" | "SCVMM" | "HYPERV-MANAGER")?,
                                  vm_path: ::String?
                                }?,
                                replication_job_id: ::String?,
                                replication_job_terminated: bool?
                              },
                            ]?
                          },
                        ],
                        ?tags: Array[
                          {
                            key: ::String?,
                            value: ::String?
                          },
                        ]
                      ) -> _CreateAppResponseSuccess
                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateAppResponseSuccess

      interface _CreateReplicationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateReplicationJobResponse]
        def replication_job_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#create_replication_job-instance_method
      def create_replication_job: (
                                    server_id: ::String,
                                    seed_replication_time: ::Time,
                                    ?frequency: ::Integer,
                                    ?run_once: bool,
                                    ?license_type: ("AWS" | "BYOL"),
                                    ?role_name: ::String,
                                    ?description: ::String,
                                    ?number_of_recent_amis_to_keep: ::Integer,
                                    ?encrypted: bool,
                                    ?kms_key_id: ::String
                                  ) -> _CreateReplicationJobResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateReplicationJobResponseSuccess

      interface _DeleteAppResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteAppResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#delete_app-instance_method
      def delete_app: (
                        ?app_id: ::String,
                        ?force_stop_app_replication: bool,
                        ?force_terminate_app: bool
                      ) -> _DeleteAppResponseSuccess
                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteAppResponseSuccess

      interface _DeleteAppLaunchConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteAppLaunchConfigurationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#delete_app_launch_configuration-instance_method
      def delete_app_launch_configuration: (
                                             ?app_id: ::String
                                           ) -> _DeleteAppLaunchConfigurationResponseSuccess
                                         | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteAppLaunchConfigurationResponseSuccess

      interface _DeleteAppReplicationConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteAppReplicationConfigurationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#delete_app_replication_configuration-instance_method
      def delete_app_replication_configuration: (
                                                  ?app_id: ::String
                                                ) -> _DeleteAppReplicationConfigurationResponseSuccess
                                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteAppReplicationConfigurationResponseSuccess

      interface _DeleteAppValidationConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteAppValidationConfigurationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#delete_app_validation_configuration-instance_method
      def delete_app_validation_configuration: (
                                                 app_id: ::String
                                               ) -> _DeleteAppValidationConfigurationResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteAppValidationConfigurationResponseSuccess

      interface _DeleteReplicationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteReplicationJobResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#delete_replication_job-instance_method
      def delete_replication_job: (
                                    replication_job_id: ::String
                                  ) -> _DeleteReplicationJobResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteReplicationJobResponseSuccess

      interface _DeleteServerCatalogResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteServerCatalogResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#delete_server_catalog-instance_method
      def delete_server_catalog: (
                                 ) -> _DeleteServerCatalogResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteServerCatalogResponseSuccess

      interface _DisassociateConnectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateConnectorResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#disassociate_connector-instance_method
      def disassociate_connector: (
                                    connector_id: ::String
                                  ) -> _DisassociateConnectorResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateConnectorResponseSuccess

      interface _GenerateChangeSetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GenerateChangeSetResponse]
        def s3_location: () -> Types::S3Location
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#generate_change_set-instance_method
      def generate_change_set: (
                                 ?app_id: ::String,
                                 ?changeset_format: ("JSON" | "YAML")
                               ) -> _GenerateChangeSetResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GenerateChangeSetResponseSuccess

      interface _GenerateTemplateResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GenerateTemplateResponse]
        def s3_location: () -> Types::S3Location
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#generate_template-instance_method
      def generate_template: (
                               ?app_id: ::String,
                               ?template_format: ("JSON" | "YAML")
                             ) -> _GenerateTemplateResponseSuccess
                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GenerateTemplateResponseSuccess

      interface _GetAppResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetAppResponse]
        def app_summary: () -> Types::AppSummary
        def server_groups: () -> ::Array[Types::ServerGroup]
        def tags: () -> ::Array[Types::Tag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#get_app-instance_method
      def get_app: (
                     ?app_id: ::String
                   ) -> _GetAppResponseSuccess
                 | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetAppResponseSuccess

      interface _GetAppLaunchConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetAppLaunchConfigurationResponse]
        def app_id: () -> ::String
        def role_name: () -> ::String
        def auto_launch: () -> bool
        def server_group_launch_configurations: () -> ::Array[Types::ServerGroupLaunchConfiguration]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#get_app_launch_configuration-instance_method
      def get_app_launch_configuration: (
                                          ?app_id: ::String
                                        ) -> _GetAppLaunchConfigurationResponseSuccess
                                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetAppLaunchConfigurationResponseSuccess

      interface _GetAppReplicationConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetAppReplicationConfigurationResponse]
        def server_group_replication_configurations: () -> ::Array[Types::ServerGroupReplicationConfiguration]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#get_app_replication_configuration-instance_method
      def get_app_replication_configuration: (
                                               ?app_id: ::String
                                             ) -> _GetAppReplicationConfigurationResponseSuccess
                                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetAppReplicationConfigurationResponseSuccess

      interface _GetAppValidationConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetAppValidationConfigurationResponse]
        def app_validation_configurations: () -> ::Array[Types::AppValidationConfiguration]
        def server_group_validation_configurations: () -> ::Array[Types::ServerGroupValidationConfiguration]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#get_app_validation_configuration-instance_method
      def get_app_validation_configuration: (
                                              app_id: ::String
                                            ) -> _GetAppValidationConfigurationResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetAppValidationConfigurationResponseSuccess

      interface _GetAppValidationOutputResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetAppValidationOutputResponse]
        def validation_output_list: () -> ::Array[Types::ValidationOutput]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#get_app_validation_output-instance_method
      def get_app_validation_output: (
                                       app_id: ::String
                                     ) -> _GetAppValidationOutputResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetAppValidationOutputResponseSuccess

      interface _GetConnectorsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetConnectorsResponse]
        def connector_list: () -> ::Array[Types::Connector]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#get_connectors-instance_method
      def get_connectors: (
                            ?next_token: ::String,
                            ?max_results: ::Integer
                          ) -> _GetConnectorsResponseSuccess
                        | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetConnectorsResponseSuccess

      interface _GetReplicationJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetReplicationJobsResponse]
        def replication_job_list: () -> ::Array[Types::ReplicationJob]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#get_replication_jobs-instance_method
      def get_replication_jobs: (
                                  ?replication_job_id: ::String,
                                  ?next_token: ::String,
                                  ?max_results: ::Integer
                                ) -> _GetReplicationJobsResponseSuccess
                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetReplicationJobsResponseSuccess

      interface _GetReplicationRunsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetReplicationRunsResponse]
        def replication_job: () -> Types::ReplicationJob
        def replication_run_list: () -> ::Array[Types::ReplicationRun]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#get_replication_runs-instance_method
      def get_replication_runs: (
                                  replication_job_id: ::String,
                                  ?next_token: ::String,
                                  ?max_results: ::Integer
                                ) -> _GetReplicationRunsResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetReplicationRunsResponseSuccess

      interface _GetServersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetServersResponse]
        def last_modified_on: () -> ::Time
        def server_catalog_status: () -> ("NOT_IMPORTED" | "IMPORTING" | "AVAILABLE" | "DELETED" | "EXPIRED")
        def server_list: () -> ::Array[Types::Server]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#get_servers-instance_method
      def get_servers: (
                         ?next_token: ::String,
                         ?max_results: ::Integer,
                         ?vm_server_address_list: Array[
                           {
                             vm_manager_id: ::String?,
                             vm_id: ::String?
                           },
                         ]
                       ) -> _GetServersResponseSuccess
                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetServersResponseSuccess

      interface _ImportAppCatalogResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ImportAppCatalogResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#import_app_catalog-instance_method
      def import_app_catalog: (
                                ?role_name: ::String
                              ) -> _ImportAppCatalogResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ImportAppCatalogResponseSuccess

      interface _ImportServerCatalogResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ImportServerCatalogResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#import_server_catalog-instance_method
      def import_server_catalog: (
                                 ) -> _ImportServerCatalogResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ImportServerCatalogResponseSuccess

      interface _LaunchAppResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::LaunchAppResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#launch_app-instance_method
      def launch_app: (
                        ?app_id: ::String
                      ) -> _LaunchAppResponseSuccess
                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _LaunchAppResponseSuccess

      interface _ListAppsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAppsResponse]
        def apps: () -> ::Array[Types::AppSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#list_apps-instance_method
      def list_apps: (
                       ?app_ids: Array[::String],
                       ?next_token: ::String,
                       ?max_results: ::Integer
                     ) -> _ListAppsResponseSuccess
                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAppsResponseSuccess

      interface _NotifyAppValidationOutputResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::NotifyAppValidationOutputResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#notify_app_validation_output-instance_method
      def notify_app_validation_output: (
                                          app_id: ::String,
                                          ?notification_context: {
                                            validation_id: ::String?,
                                            status: ("READY_FOR_VALIDATION" | "PENDING" | "IN_PROGRESS" | "SUCCEEDED" | "FAILED")?,
                                            status_message: ::String?
                                          }
                                        ) -> _NotifyAppValidationOutputResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _NotifyAppValidationOutputResponseSuccess

      interface _PutAppLaunchConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutAppLaunchConfigurationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#put_app_launch_configuration-instance_method
      def put_app_launch_configuration: (
                                          ?app_id: ::String,
                                          ?role_name: ::String,
                                          ?auto_launch: bool,
                                          ?server_group_launch_configurations: Array[
                                            {
                                              server_group_id: ::String?,
                                              launch_order: ::Integer?,
                                              server_launch_configurations: Array[
                                                {
                                                  server: {
                                                    server_id: ::String?,
                                                    server_type: ("VIRTUAL_MACHINE")?,
                                                    vm_server: {
                                                      vm_server_address: {
                                                        vm_manager_id: ::String?,
                                                        vm_id: ::String?
                                                      }?,
                                                      vm_name: ::String?,
                                                      vm_manager_name: ::String?,
                                                      vm_manager_type: ("VSPHERE" | "SCVMM" | "HYPERV-MANAGER")?,
                                                      vm_path: ::String?
                                                    }?,
                                                    replication_job_id: ::String?,
                                                    replication_job_terminated: bool?
                                                  }?,
                                                  logical_id: ::String?,
                                                  vpc: ::String?,
                                                  subnet: ::String?,
                                                  security_group: ::String?,
                                                  ec2_key_name: ::String?,
                                                  user_data: {
                                                    s3_location: {
                                                      bucket: ::String?,
                                                      key: ::String?
                                                    }?
                                                  }?,
                                                  instance_type: ::String?,
                                                  associate_public_ip_address: bool?,
                                                  iam_instance_profile_name: ::String?,
                                                  configure_script: {
                                                    bucket: ::String?,
                                                    key: ::String?
                                                  }?,
                                                  configure_script_type: ("SHELL_SCRIPT" | "POWERSHELL_SCRIPT")?
                                                },
                                              ]?
                                            },
                                          ]
                                        ) -> _PutAppLaunchConfigurationResponseSuccess
                                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutAppLaunchConfigurationResponseSuccess

      interface _PutAppReplicationConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutAppReplicationConfigurationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#put_app_replication_configuration-instance_method
      def put_app_replication_configuration: (
                                               ?app_id: ::String,
                                               ?server_group_replication_configurations: Array[
                                                 {
                                                   server_group_id: ::String?,
                                                   server_replication_configurations: Array[
                                                     {
                                                       server: {
                                                         server_id: ::String?,
                                                         server_type: ("VIRTUAL_MACHINE")?,
                                                         vm_server: {
                                                           vm_server_address: {
                                                             vm_manager_id: ::String?,
                                                             vm_id: ::String?
                                                           }?,
                                                           vm_name: ::String?,
                                                           vm_manager_name: ::String?,
                                                           vm_manager_type: ("VSPHERE" | "SCVMM" | "HYPERV-MANAGER")?,
                                                           vm_path: ::String?
                                                         }?,
                                                         replication_job_id: ::String?,
                                                         replication_job_terminated: bool?
                                                       }?,
                                                       server_replication_parameters: {
                                                         seed_time: ::Time?,
                                                         frequency: ::Integer?,
                                                         run_once: bool?,
                                                         license_type: ("AWS" | "BYOL")?,
                                                         number_of_recent_amis_to_keep: ::Integer?,
                                                         encrypted: bool?,
                                                         kms_key_id: ::String?
                                                       }?
                                                     },
                                                   ]?
                                                 },
                                               ]
                                             ) -> _PutAppReplicationConfigurationResponseSuccess
                                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutAppReplicationConfigurationResponseSuccess

      interface _PutAppValidationConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutAppValidationConfigurationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#put_app_validation_configuration-instance_method
      def put_app_validation_configuration: (
                                              app_id: ::String,
                                              ?app_validation_configurations: Array[
                                                {
                                                  validation_id: ::String?,
                                                  name: ::String?,
                                                  app_validation_strategy: ("SSM")?,
                                                  ssm_validation_parameters: {
                                                    source: {
                                                      s3_location: {
                                                        bucket: ::String?,
                                                        key: ::String?
                                                      }?
                                                    }?,
                                                    instance_id: ::String?,
                                                    script_type: ("SHELL_SCRIPT" | "POWERSHELL_SCRIPT")?,
                                                    command: ::String?,
                                                    execution_timeout_seconds: ::Integer?,
                                                    output_s3_bucket_name: ::String?
                                                  }?
                                                },
                                              ],
                                              ?server_group_validation_configurations: Array[
                                                {
                                                  server_group_id: ::String?,
                                                  server_validation_configurations: Array[
                                                    {
                                                      server: {
                                                        server_id: ::String?,
                                                        server_type: ("VIRTUAL_MACHINE")?,
                                                        vm_server: {
                                                          vm_server_address: {
                                                            vm_manager_id: ::String?,
                                                            vm_id: ::String?
                                                          }?,
                                                          vm_name: ::String?,
                                                          vm_manager_name: ::String?,
                                                          vm_manager_type: ("VSPHERE" | "SCVMM" | "HYPERV-MANAGER")?,
                                                          vm_path: ::String?
                                                        }?,
                                                        replication_job_id: ::String?,
                                                        replication_job_terminated: bool?
                                                      }?,
                                                      validation_id: ::String?,
                                                      name: ::String?,
                                                      server_validation_strategy: ("USERDATA")?,
                                                      user_data_validation_parameters: {
                                                        source: {
                                                          s3_location: {
                                                            bucket: ::String?,
                                                            key: ::String?
                                                          }?
                                                        }?,
                                                        script_type: ("SHELL_SCRIPT" | "POWERSHELL_SCRIPT")?
                                                      }?
                                                    },
                                                  ]?
                                                },
                                              ]
                                            ) -> _PutAppValidationConfigurationResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutAppValidationConfigurationResponseSuccess

      interface _StartAppReplicationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartAppReplicationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#start_app_replication-instance_method
      def start_app_replication: (
                                   ?app_id: ::String
                                 ) -> _StartAppReplicationResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartAppReplicationResponseSuccess

      interface _StartOnDemandAppReplicationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartOnDemandAppReplicationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#start_on_demand_app_replication-instance_method
      def start_on_demand_app_replication: (
                                             app_id: ::String,
                                             ?description: ::String
                                           ) -> _StartOnDemandAppReplicationResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartOnDemandAppReplicationResponseSuccess

      interface _StartOnDemandReplicationRunResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartOnDemandReplicationRunResponse]
        def replication_run_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#start_on_demand_replication_run-instance_method
      def start_on_demand_replication_run: (
                                             replication_job_id: ::String,
                                             ?description: ::String
                                           ) -> _StartOnDemandReplicationRunResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartOnDemandReplicationRunResponseSuccess

      interface _StopAppReplicationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StopAppReplicationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#stop_app_replication-instance_method
      def stop_app_replication: (
                                  ?app_id: ::String
                                ) -> _StopAppReplicationResponseSuccess
                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StopAppReplicationResponseSuccess

      interface _TerminateAppResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TerminateAppResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#terminate_app-instance_method
      def terminate_app: (
                           ?app_id: ::String
                         ) -> _TerminateAppResponseSuccess
                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TerminateAppResponseSuccess

      interface _UpdateAppResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateAppResponse]
        def app_summary: () -> Types::AppSummary
        def server_groups: () -> ::Array[Types::ServerGroup]
        def tags: () -> ::Array[Types::Tag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#update_app-instance_method
      def update_app: (
                        ?app_id: ::String,
                        ?name: ::String,
                        ?description: ::String,
                        ?role_name: ::String,
                        ?server_groups: Array[
                          {
                            server_group_id: ::String?,
                            name: ::String?,
                            server_list: Array[
                              {
                                server_id: ::String?,
                                server_type: ("VIRTUAL_MACHINE")?,
                                vm_server: {
                                  vm_server_address: {
                                    vm_manager_id: ::String?,
                                    vm_id: ::String?
                                  }?,
                                  vm_name: ::String?,
                                  vm_manager_name: ::String?,
                                  vm_manager_type: ("VSPHERE" | "SCVMM" | "HYPERV-MANAGER")?,
                                  vm_path: ::String?
                                }?,
                                replication_job_id: ::String?,
                                replication_job_terminated: bool?
                              },
                            ]?
                          },
                        ],
                        ?tags: Array[
                          {
                            key: ::String?,
                            value: ::String?
                          },
                        ]
                      ) -> _UpdateAppResponseSuccess
                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateAppResponseSuccess

      interface _UpdateReplicationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateReplicationJobResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SMS/Client.html#update_replication_job-instance_method
      def update_replication_job: (
                                    replication_job_id: ::String,
                                    ?frequency: ::Integer,
                                    ?next_replication_run_start_time: ::Time,
                                    ?license_type: ("AWS" | "BYOL"),
                                    ?role_name: ::String,
                                    ?description: ::String,
                                    ?number_of_recent_amis_to_keep: ::Integer,
                                    ?encrypted: bool,
                                    ?kms_key_id: ::String
                                  ) -> _UpdateReplicationJobResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateReplicationJobResponseSuccess
    end
  end
end

