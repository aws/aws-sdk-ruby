# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module RecycleBin
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _CreateRuleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateRuleResponse]
        def identifier: () -> ::String
        def retention_period: () -> Types::RetentionPeriod
        def description: () -> ::String
        def tags: () -> ::Array[Types::Tag]
        def resource_type: () -> ("EBS_SNAPSHOT" | "EC2_IMAGE")
        def resource_tags: () -> ::Array[Types::ResourceTag]
        def status: () -> ("pending" | "available")
        def lock_configuration: () -> Types::LockConfiguration
        def lock_state: () -> ("locked" | "pending_unlock" | "unlocked")
        def rule_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#create_rule-instance_method
      def create_rule: (
                         retention_period: {
                           retention_period_value: ::Integer,
                           retention_period_unit: ("DAYS")
                         },
                         ?description: ::String,
                         ?tags: Array[
                           {
                             key: ::String,
                             value: ::String
                           },
                         ],
                         resource_type: ("EBS_SNAPSHOT" | "EC2_IMAGE"),
                         ?resource_tags: Array[
                           {
                             resource_tag_key: ::String,
                             resource_tag_value: ::String?
                           },
                         ],
                         ?lock_configuration: {
                           unlock_delay: {
                             unlock_delay_value: ::Integer,
                             unlock_delay_unit: ("DAYS")
                           }
                         }
                       ) -> _CreateRuleResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateRuleResponseSuccess

      interface _DeleteRuleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteRuleResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#delete_rule-instance_method
      def delete_rule: (
                         identifier: ::String
                       ) -> _DeleteRuleResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteRuleResponseSuccess

      interface _GetRuleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetRuleResponse]
        def identifier: () -> ::String
        def description: () -> ::String
        def resource_type: () -> ("EBS_SNAPSHOT" | "EC2_IMAGE")
        def retention_period: () -> Types::RetentionPeriod
        def resource_tags: () -> ::Array[Types::ResourceTag]
        def status: () -> ("pending" | "available")
        def lock_configuration: () -> Types::LockConfiguration
        def lock_state: () -> ("locked" | "pending_unlock" | "unlocked")
        def lock_end_time: () -> ::Time
        def rule_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#get_rule-instance_method
      def get_rule: (
                      identifier: ::String
                    ) -> _GetRuleResponseSuccess
                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetRuleResponseSuccess

      interface _ListRulesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListRulesResponse]
        def rules: () -> ::Array[Types::RuleSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#list_rules-instance_method
      def list_rules: (
                        ?max_results: ::Integer,
                        ?next_token: ::String,
                        resource_type: ("EBS_SNAPSHOT" | "EC2_IMAGE"),
                        ?resource_tags: Array[
                          {
                            resource_tag_key: ::String,
                            resource_tag_value: ::String?
                          },
                        ],
                        ?lock_state: ("locked" | "pending_unlock" | "unlocked")
                      ) -> _ListRulesResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListRulesResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Array[Types::Tag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _LockRuleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::LockRuleResponse]
        def identifier: () -> ::String
        def description: () -> ::String
        def resource_type: () -> ("EBS_SNAPSHOT" | "EC2_IMAGE")
        def retention_period: () -> Types::RetentionPeriod
        def resource_tags: () -> ::Array[Types::ResourceTag]
        def status: () -> ("pending" | "available")
        def lock_configuration: () -> Types::LockConfiguration
        def lock_state: () -> ("locked" | "pending_unlock" | "unlocked")
        def rule_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#lock_rule-instance_method
      def lock_rule: (
                       identifier: ::String,
                       lock_configuration: {
                         unlock_delay: {
                           unlock_delay_value: ::Integer,
                           unlock_delay_unit: ("DAYS")
                         }
                       }
                     ) -> _LockRuleResponseSuccess
                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _LockRuleResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UnlockRuleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UnlockRuleResponse]
        def identifier: () -> ::String
        def description: () -> ::String
        def resource_type: () -> ("EBS_SNAPSHOT" | "EC2_IMAGE")
        def retention_period: () -> Types::RetentionPeriod
        def resource_tags: () -> ::Array[Types::ResourceTag]
        def status: () -> ("pending" | "available")
        def lock_configuration: () -> Types::LockConfiguration
        def lock_state: () -> ("locked" | "pending_unlock" | "unlocked")
        def lock_end_time: () -> ::Time
        def rule_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#unlock_rule-instance_method
      def unlock_rule: (
                         identifier: ::String
                       ) -> _UnlockRuleResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UnlockRuleResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      interface _UpdateRuleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateRuleResponse]
        def identifier: () -> ::String
        def retention_period: () -> Types::RetentionPeriod
        def description: () -> ::String
        def resource_type: () -> ("EBS_SNAPSHOT" | "EC2_IMAGE")
        def resource_tags: () -> ::Array[Types::ResourceTag]
        def status: () -> ("pending" | "available")
        def lock_state: () -> ("locked" | "pending_unlock" | "unlocked")
        def lock_end_time: () -> ::Time
        def rule_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/RecycleBin/Client.html#update_rule-instance_method
      def update_rule: (
                         identifier: ::String,
                         ?retention_period: {
                           retention_period_value: ::Integer,
                           retention_period_unit: ("DAYS")
                         },
                         ?description: ::String,
                         ?resource_type: ("EBS_SNAPSHOT" | "EC2_IMAGE"),
                         ?resource_tags: Array[
                           {
                             resource_tag_key: ::String,
                             resource_tag_value: ::String?
                           },
                         ]
                       ) -> _UpdateRuleResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateRuleResponseSuccess
    end
  end
end

