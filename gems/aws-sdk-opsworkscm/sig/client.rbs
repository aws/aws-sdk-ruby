# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module OpsWorksCM
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?simple_json: bool,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _AssociateNodeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AssociateNodeResponse]
        def node_association_status_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#associate_node-instance_method
      def associate_node: (
                            server_name: ::String,
                            node_name: ::String,
                            engine_attributes: Array[
                              {
                                name: ::String?,
                                value: ::String?
                              },
                            ]
                          ) -> _AssociateNodeResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AssociateNodeResponseSuccess

      interface _CreateBackupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateBackupResponse]
        def backup: () -> Types::Backup
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#create_backup-instance_method
      def create_backup: (
                           server_name: ::String,
                           ?description: ::String,
                           ?tags: Array[
                             {
                               key: ::String,
                               value: ::String
                             },
                           ]
                         ) -> _CreateBackupResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateBackupResponseSuccess

      interface _CreateServerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateServerResponse]
        def server: () -> Types::Server
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#create_server-instance_method
      def create_server: (
                           ?associate_public_ip_address: bool,
                           ?custom_domain: ::String,
                           ?custom_certificate: ::String,
                           ?custom_private_key: ::String,
                           ?disable_automated_backup: bool,
                           engine: ::String,
                           ?engine_model: ::String,
                           ?engine_version: ::String,
                           ?engine_attributes: Array[
                             {
                               name: ::String?,
                               value: ::String?
                             },
                           ],
                           ?backup_retention_count: ::Integer,
                           server_name: ::String,
                           instance_profile_arn: ::String,
                           instance_type: ::String,
                           ?key_pair: ::String,
                           ?preferred_maintenance_window: ::String,
                           ?preferred_backup_window: ::String,
                           ?security_group_ids: Array[::String],
                           service_role_arn: ::String,
                           ?subnet_ids: Array[::String],
                           ?tags: Array[
                             {
                               key: ::String,
                               value: ::String
                             },
                           ],
                           ?backup_id: ::String
                         ) -> _CreateServerResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateServerResponseSuccess

      interface _DeleteBackupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteBackupResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#delete_backup-instance_method
      def delete_backup: (
                           backup_id: ::String
                         ) -> _DeleteBackupResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteBackupResponseSuccess

      interface _DeleteServerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteServerResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#delete_server-instance_method
      def delete_server: (
                           server_name: ::String
                         ) -> _DeleteServerResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteServerResponseSuccess

      interface _DescribeAccountAttributesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeAccountAttributesResponse]
        def attributes: () -> ::Array[Types::AccountAttribute]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#describe_account_attributes-instance_method
      def describe_account_attributes: (
                                       ) -> _DescribeAccountAttributesResponseSuccess
                                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeAccountAttributesResponseSuccess

      interface _DescribeBackupsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeBackupsResponse]
        def backups: () -> ::Array[Types::Backup]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#describe_backups-instance_method
      def describe_backups: (
                              ?backup_id: ::String,
                              ?server_name: ::String,
                              ?next_token: ::String,
                              ?max_results: ::Integer
                            ) -> _DescribeBackupsResponseSuccess
                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeBackupsResponseSuccess

      interface _DescribeEventsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeEventsResponse]
        def server_events: () -> ::Array[Types::ServerEvent]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#describe_events-instance_method
      def describe_events: (
                             server_name: ::String,
                             ?next_token: ::String,
                             ?max_results: ::Integer
                           ) -> _DescribeEventsResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeEventsResponseSuccess

      interface _DescribeNodeAssociationStatusResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeNodeAssociationStatusResponse]
        def node_association_status: () -> ("SUCCESS" | "FAILED" | "IN_PROGRESS")
        def engine_attributes: () -> ::Array[Types::EngineAttribute]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#describe_node_association_status-instance_method
      def describe_node_association_status: (
                                              node_association_status_token: ::String,
                                              server_name: ::String
                                            ) -> _DescribeNodeAssociationStatusResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeNodeAssociationStatusResponseSuccess

      interface _DescribeServersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeServersResponse]
        def servers: () -> ::Array[Types::Server]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#describe_servers-instance_method
      def describe_servers: (
                              ?server_name: ::String,
                              ?next_token: ::String,
                              ?max_results: ::Integer
                            ) -> _DescribeServersResponseSuccess
                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeServersResponseSuccess

      interface _DisassociateNodeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateNodeResponse]
        def node_association_status_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#disassociate_node-instance_method
      def disassociate_node: (
                               server_name: ::String,
                               node_name: ::String,
                               ?engine_attributes: Array[
                                 {
                                   name: ::String?,
                                   value: ::String?
                                 },
                               ]
                             ) -> _DisassociateNodeResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateNodeResponseSuccess

      interface _ExportServerEngineAttributeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ExportServerEngineAttributeResponse]
        def engine_attribute: () -> Types::EngineAttribute
        def server_name: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#export_server_engine_attribute-instance_method
      def export_server_engine_attribute: (
                                            export_attribute_name: ::String,
                                            server_name: ::String,
                                            ?input_attributes: Array[
                                              {
                                                name: ::String?,
                                                value: ::String?
                                              },
                                            ]
                                          ) -> _ExportServerEngineAttributeResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ExportServerEngineAttributeResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Array[Types::Tag]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String,
                                    ?next_token: ::String,
                                    ?max_results: ::Integer
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _RestoreServerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::RestoreServerResponse]
        def server: () -> Types::Server
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#restore_server-instance_method
      def restore_server: (
                            backup_id: ::String,
                            server_name: ::String,
                            ?instance_type: ::String,
                            ?key_pair: ::String
                          ) -> _RestoreServerResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _RestoreServerResponseSuccess

      interface _StartMaintenanceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartMaintenanceResponse]
        def server: () -> Types::Server
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#start_maintenance-instance_method
      def start_maintenance: (
                               server_name: ::String,
                               ?engine_attributes: Array[
                                 {
                                   name: ::String?,
                                   value: ::String?
                                 },
                               ]
                             ) -> _StartMaintenanceResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartMaintenanceResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      interface _UpdateServerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateServerResponse]
        def server: () -> Types::Server
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#update_server-instance_method
      def update_server: (
                           ?disable_automated_backup: bool,
                           ?backup_retention_count: ::Integer,
                           server_name: ::String,
                           ?preferred_maintenance_window: ::String,
                           ?preferred_backup_window: ::String
                         ) -> _UpdateServerResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateServerResponseSuccess

      interface _UpdateServerEngineAttributesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateServerEngineAttributesResponse]
        def server: () -> Types::Server
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#update_server_engine_attributes-instance_method
      def update_server_engine_attributes: (
                                             server_name: ::String,
                                             attribute_name: ::String,
                                             ?attribute_value: ::String
                                           ) -> _UpdateServerEngineAttributesResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateServerEngineAttributesResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorksCM/Client.html#wait_until-instance_method
      def wait_until: (:node_associated waiter_name, 
                    node_association_status_token: ::String,
                    server_name: ::String
                  ) -> Client::_DescribeNodeAssociationStatusResponseSuccess
                    | (:node_associated waiter_name, Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> Client::_DescribeNodeAssociationStatusResponseSuccess
    end
  end
end

