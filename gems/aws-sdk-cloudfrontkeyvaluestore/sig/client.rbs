# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module CloudFrontKeyValueStore
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudFrontKeyValueStore/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _DeleteKeyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteKeyResponse]
        def item_count: () -> ::Integer
        def total_size_in_bytes: () -> ::Integer
        def etag: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudFrontKeyValueStore/Client.html#delete_key-instance_method
      def delete_key: (
                        kvs_arn: ::String,
                        key: ::String,
                        if_match: ::String
                      ) -> _DeleteKeyResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteKeyResponseSuccess

      interface _DescribeKeyValueStoreResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeKeyValueStoreResponse]
        def item_count: () -> ::Integer
        def total_size_in_bytes: () -> ::Integer
        def kvs_arn: () -> ::String
        def created: () -> ::Time
        def etag: () -> ::String
        def last_modified: () -> ::Time
        def status: () -> ::String
        def failure_reason: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudFrontKeyValueStore/Client.html#describe_key_value_store-instance_method
      def describe_key_value_store: (
                                      kvs_arn: ::String
                                    ) -> _DescribeKeyValueStoreResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeKeyValueStoreResponseSuccess

      interface _GetKeyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetKeyResponse]
        def key: () -> ::String
        def value: () -> ::String
        def item_count: () -> ::Integer
        def total_size_in_bytes: () -> ::Integer
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudFrontKeyValueStore/Client.html#get_key-instance_method
      def get_key: (
                     kvs_arn: ::String,
                     key: ::String
                   ) -> _GetKeyResponseSuccess
                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetKeyResponseSuccess

      interface _ListKeysResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListKeysResponse]
        def next_token: () -> ::String
        def items: () -> ::Array[Types::ListKeysResponseListItem]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudFrontKeyValueStore/Client.html#list_keys-instance_method
      def list_keys: (
                       kvs_arn: ::String,
                       ?next_token: ::String,
                       ?max_results: ::Integer
                     ) -> _ListKeysResponseSuccess
                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListKeysResponseSuccess

      interface _PutKeyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutKeyResponse]
        def item_count: () -> ::Integer
        def total_size_in_bytes: () -> ::Integer
        def etag: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudFrontKeyValueStore/Client.html#put_key-instance_method
      def put_key: (
                     key: ::String,
                     value: ::String,
                     kvs_arn: ::String,
                     if_match: ::String
                   ) -> _PutKeyResponseSuccess
                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutKeyResponseSuccess

      interface _UpdateKeysResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateKeysResponse]
        def item_count: () -> ::Integer
        def total_size_in_bytes: () -> ::Integer
        def etag: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/CloudFrontKeyValueStore/Client.html#update_keys-instance_method
      def update_keys: (
                         kvs_arn: ::String,
                         if_match: ::String,
                         ?puts: Array[
                           {
                             key: ::String,
                             value: ::String
                           },
                         ],
                         ?deletes: Array[
                           {
                             key: ::String
                           },
                         ]
                       ) -> _UpdateKeysResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateKeysResponseSuccess
    end
  end
end

