# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module QLDB
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _CancelJournalKinesisStreamResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CancelJournalKinesisStreamResponse]
        def stream_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#cancel_journal_kinesis_stream-instance_method
      def cancel_journal_kinesis_stream: (
                                           ledger_name: ::String,
                                           stream_id: ::String
                                         ) -> _CancelJournalKinesisStreamResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CancelJournalKinesisStreamResponseSuccess

      interface _CreateLedgerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateLedgerResponse]
        def name: () -> ::String
        def arn: () -> ::String
        def state: () -> ("CREATING" | "ACTIVE" | "DELETING" | "DELETED")
        def creation_date_time: () -> ::Time
        def permissions_mode: () -> ("ALLOW_ALL" | "STANDARD")
        def deletion_protection: () -> bool
        def kms_key_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#create_ledger-instance_method
      def create_ledger: (
                           name: ::String,
                           ?tags: Hash[::String, ::String],
                           permissions_mode: ("ALLOW_ALL" | "STANDARD"),
                           ?deletion_protection: bool,
                           ?kms_key: ::String
                         ) -> _CreateLedgerResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateLedgerResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#delete_ledger-instance_method
      def delete_ledger: (
                           name: ::String
                         ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DescribeJournalKinesisStreamResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeJournalKinesisStreamResponse]
        def stream: () -> Types::JournalKinesisStreamDescription
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#describe_journal_kinesis_stream-instance_method
      def describe_journal_kinesis_stream: (
                                             ledger_name: ::String,
                                             stream_id: ::String
                                           ) -> _DescribeJournalKinesisStreamResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeJournalKinesisStreamResponseSuccess

      interface _DescribeJournalS3ExportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeJournalS3ExportResponse]
        def export_description: () -> Types::JournalS3ExportDescription
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#describe_journal_s3_export-instance_method
      def describe_journal_s3_export: (
                                        name: ::String,
                                        export_id: ::String
                                      ) -> _DescribeJournalS3ExportResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeJournalS3ExportResponseSuccess

      interface _DescribeLedgerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeLedgerResponse]
        def name: () -> ::String
        def arn: () -> ::String
        def state: () -> ("CREATING" | "ACTIVE" | "DELETING" | "DELETED")
        def creation_date_time: () -> ::Time
        def permissions_mode: () -> ("ALLOW_ALL" | "STANDARD")
        def deletion_protection: () -> bool
        def encryption_description: () -> Types::LedgerEncryptionDescription
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#describe_ledger-instance_method
      def describe_ledger: (
                             name: ::String
                           ) -> _DescribeLedgerResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeLedgerResponseSuccess

      interface _ExportJournalToS3ResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ExportJournalToS3Response]
        def export_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#export_journal_to_s3-instance_method
      def export_journal_to_s3: (
                                  name: ::String,
                                  inclusive_start_time: ::Time,
                                  exclusive_end_time: ::Time,
                                  s3_export_configuration: {
                                    bucket: ::String,
                                    prefix: ::String,
                                    encryption_configuration: {
                                      object_encryption_type: ("SSE_KMS" | "SSE_S3" | "NO_ENCRYPTION"),
                                      kms_key_arn: ::String?
                                    }
                                  },
                                  role_arn: ::String,
                                  ?output_format: ("ION_BINARY" | "ION_TEXT" | "JSON")
                                ) -> _ExportJournalToS3ResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ExportJournalToS3ResponseSuccess

      interface _GetBlockResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetBlockResponse]
        def block: () -> Types::ValueHolder
        def proof: () -> Types::ValueHolder
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#get_block-instance_method
      def get_block: (
                       name: ::String,
                       block_address: {
                         ion_text: ::String?
                       },
                       ?digest_tip_address: {
                         ion_text: ::String?
                       }
                     ) -> _GetBlockResponseSuccess
                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetBlockResponseSuccess

      interface _GetDigestResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetDigestResponse]
        def digest: () -> ::String
        def digest_tip_address: () -> Types::ValueHolder
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#get_digest-instance_method
      def get_digest: (
                        name: ::String
                      ) -> _GetDigestResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetDigestResponseSuccess

      interface _GetRevisionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetRevisionResponse]
        def proof: () -> Types::ValueHolder
        def revision: () -> Types::ValueHolder
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#get_revision-instance_method
      def get_revision: (
                          name: ::String,
                          block_address: {
                            ion_text: ::String?
                          },
                          document_id: ::String,
                          ?digest_tip_address: {
                            ion_text: ::String?
                          }
                        ) -> _GetRevisionResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetRevisionResponseSuccess

      interface _ListJournalKinesisStreamsForLedgerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListJournalKinesisStreamsForLedgerResponse]
        def streams: () -> ::Array[Types::JournalKinesisStreamDescription]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#list_journal_kinesis_streams_for_ledger-instance_method
      def list_journal_kinesis_streams_for_ledger: (
                                                     ledger_name: ::String,
                                                     ?max_results: ::Integer,
                                                     ?next_token: ::String
                                                   ) -> _ListJournalKinesisStreamsForLedgerResponseSuccess
                                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListJournalKinesisStreamsForLedgerResponseSuccess

      interface _ListJournalS3ExportsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListJournalS3ExportsResponse]
        def journal_s3_exports: () -> ::Array[Types::JournalS3ExportDescription]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#list_journal_s3_exports-instance_method
      def list_journal_s3_exports: (
                                     ?max_results: ::Integer,
                                     ?next_token: ::String
                                   ) -> _ListJournalS3ExportsResponseSuccess
                                 | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListJournalS3ExportsResponseSuccess

      interface _ListJournalS3ExportsForLedgerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListJournalS3ExportsForLedgerResponse]
        def journal_s3_exports: () -> ::Array[Types::JournalS3ExportDescription]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#list_journal_s3_exports_for_ledger-instance_method
      def list_journal_s3_exports_for_ledger: (
                                                name: ::String,
                                                ?max_results: ::Integer,
                                                ?next_token: ::String
                                              ) -> _ListJournalS3ExportsForLedgerResponseSuccess
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListJournalS3ExportsForLedgerResponseSuccess

      interface _ListLedgersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListLedgersResponse]
        def ledgers: () -> ::Array[Types::LedgerSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#list_ledgers-instance_method
      def list_ledgers: (
                          ?max_results: ::Integer,
                          ?next_token: ::String
                        ) -> _ListLedgersResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListLedgersResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Hash[::String, ::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _StreamJournalToKinesisResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StreamJournalToKinesisResponse]
        def stream_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#stream_journal_to_kinesis-instance_method
      def stream_journal_to_kinesis: (
                                       ledger_name: ::String,
                                       role_arn: ::String,
                                       ?tags: Hash[::String, ::String],
                                       inclusive_start_time: ::Time,
                                       ?exclusive_end_time: ::Time,
                                       kinesis_configuration: {
                                         stream_arn: ::String,
                                         aggregation_enabled: bool?
                                       },
                                       stream_name: ::String
                                     ) -> _StreamJournalToKinesisResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StreamJournalToKinesisResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Hash[::String, ::String]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      interface _UpdateLedgerResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateLedgerResponse]
        def name: () -> ::String
        def arn: () -> ::String
        def state: () -> ("CREATING" | "ACTIVE" | "DELETING" | "DELETED")
        def creation_date_time: () -> ::Time
        def deletion_protection: () -> bool
        def encryption_description: () -> Types::LedgerEncryptionDescription
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#update_ledger-instance_method
      def update_ledger: (
                           name: ::String,
                           ?deletion_protection: bool,
                           ?kms_key: ::String
                         ) -> _UpdateLedgerResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateLedgerResponseSuccess

      interface _UpdateLedgerPermissionsModeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateLedgerPermissionsModeResponse]
        def name: () -> ::String
        def arn: () -> ::String
        def permissions_mode: () -> ("ALLOW_ALL" | "STANDARD")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/QLDB/Client.html#update_ledger_permissions_mode-instance_method
      def update_ledger_permissions_mode: (
                                            name: ::String,
                                            permissions_mode: ("ALLOW_ALL" | "STANDARD")
                                          ) -> _UpdateLedgerPermissionsModeResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateLedgerPermissionsModeResponseSuccess
    end
  end
end

