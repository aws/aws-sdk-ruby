# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module SagemakerEdgeManager
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SagemakerEdgeManager/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _GetDeploymentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetDeploymentsResult]
        def deployments: () -> ::Array[Types::EdgeDeployment]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SagemakerEdgeManager/Client.html#get_deployments-instance_method
      def get_deployments: (
                             device_name: ::String,
                             device_fleet_name: ::String
                           ) -> _GetDeploymentsResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetDeploymentsResponseSuccess

      interface _GetDeviceRegistrationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetDeviceRegistrationResult]
        def device_registration: () -> ::String
        def cache_ttl: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SagemakerEdgeManager/Client.html#get_device_registration-instance_method
      def get_device_registration: (
                                     device_name: ::String,
                                     device_fleet_name: ::String
                                   ) -> _GetDeviceRegistrationResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetDeviceRegistrationResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SagemakerEdgeManager/Client.html#send_heartbeat-instance_method
      def send_heartbeat: (
                            ?agent_metrics: Array[
                              {
                                dimension: ::String?,
                                metric_name: ::String?,
                                value: ::Float?,
                                timestamp: ::Time?
                              },
                            ],
                            ?models: Array[
                              {
                                model_name: ::String?,
                                model_version: ::String?,
                                latest_sample_time: ::Time?,
                                latest_inference: ::Time?,
                                model_metrics: Array[
                                  {
                                    dimension: ::String?,
                                    metric_name: ::String?,
                                    value: ::Float?,
                                    timestamp: ::Time?
                                  },
                                ]?
                              },
                            ],
                            agent_version: ::String,
                            device_name: ::String,
                            device_fleet_name: ::String,
                            ?deployment_result: {
                              deployment_name: ::String?,
                              deployment_status: ::String?,
                              deployment_status_message: ::String?,
                              deployment_start_time: ::Time?,
                              deployment_end_time: ::Time?,
                              deployment_models: Array[
                                {
                                  model_handle: ::String?,
                                  model_name: ::String?,
                                  model_version: ::String?,
                                  desired_state: ("DEPLOY" | "UNDEPLOY")?,
                                  state: ("DEPLOY" | "UNDEPLOY")?,
                                  status: ("SUCCESS" | "FAIL")?,
                                  status_reason: ::String?,
                                  rollback_failure_reason: ::String?
                                },
                              ]?
                            }
                          ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
    end
  end
end

