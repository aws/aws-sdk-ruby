# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module Bedrock
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?account_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?sigv4a_signing_region_set: Array[String],
                      ?stub_responses: untyped,
                      ?telemetry_provider: Aws::Telemetry::TelemetryProviderBase,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _BatchDeleteEvaluationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchDeleteEvaluationJobResponse]
        def errors: () -> ::Array[Types::BatchDeleteEvaluationJobError]
        def evaluation_jobs: () -> ::Array[Types::BatchDeleteEvaluationJobItem]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#batch_delete_evaluation_job-instance_method
      def batch_delete_evaluation_job: (
                                         job_identifiers: Array[::String]
                                       ) -> _BatchDeleteEvaluationJobResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchDeleteEvaluationJobResponseSuccess

      interface _CreateEvaluationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateEvaluationJobResponse]
        def job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#create_evaluation_job-instance_method
      def create_evaluation_job: (
                                   job_name: ::String,
                                   ?job_description: ::String,
                                   ?client_request_token: ::String,
                                   role_arn: ::String,
                                   ?customer_encryption_key_id: ::String,
                                   ?job_tags: Array[
                                     {
                                       key: ::String,
                                       value: ::String
                                     },
                                   ],
                                   evaluation_config: {
                                     automated: {
                                       dataset_metric_configs: Array[
                                         {
                                           task_type: ("Summarization" | "Classification" | "QuestionAndAnswer" | "Generation" | "Custom"),
                                           dataset: {
                                             name: ::String,
                                             dataset_location: {
                                               s3_uri: ::String?
                                             }?
                                           },
                                           metric_names: Array[::String]
                                         },
                                       ]
                                     }?,
                                     human: {
                                       human_workflow_config: {
                                         flow_definition_arn: ::String,
                                         instructions: ::String?
                                       }?,
                                       custom_metrics: Array[
                                         {
                                           name: ::String,
                                           description: ::String?,
                                           rating_method: ::String
                                         },
                                       ]?,
                                       dataset_metric_configs: Array[
                                         {
                                           task_type: ("Summarization" | "Classification" | "QuestionAndAnswer" | "Generation" | "Custom"),
                                           dataset: {
                                             name: ::String,
                                             dataset_location: {
                                               s3_uri: ::String?
                                             }?
                                           },
                                           metric_names: Array[::String]
                                         },
                                       ]
                                     }?
                                   },
                                   inference_config: {
                                     models: Array[
                                       {
                                         bedrock_model: {
                                           model_identifier: ::String,
                                           inference_params: ::String
                                         }?
                                       },
                                     ]?
                                   },
                                   output_data_config: {
                                     s3_uri: ::String
                                   }
                                 ) -> _CreateEvaluationJobResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateEvaluationJobResponseSuccess

      interface _CreateGuardrailResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateGuardrailResponse]
        def guardrail_id: () -> ::String
        def guardrail_arn: () -> ::String
        def version: () -> ::String
        def created_at: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#create_guardrail-instance_method
      def create_guardrail: (
                              name: ::String,
                              ?description: ::String,
                              ?topic_policy_config: {
                                topics_config: Array[
                                  {
                                    name: ::String,
                                    definition: ::String,
                                    examples: Array[::String]?,
                                    type: ("DENY")
                                  },
                                ]
                              },
                              ?content_policy_config: {
                                filters_config: Array[
                                  {
                                    type: ("SEXUAL" | "VIOLENCE" | "HATE" | "INSULTS" | "MISCONDUCT" | "PROMPT_ATTACK"),
                                    input_strength: ("NONE" | "LOW" | "MEDIUM" | "HIGH"),
                                    output_strength: ("NONE" | "LOW" | "MEDIUM" | "HIGH")
                                  },
                                ]
                              },
                              ?word_policy_config: {
                                words_config: Array[
                                  {
                                    text: ::String
                                  },
                                ]?,
                                managed_word_lists_config: Array[
                                  {
                                    type: ("PROFANITY")
                                  },
                                ]?
                              },
                              ?sensitive_information_policy_config: {
                                pii_entities_config: Array[
                                  {
                                    type: ("ADDRESS" | "AGE" | "AWS_ACCESS_KEY" | "AWS_SECRET_KEY" | "CA_HEALTH_NUMBER" | "CA_SOCIAL_INSURANCE_NUMBER" | "CREDIT_DEBIT_CARD_CVV" | "CREDIT_DEBIT_CARD_EXPIRY" | "CREDIT_DEBIT_CARD_NUMBER" | "DRIVER_ID" | "EMAIL" | "INTERNATIONAL_BANK_ACCOUNT_NUMBER" | "IP_ADDRESS" | "LICENSE_PLATE" | "MAC_ADDRESS" | "NAME" | "PASSWORD" | "PHONE" | "PIN" | "SWIFT_CODE" | "UK_NATIONAL_HEALTH_SERVICE_NUMBER" | "UK_NATIONAL_INSURANCE_NUMBER" | "UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER" | "URL" | "USERNAME" | "US_BANK_ACCOUNT_NUMBER" | "US_BANK_ROUTING_NUMBER" | "US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER" | "US_PASSPORT_NUMBER" | "US_SOCIAL_SECURITY_NUMBER" | "VEHICLE_IDENTIFICATION_NUMBER"),
                                    action: ("BLOCK" | "ANONYMIZE")
                                  },
                                ]?,
                                regexes_config: Array[
                                  {
                                    name: ::String,
                                    description: ::String?,
                                    pattern: ::String,
                                    action: ("BLOCK" | "ANONYMIZE")
                                  },
                                ]?
                              },
                              ?contextual_grounding_policy_config: {
                                filters_config: Array[
                                  {
                                    type: ("GROUNDING" | "RELEVANCE"),
                                    threshold: ::Float
                                  },
                                ]
                              },
                              blocked_input_messaging: ::String,
                              blocked_outputs_messaging: ::String,
                              ?kms_key_id: ::String,
                              ?tags: Array[
                                {
                                  key: ::String,
                                  value: ::String
                                },
                              ],
                              ?client_request_token: ::String
                            ) -> _CreateGuardrailResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateGuardrailResponseSuccess

      interface _CreateGuardrailVersionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateGuardrailVersionResponse]
        def guardrail_id: () -> ::String
        def version: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#create_guardrail_version-instance_method
      def create_guardrail_version: (
                                      guardrail_identifier: ::String,
                                      ?description: ::String,
                                      ?client_request_token: ::String
                                    ) -> _CreateGuardrailVersionResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateGuardrailVersionResponseSuccess

      interface _CreateModelCopyJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelCopyJobResponse]
        def job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#create_model_copy_job-instance_method
      def create_model_copy_job: (
                                   source_model_arn: ::String,
                                   target_model_name: ::String,
                                   ?model_kms_key_id: ::String,
                                   ?target_model_tags: Array[
                                     {
                                       key: ::String,
                                       value: ::String
                                     },
                                   ],
                                   ?client_request_token: ::String
                                 ) -> _CreateModelCopyJobResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelCopyJobResponseSuccess

      interface _CreateModelCustomizationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelCustomizationJobResponse]
        def job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#create_model_customization_job-instance_method
      def create_model_customization_job: (
                                            job_name: ::String,
                                            custom_model_name: ::String,
                                            role_arn: ::String,
                                            ?client_request_token: ::String,
                                            base_model_identifier: ::String,
                                            ?customization_type: ("FINE_TUNING" | "CONTINUED_PRE_TRAINING"),
                                            ?custom_model_kms_key_id: ::String,
                                            ?job_tags: Array[
                                              {
                                                key: ::String,
                                                value: ::String
                                              },
                                            ],
                                            ?custom_model_tags: Array[
                                              {
                                                key: ::String,
                                                value: ::String
                                              },
                                            ],
                                            training_data_config: {
                                              s3_uri: ::String
                                            },
                                            ?validation_data_config: {
                                              validators: Array[
                                                {
                                                  s3_uri: ::String
                                                },
                                              ]
                                            },
                                            output_data_config: {
                                              s3_uri: ::String
                                            },
                                            hyper_parameters: Hash[::String, ::String],
                                            ?vpc_config: {
                                              subnet_ids: Array[::String],
                                              security_group_ids: Array[::String]
                                            }
                                          ) -> _CreateModelCustomizationJobResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelCustomizationJobResponseSuccess

      interface _CreateModelImportJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelImportJobResponse]
        def job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#create_model_import_job-instance_method
      def create_model_import_job: (
                                     job_name: ::String,
                                     imported_model_name: ::String,
                                     role_arn: ::String,
                                     model_data_source: {
                                       s3_data_source: {
                                         s3_uri: ::String
                                       }?
                                     },
                                     ?job_tags: Array[
                                       {
                                         key: ::String,
                                         value: ::String
                                       },
                                     ],
                                     ?imported_model_tags: Array[
                                       {
                                         key: ::String,
                                         value: ::String
                                       },
                                     ],
                                     ?client_request_token: ::String,
                                     ?vpc_config: {
                                       subnet_ids: Array[::String],
                                       security_group_ids: Array[::String]
                                     },
                                     ?imported_model_kms_key_id: ::String
                                   ) -> _CreateModelImportJobResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelImportJobResponseSuccess

      interface _CreateModelInvocationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateModelInvocationJobResponse]
        def job_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#create_model_invocation_job-instance_method
      def create_model_invocation_job: (
                                         job_name: ::String,
                                         role_arn: ::String,
                                         ?client_request_token: ::String,
                                         model_id: ::String,
                                         input_data_config: {
                                           s3_input_data_config: {
                                             s3_input_format: ("JSONL")?,
                                             s3_uri: ::String,
                                             s3_bucket_owner: ::String?
                                           }?
                                         },
                                         output_data_config: {
                                           s3_output_data_config: {
                                             s3_uri: ::String,
                                             s3_encryption_key_id: ::String?,
                                             s3_bucket_owner: ::String?
                                           }?
                                         },
                                         ?vpc_config: {
                                           subnet_ids: Array[::String],
                                           security_group_ids: Array[::String]
                                         },
                                         ?timeout_duration_in_hours: ::Integer,
                                         ?tags: Array[
                                           {
                                             key: ::String,
                                             value: ::String
                                           },
                                         ]
                                       ) -> _CreateModelInvocationJobResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateModelInvocationJobResponseSuccess

      interface _CreateProvisionedModelThroughputResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateProvisionedModelThroughputResponse]
        def provisioned_model_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#create_provisioned_model_throughput-instance_method
      def create_provisioned_model_throughput: (
                                                 ?client_request_token: ::String,
                                                 model_units: ::Integer,
                                                 provisioned_model_name: ::String,
                                                 model_id: ::String,
                                                 ?commitment_duration: ("OneMonth" | "SixMonths"),
                                                 ?tags: Array[
                                                   {
                                                     key: ::String,
                                                     value: ::String
                                                   },
                                                 ]
                                               ) -> _CreateProvisionedModelThroughputResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateProvisionedModelThroughputResponseSuccess

      interface _DeleteCustomModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteCustomModelResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#delete_custom_model-instance_method
      def delete_custom_model: (
                                 model_identifier: ::String
                               ) -> _DeleteCustomModelResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteCustomModelResponseSuccess

      interface _DeleteGuardrailResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteGuardrailResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#delete_guardrail-instance_method
      def delete_guardrail: (
                              guardrail_identifier: ::String,
                              ?guardrail_version: ::String
                            ) -> _DeleteGuardrailResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteGuardrailResponseSuccess

      interface _DeleteImportedModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteImportedModelResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#delete_imported_model-instance_method
      def delete_imported_model: (
                                   model_identifier: ::String
                                 ) -> _DeleteImportedModelResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteImportedModelResponseSuccess

      interface _DeleteModelInvocationLoggingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteModelInvocationLoggingConfigurationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#delete_model_invocation_logging_configuration-instance_method
      def delete_model_invocation_logging_configuration: (
                                                         ) -> _DeleteModelInvocationLoggingConfigurationResponseSuccess
                                                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteModelInvocationLoggingConfigurationResponseSuccess

      interface _DeleteProvisionedModelThroughputResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteProvisionedModelThroughputResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#delete_provisioned_model_throughput-instance_method
      def delete_provisioned_model_throughput: (
                                                 provisioned_model_id: ::String
                                               ) -> _DeleteProvisionedModelThroughputResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteProvisionedModelThroughputResponseSuccess

      interface _GetCustomModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetCustomModelResponse]
        def model_arn: () -> ::String
        def model_name: () -> ::String
        def job_name: () -> ::String
        def job_arn: () -> ::String
        def base_model_arn: () -> ::String
        def customization_type: () -> ("FINE_TUNING" | "CONTINUED_PRE_TRAINING")
        def model_kms_key_arn: () -> ::String
        def hyper_parameters: () -> ::Hash[::String, ::String]
        def training_data_config: () -> Types::TrainingDataConfig
        def validation_data_config: () -> Types::ValidationDataConfig
        def output_data_config: () -> Types::OutputDataConfig
        def training_metrics: () -> Types::TrainingMetrics
        def validation_metrics: () -> ::Array[Types::ValidatorMetric]
        def creation_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_custom_model-instance_method
      def get_custom_model: (
                              model_identifier: ::String
                            ) -> _GetCustomModelResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetCustomModelResponseSuccess

      interface _GetEvaluationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetEvaluationJobResponse]
        def job_name: () -> ::String
        def status: () -> ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped" | "Deleting")
        def job_arn: () -> ::String
        def job_description: () -> ::String
        def role_arn: () -> ::String
        def customer_encryption_key_id: () -> ::String
        def job_type: () -> ("Human" | "Automated")
        def evaluation_config: () -> Types::EvaluationConfig
        def inference_config: () -> Types::EvaluationInferenceConfig
        def output_data_config: () -> Types::EvaluationOutputDataConfig
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def failure_messages: () -> ::Array[::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_evaluation_job-instance_method
      def get_evaluation_job: (
                                job_identifier: ::String
                              ) -> _GetEvaluationJobResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetEvaluationJobResponseSuccess

      interface _GetFoundationModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetFoundationModelResponse]
        def model_details: () -> Types::FoundationModelDetails
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_foundation_model-instance_method
      def get_foundation_model: (
                                  model_identifier: ::String
                                ) -> _GetFoundationModelResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetFoundationModelResponseSuccess

      interface _GetGuardrailResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetGuardrailResponse]
        def name: () -> ::String
        def description: () -> ::String
        def guardrail_id: () -> ::String
        def guardrail_arn: () -> ::String
        def version: () -> ::String
        def status: () -> ("CREATING" | "UPDATING" | "VERSIONING" | "READY" | "FAILED" | "DELETING")
        def topic_policy: () -> Types::GuardrailTopicPolicy
        def content_policy: () -> Types::GuardrailContentPolicy
        def word_policy: () -> Types::GuardrailWordPolicy
        def sensitive_information_policy: () -> Types::GuardrailSensitiveInformationPolicy
        def contextual_grounding_policy: () -> Types::GuardrailContextualGroundingPolicy
        def created_at: () -> ::Time
        def updated_at: () -> ::Time
        def status_reasons: () -> ::Array[::String]
        def failure_recommendations: () -> ::Array[::String]
        def blocked_input_messaging: () -> ::String
        def blocked_outputs_messaging: () -> ::String
        def kms_key_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_guardrail-instance_method
      def get_guardrail: (
                           guardrail_identifier: ::String,
                           ?guardrail_version: ::String
                         ) -> _GetGuardrailResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetGuardrailResponseSuccess

      interface _GetImportedModelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetImportedModelResponse]
        def model_arn: () -> ::String
        def model_name: () -> ::String
        def job_name: () -> ::String
        def job_arn: () -> ::String
        def model_data_source: () -> Types::ModelDataSource
        def creation_time: () -> ::Time
        def model_architecture: () -> ::String
        def model_kms_key_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_imported_model-instance_method
      def get_imported_model: (
                                model_identifier: ::String
                              ) -> _GetImportedModelResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetImportedModelResponseSuccess

      interface _GetInferenceProfileResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetInferenceProfileResponse]
        def inference_profile_name: () -> ::String
        def models: () -> ::Array[Types::InferenceProfileModel]
        def description: () -> ::String
        def created_at: () -> ::Time
        def updated_at: () -> ::Time
        def inference_profile_arn: () -> ::String
        def inference_profile_id: () -> ::String
        def status: () -> ("ACTIVE")
        def type: () -> ("SYSTEM_DEFINED")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_inference_profile-instance_method
      def get_inference_profile: (
                                   inference_profile_identifier: ::String
                                 ) -> _GetInferenceProfileResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetInferenceProfileResponseSuccess

      interface _GetModelCopyJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetModelCopyJobResponse]
        def job_arn: () -> ::String
        def status: () -> ("InProgress" | "Completed" | "Failed")
        def creation_time: () -> ::Time
        def target_model_arn: () -> ::String
        def target_model_name: () -> ::String
        def source_account_id: () -> ::String
        def source_model_arn: () -> ::String
        def target_model_kms_key_arn: () -> ::String
        def target_model_tags: () -> ::Array[Types::Tag]
        def failure_message: () -> ::String
        def source_model_name: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_model_copy_job-instance_method
      def get_model_copy_job: (
                                job_arn: ::String
                              ) -> _GetModelCopyJobResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetModelCopyJobResponseSuccess

      interface _GetModelCustomizationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetModelCustomizationJobResponse]
        def job_arn: () -> ::String
        def job_name: () -> ::String
        def output_model_name: () -> ::String
        def output_model_arn: () -> ::String
        def client_request_token: () -> ::String
        def role_arn: () -> ::String
        def status: () -> ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped")
        def failure_message: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def end_time: () -> ::Time
        def base_model_arn: () -> ::String
        def hyper_parameters: () -> ::Hash[::String, ::String]
        def training_data_config: () -> Types::TrainingDataConfig
        def validation_data_config: () -> Types::ValidationDataConfig
        def output_data_config: () -> Types::OutputDataConfig
        def customization_type: () -> ("FINE_TUNING" | "CONTINUED_PRE_TRAINING")
        def output_model_kms_key_arn: () -> ::String
        def training_metrics: () -> Types::TrainingMetrics
        def validation_metrics: () -> ::Array[Types::ValidatorMetric]
        def vpc_config: () -> Types::VpcConfig
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_model_customization_job-instance_method
      def get_model_customization_job: (
                                         job_identifier: ::String
                                       ) -> _GetModelCustomizationJobResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetModelCustomizationJobResponseSuccess

      interface _GetModelImportJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetModelImportJobResponse]
        def job_arn: () -> ::String
        def job_name: () -> ::String
        def imported_model_name: () -> ::String
        def imported_model_arn: () -> ::String
        def role_arn: () -> ::String
        def model_data_source: () -> Types::ModelDataSource
        def status: () -> ("InProgress" | "Completed" | "Failed")
        def failure_message: () -> ::String
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def end_time: () -> ::Time
        def vpc_config: () -> Types::VpcConfig
        def imported_model_kms_key_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_model_import_job-instance_method
      def get_model_import_job: (
                                  job_identifier: ::String
                                ) -> _GetModelImportJobResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetModelImportJobResponseSuccess

      interface _GetModelInvocationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetModelInvocationJobResponse]
        def job_arn: () -> ::String
        def job_name: () -> ::String
        def model_id: () -> ::String
        def client_request_token: () -> ::String
        def role_arn: () -> ::String
        def status: () -> ("Submitted" | "InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped" | "PartiallyCompleted" | "Expired" | "Validating" | "Scheduled")
        def message: () -> ::String
        def submit_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def end_time: () -> ::Time
        def input_data_config: () -> Types::ModelInvocationJobInputDataConfig
        def output_data_config: () -> Types::ModelInvocationJobOutputDataConfig
        def vpc_config: () -> Types::VpcConfig
        def timeout_duration_in_hours: () -> ::Integer
        def job_expiration_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_model_invocation_job-instance_method
      def get_model_invocation_job: (
                                      job_identifier: ::String
                                    ) -> _GetModelInvocationJobResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetModelInvocationJobResponseSuccess

      interface _GetModelInvocationLoggingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetModelInvocationLoggingConfigurationResponse]
        def logging_config: () -> Types::LoggingConfig
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_model_invocation_logging_configuration-instance_method
      def get_model_invocation_logging_configuration: (
                                                      ) -> _GetModelInvocationLoggingConfigurationResponseSuccess
                                                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetModelInvocationLoggingConfigurationResponseSuccess

      interface _GetProvisionedModelThroughputResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetProvisionedModelThroughputResponse]
        def model_units: () -> ::Integer
        def desired_model_units: () -> ::Integer
        def provisioned_model_name: () -> ::String
        def provisioned_model_arn: () -> ::String
        def model_arn: () -> ::String
        def desired_model_arn: () -> ::String
        def foundation_model_arn: () -> ::String
        def status: () -> ("Creating" | "InService" | "Updating" | "Failed")
        def creation_time: () -> ::Time
        def last_modified_time: () -> ::Time
        def failure_message: () -> ::String
        def commitment_duration: () -> ("OneMonth" | "SixMonths")
        def commitment_expiration_time: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#get_provisioned_model_throughput-instance_method
      def get_provisioned_model_throughput: (
                                              provisioned_model_id: ::String
                                            ) -> _GetProvisionedModelThroughputResponseSuccess
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetProvisionedModelThroughputResponseSuccess

      interface _ListCustomModelsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListCustomModelsResponse]
        def next_token: () -> ::String
        def model_summaries: () -> ::Array[Types::CustomModelSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_custom_models-instance_method
      def list_custom_models: (
                                ?creation_time_before: ::Time,
                                ?creation_time_after: ::Time,
                                ?name_contains: ::String,
                                ?base_model_arn_equals: ::String,
                                ?foundation_model_arn_equals: ::String,
                                ?max_results: ::Integer,
                                ?next_token: ::String,
                                ?sort_by: ("CreationTime"),
                                ?sort_order: ("Ascending" | "Descending"),
                                ?is_owned: bool
                              ) -> _ListCustomModelsResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListCustomModelsResponseSuccess

      interface _ListEvaluationJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListEvaluationJobsResponse]
        def next_token: () -> ::String
        def job_summaries: () -> ::Array[Types::EvaluationSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_evaluation_jobs-instance_method
      def list_evaluation_jobs: (
                                  ?creation_time_after: ::Time,
                                  ?creation_time_before: ::Time,
                                  ?status_equals: ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped" | "Deleting"),
                                  ?name_contains: ::String,
                                  ?max_results: ::Integer,
                                  ?next_token: ::String,
                                  ?sort_by: ("CreationTime"),
                                  ?sort_order: ("Ascending" | "Descending")
                                ) -> _ListEvaluationJobsResponseSuccess
                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListEvaluationJobsResponseSuccess

      interface _ListFoundationModelsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListFoundationModelsResponse]
        def model_summaries: () -> ::Array[Types::FoundationModelSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_foundation_models-instance_method
      def list_foundation_models: (
                                    ?by_provider: ::String,
                                    ?by_customization_type: ("FINE_TUNING" | "CONTINUED_PRE_TRAINING"),
                                    ?by_output_modality: ("TEXT" | "IMAGE" | "EMBEDDING"),
                                    ?by_inference_type: ("ON_DEMAND" | "PROVISIONED")
                                  ) -> _ListFoundationModelsResponseSuccess
                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListFoundationModelsResponseSuccess

      interface _ListGuardrailsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListGuardrailsResponse]
        def guardrails: () -> ::Array[Types::GuardrailSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_guardrails-instance_method
      def list_guardrails: (
                             ?guardrail_identifier: ::String,
                             ?max_results: ::Integer,
                             ?next_token: ::String
                           ) -> _ListGuardrailsResponseSuccess
                         | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListGuardrailsResponseSuccess

      interface _ListImportedModelsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListImportedModelsResponse]
        def next_token: () -> ::String
        def model_summaries: () -> ::Array[Types::ImportedModelSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_imported_models-instance_method
      def list_imported_models: (
                                  ?creation_time_before: ::Time,
                                  ?creation_time_after: ::Time,
                                  ?name_contains: ::String,
                                  ?max_results: ::Integer,
                                  ?next_token: ::String,
                                  ?sort_by: ("CreationTime"),
                                  ?sort_order: ("Ascending" | "Descending")
                                ) -> _ListImportedModelsResponseSuccess
                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListImportedModelsResponseSuccess

      interface _ListInferenceProfilesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListInferenceProfilesResponse]
        def inference_profile_summaries: () -> ::Array[Types::InferenceProfileSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_inference_profiles-instance_method
      def list_inference_profiles: (
                                     ?max_results: ::Integer,
                                     ?next_token: ::String
                                   ) -> _ListInferenceProfilesResponseSuccess
                                 | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListInferenceProfilesResponseSuccess

      interface _ListModelCopyJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelCopyJobsResponse]
        def next_token: () -> ::String
        def model_copy_job_summaries: () -> ::Array[Types::ModelCopyJobSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_model_copy_jobs-instance_method
      def list_model_copy_jobs: (
                                  ?creation_time_after: ::Time,
                                  ?creation_time_before: ::Time,
                                  ?status_equals: ("InProgress" | "Completed" | "Failed"),
                                  ?source_account_equals: ::String,
                                  ?source_model_arn_equals: ::String,
                                  ?target_model_name_contains: ::String,
                                  ?max_results: ::Integer,
                                  ?next_token: ::String,
                                  ?sort_by: ("CreationTime"),
                                  ?sort_order: ("Ascending" | "Descending")
                                ) -> _ListModelCopyJobsResponseSuccess
                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelCopyJobsResponseSuccess

      interface _ListModelCustomizationJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelCustomizationJobsResponse]
        def next_token: () -> ::String
        def model_customization_job_summaries: () -> ::Array[Types::ModelCustomizationJobSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_model_customization_jobs-instance_method
      def list_model_customization_jobs: (
                                           ?creation_time_after: ::Time,
                                           ?creation_time_before: ::Time,
                                           ?status_equals: ("InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped"),
                                           ?name_contains: ::String,
                                           ?max_results: ::Integer,
                                           ?next_token: ::String,
                                           ?sort_by: ("CreationTime"),
                                           ?sort_order: ("Ascending" | "Descending")
                                         ) -> _ListModelCustomizationJobsResponseSuccess
                                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelCustomizationJobsResponseSuccess

      interface _ListModelImportJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelImportJobsResponse]
        def next_token: () -> ::String
        def model_import_job_summaries: () -> ::Array[Types::ModelImportJobSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_model_import_jobs-instance_method
      def list_model_import_jobs: (
                                    ?creation_time_after: ::Time,
                                    ?creation_time_before: ::Time,
                                    ?status_equals: ("InProgress" | "Completed" | "Failed"),
                                    ?name_contains: ::String,
                                    ?max_results: ::Integer,
                                    ?next_token: ::String,
                                    ?sort_by: ("CreationTime"),
                                    ?sort_order: ("Ascending" | "Descending")
                                  ) -> _ListModelImportJobsResponseSuccess
                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelImportJobsResponseSuccess

      interface _ListModelInvocationJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListModelInvocationJobsResponse]
        def next_token: () -> ::String
        def invocation_job_summaries: () -> ::Array[Types::ModelInvocationJobSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_model_invocation_jobs-instance_method
      def list_model_invocation_jobs: (
                                        ?submit_time_after: ::Time,
                                        ?submit_time_before: ::Time,
                                        ?status_equals: ("Submitted" | "InProgress" | "Completed" | "Failed" | "Stopping" | "Stopped" | "PartiallyCompleted" | "Expired" | "Validating" | "Scheduled"),
                                        ?name_contains: ::String,
                                        ?max_results: ::Integer,
                                        ?next_token: ::String,
                                        ?sort_by: ("CreationTime"),
                                        ?sort_order: ("Ascending" | "Descending")
                                      ) -> _ListModelInvocationJobsResponseSuccess
                                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListModelInvocationJobsResponseSuccess

      interface _ListProvisionedModelThroughputsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListProvisionedModelThroughputsResponse]
        def next_token: () -> ::String
        def provisioned_model_summaries: () -> ::Array[Types::ProvisionedModelSummary]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_provisioned_model_throughputs-instance_method
      def list_provisioned_model_throughputs: (
                                                ?creation_time_after: ::Time,
                                                ?creation_time_before: ::Time,
                                                ?status_equals: ("Creating" | "InService" | "Updating" | "Failed"),
                                                ?model_arn_equals: ::String,
                                                ?name_contains: ::String,
                                                ?max_results: ::Integer,
                                                ?next_token: ::String,
                                                ?sort_by: ("CreationTime"),
                                                ?sort_order: ("Ascending" | "Descending")
                                              ) -> _ListProvisionedModelThroughputsResponseSuccess
                                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListProvisionedModelThroughputsResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Array[Types::Tag]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _PutModelInvocationLoggingConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutModelInvocationLoggingConfigurationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#put_model_invocation_logging_configuration-instance_method
      def put_model_invocation_logging_configuration: (
                                                        logging_config: {
                                                          cloud_watch_config: {
                                                            log_group_name: ::String,
                                                            role_arn: ::String,
                                                            large_data_delivery_s3_config: {
                                                              bucket_name: ::String,
                                                              key_prefix: ::String?
                                                            }?
                                                          }?,
                                                          s3_config: {
                                                            bucket_name: ::String,
                                                            key_prefix: ::String?
                                                          }?,
                                                          text_data_delivery_enabled: bool?,
                                                          image_data_delivery_enabled: bool?,
                                                          embedding_data_delivery_enabled: bool?
                                                        }
                                                      ) -> _PutModelInvocationLoggingConfigurationResponseSuccess
                                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutModelInvocationLoggingConfigurationResponseSuccess

      interface _StopEvaluationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StopEvaluationJobResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#stop_evaluation_job-instance_method
      def stop_evaluation_job: (
                                 job_identifier: ::String
                               ) -> _StopEvaluationJobResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StopEvaluationJobResponseSuccess

      interface _StopModelCustomizationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StopModelCustomizationJobResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#stop_model_customization_job-instance_method
      def stop_model_customization_job: (
                                          job_identifier: ::String
                                        ) -> _StopModelCustomizationJobResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StopModelCustomizationJobResponseSuccess

      interface _StopModelInvocationJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StopModelInvocationJobResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#stop_model_invocation_job-instance_method
      def stop_model_invocation_job: (
                                       job_identifier: ::String
                                     ) -> _StopModelInvocationJobResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StopModelInvocationJobResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      interface _UpdateGuardrailResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateGuardrailResponse]
        def guardrail_id: () -> ::String
        def guardrail_arn: () -> ::String
        def version: () -> ::String
        def updated_at: () -> ::Time
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#update_guardrail-instance_method
      def update_guardrail: (
                              guardrail_identifier: ::String,
                              name: ::String,
                              ?description: ::String,
                              ?topic_policy_config: {
                                topics_config: Array[
                                  {
                                    name: ::String,
                                    definition: ::String,
                                    examples: Array[::String]?,
                                    type: ("DENY")
                                  },
                                ]
                              },
                              ?content_policy_config: {
                                filters_config: Array[
                                  {
                                    type: ("SEXUAL" | "VIOLENCE" | "HATE" | "INSULTS" | "MISCONDUCT" | "PROMPT_ATTACK"),
                                    input_strength: ("NONE" | "LOW" | "MEDIUM" | "HIGH"),
                                    output_strength: ("NONE" | "LOW" | "MEDIUM" | "HIGH")
                                  },
                                ]
                              },
                              ?word_policy_config: {
                                words_config: Array[
                                  {
                                    text: ::String
                                  },
                                ]?,
                                managed_word_lists_config: Array[
                                  {
                                    type: ("PROFANITY")
                                  },
                                ]?
                              },
                              ?sensitive_information_policy_config: {
                                pii_entities_config: Array[
                                  {
                                    type: ("ADDRESS" | "AGE" | "AWS_ACCESS_KEY" | "AWS_SECRET_KEY" | "CA_HEALTH_NUMBER" | "CA_SOCIAL_INSURANCE_NUMBER" | "CREDIT_DEBIT_CARD_CVV" | "CREDIT_DEBIT_CARD_EXPIRY" | "CREDIT_DEBIT_CARD_NUMBER" | "DRIVER_ID" | "EMAIL" | "INTERNATIONAL_BANK_ACCOUNT_NUMBER" | "IP_ADDRESS" | "LICENSE_PLATE" | "MAC_ADDRESS" | "NAME" | "PASSWORD" | "PHONE" | "PIN" | "SWIFT_CODE" | "UK_NATIONAL_HEALTH_SERVICE_NUMBER" | "UK_NATIONAL_INSURANCE_NUMBER" | "UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER" | "URL" | "USERNAME" | "US_BANK_ACCOUNT_NUMBER" | "US_BANK_ROUTING_NUMBER" | "US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER" | "US_PASSPORT_NUMBER" | "US_SOCIAL_SECURITY_NUMBER" | "VEHICLE_IDENTIFICATION_NUMBER"),
                                    action: ("BLOCK" | "ANONYMIZE")
                                  },
                                ]?,
                                regexes_config: Array[
                                  {
                                    name: ::String,
                                    description: ::String?,
                                    pattern: ::String,
                                    action: ("BLOCK" | "ANONYMIZE")
                                  },
                                ]?
                              },
                              ?contextual_grounding_policy_config: {
                                filters_config: Array[
                                  {
                                    type: ("GROUNDING" | "RELEVANCE"),
                                    threshold: ::Float
                                  },
                                ]
                              },
                              blocked_input_messaging: ::String,
                              blocked_outputs_messaging: ::String,
                              ?kms_key_id: ::String
                            ) -> _UpdateGuardrailResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateGuardrailResponseSuccess

      interface _UpdateProvisionedModelThroughputResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateProvisionedModelThroughputResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Bedrock/Client.html#update_provisioned_model_throughput-instance_method
      def update_provisioned_model_throughput: (
                                                 provisioned_model_id: ::String,
                                                 ?desired_provisioned_model_name: ::String,
                                                 ?desired_model_id: ::String
                                               ) -> _UpdateProvisionedModelThroughputResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateProvisionedModelThroughputResponseSuccess
    end
  end
end

