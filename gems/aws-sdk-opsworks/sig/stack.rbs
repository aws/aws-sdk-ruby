# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module OpsWorks
    # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html
    class Stack
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#initialize-instance_method
      def initialize: (String id, Hash[Symbol, untyped] options) -> void
                    | (id: String, ?client: Client) -> void
                    | (Hash[Symbol, untyped] args) -> void

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#id-instance_method
      def id: () -> String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#stack_id-instance_method
      def stack_id: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#name-instance_method
      def name: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#arn-instance_method
      def arn: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#region-instance_method
      def region: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#vpc_id-instance_method
      def vpc_id: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#attributes-instance_method
      def attributes: () -> ::Hash[("Color"), ::String]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#service_role_arn-instance_method
      def service_role_arn: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#default_instance_profile_arn-instance_method
      def default_instance_profile_arn: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#default_os-instance_method
      def default_os: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#hostname_theme-instance_method
      def hostname_theme: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#default_availability_zone-instance_method
      def default_availability_zone: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#default_subnet_id-instance_method
      def default_subnet_id: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#custom_json-instance_method
      def custom_json: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#configuration_manager-instance_method
      def configuration_manager: () -> Types::StackConfigurationManager

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#chef_configuration-instance_method
      def chef_configuration: () -> Types::ChefConfiguration

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#use_custom_cookbooks-instance_method
      def use_custom_cookbooks: () -> bool

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#use_opsworks_security_groups-instance_method
      def use_opsworks_security_groups: () -> bool

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#custom_cookbooks_source-instance_method
      def custom_cookbooks_source: () -> Types::Source

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#default_ssh_key_name-instance_method
      def default_ssh_key_name: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#created_at-instance_method
      def created_at: () -> ::String

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#default_root_device_type-instance_method
      def default_root_device_type: () -> ("ebs" | "instance-store")

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#agent_version-instance_method
      def agent_version: () -> ::String

      def client: () -> Client

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#load-instance_method
      def load: () -> self
      alias reload load

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#data-instance_method
      def data: () -> Types::Stack

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#data_loaded?-instance_method
      def data_loaded?: () -> bool


      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#create_layer-instance_method
      def create_layer: (
                          type: ("aws-flow-ruby" | "ecs-cluster" | "java-app" | "lb" | "web" | "php-app" | "rails-app" | "nodejs-app" | "memcached" | "db-master" | "monitoring-master" | "custom"),
                          name: ::String,
                          shortname: ::String,
                          ?attributes: Hash[("EcsClusterArn" | "EnableHaproxyStats" | "HaproxyStatsUrl" | "HaproxyStatsUser" | "HaproxyStatsPassword" | "HaproxyHealthCheckUrl" | "HaproxyHealthCheckMethod" | "MysqlRootPassword" | "MysqlRootPasswordUbiquitous" | "GangliaUrl" | "GangliaUser" | "GangliaPassword" | "MemcachedMemory" | "NodejsVersion" | "RubyVersion" | "RubygemsVersion" | "ManageBundler" | "BundlerVersion" | "RailsStack" | "PassengerVersion" | "Jvm" | "JvmVersion" | "JvmOptions" | "JavaAppServer" | "JavaAppServerVersion"), ::String],
                          ?cloud_watch_logs_configuration: {
                            enabled: bool?,
                            log_streams: Array[
                              {
                                log_group_name: ::String?,
                                datetime_format: ::String?,
                                time_zone: ("LOCAL" | "UTC")?,
                                file: ::String?,
                                file_fingerprint_lines: ::String?,
                                multi_line_start_pattern: ::String?,
                                initial_position: ("start_of_file" | "end_of_file")?,
                                encoding: ("ascii" | "big5" | "big5hkscs" | "cp037" | "cp424" | "cp437" | "cp500" | "cp720" | "cp737" | "cp775" | "cp850" | "cp852" | "cp855" | "cp856" | "cp857" | "cp858" | "cp860" | "cp861" | "cp862" | "cp863" | "cp864" | "cp865" | "cp866" | "cp869" | "cp874" | "cp875" | "cp932" | "cp949" | "cp950" | "cp1006" | "cp1026" | "cp1140" | "cp1250" | "cp1251" | "cp1252" | "cp1253" | "cp1254" | "cp1255" | "cp1256" | "cp1257" | "cp1258" | "euc_jp" | "euc_jis_2004" | "euc_jisx0213" | "euc_kr" | "gb2312" | "gbk" | "gb18030" | "hz" | "iso2022_jp" | "iso2022_jp_1" | "iso2022_jp_2" | "iso2022_jp_2004" | "iso2022_jp_3" | "iso2022_jp_ext" | "iso2022_kr" | "latin_1" | "iso8859_2" | "iso8859_3" | "iso8859_4" | "iso8859_5" | "iso8859_6" | "iso8859_7" | "iso8859_8" | "iso8859_9" | "iso8859_10" | "iso8859_13" | "iso8859_14" | "iso8859_15" | "iso8859_16" | "johab" | "koi8_r" | "koi8_u" | "mac_cyrillic" | "mac_greek" | "mac_iceland" | "mac_latin2" | "mac_roman" | "mac_turkish" | "ptcp154" | "shift_jis" | "shift_jis_2004" | "shift_jisx0213" | "utf_32" | "utf_32_be" | "utf_32_le" | "utf_16" | "utf_16_be" | "utf_16_le" | "utf_7" | "utf_8" | "utf_8_sig")?,
                                buffer_duration: ::Integer?,
                                batch_count: ::Integer?,
                                batch_size: ::Integer?
                              },
                            ]?
                          },
                          ?custom_instance_profile_arn: ::String,
                          ?custom_json: ::String,
                          ?custom_security_group_ids: Array[::String],
                          ?packages: Array[::String],
                          ?volume_configurations: Array[
                            {
                              mount_point: ::String,
                              raid_level: ::Integer?,
                              number_of_disks: ::Integer,
                              size: ::Integer,
                              volume_type: ::String?,
                              iops: ::Integer?,
                              encrypted: bool?
                            },
                          ],
                          ?enable_auto_healing: bool,
                          ?auto_assign_elastic_ips: bool,
                          ?auto_assign_public_ips: bool,
                          ?custom_recipes: {
                            setup: Array[::String]?,
                            configure: Array[::String]?,
                            deploy: Array[::String]?,
                            undeploy: Array[::String]?,
                            shutdown: Array[::String]?
                          },
                          ?install_updates_on_boot: bool,
                          ?use_ebs_optimized_instances: bool,
                          ?lifecycle_event_configuration: {
                            shutdown: {
                              execution_timeout: ::Integer?,
                              delay_until_elb_connections_drained: bool?
                            }?
                          }
                        ) -> Layer
                      | (?Hash[Symbol, untyped]) -> Layer

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#delete-instance_method
      def delete: (
                  ) -> ::Aws::EmptyStructure
                | (?Hash[Symbol, untyped]) -> ::Aws::EmptyStructure

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#layers-instance_method
      def layers: (
                    ?layer_ids: Array[::String]
                  ) -> Layer::Collection
                | (?Hash[Symbol, untyped]) -> Layer::Collection

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Stack.html#summary-instance_method
      def summary: () -> StackSummary

      class Collection < ::Aws::Resources::Collection[Stack]
      end
    end
  end
end
