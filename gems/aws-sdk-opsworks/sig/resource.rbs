# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module OpsWorks
    # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Resource.html
    class Resource
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Resource.html#initialize-instance_method
      def initialize: (
                        ?client: Client,
                        ?credentials: untyped,
                        ?region: String,
                        ?access_key_id: String,
                        ?active_endpoint_cache: bool,
                        ?adaptive_retry_wait_to_fill: bool,
                        ?client_side_monitoring: bool,
                        ?client_side_monitoring_client_id: String,
                        ?client_side_monitoring_host: String,
                        ?client_side_monitoring_port: Integer,
                        ?client_side_monitoring_publisher: untyped,
                        ?convert_params: bool,
                        ?correct_clock_skew: bool,
                        ?defaults_mode: String,
                        ?disable_host_prefix_injection: bool,
                        ?disable_request_compression: bool,
                        ?endpoint: String,
                        ?endpoint_cache_max_entries: Integer,
                        ?endpoint_cache_max_threads: Integer,
                        ?endpoint_cache_poll_interval: Integer,
                        ?endpoint_discovery: bool,
                        ?ignore_configured_endpoint_urls: bool,
                        ?log_formatter: untyped,
                        ?log_level: Symbol,
                        ?logger: untyped,
                        ?max_attempts: Integer,
                        ?profile: String,
                        ?request_min_compression_size_bytes: Integer,
                        ?retry_backoff: Proc,
                        ?retry_base_delay: Float,
                        ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                        ?retry_limit: Integer,
                        ?retry_max_delay: Integer,
                        ?retry_mode: ("legacy" | "standard" | "adaptive"),
                        ?sdk_ua_app_id: String,
                        ?secret_access_key: String,
                        ?session_token: String,
                        ?simple_json: bool,
                        ?stub_responses: untyped,
                        ?token_provider: untyped,
                        ?use_dualstack_endpoint: bool,
                        ?use_fips_endpoint: bool,
                        ?validate_params: bool,
                        ?endpoint_provider: untyped,
                        ?http_proxy: String,
                        ?http_open_timeout: (Float | Integer),
                        ?http_read_timeout: (Float | Integer),
                        ?http_idle_timeout: (Float | Integer),
                        ?http_continue_timeout: (Float | Integer),
                        ?ssl_timeout: (Float | Integer | nil),
                        ?http_wire_trace: bool,
                        ?ssl_verify_peer: bool,
                        ?ssl_ca_bundle: String,
                        ?ssl_ca_directory: String,
                        ?ssl_ca_store: String,
                        ?on_chunk_received: Proc,
                        ?on_chunk_sent: Proc,
                        ?raise_response_errors: bool
                      ) -> void
                    | (?Hash[Symbol, untyped]) -> void

      def client: () -> Client


      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Resource.html#create_stack-instance_method
      def create_stack: (
                          name: ::String,
                          region: ::String,
                          ?vpc_id: ::String,
                          ?attributes: Hash[("Color"), ::String],
                          service_role_arn: ::String,
                          default_instance_profile_arn: ::String,
                          ?default_os: ::String,
                          ?hostname_theme: ::String,
                          ?default_availability_zone: ::String,
                          ?default_subnet_id: ::String,
                          ?custom_json: ::String,
                          ?configuration_manager: {
                            name: ::String?,
                            version: ::String?
                          },
                          ?chef_configuration: {
                            manage_berkshelf: bool?,
                            berkshelf_version: ::String?
                          },
                          ?use_custom_cookbooks: bool,
                          ?use_opsworks_security_groups: bool,
                          ?custom_cookbooks_source: {
                            type: ("git" | "svn" | "archive" | "s3")?,
                            url: ::String?,
                            username: ::String?,
                            password: ::String?,
                            ssh_key: ::String?,
                            revision: ::String?
                          },
                          ?default_ssh_key_name: ::String,
                          ?default_root_device_type: ("ebs" | "instance-store"),
                          ?agent_version: ::String
                        ) -> Stack
                      | (?Hash[Symbol, untyped]) -> Stack


      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Resource.html#layer-instance_method
      def layer: (String id) -> Layer

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Resource.html#stack-instance_method
      def stack: (String id) -> Stack

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/OpsWorks/Resource.html#stacks-instance_method
      def stacks: (
                    ?stack_ids: Array[::String]
                  ) -> Stack::Collection
                | (?Hash[Symbol, untyped]) -> Stack::Collection
    end
  end
end
