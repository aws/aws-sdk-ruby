# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module BedrockAgentRuntime
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockAgentRuntime/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?event_stream_handler: Proc,
                      ?ignore_configured_endpoint_urls: bool,
                      ?input_event_stream_handler: Proc,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?output_event_stream_handler: Proc,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _InvokeAgentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::InvokeAgentResponse]
        def completion: () -> Types::ResponseStream
        def content_type: () -> ::String
        def session_id: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockAgentRuntime/Client.html#invoke_agent-instance_method
      def invoke_agent: (
                          ?session_state: {
                            session_attributes: Hash[::String, ::String]?,
                            prompt_session_attributes: Hash[::String, ::String]?
                          },
                          agent_id: ::String,
                          agent_alias_id: ::String,
                          session_id: ::String,
                          ?end_session: bool,
                          ?enable_trace: bool,
                          input_text: ::String
                        ) ?{ (*untyped) -> void } -> _InvokeAgentResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) ?{ (*untyped) -> void } -> _InvokeAgentResponseSuccess

      interface _RetrieveResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::RetrieveResponse]
        def retrieval_results: () -> ::Array[Types::KnowledgeBaseRetrievalResult]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockAgentRuntime/Client.html#retrieve-instance_method
      def retrieve: (
                      knowledge_base_id: ::String,
                      retrieval_query: {
                        text: ::String
                      },
                      ?retrieval_configuration: {
                        vector_search_configuration: {
                          number_of_results: ::Integer
                        }
                      },
                      ?next_token: ::String
                    ) -> _RetrieveResponseSuccess
                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _RetrieveResponseSuccess

      interface _RetrieveAndGenerateResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::RetrieveAndGenerateResponse]
        def session_id: () -> ::String
        def output: () -> Types::RetrieveAndGenerateOutput
        def citations: () -> ::Array[Types::Citation]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/BedrockAgentRuntime/Client.html#retrieve_and_generate-instance_method
      def retrieve_and_generate: (
                                   ?session_id: ::String,
                                   input: {
                                     text: ::String
                                   },
                                   ?retrieve_and_generate_configuration: {
                                     type: ("KNOWLEDGE_BASE"),
                                     knowledge_base_configuration: {
                                       knowledge_base_id: ::String,
                                       model_arn: ::String
                                     }?
                                   },
                                   ?session_configuration: {
                                     kms_key_arn: ::String
                                   }
                                 ) -> _RetrieveAndGenerateResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _RetrieveAndGenerateResponseSuccess
    end
  end
end

