# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module SecurityHub
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _AcceptAdministratorInvitationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AcceptAdministratorInvitationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#accept_administrator_invitation-instance_method
      def accept_administrator_invitation: (
                                             administrator_id: ::String,
                                             invitation_id: ::String
                                           ) -> _AcceptAdministratorInvitationResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AcceptAdministratorInvitationResponseSuccess

      interface _AcceptInvitationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AcceptInvitationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#accept_invitation-instance_method
      def accept_invitation: (
                               master_id: ::String,
                               invitation_id: ::String
                             ) -> _AcceptInvitationResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AcceptInvitationResponseSuccess

      interface _BatchDeleteAutomationRulesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchDeleteAutomationRulesResponse]
        def processed_automation_rules: () -> ::Array[::String]
        def unprocessed_automation_rules: () -> ::Array[Types::UnprocessedAutomationRule]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_delete_automation_rules-instance_method
      def batch_delete_automation_rules: (
                                           automation_rules_arns: Array[::String]
                                         ) -> _BatchDeleteAutomationRulesResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchDeleteAutomationRulesResponseSuccess

      interface _BatchDisableStandardsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchDisableStandardsResponse]
        def standards_subscriptions: () -> ::Array[Types::StandardsSubscription]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_disable_standards-instance_method
      def batch_disable_standards: (
                                     standards_subscription_arns: Array[::String]
                                   ) -> _BatchDisableStandardsResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchDisableStandardsResponseSuccess

      interface _BatchEnableStandardsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchEnableStandardsResponse]
        def standards_subscriptions: () -> ::Array[Types::StandardsSubscription]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_enable_standards-instance_method
      def batch_enable_standards: (
                                    standards_subscription_requests: Array[
                                      {
                                        standards_arn: ::String,
                                        standards_input: Hash[::String, ::String]?
                                      },
                                    ]
                                  ) -> _BatchEnableStandardsResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchEnableStandardsResponseSuccess

      interface _BatchGetAutomationRulesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchGetAutomationRulesResponse]
        def rules: () -> ::Array[Types::AutomationRulesConfig]
        def unprocessed_automation_rules: () -> ::Array[Types::UnprocessedAutomationRule]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_get_automation_rules-instance_method
      def batch_get_automation_rules: (
                                        automation_rules_arns: Array[::String]
                                      ) -> _BatchGetAutomationRulesResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchGetAutomationRulesResponseSuccess

      interface _BatchGetConfigurationPolicyAssociationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchGetConfigurationPolicyAssociationsResponse]
        def configuration_policy_associations: () -> ::Array[Types::ConfigurationPolicyAssociationSummary]
        def unprocessed_configuration_policy_associations: () -> ::Array[Types::UnprocessedConfigurationPolicyAssociation]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_get_configuration_policy_associations-instance_method
      def batch_get_configuration_policy_associations: (
                                                         configuration_policy_association_identifiers: Array[
                                                           {
                                                             target: {
                                                               account_id: ::String?,
                                                               organizational_unit_id: ::String?,
                                                               root_id: ::String?
                                                             }?
                                                           },
                                                         ]
                                                       ) -> _BatchGetConfigurationPolicyAssociationsResponseSuccess
                                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchGetConfigurationPolicyAssociationsResponseSuccess

      interface _BatchGetSecurityControlsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchGetSecurityControlsResponse]
        def security_controls: () -> ::Array[Types::SecurityControl]
        def unprocessed_ids: () -> ::Array[Types::UnprocessedSecurityControl]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_get_security_controls-instance_method
      def batch_get_security_controls: (
                                         security_control_ids: Array[::String]
                                       ) -> _BatchGetSecurityControlsResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchGetSecurityControlsResponseSuccess

      interface _BatchGetStandardsControlAssociationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchGetStandardsControlAssociationsResponse]
        def standards_control_association_details: () -> ::Array[Types::StandardsControlAssociationDetail]
        def unprocessed_associations: () -> ::Array[Types::UnprocessedStandardsControlAssociation]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_get_standards_control_associations-instance_method
      def batch_get_standards_control_associations: (
                                                      standards_control_association_ids: Array[
                                                        {
                                                          security_control_id: ::String,
                                                          standards_arn: ::String
                                                        },
                                                      ]
                                                    ) -> _BatchGetStandardsControlAssociationsResponseSuccess
                                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchGetStandardsControlAssociationsResponseSuccess

      interface _BatchImportFindingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchImportFindingsResponse]
        def failed_count: () -> ::Integer
        def success_count: () -> ::Integer
        def failed_findings: () -> ::Array[Types::ImportFindingsError]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_import_findings-instance_method
      def batch_import_findings: (
                                   findings: Array[
                                     {
                                       schema_version: ::String,
                                       id: ::String,
                                       product_arn: ::String,
                                       product_name: ::String?,
                                       company_name: ::String?,
                                       region: ::String?,
                                       generator_id: ::String,
                                       aws_account_id: ::String,
                                       types: Array[::String]?,
                                       first_observed_at: ::String?,
                                       last_observed_at: ::String?,
                                       created_at: ::String,
                                       updated_at: ::String,
                                       severity: {
                                         product: ::Float?,
                                         label: ("INFORMATIONAL" | "LOW" | "MEDIUM" | "HIGH" | "CRITICAL")?,
                                         normalized: ::Integer?,
                                         original: ::String?
                                       }?,
                                       confidence: ::Integer?,
                                       criticality: ::Integer?,
                                       title: ::String,
                                       description: ::String,
                                       remediation: {
                                         recommendation: {
                                           text: ::String?,
                                           url: ::String?
                                         }?
                                       }?,
                                       source_url: ::String?,
                                       product_fields: Hash[::String, ::String]?,
                                       user_defined_fields: Hash[::String, ::String]?,
                                       malware: Array[
                                         {
                                           name: ::String,
                                           type: ("ADWARE" | "BLENDED_THREAT" | "BOTNET_AGENT" | "COIN_MINER" | "EXPLOIT_KIT" | "KEYLOGGER" | "MACRO" | "POTENTIALLY_UNWANTED" | "SPYWARE" | "RANSOMWARE" | "REMOTE_ACCESS" | "ROOTKIT" | "TROJAN" | "VIRUS" | "WORM")?,
                                           path: ::String?,
                                           state: ("OBSERVED" | "REMOVAL_FAILED" | "REMOVED")?
                                         },
                                       ]?,
                                       network: {
                                         direction: ("IN" | "OUT")?,
                                         protocol: ::String?,
                                         open_port_range: {
                                           begin: ::Integer?,
                                           end: ::Integer?
                                         }?,
                                         source_ip_v4: ::String?,
                                         source_ip_v6: ::String?,
                                         source_port: ::Integer?,
                                         source_domain: ::String?,
                                         source_mac: ::String?,
                                         destination_ip_v4: ::String?,
                                         destination_ip_v6: ::String?,
                                         destination_port: ::Integer?,
                                         destination_domain: ::String?
                                       }?,
                                       network_path: Array[
                                         {
                                           component_id: ::String?,
                                           component_type: ::String?,
                                           egress: {
                                             protocol: ::String?,
                                             destination: {
                                               address: Array[::String]?,
                                               port_ranges: Array[
                                                 {
                                                   begin: ::Integer?,
                                                   end: ::Integer?
                                                 },
                                               ]?
                                             }?,
                                             source: {
                                               address: Array[::String]?,
                                               port_ranges: Array[
                                                 {
                                                   begin: ::Integer?,
                                                   end: ::Integer?
                                                 },
                                               ]?
                                             }?
                                           }?,
                                           ingress: {
                                             protocol: ::String?,
                                             destination: {
                                               address: Array[::String]?,
                                               port_ranges: Array[
                                                 {
                                                   begin: ::Integer?,
                                                   end: ::Integer?
                                                 },
                                               ]?
                                             }?,
                                             source: {
                                               address: Array[::String]?,
                                               port_ranges: Array[
                                                 {
                                                   begin: ::Integer?,
                                                   end: ::Integer?
                                                 },
                                               ]?
                                             }?
                                           }?
                                         },
                                       ]?,
                                       process: {
                                         name: ::String?,
                                         path: ::String?,
                                         pid: ::Integer?,
                                         parent_pid: ::Integer?,
                                         launched_at: ::String?,
                                         terminated_at: ::String?
                                       }?,
                                       threats: Array[
                                         {
                                           name: ::String?,
                                           severity: ::String?,
                                           item_count: ::Integer?,
                                           file_paths: Array[
                                             {
                                               file_path: ::String?,
                                               file_name: ::String?,
                                               resource_id: ::String?,
                                               hash: ::String?
                                             },
                                           ]?
                                         },
                                       ]?,
                                       threat_intel_indicators: Array[
                                         {
                                           type: ("DOMAIN" | "EMAIL_ADDRESS" | "HASH_MD5" | "HASH_SHA1" | "HASH_SHA256" | "HASH_SHA512" | "IPV4_ADDRESS" | "IPV6_ADDRESS" | "MUTEX" | "PROCESS" | "URL")?,
                                           value: ::String?,
                                           category: ("BACKDOOR" | "CARD_STEALER" | "COMMAND_AND_CONTROL" | "DROP_SITE" | "EXPLOIT_SITE" | "KEYLOGGER")?,
                                           last_observed_at: ::String?,
                                           source: ::String?,
                                           source_url: ::String?
                                         },
                                       ]?,
                                       resources: Array[
                                         {
                                           type: ::String,
                                           id: ::String,
                                           partition: ("aws" | "aws-cn" | "aws-us-gov")?,
                                           region: ::String?,
                                           resource_role: ::String?,
                                           tags: Hash[::String, ::String]?,
                                           data_classification: {
                                             detailed_results_location: ::String?,
                                             result: {
                                               mime_type: ::String?,
                                               size_classified: ::Integer?,
                                               additional_occurrences: bool?,
                                               status: {
                                                 code: ::String?,
                                                 reason: ::String?
                                               }?,
                                               sensitive_data: Array[
                                                 {
                                                   category: ::String?,
                                                   detections: Array[
                                                     {
                                                       count: ::Integer?,
                                                       type: ::String?,
                                                       occurrences: {
                                                         line_ranges: Array[
                                                           {
                                                             start: ::Integer?,
                                                             end: ::Integer?,
                                                             start_column: ::Integer?
                                                           },
                                                         ]?,
                                                         offset_ranges: Array[
                                                           {
                                                             start: ::Integer?,
                                                             end: ::Integer?,
                                                             start_column: ::Integer?
                                                           },
                                                         ]?,
                                                         pages: Array[
                                                           {
                                                             page_number: ::Integer?,
                                                             line_range: {
                                                               start: ::Integer?,
                                                               end: ::Integer?,
                                                               start_column: ::Integer?
                                                             }?,
                                                             offset_range: {
                                                               start: ::Integer?,
                                                               end: ::Integer?,
                                                               start_column: ::Integer?
                                                             }?
                                                           },
                                                         ]?,
                                                         records: Array[
                                                           {
                                                             json_path: ::String?,
                                                             record_index: ::Integer?
                                                           },
                                                         ]?,
                                                         cells: Array[
                                                           {
                                                             column: ::Integer?,
                                                             row: ::Integer?,
                                                             column_name: ::String?,
                                                             cell_reference: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     },
                                                   ]?,
                                                   total_count: ::Integer?
                                                 },
                                               ]?,
                                               custom_data_identifiers: {
                                                 detections: Array[
                                                   {
                                                     count: ::Integer?,
                                                     arn: ::String?,
                                                     name: ::String?,
                                                     occurrences: {
                                                       line_ranges: Array[
                                                         {
                                                           start: ::Integer?,
                                                           end: ::Integer?,
                                                           start_column: ::Integer?
                                                         },
                                                       ]?,
                                                       offset_ranges: Array[
                                                         {
                                                           start: ::Integer?,
                                                           end: ::Integer?,
                                                           start_column: ::Integer?
                                                         },
                                                       ]?,
                                                       pages: Array[
                                                         {
                                                           page_number: ::Integer?,
                                                           line_range: {
                                                             start: ::Integer?,
                                                             end: ::Integer?,
                                                             start_column: ::Integer?
                                                           }?,
                                                           offset_range: {
                                                             start: ::Integer?,
                                                             end: ::Integer?,
                                                             start_column: ::Integer?
                                                           }?
                                                         },
                                                       ]?,
                                                       records: Array[
                                                         {
                                                           json_path: ::String?,
                                                           record_index: ::Integer?
                                                         },
                                                       ]?,
                                                       cells: Array[
                                                         {
                                                           column: ::Integer?,
                                                           row: ::Integer?,
                                                           column_name: ::String?,
                                                           cell_reference: ::String?
                                                         },
                                                       ]?
                                                     }?
                                                   },
                                                 ]?,
                                                 total_count: ::Integer?
                                               }?
                                             }?
                                           }?,
                                           details: {
                                             aws_auto_scaling_auto_scaling_group: {
                                               launch_configuration_name: ::String?,
                                               load_balancer_names: Array[::String]?,
                                               health_check_type: ::String?,
                                               health_check_grace_period: ::Integer?,
                                               created_time: ::String?,
                                               mixed_instances_policy: {
                                                 instances_distribution: {
                                                   on_demand_allocation_strategy: ::String?,
                                                   on_demand_base_capacity: ::Integer?,
                                                   on_demand_percentage_above_base_capacity: ::Integer?,
                                                   spot_allocation_strategy: ::String?,
                                                   spot_instance_pools: ::Integer?,
                                                   spot_max_price: ::String?
                                                 }?,
                                                 launch_template: {
                                                   launch_template_specification: {
                                                     launch_template_id: ::String?,
                                                     launch_template_name: ::String?,
                                                     version: ::String?
                                                   }?,
                                                   overrides: Array[
                                                     {
                                                       instance_type: ::String?,
                                                       weighted_capacity: ::String?
                                                     },
                                                   ]?
                                                 }?
                                               }?,
                                               availability_zones: Array[
                                                 {
                                                   value: ::String?
                                                 },
                                               ]?,
                                               launch_template: {
                                                 launch_template_id: ::String?,
                                                 launch_template_name: ::String?,
                                                 version: ::String?
                                               }?,
                                               capacity_rebalance: bool?
                                             }?,
                                             aws_code_build_project: {
                                               encryption_key: ::String?,
                                               artifacts: Array[
                                                 {
                                                   artifact_identifier: ::String?,
                                                   encryption_disabled: bool?,
                                                   location: ::String?,
                                                   name: ::String?,
                                                   namespace_type: ::String?,
                                                   override_artifact_name: bool?,
                                                   packaging: ::String?,
                                                   path: ::String?,
                                                   type: ::String?
                                                 },
                                               ]?,
                                               environment: {
                                                 certificate: ::String?,
                                                 environment_variables: Array[
                                                   {
                                                     name: ::String?,
                                                     type: ::String?,
                                                     value: ::String?
                                                   },
                                                 ]?,
                                                 privileged_mode: bool?,
                                                 image_pull_credentials_type: ::String?,
                                                 registry_credential: {
                                                   credential: ::String?,
                                                   credential_provider: ::String?
                                                 }?,
                                                 type: ::String?
                                               }?,
                                               name: ::String?,
                                               source: {
                                                 type: ::String?,
                                                 location: ::String?,
                                                 git_clone_depth: ::Integer?,
                                                 insecure_ssl: bool?
                                               }?,
                                               service_role: ::String?,
                                               logs_config: {
                                                 cloud_watch_logs: {
                                                   group_name: ::String?,
                                                   status: ::String?,
                                                   stream_name: ::String?
                                                 }?,
                                                 s3_logs: {
                                                   encryption_disabled: bool?,
                                                   location: ::String?,
                                                   status: ::String?
                                                 }?
                                               }?,
                                               vpc_config: {
                                                 vpc_id: ::String?,
                                                 subnets: Array[::String]?,
                                                 security_group_ids: Array[::String]?
                                               }?,
                                               secondary_artifacts: Array[
                                                 {
                                                   artifact_identifier: ::String?,
                                                   encryption_disabled: bool?,
                                                   location: ::String?,
                                                   name: ::String?,
                                                   namespace_type: ::String?,
                                                   override_artifact_name: bool?,
                                                   packaging: ::String?,
                                                   path: ::String?,
                                                   type: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_cloud_front_distribution: {
                                               cache_behaviors: {
                                                 items: Array[
                                                   {
                                                     viewer_protocol_policy: ::String?
                                                   },
                                                 ]?
                                               }?,
                                               default_cache_behavior: {
                                                 viewer_protocol_policy: ::String?
                                               }?,
                                               default_root_object: ::String?,
                                               domain_name: ::String?,
                                               etag: ::String?,
                                               last_modified_time: ::String?,
                                               logging: {
                                                 bucket: ::String?,
                                                 enabled: bool?,
                                                 include_cookies: bool?,
                                                 prefix: ::String?
                                               }?,
                                               origins: {
                                                 items: Array[
                                                   {
                                                     domain_name: ::String?,
                                                     id: ::String?,
                                                     origin_path: ::String?,
                                                     s3_origin_config: {
                                                       origin_access_identity: ::String?
                                                     }?,
                                                     custom_origin_config: {
                                                       http_port: ::Integer?,
                                                       https_port: ::Integer?,
                                                       origin_keepalive_timeout: ::Integer?,
                                                       origin_protocol_policy: ::String?,
                                                       origin_read_timeout: ::Integer?,
                                                       origin_ssl_protocols: {
                                                         items: Array[::String]?,
                                                         quantity: ::Integer?
                                                       }?
                                                     }?
                                                   },
                                                 ]?
                                               }?,
                                               origin_groups: {
                                                 items: Array[
                                                   {
                                                     failover_criteria: {
                                                       status_codes: {
                                                         items: Array[::Integer]?,
                                                         quantity: ::Integer?
                                                       }?
                                                     }?
                                                   },
                                                 ]?
                                               }?,
                                               viewer_certificate: {
                                                 acm_certificate_arn: ::String?,
                                                 certificate: ::String?,
                                                 certificate_source: ::String?,
                                                 cloud_front_default_certificate: bool?,
                                                 iam_certificate_id: ::String?,
                                                 minimum_protocol_version: ::String?,
                                                 ssl_support_method: ::String?
                                               }?,
                                               status: ::String?,
                                               web_acl_id: ::String?
                                             }?,
                                             aws_ec2_instance: {
                                               type: ::String?,
                                               image_id: ::String?,
                                               ip_v4_addresses: Array[::String]?,
                                               ip_v6_addresses: Array[::String]?,
                                               key_name: ::String?,
                                               iam_instance_profile_arn: ::String?,
                                               vpc_id: ::String?,
                                               subnet_id: ::String?,
                                               launched_at: ::String?,
                                               network_interfaces: Array[
                                                 {
                                                   network_interface_id: ::String?
                                                 },
                                               ]?,
                                               virtualization_type: ::String?,
                                               metadata_options: {
                                                 http_endpoint: ::String?,
                                                 http_protocol_ipv_6: ::String?,
                                                 http_put_response_hop_limit: ::Integer?,
                                                 http_tokens: ::String?,
                                                 instance_metadata_tags: ::String?
                                               }?,
                                               monitoring: {
                                                 state: ::String?
                                               }?
                                             }?,
                                             aws_ec2_network_interface: {
                                               attachment: {
                                                 attach_time: ::String?,
                                                 attachment_id: ::String?,
                                                 delete_on_termination: bool?,
                                                 device_index: ::Integer?,
                                                 instance_id: ::String?,
                                                 instance_owner_id: ::String?,
                                                 status: ::String?
                                               }?,
                                               network_interface_id: ::String?,
                                               security_groups: Array[
                                                 {
                                                   group_name: ::String?,
                                                   group_id: ::String?
                                                 },
                                               ]?,
                                               source_dest_check: bool?,
                                               ip_v6_addresses: Array[
                                                 {
                                                   ip_v6_address: ::String?
                                                 },
                                               ]?,
                                               private_ip_addresses: Array[
                                                 {
                                                   private_ip_address: ::String?,
                                                   private_dns_name: ::String?
                                                 },
                                               ]?,
                                               public_dns_name: ::String?,
                                               public_ip: ::String?
                                             }?,
                                             aws_ec2_security_group: {
                                               group_name: ::String?,
                                               group_id: ::String?,
                                               owner_id: ::String?,
                                               vpc_id: ::String?,
                                               ip_permissions: Array[
                                                 {
                                                   ip_protocol: ::String?,
                                                   from_port: ::Integer?,
                                                   to_port: ::Integer?,
                                                   user_id_group_pairs: Array[
                                                     {
                                                       group_id: ::String?,
                                                       group_name: ::String?,
                                                       peering_status: ::String?,
                                                       user_id: ::String?,
                                                       vpc_id: ::String?,
                                                       vpc_peering_connection_id: ::String?
                                                     },
                                                   ]?,
                                                   ip_ranges: Array[
                                                     {
                                                       cidr_ip: ::String?
                                                     },
                                                   ]?,
                                                   ipv_6_ranges: Array[
                                                     {
                                                       cidr_ipv_6: ::String?
                                                     },
                                                   ]?,
                                                   prefix_list_ids: Array[
                                                     {
                                                       prefix_list_id: ::String?
                                                     },
                                                   ]?
                                                 },
                                               ]?,
                                               ip_permissions_egress: Array[
                                                 {
                                                   ip_protocol: ::String?,
                                                   from_port: ::Integer?,
                                                   to_port: ::Integer?,
                                                   user_id_group_pairs: Array[
                                                     {
                                                       group_id: ::String?,
                                                       group_name: ::String?,
                                                       peering_status: ::String?,
                                                       user_id: ::String?,
                                                       vpc_id: ::String?,
                                                       vpc_peering_connection_id: ::String?
                                                     },
                                                   ]?,
                                                   ip_ranges: Array[
                                                     {
                                                       cidr_ip: ::String?
                                                     },
                                                   ]?,
                                                   ipv_6_ranges: Array[
                                                     {
                                                       cidr_ipv_6: ::String?
                                                     },
                                                   ]?,
                                                   prefix_list_ids: Array[
                                                     {
                                                       prefix_list_id: ::String?
                                                     },
                                                   ]?
                                                 },
                                               ]?
                                             }?,
                                             aws_ec2_volume: {
                                               create_time: ::String?,
                                               device_name: ::String?,
                                               encrypted: bool?,
                                               size: ::Integer?,
                                               snapshot_id: ::String?,
                                               status: ::String?,
                                               kms_key_id: ::String?,
                                               attachments: Array[
                                                 {
                                                   attach_time: ::String?,
                                                   delete_on_termination: bool?,
                                                   instance_id: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               volume_id: ::String?,
                                               volume_type: ::String?,
                                               volume_scan_status: ::String?
                                             }?,
                                             aws_ec2_vpc: {
                                               cidr_block_association_set: Array[
                                                 {
                                                   association_id: ::String?,
                                                   cidr_block: ::String?,
                                                   cidr_block_state: ::String?
                                                 },
                                               ]?,
                                               ipv_6_cidr_block_association_set: Array[
                                                 {
                                                   association_id: ::String?,
                                                   ipv_6_cidr_block: ::String?,
                                                   cidr_block_state: ::String?
                                                 },
                                               ]?,
                                               dhcp_options_id: ::String?,
                                               state: ::String?
                                             }?,
                                             aws_ec2_eip: {
                                               instance_id: ::String?,
                                               public_ip: ::String?,
                                               allocation_id: ::String?,
                                               association_id: ::String?,
                                               domain: ::String?,
                                               public_ipv_4_pool: ::String?,
                                               network_border_group: ::String?,
                                               network_interface_id: ::String?,
                                               network_interface_owner_id: ::String?,
                                               private_ip_address: ::String?
                                             }?,
                                             aws_ec2_subnet: {
                                               assign_ipv_6_address_on_creation: bool?,
                                               availability_zone: ::String?,
                                               availability_zone_id: ::String?,
                                               available_ip_address_count: ::Integer?,
                                               cidr_block: ::String?,
                                               default_for_az: bool?,
                                               map_public_ip_on_launch: bool?,
                                               owner_id: ::String?,
                                               state: ::String?,
                                               subnet_arn: ::String?,
                                               subnet_id: ::String?,
                                               vpc_id: ::String?,
                                               ipv_6_cidr_block_association_set: Array[
                                                 {
                                                   association_id: ::String?,
                                                   ipv_6_cidr_block: ::String?,
                                                   cidr_block_state: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_ec2_network_acl: {
                                               is_default: bool?,
                                               network_acl_id: ::String?,
                                               owner_id: ::String?,
                                               vpc_id: ::String?,
                                               associations: Array[
                                                 {
                                                   network_acl_association_id: ::String?,
                                                   network_acl_id: ::String?,
                                                   subnet_id: ::String?
                                                 },
                                               ]?,
                                               entries: Array[
                                                 {
                                                   cidr_block: ::String?,
                                                   egress: bool?,
                                                   icmp_type_code: {
                                                     code: ::Integer?,
                                                     type: ::Integer?
                                                   }?,
                                                   ipv_6_cidr_block: ::String?,
                                                   port_range: {
                                                     from: ::Integer?,
                                                     to: ::Integer?
                                                   }?,
                                                   protocol: ::String?,
                                                   rule_action: ::String?,
                                                   rule_number: ::Integer?
                                                 },
                                               ]?
                                             }?,
                                             aws_elbv_2_load_balancer: {
                                               availability_zones: Array[
                                                 {
                                                   zone_name: ::String?,
                                                   subnet_id: ::String?
                                                 },
                                               ]?,
                                               canonical_hosted_zone_id: ::String?,
                                               created_time: ::String?,
                                               dns_name: ::String?,
                                               ip_address_type: ::String?,
                                               scheme: ::String?,
                                               security_groups: Array[::String]?,
                                               state: {
                                                 code: ::String?,
                                                 reason: ::String?
                                               }?,
                                               type: ::String?,
                                               vpc_id: ::String?,
                                               load_balancer_attributes: Array[
                                                 {
                                                   key: ::String?,
                                                   value: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_elastic_beanstalk_environment: {
                                               application_name: ::String?,
                                               cname: ::String?,
                                               date_created: ::String?,
                                               date_updated: ::String?,
                                               description: ::String?,
                                               endpoint_url: ::String?,
                                               environment_arn: ::String?,
                                               environment_id: ::String?,
                                               environment_links: Array[
                                                 {
                                                   environment_name: ::String?,
                                                   link_name: ::String?
                                                 },
                                               ]?,
                                               environment_name: ::String?,
                                               option_settings: Array[
                                                 {
                                                   namespace: ::String?,
                                                   option_name: ::String?,
                                                   resource_name: ::String?,
                                                   value: ::String?
                                                 },
                                               ]?,
                                               platform_arn: ::String?,
                                               solution_stack_name: ::String?,
                                               status: ::String?,
                                               tier: {
                                                 name: ::String?,
                                                 type: ::String?,
                                                 version: ::String?
                                               }?,
                                               version_label: ::String?
                                             }?,
                                             aws_elasticsearch_domain: {
                                               access_policies: ::String?,
                                               domain_endpoint_options: {
                                                 enforce_https: bool?,
                                                 tls_security_policy: ::String?
                                               }?,
                                               domain_id: ::String?,
                                               domain_name: ::String?,
                                               endpoint: ::String?,
                                               endpoints: Hash[::String, ::String]?,
                                               elasticsearch_version: ::String?,
                                               elasticsearch_cluster_config: {
                                                 dedicated_master_count: ::Integer?,
                                                 dedicated_master_enabled: bool?,
                                                 dedicated_master_type: ::String?,
                                                 instance_count: ::Integer?,
                                                 instance_type: ::String?,
                                                 zone_awareness_config: {
                                                   availability_zone_count: ::Integer?
                                                 }?,
                                                 zone_awareness_enabled: bool?
                                               }?,
                                               encryption_at_rest_options: {
                                                 enabled: bool?,
                                                 kms_key_id: ::String?
                                               }?,
                                               log_publishing_options: {
                                                 index_slow_logs: {
                                                   cloud_watch_logs_log_group_arn: ::String?,
                                                   enabled: bool?
                                                 }?,
                                                 search_slow_logs: {
                                                   cloud_watch_logs_log_group_arn: ::String?,
                                                   enabled: bool?
                                                 }?,
                                                 audit_logs: {
                                                   cloud_watch_logs_log_group_arn: ::String?,
                                                   enabled: bool?
                                                 }?
                                               }?,
                                               node_to_node_encryption_options: {
                                                 enabled: bool?
                                               }?,
                                               service_software_options: {
                                                 automated_update_date: ::String?,
                                                 cancellable: bool?,
                                                 current_version: ::String?,
                                                 description: ::String?,
                                                 new_version: ::String?,
                                                 update_available: bool?,
                                                 update_status: ::String?
                                               }?,
                                               vpc_options: {
                                                 availability_zones: Array[::String]?,
                                                 security_group_ids: Array[::String]?,
                                                 subnet_ids: Array[::String]?,
                                                 vpc_id: ::String?
                                               }?
                                             }?,
                                             aws_s3_bucket: {
                                               owner_id: ::String?,
                                               owner_name: ::String?,
                                               owner_account_id: ::String?,
                                               created_at: ::String?,
                                               server_side_encryption_configuration: {
                                                 rules: Array[
                                                   {
                                                     apply_server_side_encryption_by_default: {
                                                       sse_algorithm: ::String?,
                                                       kms_master_key_id: ::String?
                                                     }?
                                                   },
                                                 ]?
                                               }?,
                                               bucket_lifecycle_configuration: {
                                                 rules: Array[
                                                   {
                                                     abort_incomplete_multipart_upload: {
                                                       days_after_initiation: ::Integer?
                                                     }?,
                                                     expiration_date: ::String?,
                                                     expiration_in_days: ::Integer?,
                                                     expired_object_delete_marker: bool?,
                                                     filter: {
                                                       predicate: {
                                                         operands: Array[
                                                           {
                                                             prefix: ::String?,
                                                             tag: {
                                                               key: ::String?,
                                                               value: ::String?
                                                             }?,
                                                             type: ::String?
                                                           },
                                                         ]?,
                                                         prefix: ::String?,
                                                         tag: {
                                                           key: ::String?,
                                                           value: ::String?
                                                         }?,
                                                         type: ::String?
                                                       }?
                                                     }?,
                                                     id: ::String?,
                                                     noncurrent_version_expiration_in_days: ::Integer?,
                                                     noncurrent_version_transitions: Array[
                                                       {
                                                         days: ::Integer?,
                                                         storage_class: ::String?
                                                       },
                                                     ]?,
                                                     prefix: ::String?,
                                                     status: ::String?,
                                                     transitions: Array[
                                                       {
                                                         date: ::String?,
                                                         days: ::Integer?,
                                                         storage_class: ::String?
                                                       },
                                                     ]?
                                                   },
                                                 ]?
                                               }?,
                                               public_access_block_configuration: {
                                                 block_public_acls: bool?,
                                                 block_public_policy: bool?,
                                                 ignore_public_acls: bool?,
                                                 restrict_public_buckets: bool?
                                               }?,
                                               access_control_list: ::String?,
                                               bucket_logging_configuration: {
                                                 destination_bucket_name: ::String?,
                                                 log_file_prefix: ::String?
                                               }?,
                                               bucket_website_configuration: {
                                                 error_document: ::String?,
                                                 index_document_suffix: ::String?,
                                                 redirect_all_requests_to: {
                                                   hostname: ::String?,
                                                   protocol: ::String?
                                                 }?,
                                                 routing_rules: Array[
                                                   {
                                                     condition: {
                                                       http_error_code_returned_equals: ::String?,
                                                       key_prefix_equals: ::String?
                                                     }?,
                                                     redirect: {
                                                       hostname: ::String?,
                                                       http_redirect_code: ::String?,
                                                       protocol: ::String?,
                                                       replace_key_prefix_with: ::String?,
                                                       replace_key_with: ::String?
                                                     }?
                                                   },
                                                 ]?
                                               }?,
                                               bucket_notification_configuration: {
                                                 configurations: Array[
                                                   {
                                                     events: Array[::String]?,
                                                     filter: {
                                                       s3_key_filter: {
                                                         filter_rules: Array[
                                                           {
                                                             name: ("Prefix" | "Suffix")?,
                                                             value: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     }?,
                                                     destination: ::String?,
                                                     type: ::String?
                                                   },
                                                 ]?
                                               }?,
                                               bucket_versioning_configuration: {
                                                 is_mfa_delete_enabled: bool?,
                                                 status: ::String?
                                               }?,
                                               object_lock_configuration: {
                                                 object_lock_enabled: ::String?,
                                                 rule: {
                                                   default_retention: {
                                                     days: ::Integer?,
                                                     mode: ::String?,
                                                     years: ::Integer?
                                                   }?
                                                 }?
                                               }?,
                                               name: ::String?
                                             }?,
                                             aws_s3_account_public_access_block: {
                                               block_public_acls: bool?,
                                               block_public_policy: bool?,
                                               ignore_public_acls: bool?,
                                               restrict_public_buckets: bool?
                                             }?,
                                             aws_s3_object: {
                                               last_modified: ::String?,
                                               etag: ::String?,
                                               version_id: ::String?,
                                               content_type: ::String?,
                                               server_side_encryption: ::String?,
                                               ssekms_key_id: ::String?
                                             }?,
                                             aws_secrets_manager_secret: {
                                               rotation_rules: {
                                                 automatically_after_days: ::Integer?
                                               }?,
                                               rotation_occurred_within_frequency: bool?,
                                               kms_key_id: ::String?,
                                               rotation_enabled: bool?,
                                               rotation_lambda_arn: ::String?,
                                               deleted: bool?,
                                               name: ::String?,
                                               description: ::String?
                                             }?,
                                             aws_iam_access_key: {
                                               user_name: ::String?,
                                               status: ("Active" | "Inactive")?,
                                               created_at: ::String?,
                                               principal_id: ::String?,
                                               principal_type: ::String?,
                                               principal_name: ::String?,
                                               account_id: ::String?,
                                               access_key_id: ::String?,
                                               session_context: {
                                                 attributes: {
                                                   mfa_authenticated: bool?,
                                                   creation_date: ::String?
                                                 }?,
                                                 session_issuer: {
                                                   type: ::String?,
                                                   principal_id: ::String?,
                                                   arn: ::String?,
                                                   account_id: ::String?,
                                                   user_name: ::String?
                                                 }?
                                               }?
                                             }?,
                                             aws_iam_user: {
                                               attached_managed_policies: Array[
                                                 {
                                                   policy_name: ::String?,
                                                   policy_arn: ::String?
                                                 },
                                               ]?,
                                               create_date: ::String?,
                                               group_list: Array[::String]?,
                                               path: ::String?,
                                               permissions_boundary: {
                                                 permissions_boundary_arn: ::String?,
                                                 permissions_boundary_type: ::String?
                                               }?,
                                               user_id: ::String?,
                                               user_name: ::String?,
                                               user_policy_list: Array[
                                                 {
                                                   policy_name: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_iam_policy: {
                                               attachment_count: ::Integer?,
                                               create_date: ::String?,
                                               default_version_id: ::String?,
                                               description: ::String?,
                                               is_attachable: bool?,
                                               path: ::String?,
                                               permissions_boundary_usage_count: ::Integer?,
                                               policy_id: ::String?,
                                               policy_name: ::String?,
                                               policy_version_list: Array[
                                                 {
                                                   version_id: ::String?,
                                                   is_default_version: bool?,
                                                   create_date: ::String?
                                                 },
                                               ]?,
                                               update_date: ::String?
                                             }?,
                                             aws_api_gateway_v2_stage: {
                                               client_certificate_id: ::String?,
                                               created_date: ::String?,
                                               description: ::String?,
                                               default_route_settings: {
                                                 detailed_metrics_enabled: bool?,
                                                 logging_level: ::String?,
                                                 data_trace_enabled: bool?,
                                                 throttling_burst_limit: ::Integer?,
                                                 throttling_rate_limit: ::Float?
                                               }?,
                                               deployment_id: ::String?,
                                               last_updated_date: ::String?,
                                               route_settings: {
                                                 detailed_metrics_enabled: bool?,
                                                 logging_level: ::String?,
                                                 data_trace_enabled: bool?,
                                                 throttling_burst_limit: ::Integer?,
                                                 throttling_rate_limit: ::Float?
                                               }?,
                                               stage_name: ::String?,
                                               stage_variables: Hash[::String, ::String]?,
                                               access_log_settings: {
                                                 format: ::String?,
                                                 destination_arn: ::String?
                                               }?,
                                               auto_deploy: bool?,
                                               last_deployment_status_message: ::String?,
                                               api_gateway_managed: bool?
                                             }?,
                                             aws_api_gateway_v2_api: {
                                               api_endpoint: ::String?,
                                               api_id: ::String?,
                                               api_key_selection_expression: ::String?,
                                               created_date: ::String?,
                                               description: ::String?,
                                               version: ::String?,
                                               name: ::String?,
                                               protocol_type: ::String?,
                                               route_selection_expression: ::String?,
                                               cors_configuration: {
                                                 allow_origins: Array[::String]?,
                                                 allow_credentials: bool?,
                                                 expose_headers: Array[::String]?,
                                                 max_age: ::Integer?,
                                                 allow_methods: Array[::String]?,
                                                 allow_headers: Array[::String]?
                                               }?
                                             }?,
                                             aws_dynamo_db_table: {
                                               attribute_definitions: Array[
                                                 {
                                                   attribute_name: ::String?,
                                                   attribute_type: ::String?
                                                 },
                                               ]?,
                                               billing_mode_summary: {
                                                 billing_mode: ::String?,
                                                 last_update_to_pay_per_request_date_time: ::String?
                                               }?,
                                               creation_date_time: ::String?,
                                               global_secondary_indexes: Array[
                                                 {
                                                   backfilling: bool?,
                                                   index_arn: ::String?,
                                                   index_name: ::String?,
                                                   index_size_bytes: ::Integer?,
                                                   index_status: ::String?,
                                                   item_count: ::Integer?,
                                                   key_schema: Array[
                                                     {
                                                       attribute_name: ::String?,
                                                       key_type: ::String?
                                                     },
                                                   ]?,
                                                   projection: {
                                                     non_key_attributes: Array[::String]?,
                                                     projection_type: ::String?
                                                   }?,
                                                   provisioned_throughput: {
                                                     last_decrease_date_time: ::String?,
                                                     last_increase_date_time: ::String?,
                                                     number_of_decreases_today: ::Integer?,
                                                     read_capacity_units: ::Integer?,
                                                     write_capacity_units: ::Integer?
                                                   }?
                                                 },
                                               ]?,
                                               global_table_version: ::String?,
                                               item_count: ::Integer?,
                                               key_schema: Array[
                                                 {
                                                   attribute_name: ::String?,
                                                   key_type: ::String?
                                                 },
                                               ]?,
                                               latest_stream_arn: ::String?,
                                               latest_stream_label: ::String?,
                                               local_secondary_indexes: Array[
                                                 {
                                                   index_arn: ::String?,
                                                   index_name: ::String?,
                                                   key_schema: Array[
                                                     {
                                                       attribute_name: ::String?,
                                                       key_type: ::String?
                                                     },
                                                   ]?,
                                                   projection: {
                                                     non_key_attributes: Array[::String]?,
                                                     projection_type: ::String?
                                                   }?
                                                 },
                                               ]?,
                                               provisioned_throughput: {
                                                 last_decrease_date_time: ::String?,
                                                 last_increase_date_time: ::String?,
                                                 number_of_decreases_today: ::Integer?,
                                                 read_capacity_units: ::Integer?,
                                                 write_capacity_units: ::Integer?
                                               }?,
                                               replicas: Array[
                                                 {
                                                   global_secondary_indexes: Array[
                                                     {
                                                       index_name: ::String?,
                                                       provisioned_throughput_override: {
                                                         read_capacity_units: ::Integer?
                                                       }?
                                                     },
                                                   ]?,
                                                   kms_master_key_id: ::String?,
                                                   provisioned_throughput_override: {
                                                     read_capacity_units: ::Integer?
                                                   }?,
                                                   region_name: ::String?,
                                                   replica_status: ::String?,
                                                   replica_status_description: ::String?
                                                 },
                                               ]?,
                                               restore_summary: {
                                                 source_backup_arn: ::String?,
                                                 source_table_arn: ::String?,
                                                 restore_date_time: ::String?,
                                                 restore_in_progress: bool?
                                               }?,
                                               sse_description: {
                                                 inaccessible_encryption_date_time: ::String?,
                                                 status: ::String?,
                                                 sse_type: ::String?,
                                                 kms_master_key_arn: ::String?
                                               }?,
                                               stream_specification: {
                                                 stream_enabled: bool?,
                                                 stream_view_type: ::String?
                                               }?,
                                               table_id: ::String?,
                                               table_name: ::String?,
                                               table_size_bytes: ::Integer?,
                                               table_status: ::String?,
                                               deletion_protection_enabled: bool?
                                             }?,
                                             aws_api_gateway_stage: {
                                               deployment_id: ::String?,
                                               client_certificate_id: ::String?,
                                               stage_name: ::String?,
                                               description: ::String?,
                                               cache_cluster_enabled: bool?,
                                               cache_cluster_size: ::String?,
                                               cache_cluster_status: ::String?,
                                               method_settings: Array[
                                                 {
                                                   metrics_enabled: bool?,
                                                   logging_level: ::String?,
                                                   data_trace_enabled: bool?,
                                                   throttling_burst_limit: ::Integer?,
                                                   throttling_rate_limit: ::Float?,
                                                   caching_enabled: bool?,
                                                   cache_ttl_in_seconds: ::Integer?,
                                                   cache_data_encrypted: bool?,
                                                   require_authorization_for_cache_control: bool?,
                                                   unauthorized_cache_control_header_strategy: ::String?,
                                                   http_method: ::String?,
                                                   resource_path: ::String?
                                                 },
                                               ]?,
                                               variables: Hash[::String, ::String]?,
                                               documentation_version: ::String?,
                                               access_log_settings: {
                                                 format: ::String?,
                                                 destination_arn: ::String?
                                               }?,
                                               canary_settings: {
                                                 percent_traffic: ::Float?,
                                                 deployment_id: ::String?,
                                                 stage_variable_overrides: Hash[::String, ::String]?,
                                                 use_stage_cache: bool?
                                               }?,
                                               tracing_enabled: bool?,
                                               created_date: ::String?,
                                               last_updated_date: ::String?,
                                               web_acl_arn: ::String?
                                             }?,
                                             aws_api_gateway_rest_api: {
                                               id: ::String?,
                                               name: ::String?,
                                               description: ::String?,
                                               created_date: ::String?,
                                               version: ::String?,
                                               binary_media_types: Array[::String]?,
                                               minimum_compression_size: ::Integer?,
                                               api_key_source: ::String?,
                                               endpoint_configuration: {
                                                 types: Array[::String]?
                                               }?
                                             }?,
                                             aws_cloud_trail_trail: {
                                               cloud_watch_logs_log_group_arn: ::String?,
                                               cloud_watch_logs_role_arn: ::String?,
                                               has_custom_event_selectors: bool?,
                                               home_region: ::String?,
                                               include_global_service_events: bool?,
                                               is_multi_region_trail: bool?,
                                               is_organization_trail: bool?,
                                               kms_key_id: ::String?,
                                               log_file_validation_enabled: bool?,
                                               name: ::String?,
                                               s3_bucket_name: ::String?,
                                               s3_key_prefix: ::String?,
                                               sns_topic_arn: ::String?,
                                               sns_topic_name: ::String?,
                                               trail_arn: ::String?
                                             }?,
                                             aws_ssm_patch_compliance: {
                                               patch: {
                                                 compliance_summary: {
                                                   status: ::String?,
                                                   compliant_critical_count: ::Integer?,
                                                   compliant_high_count: ::Integer?,
                                                   compliant_medium_count: ::Integer?,
                                                   execution_type: ::String?,
                                                   non_compliant_critical_count: ::Integer?,
                                                   compliant_informational_count: ::Integer?,
                                                   non_compliant_informational_count: ::Integer?,
                                                   compliant_unspecified_count: ::Integer?,
                                                   non_compliant_low_count: ::Integer?,
                                                   non_compliant_high_count: ::Integer?,
                                                   compliant_low_count: ::Integer?,
                                                   compliance_type: ::String?,
                                                   patch_baseline_id: ::String?,
                                                   overall_severity: ::String?,
                                                   non_compliant_medium_count: ::Integer?,
                                                   non_compliant_unspecified_count: ::Integer?,
                                                   patch_group: ::String?
                                                 }?
                                               }?
                                             }?,
                                             aws_certificate_manager_certificate: {
                                               certificate_authority_arn: ::String?,
                                               created_at: ::String?,
                                               domain_name: ::String?,
                                               domain_validation_options: Array[
                                                 {
                                                   domain_name: ::String?,
                                                   resource_record: {
                                                     name: ::String?,
                                                     type: ::String?,
                                                     value: ::String?
                                                   }?,
                                                   validation_domain: ::String?,
                                                   validation_emails: Array[::String]?,
                                                   validation_method: ::String?,
                                                   validation_status: ::String?
                                                 },
                                               ]?,
                                               extended_key_usages: Array[
                                                 {
                                                   name: ::String?,
                                                   o_id: ::String?
                                                 },
                                               ]?,
                                               failure_reason: ::String?,
                                               imported_at: ::String?,
                                               in_use_by: Array[::String]?,
                                               issued_at: ::String?,
                                               issuer: ::String?,
                                               key_algorithm: ::String?,
                                               key_usages: Array[
                                                 {
                                                   name: ::String?
                                                 },
                                               ]?,
                                               not_after: ::String?,
                                               not_before: ::String?,
                                               options: {
                                                 certificate_transparency_logging_preference: ::String?
                                               }?,
                                               renewal_eligibility: ::String?,
                                               renewal_summary: {
                                                 domain_validation_options: Array[
                                                   {
                                                     domain_name: ::String?,
                                                     resource_record: {
                                                       name: ::String?,
                                                       type: ::String?,
                                                       value: ::String?
                                                     }?,
                                                     validation_domain: ::String?,
                                                     validation_emails: Array[::String]?,
                                                     validation_method: ::String?,
                                                     validation_status: ::String?
                                                   },
                                                 ]?,
                                                 renewal_status: ::String?,
                                                 renewal_status_reason: ::String?,
                                                 updated_at: ::String?
                                               }?,
                                               serial: ::String?,
                                               signature_algorithm: ::String?,
                                               status: ::String?,
                                               subject: ::String?,
                                               subject_alternative_names: Array[::String]?,
                                               type: ::String?
                                             }?,
                                             aws_redshift_cluster: {
                                               allow_version_upgrade: bool?,
                                               automated_snapshot_retention_period: ::Integer?,
                                               availability_zone: ::String?,
                                               cluster_availability_status: ::String?,
                                               cluster_create_time: ::String?,
                                               cluster_identifier: ::String?,
                                               cluster_nodes: Array[
                                                 {
                                                   node_role: ::String?,
                                                   private_ip_address: ::String?,
                                                   public_ip_address: ::String?
                                                 },
                                               ]?,
                                               cluster_parameter_groups: Array[
                                                 {
                                                   cluster_parameter_status_list: Array[
                                                     {
                                                       parameter_name: ::String?,
                                                       parameter_apply_status: ::String?,
                                                       parameter_apply_error_description: ::String?
                                                     },
                                                   ]?,
                                                   parameter_apply_status: ::String?,
                                                   parameter_group_name: ::String?
                                                 },
                                               ]?,
                                               cluster_public_key: ::String?,
                                               cluster_revision_number: ::String?,
                                               cluster_security_groups: Array[
                                                 {
                                                   cluster_security_group_name: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               cluster_snapshot_copy_status: {
                                                 destination_region: ::String?,
                                                 manual_snapshot_retention_period: ::Integer?,
                                                 retention_period: ::Integer?,
                                                 snapshot_copy_grant_name: ::String?
                                               }?,
                                               cluster_status: ::String?,
                                               cluster_subnet_group_name: ::String?,
                                               cluster_version: ::String?,
                                               db_name: ::String?,
                                               deferred_maintenance_windows: Array[
                                                 {
                                                   defer_maintenance_end_time: ::String?,
                                                   defer_maintenance_identifier: ::String?,
                                                   defer_maintenance_start_time: ::String?
                                                 },
                                               ]?,
                                               elastic_ip_status: {
                                                 elastic_ip: ::String?,
                                                 status: ::String?
                                               }?,
                                               elastic_resize_number_of_node_options: ::String?,
                                               encrypted: bool?,
                                               endpoint: {
                                                 address: ::String?,
                                                 port: ::Integer?
                                               }?,
                                               enhanced_vpc_routing: bool?,
                                               expected_next_snapshot_schedule_time: ::String?,
                                               expected_next_snapshot_schedule_time_status: ::String?,
                                               hsm_status: {
                                                 hsm_client_certificate_identifier: ::String?,
                                                 hsm_configuration_identifier: ::String?,
                                                 status: ::String?
                                               }?,
                                               iam_roles: Array[
                                                 {
                                                   apply_status: ::String?,
                                                   iam_role_arn: ::String?
                                                 },
                                               ]?,
                                               kms_key_id: ::String?,
                                               maintenance_track_name: ::String?,
                                               manual_snapshot_retention_period: ::Integer?,
                                               master_username: ::String?,
                                               next_maintenance_window_start_time: ::String?,
                                               node_type: ::String?,
                                               number_of_nodes: ::Integer?,
                                               pending_actions: Array[::String]?,
                                               pending_modified_values: {
                                                 automated_snapshot_retention_period: ::Integer?,
                                                 cluster_identifier: ::String?,
                                                 cluster_type: ::String?,
                                                 cluster_version: ::String?,
                                                 encryption_type: ::String?,
                                                 enhanced_vpc_routing: bool?,
                                                 maintenance_track_name: ::String?,
                                                 master_user_password: ::String?,
                                                 node_type: ::String?,
                                                 number_of_nodes: ::Integer?,
                                                 publicly_accessible: bool?
                                               }?,
                                               preferred_maintenance_window: ::String?,
                                               publicly_accessible: bool?,
                                               resize_info: {
                                                 allow_cancel_resize: bool?,
                                                 resize_type: ::String?
                                               }?,
                                               restore_status: {
                                                 current_restore_rate_in_mega_bytes_per_second: ::Float?,
                                                 elapsed_time_in_seconds: ::Integer?,
                                                 estimated_time_to_completion_in_seconds: ::Integer?,
                                                 progress_in_mega_bytes: ::Integer?,
                                                 snapshot_size_in_mega_bytes: ::Integer?,
                                                 status: ::String?
                                               }?,
                                               snapshot_schedule_identifier: ::String?,
                                               snapshot_schedule_state: ::String?,
                                               vpc_id: ::String?,
                                               vpc_security_groups: Array[
                                                 {
                                                   status: ::String?,
                                                   vpc_security_group_id: ::String?
                                                 },
                                               ]?,
                                               logging_status: {
                                                 bucket_name: ::String?,
                                                 last_failure_message: ::String?,
                                                 last_failure_time: ::String?,
                                                 last_successful_delivery_time: ::String?,
                                                 logging_enabled: bool?,
                                                 s3_key_prefix: ::String?
                                               }?
                                             }?,
                                             aws_elb_load_balancer: {
                                               availability_zones: Array[::String]?,
                                               backend_server_descriptions: Array[
                                                 {
                                                   instance_port: ::Integer?,
                                                   policy_names: Array[::String]?
                                                 },
                                               ]?,
                                               canonical_hosted_zone_name: ::String?,
                                               canonical_hosted_zone_name_id: ::String?,
                                               created_time: ::String?,
                                               dns_name: ::String?,
                                               health_check: {
                                                 healthy_threshold: ::Integer?,
                                                 interval: ::Integer?,
                                                 target: ::String?,
                                                 timeout: ::Integer?,
                                                 unhealthy_threshold: ::Integer?
                                               }?,
                                               instances: Array[
                                                 {
                                                   instance_id: ::String?
                                                 },
                                               ]?,
                                               listener_descriptions: Array[
                                                 {
                                                   listener: {
                                                     instance_port: ::Integer?,
                                                     instance_protocol: ::String?,
                                                     load_balancer_port: ::Integer?,
                                                     protocol: ::String?,
                                                     ssl_certificate_id: ::String?
                                                   }?,
                                                   policy_names: Array[::String]?
                                                 },
                                               ]?,
                                               load_balancer_attributes: {
                                                 access_log: {
                                                   emit_interval: ::Integer?,
                                                   enabled: bool?,
                                                   s3_bucket_name: ::String?,
                                                   s3_bucket_prefix: ::String?
                                                 }?,
                                                 connection_draining: {
                                                   enabled: bool?,
                                                   timeout: ::Integer?
                                                 }?,
                                                 connection_settings: {
                                                   idle_timeout: ::Integer?
                                                 }?,
                                                 cross_zone_load_balancing: {
                                                   enabled: bool?
                                                 }?,
                                                 additional_attributes: Array[
                                                   {
                                                     key: ::String?,
                                                     value: ::String?
                                                   },
                                                 ]?
                                               }?,
                                               load_balancer_name: ::String?,
                                               policies: {
                                                 app_cookie_stickiness_policies: Array[
                                                   {
                                                     cookie_name: ::String?,
                                                     policy_name: ::String?
                                                   },
                                                 ]?,
                                                 lb_cookie_stickiness_policies: Array[
                                                   {
                                                     cookie_expiration_period: ::Integer?,
                                                     policy_name: ::String?
                                                   },
                                                 ]?,
                                                 other_policies: Array[::String]?
                                               }?,
                                               scheme: ::String?,
                                               security_groups: Array[::String]?,
                                               source_security_group: {
                                                 group_name: ::String?,
                                                 owner_alias: ::String?
                                               }?,
                                               subnets: Array[::String]?,
                                               vpc_id: ::String?
                                             }?,
                                             aws_iam_group: {
                                               attached_managed_policies: Array[
                                                 {
                                                   policy_name: ::String?,
                                                   policy_arn: ::String?
                                                 },
                                               ]?,
                                               create_date: ::String?,
                                               group_id: ::String?,
                                               group_name: ::String?,
                                               group_policy_list: Array[
                                                 {
                                                   policy_name: ::String?
                                                 },
                                               ]?,
                                               path: ::String?
                                             }?,
                                             aws_iam_role: {
                                               assume_role_policy_document: ::String?,
                                               attached_managed_policies: Array[
                                                 {
                                                   policy_name: ::String?,
                                                   policy_arn: ::String?
                                                 },
                                               ]?,
                                               create_date: ::String?,
                                               instance_profile_list: Array[
                                                 {
                                                   arn: ::String?,
                                                   create_date: ::String?,
                                                   instance_profile_id: ::String?,
                                                   instance_profile_name: ::String?,
                                                   path: ::String?,
                                                   roles: Array[
                                                     {
                                                       arn: ::String?,
                                                       assume_role_policy_document: ::String?,
                                                       create_date: ::String?,
                                                       path: ::String?,
                                                       role_id: ::String?,
                                                       role_name: ::String?
                                                     },
                                                   ]?
                                                 },
                                               ]?,
                                               permissions_boundary: {
                                                 permissions_boundary_arn: ::String?,
                                                 permissions_boundary_type: ::String?
                                               }?,
                                               role_id: ::String?,
                                               role_name: ::String?,
                                               role_policy_list: Array[
                                                 {
                                                   policy_name: ::String?
                                                 },
                                               ]?,
                                               max_session_duration: ::Integer?,
                                               path: ::String?
                                             }?,
                                             aws_kms_key: {
                                               aws_account_id: ::String?,
                                               creation_date: ::Float?,
                                               key_id: ::String?,
                                               key_manager: ::String?,
                                               key_state: ::String?,
                                               origin: ::String?,
                                               description: ::String?,
                                               key_rotation_status: bool?
                                             }?,
                                             aws_lambda_function: {
                                               code: {
                                                 s3_bucket: ::String?,
                                                 s3_key: ::String?,
                                                 s3_object_version: ::String?,
                                                 zip_file: ::String?
                                               }?,
                                               code_sha_256: ::String?,
                                               dead_letter_config: {
                                                 target_arn: ::String?
                                               }?,
                                               environment: {
                                                 variables: Hash[::String, ::String]?,
                                                 error: {
                                                   error_code: ::String?,
                                                   message: ::String?
                                                 }?
                                               }?,
                                               function_name: ::String?,
                                               handler: ::String?,
                                               kms_key_arn: ::String?,
                                               last_modified: ::String?,
                                               layers: Array[
                                                 {
                                                   arn: ::String?,
                                                   code_size: ::Integer?
                                                 },
                                               ]?,
                                               master_arn: ::String?,
                                               memory_size: ::Integer?,
                                               revision_id: ::String?,
                                               role: ::String?,
                                               runtime: ::String?,
                                               timeout: ::Integer?,
                                               tracing_config: {
                                                 mode: ::String?
                                               }?,
                                               vpc_config: {
                                                 security_group_ids: Array[::String]?,
                                                 subnet_ids: Array[::String]?,
                                                 vpc_id: ::String?
                                               }?,
                                               version: ::String?,
                                               architectures: Array[::String]?,
                                               package_type: ::String?
                                             }?,
                                             aws_lambda_layer_version: {
                                               version: ::Integer?,
                                               compatible_runtimes: Array[::String]?,
                                               created_date: ::String?
                                             }?,
                                             aws_rds_db_instance: {
                                               associated_roles: Array[
                                                 {
                                                   role_arn: ::String?,
                                                   feature_name: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               ca_certificate_identifier: ::String?,
                                               db_cluster_identifier: ::String?,
                                               db_instance_identifier: ::String?,
                                               db_instance_class: ::String?,
                                               db_instance_port: ::Integer?,
                                               dbi_resource_id: ::String?,
                                               db_name: ::String?,
                                               deletion_protection: bool?,
                                               endpoint: {
                                                 address: ::String?,
                                                 port: ::Integer?,
                                                 hosted_zone_id: ::String?
                                               }?,
                                               engine: ::String?,
                                               engine_version: ::String?,
                                               iam_database_authentication_enabled: bool?,
                                               instance_create_time: ::String?,
                                               kms_key_id: ::String?,
                                               publicly_accessible: bool?,
                                               storage_encrypted: bool?,
                                               tde_credential_arn: ::String?,
                                               vpc_security_groups: Array[
                                                 {
                                                   vpc_security_group_id: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               multi_az: bool?,
                                               enhanced_monitoring_resource_arn: ::String?,
                                               db_instance_status: ::String?,
                                               master_username: ::String?,
                                               allocated_storage: ::Integer?,
                                               preferred_backup_window: ::String?,
                                               backup_retention_period: ::Integer?,
                                               db_security_groups: Array[::String]?,
                                               db_parameter_groups: Array[
                                                 {
                                                   db_parameter_group_name: ::String?,
                                                   parameter_apply_status: ::String?
                                                 },
                                               ]?,
                                               availability_zone: ::String?,
                                               db_subnet_group: {
                                                 db_subnet_group_name: ::String?,
                                                 db_subnet_group_description: ::String?,
                                                 vpc_id: ::String?,
                                                 subnet_group_status: ::String?,
                                                 subnets: Array[
                                                   {
                                                     subnet_identifier: ::String?,
                                                     subnet_availability_zone: {
                                                       name: ::String?
                                                     }?,
                                                     subnet_status: ::String?
                                                   },
                                                 ]?,
                                                 db_subnet_group_arn: ::String?
                                               }?,
                                               preferred_maintenance_window: ::String?,
                                               pending_modified_values: {
                                                 db_instance_class: ::String?,
                                                 allocated_storage: ::Integer?,
                                                 master_user_password: ::String?,
                                                 port: ::Integer?,
                                                 backup_retention_period: ::Integer?,
                                                 multi_az: bool?,
                                                 engine_version: ::String?,
                                                 license_model: ::String?,
                                                 iops: ::Integer?,
                                                 db_instance_identifier: ::String?,
                                                 storage_type: ::String?,
                                                 ca_certificate_identifier: ::String?,
                                                 db_subnet_group_name: ::String?,
                                                 pending_cloud_watch_logs_exports: {
                                                   log_types_to_enable: Array[::String]?,
                                                   log_types_to_disable: Array[::String]?
                                                 }?,
                                                 processor_features: Array[
                                                   {
                                                     name: ::String?,
                                                     value: ::String?
                                                   },
                                                 ]?
                                               }?,
                                               latest_restorable_time: ::String?,
                                               auto_minor_version_upgrade: bool?,
                                               read_replica_source_db_instance_identifier: ::String?,
                                               read_replica_db_instance_identifiers: Array[::String]?,
                                               read_replica_db_cluster_identifiers: Array[::String]?,
                                               license_model: ::String?,
                                               iops: ::Integer?,
                                               option_group_memberships: Array[
                                                 {
                                                   option_group_name: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               character_set_name: ::String?,
                                               secondary_availability_zone: ::String?,
                                               status_infos: Array[
                                                 {
                                                   status_type: ::String?,
                                                   normal: bool?,
                                                   status: ::String?,
                                                   message: ::String?
                                                 },
                                               ]?,
                                               storage_type: ::String?,
                                               domain_memberships: Array[
                                                 {
                                                   domain: ::String?,
                                                   status: ::String?,
                                                   fqdn: ::String?,
                                                   iam_role_name: ::String?
                                                 },
                                               ]?,
                                               copy_tags_to_snapshot: bool?,
                                               monitoring_interval: ::Integer?,
                                               monitoring_role_arn: ::String?,
                                               promotion_tier: ::Integer?,
                                               timezone: ::String?,
                                               performance_insights_enabled: bool?,
                                               performance_insights_kms_key_id: ::String?,
                                               performance_insights_retention_period: ::Integer?,
                                               enabled_cloud_watch_logs_exports: Array[::String]?,
                                               processor_features: Array[
                                                 {
                                                   name: ::String?,
                                                   value: ::String?
                                                 },
                                               ]?,
                                               listener_endpoint: {
                                                 address: ::String?,
                                                 port: ::Integer?,
                                                 hosted_zone_id: ::String?
                                               }?,
                                               max_allocated_storage: ::Integer?
                                             }?,
                                             aws_sns_topic: {
                                               kms_master_key_id: ::String?,
                                               subscription: Array[
                                                 {
                                                   endpoint: ::String?,
                                                   protocol: ::String?
                                                 },
                                               ]?,
                                               topic_name: ::String?,
                                               owner: ::String?,
                                               sqs_success_feedback_role_arn: ::String?,
                                               sqs_failure_feedback_role_arn: ::String?,
                                               application_success_feedback_role_arn: ::String?,
                                               firehose_success_feedback_role_arn: ::String?,
                                               firehose_failure_feedback_role_arn: ::String?,
                                               http_success_feedback_role_arn: ::String?,
                                               http_failure_feedback_role_arn: ::String?
                                             }?,
                                             aws_sqs_queue: {
                                               kms_data_key_reuse_period_seconds: ::Integer?,
                                               kms_master_key_id: ::String?,
                                               queue_name: ::String?,
                                               dead_letter_target_arn: ::String?
                                             }?,
                                             aws_waf_web_acl: {
                                               name: ::String?,
                                               default_action: ::String?,
                                               rules: Array[
                                                 {
                                                   action: {
                                                     type: ::String?
                                                   }?,
                                                   excluded_rules: Array[
                                                     {
                                                       rule_id: ::String?
                                                     },
                                                   ]?,
                                                   override_action: {
                                                     type: ::String?
                                                   }?,
                                                   priority: ::Integer?,
                                                   rule_id: ::String?,
                                                   type: ::String?
                                                 },
                                               ]?,
                                               web_acl_id: ::String?
                                             }?,
                                             aws_rds_db_snapshot: {
                                               db_snapshot_identifier: ::String?,
                                               db_instance_identifier: ::String?,
                                               snapshot_create_time: ::String?,
                                               engine: ::String?,
                                               allocated_storage: ::Integer?,
                                               status: ::String?,
                                               port: ::Integer?,
                                               availability_zone: ::String?,
                                               vpc_id: ::String?,
                                               instance_create_time: ::String?,
                                               master_username: ::String?,
                                               engine_version: ::String?,
                                               license_model: ::String?,
                                               snapshot_type: ::String?,
                                               iops: ::Integer?,
                                               option_group_name: ::String?,
                                               percent_progress: ::Integer?,
                                               source_region: ::String?,
                                               source_db_snapshot_identifier: ::String?,
                                               storage_type: ::String?,
                                               tde_credential_arn: ::String?,
                                               encrypted: bool?,
                                               kms_key_id: ::String?,
                                               timezone: ::String?,
                                               iam_database_authentication_enabled: bool?,
                                               processor_features: Array[
                                                 {
                                                   name: ::String?,
                                                   value: ::String?
                                                 },
                                               ]?,
                                               dbi_resource_id: ::String?
                                             }?,
                                             aws_rds_db_cluster_snapshot: {
                                               availability_zones: Array[::String]?,
                                               snapshot_create_time: ::String?,
                                               engine: ::String?,
                                               allocated_storage: ::Integer?,
                                               status: ::String?,
                                               port: ::Integer?,
                                               vpc_id: ::String?,
                                               cluster_create_time: ::String?,
                                               master_username: ::String?,
                                               engine_version: ::String?,
                                               license_model: ::String?,
                                               snapshot_type: ::String?,
                                               percent_progress: ::Integer?,
                                               storage_encrypted: bool?,
                                               kms_key_id: ::String?,
                                               db_cluster_identifier: ::String?,
                                               db_cluster_snapshot_identifier: ::String?,
                                               iam_database_authentication_enabled: bool?,
                                               db_cluster_snapshot_attributes: Array[
                                                 {
                                                   attribute_name: ::String?,
                                                   attribute_values: Array[::String]?
                                                 },
                                               ]?
                                             }?,
                                             aws_rds_db_cluster: {
                                               allocated_storage: ::Integer?,
                                               availability_zones: Array[::String]?,
                                               backup_retention_period: ::Integer?,
                                               database_name: ::String?,
                                               status: ::String?,
                                               endpoint: ::String?,
                                               reader_endpoint: ::String?,
                                               custom_endpoints: Array[::String]?,
                                               multi_az: bool?,
                                               engine: ::String?,
                                               engine_version: ::String?,
                                               port: ::Integer?,
                                               master_username: ::String?,
                                               preferred_backup_window: ::String?,
                                               preferred_maintenance_window: ::String?,
                                               read_replica_identifiers: Array[::String]?,
                                               vpc_security_groups: Array[
                                                 {
                                                   vpc_security_group_id: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               hosted_zone_id: ::String?,
                                               storage_encrypted: bool?,
                                               kms_key_id: ::String?,
                                               db_cluster_resource_id: ::String?,
                                               associated_roles: Array[
                                                 {
                                                   role_arn: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               cluster_create_time: ::String?,
                                               enabled_cloud_watch_logs_exports: Array[::String]?,
                                               engine_mode: ::String?,
                                               deletion_protection: bool?,
                                               http_endpoint_enabled: bool?,
                                               activity_stream_status: ::String?,
                                               copy_tags_to_snapshot: bool?,
                                               cross_account_clone: bool?,
                                               domain_memberships: Array[
                                                 {
                                                   domain: ::String?,
                                                   status: ::String?,
                                                   fqdn: ::String?,
                                                   iam_role_name: ::String?
                                                 },
                                               ]?,
                                               db_cluster_parameter_group: ::String?,
                                               db_subnet_group: ::String?,
                                               db_cluster_option_group_memberships: Array[
                                                 {
                                                   db_cluster_option_group_name: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               db_cluster_identifier: ::String?,
                                               db_cluster_members: Array[
                                                 {
                                                   is_cluster_writer: bool?,
                                                   promotion_tier: ::Integer?,
                                                   db_instance_identifier: ::String?,
                                                   db_cluster_parameter_group_status: ::String?
                                                 },
                                               ]?,
                                               iam_database_authentication_enabled: bool?,
                                               auto_minor_version_upgrade: bool?
                                             }?,
                                             aws_ecs_cluster: {
                                               cluster_arn: ::String?,
                                               active_services_count: ::Integer?,
                                               capacity_providers: Array[::String]?,
                                               cluster_settings: Array[
                                                 {
                                                   name: ::String?,
                                                   value: ::String?
                                                 },
                                               ]?,
                                               configuration: {
                                                 execute_command_configuration: {
                                                   kms_key_id: ::String?,
                                                   log_configuration: {
                                                     cloud_watch_encryption_enabled: bool?,
                                                     cloud_watch_log_group_name: ::String?,
                                                     s3_bucket_name: ::String?,
                                                     s3_encryption_enabled: bool?,
                                                     s3_key_prefix: ::String?
                                                   }?,
                                                   logging: ::String?
                                                 }?
                                               }?,
                                               default_capacity_provider_strategy: Array[
                                                 {
                                                   base: ::Integer?,
                                                   capacity_provider: ::String?,
                                                   weight: ::Integer?
                                                 },
                                               ]?,
                                               cluster_name: ::String?,
                                               registered_container_instances_count: ::Integer?,
                                               running_tasks_count: ::Integer?,
                                               status: ::String?
                                             }?,
                                             aws_ecs_container: {
                                               name: ::String?,
                                               image: ::String?,
                                               mount_points: Array[
                                                 {
                                                   source_volume: ::String?,
                                                   container_path: ::String?
                                                 },
                                               ]?,
                                               privileged: bool?
                                             }?,
                                             aws_ecs_task_definition: {
                                               container_definitions: Array[
                                                 {
                                                   command: Array[::String]?,
                                                   cpu: ::Integer?,
                                                   depends_on: Array[
                                                     {
                                                       condition: ::String?,
                                                       container_name: ::String?
                                                     },
                                                   ]?,
                                                   disable_networking: bool?,
                                                   dns_search_domains: Array[::String]?,
                                                   dns_servers: Array[::String]?,
                                                   docker_labels: Hash[::String, ::String]?,
                                                   docker_security_options: Array[::String]?,
                                                   entry_point: Array[::String]?,
                                                   environment: Array[
                                                     {
                                                       name: ::String?,
                                                       value: ::String?
                                                     },
                                                   ]?,
                                                   environment_files: Array[
                                                     {
                                                       type: ::String?,
                                                       value: ::String?
                                                     },
                                                   ]?,
                                                   essential: bool?,
                                                   extra_hosts: Array[
                                                     {
                                                       hostname: ::String?,
                                                       ip_address: ::String?
                                                     },
                                                   ]?,
                                                   firelens_configuration: {
                                                     options: Hash[::String, ::String]?,
                                                     type: ::String?
                                                   }?,
                                                   health_check: {
                                                     command: Array[::String]?,
                                                     interval: ::Integer?,
                                                     retries: ::Integer?,
                                                     start_period: ::Integer?,
                                                     timeout: ::Integer?
                                                   }?,
                                                   hostname: ::String?,
                                                   image: ::String?,
                                                   interactive: bool?,
                                                   links: Array[::String]?,
                                                   linux_parameters: {
                                                     capabilities: {
                                                       add: Array[::String]?,
                                                       drop: Array[::String]?
                                                     }?,
                                                     devices: Array[
                                                       {
                                                         container_path: ::String?,
                                                         host_path: ::String?,
                                                         permissions: Array[::String]?
                                                       },
                                                     ]?,
                                                     init_process_enabled: bool?,
                                                     max_swap: ::Integer?,
                                                     shared_memory_size: ::Integer?,
                                                     swappiness: ::Integer?,
                                                     tmpfs: Array[
                                                       {
                                                         container_path: ::String?,
                                                         mount_options: Array[::String]?,
                                                         size: ::Integer?
                                                       },
                                                     ]?
                                                   }?,
                                                   log_configuration: {
                                                     log_driver: ::String?,
                                                     options: Hash[::String, ::String]?,
                                                     secret_options: Array[
                                                       {
                                                         name: ::String?,
                                                         value_from: ::String?
                                                       },
                                                     ]?
                                                   }?,
                                                   memory: ::Integer?,
                                                   memory_reservation: ::Integer?,
                                                   mount_points: Array[
                                                     {
                                                       container_path: ::String?,
                                                       read_only: bool?,
                                                       source_volume: ::String?
                                                     },
                                                   ]?,
                                                   name: ::String?,
                                                   port_mappings: Array[
                                                     {
                                                       container_port: ::Integer?,
                                                       host_port: ::Integer?,
                                                       protocol: ::String?
                                                     },
                                                   ]?,
                                                   privileged: bool?,
                                                   pseudo_terminal: bool?,
                                                   readonly_root_filesystem: bool?,
                                                   repository_credentials: {
                                                     credentials_parameter: ::String?
                                                   }?,
                                                   resource_requirements: Array[
                                                     {
                                                       type: ::String?,
                                                       value: ::String?
                                                     },
                                                   ]?,
                                                   secrets: Array[
                                                     {
                                                       name: ::String?,
                                                       value_from: ::String?
                                                     },
                                                   ]?,
                                                   start_timeout: ::Integer?,
                                                   stop_timeout: ::Integer?,
                                                   system_controls: Array[
                                                     {
                                                       namespace: ::String?,
                                                       value: ::String?
                                                     },
                                                   ]?,
                                                   ulimits: Array[
                                                     {
                                                       hard_limit: ::Integer?,
                                                       name: ::String?,
                                                       soft_limit: ::Integer?
                                                     },
                                                   ]?,
                                                   user: ::String?,
                                                   volumes_from: Array[
                                                     {
                                                       read_only: bool?,
                                                       source_container: ::String?
                                                     },
                                                   ]?,
                                                   working_directory: ::String?
                                                 },
                                               ]?,
                                               cpu: ::String?,
                                               execution_role_arn: ::String?,
                                               family: ::String?,
                                               inference_accelerators: Array[
                                                 {
                                                   device_name: ::String?,
                                                   device_type: ::String?
                                                 },
                                               ]?,
                                               ipc_mode: ::String?,
                                               memory: ::String?,
                                               network_mode: ::String?,
                                               pid_mode: ::String?,
                                               placement_constraints: Array[
                                                 {
                                                   expression: ::String?,
                                                   type: ::String?
                                                 },
                                               ]?,
                                               proxy_configuration: {
                                                 container_name: ::String?,
                                                 proxy_configuration_properties: Array[
                                                   {
                                                     name: ::String?,
                                                     value: ::String?
                                                   },
                                                 ]?,
                                                 type: ::String?
                                               }?,
                                               requires_compatibilities: Array[::String]?,
                                               task_role_arn: ::String?,
                                               volumes: Array[
                                                 {
                                                   docker_volume_configuration: {
                                                     autoprovision: bool?,
                                                     driver: ::String?,
                                                     driver_opts: Hash[::String, ::String]?,
                                                     labels: Hash[::String, ::String]?,
                                                     scope: ::String?
                                                   }?,
                                                   efs_volume_configuration: {
                                                     authorization_config: {
                                                       access_point_id: ::String?,
                                                       iam: ::String?
                                                     }?,
                                                     filesystem_id: ::String?,
                                                     root_directory: ::String?,
                                                     transit_encryption: ::String?,
                                                     transit_encryption_port: ::Integer?
                                                   }?,
                                                   host: {
                                                     source_path: ::String?
                                                   }?,
                                                   name: ::String?
                                                 },
                                               ]?,
                                               status: ::String?
                                             }?,
                                             container: {
                                               container_runtime: ::String?,
                                               name: ::String?,
                                               image_id: ::String?,
                                               image_name: ::String?,
                                               launched_at: ::String?,
                                               volume_mounts: Array[
                                                 {
                                                   name: ::String?,
                                                   mount_path: ::String?
                                                 },
                                               ]?,
                                               privileged: bool?
                                             }?,
                                             other: Hash[::String, ::String]?,
                                             aws_rds_event_subscription: {
                                               cust_subscription_id: ::String?,
                                               customer_aws_id: ::String?,
                                               enabled: bool?,
                                               event_categories_list: Array[::String]?,
                                               event_subscription_arn: ::String?,
                                               sns_topic_arn: ::String?,
                                               source_ids_list: Array[::String]?,
                                               source_type: ::String?,
                                               status: ::String?,
                                               subscription_creation_time: ::String?
                                             }?,
                                             aws_ecs_service: {
                                               capacity_provider_strategy: Array[
                                                 {
                                                   base: ::Integer?,
                                                   capacity_provider: ::String?,
                                                   weight: ::Integer?
                                                 },
                                               ]?,
                                               cluster: ::String?,
                                               deployment_configuration: {
                                                 deployment_circuit_breaker: {
                                                   enable: bool?,
                                                   rollback: bool?
                                                 }?,
                                                 maximum_percent: ::Integer?,
                                                 minimum_healthy_percent: ::Integer?
                                               }?,
                                               deployment_controller: {
                                                 type: ::String?
                                               }?,
                                               desired_count: ::Integer?,
                                               enable_ecs_managed_tags: bool?,
                                               enable_execute_command: bool?,
                                               health_check_grace_period_seconds: ::Integer?,
                                               launch_type: ::String?,
                                               load_balancers: Array[
                                                 {
                                                   container_name: ::String?,
                                                   container_port: ::Integer?,
                                                   load_balancer_name: ::String?,
                                                   target_group_arn: ::String?
                                                 },
                                               ]?,
                                               name: ::String?,
                                               network_configuration: {
                                                 aws_vpc_configuration: {
                                                   assign_public_ip: ::String?,
                                                   security_groups: Array[::String]?,
                                                   subnets: Array[::String]?
                                                 }?
                                               }?,
                                               placement_constraints: Array[
                                                 {
                                                   expression: ::String?,
                                                   type: ::String?
                                                 },
                                               ]?,
                                               placement_strategies: Array[
                                                 {
                                                   field: ::String?,
                                                   type: ::String?
                                                 },
                                               ]?,
                                               platform_version: ::String?,
                                               propagate_tags: ::String?,
                                               role: ::String?,
                                               scheduling_strategy: ::String?,
                                               service_arn: ::String?,
                                               service_name: ::String?,
                                               service_registries: Array[
                                                 {
                                                   container_name: ::String?,
                                                   container_port: ::Integer?,
                                                   port: ::Integer?,
                                                   registry_arn: ::String?
                                                 },
                                               ]?,
                                               task_definition: ::String?
                                             }?,
                                             aws_auto_scaling_launch_configuration: {
                                               associate_public_ip_address: bool?,
                                               block_device_mappings: Array[
                                                 {
                                                   device_name: ::String?,
                                                   ebs: {
                                                     delete_on_termination: bool?,
                                                     encrypted: bool?,
                                                     iops: ::Integer?,
                                                     snapshot_id: ::String?,
                                                     volume_size: ::Integer?,
                                                     volume_type: ::String?
                                                   }?,
                                                   no_device: bool?,
                                                   virtual_name: ::String?
                                                 },
                                               ]?,
                                               classic_link_vpc_id: ::String?,
                                               classic_link_vpc_security_groups: Array[::String]?,
                                               created_time: ::String?,
                                               ebs_optimized: bool?,
                                               iam_instance_profile: ::String?,
                                               image_id: ::String?,
                                               instance_monitoring: {
                                                 enabled: bool?
                                               }?,
                                               instance_type: ::String?,
                                               kernel_id: ::String?,
                                               key_name: ::String?,
                                               launch_configuration_name: ::String?,
                                               placement_tenancy: ::String?,
                                               ramdisk_id: ::String?,
                                               security_groups: Array[::String]?,
                                               spot_price: ::String?,
                                               user_data: ::String?,
                                               metadata_options: {
                                                 http_endpoint: ::String?,
                                                 http_put_response_hop_limit: ::Integer?,
                                                 http_tokens: ::String?
                                               }?
                                             }?,
                                             aws_ec2_vpn_connection: {
                                               vpn_connection_id: ::String?,
                                               state: ::String?,
                                               customer_gateway_id: ::String?,
                                               customer_gateway_configuration: ::String?,
                                               type: ::String?,
                                               vpn_gateway_id: ::String?,
                                               category: ::String?,
                                               vgw_telemetry: Array[
                                                 {
                                                   accepted_route_count: ::Integer?,
                                                   certificate_arn: ::String?,
                                                   last_status_change: ::String?,
                                                   outside_ip_address: ::String?,
                                                   status: ::String?,
                                                   status_message: ::String?
                                                 },
                                               ]?,
                                               options: {
                                                 static_routes_only: bool?,
                                                 tunnel_options: Array[
                                                   {
                                                     dpd_timeout_seconds: ::Integer?,
                                                     ike_versions: Array[::String]?,
                                                     outside_ip_address: ::String?,
                                                     phase_1_dh_group_numbers: Array[::Integer]?,
                                                     phase_1_encryption_algorithms: Array[::String]?,
                                                     phase_1_integrity_algorithms: Array[::String]?,
                                                     phase_1_lifetime_seconds: ::Integer?,
                                                     phase_2_dh_group_numbers: Array[::Integer]?,
                                                     phase_2_encryption_algorithms: Array[::String]?,
                                                     phase_2_integrity_algorithms: Array[::String]?,
                                                     phase_2_lifetime_seconds: ::Integer?,
                                                     pre_shared_key: ::String?,
                                                     rekey_fuzz_percentage: ::Integer?,
                                                     rekey_margin_time_seconds: ::Integer?,
                                                     replay_window_size: ::Integer?,
                                                     tunnel_inside_cidr: ::String?
                                                   },
                                                 ]?
                                               }?,
                                               routes: Array[
                                                 {
                                                   destination_cidr_block: ::String?,
                                                   state: ::String?
                                                 },
                                               ]?,
                                               transit_gateway_id: ::String?
                                             }?,
                                             aws_ecr_container_image: {
                                               registry_id: ::String?,
                                               repository_name: ::String?,
                                               architecture: ::String?,
                                               image_digest: ::String?,
                                               image_tags: Array[::String]?,
                                               image_published_at: ::String?
                                             }?,
                                             aws_open_search_service_domain: {
                                               arn: ::String?,
                                               access_policies: ::String?,
                                               domain_name: ::String?,
                                               id: ::String?,
                                               domain_endpoint: ::String?,
                                               engine_version: ::String?,
                                               encryption_at_rest_options: {
                                                 enabled: bool?,
                                                 kms_key_id: ::String?
                                               }?,
                                               node_to_node_encryption_options: {
                                                 enabled: bool?
                                               }?,
                                               service_software_options: {
                                                 automated_update_date: ::String?,
                                                 cancellable: bool?,
                                                 current_version: ::String?,
                                                 description: ::String?,
                                                 new_version: ::String?,
                                                 update_available: bool?,
                                                 update_status: ::String?,
                                                 optional_deployment: bool?
                                               }?,
                                               cluster_config: {
                                                 instance_count: ::Integer?,
                                                 warm_enabled: bool?,
                                                 warm_count: ::Integer?,
                                                 dedicated_master_enabled: bool?,
                                                 zone_awareness_config: {
                                                   availability_zone_count: ::Integer?
                                                 }?,
                                                 dedicated_master_count: ::Integer?,
                                                 instance_type: ::String?,
                                                 warm_type: ::String?,
                                                 zone_awareness_enabled: bool?,
                                                 dedicated_master_type: ::String?
                                               }?,
                                               domain_endpoint_options: {
                                                 custom_endpoint_certificate_arn: ::String?,
                                                 custom_endpoint_enabled: bool?,
                                                 enforce_https: bool?,
                                                 custom_endpoint: ::String?,
                                                 tls_security_policy: ::String?
                                               }?,
                                               vpc_options: {
                                                 security_group_ids: Array[::String]?,
                                                 subnet_ids: Array[::String]?
                                               }?,
                                               log_publishing_options: {
                                                 index_slow_logs: {
                                                   cloud_watch_logs_log_group_arn: ::String?,
                                                   enabled: bool?
                                                 }?,
                                                 search_slow_logs: {
                                                   cloud_watch_logs_log_group_arn: ::String?,
                                                   enabled: bool?
                                                 }?,
                                                 audit_logs: {
                                                   cloud_watch_logs_log_group_arn: ::String?,
                                                   enabled: bool?
                                                 }?
                                               }?,
                                               domain_endpoints: Hash[::String, ::String]?,
                                               advanced_security_options: {
                                                 enabled: bool?,
                                                 internal_user_database_enabled: bool?,
                                                 master_user_options: {
                                                   master_user_arn: ::String?,
                                                   master_user_name: ::String?,
                                                   master_user_password: ::String?
                                                 }?
                                               }?
                                             }?,
                                             aws_ec2_vpc_endpoint_service: {
                                               acceptance_required: bool?,
                                               availability_zones: Array[::String]?,
                                               base_endpoint_dns_names: Array[::String]?,
                                               manages_vpc_endpoints: bool?,
                                               gateway_load_balancer_arns: Array[::String]?,
                                               network_load_balancer_arns: Array[::String]?,
                                               private_dns_name: ::String?,
                                               service_id: ::String?,
                                               service_name: ::String?,
                                               service_state: ::String?,
                                               service_type: Array[
                                                 {
                                                   service_type: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_xray_encryption_config: {
                                               key_id: ::String?,
                                               status: ::String?,
                                               type: ::String?
                                             }?,
                                             aws_waf_rate_based_rule: {
                                               metric_name: ::String?,
                                               name: ::String?,
                                               rate_key: ::String?,
                                               rate_limit: ::Integer?,
                                               rule_id: ::String?,
                                               match_predicates: Array[
                                                 {
                                                   data_id: ::String?,
                                                   negated: bool?,
                                                   type: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_waf_regional_rate_based_rule: {
                                               metric_name: ::String?,
                                               name: ::String?,
                                               rate_key: ::String?,
                                               rate_limit: ::Integer?,
                                               rule_id: ::String?,
                                               match_predicates: Array[
                                                 {
                                                   data_id: ::String?,
                                                   negated: bool?,
                                                   type: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_ecr_repository: {
                                               arn: ::String?,
                                               image_scanning_configuration: {
                                                 scan_on_push: bool?
                                               }?,
                                               image_tag_mutability: ::String?,
                                               lifecycle_policy: {
                                                 lifecycle_policy_text: ::String?,
                                                 registry_id: ::String?
                                               }?,
                                               repository_name: ::String?,
                                               repository_policy_text: ::String?
                                             }?,
                                             aws_eks_cluster: {
                                               arn: ::String?,
                                               certificate_authority_data: ::String?,
                                               cluster_status: ::String?,
                                               endpoint: ::String?,
                                               name: ::String?,
                                               resources_vpc_config: {
                                                 security_group_ids: Array[::String]?,
                                                 subnet_ids: Array[::String]?,
                                                 endpoint_public_access: bool?
                                               }?,
                                               role_arn: ::String?,
                                               version: ::String?,
                                               logging: {
                                                 cluster_logging: Array[
                                                   {
                                                     enabled: bool?,
                                                     types: Array[::String]?
                                                   },
                                                 ]?
                                               }?
                                             }?,
                                             aws_network_firewall_firewall_policy: {
                                               firewall_policy: {
                                                 stateful_rule_group_references: Array[
                                                   {
                                                     resource_arn: ::String?
                                                   },
                                                 ]?,
                                                 stateless_custom_actions: Array[
                                                   {
                                                     action_definition: {
                                                       publish_metric_action: {
                                                         dimensions: Array[
                                                           {
                                                             value: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     }?,
                                                     action_name: ::String?
                                                   },
                                                 ]?,
                                                 stateless_default_actions: Array[::String]?,
                                                 stateless_fragment_default_actions: Array[::String]?,
                                                 stateless_rule_group_references: Array[
                                                   {
                                                     priority: ::Integer?,
                                                     resource_arn: ::String?
                                                   },
                                                 ]?
                                               }?,
                                               firewall_policy_arn: ::String?,
                                               firewall_policy_id: ::String?,
                                               firewall_policy_name: ::String?,
                                               description: ::String?
                                             }?,
                                             aws_network_firewall_firewall: {
                                               delete_protection: bool?,
                                               description: ::String?,
                                               firewall_arn: ::String?,
                                               firewall_id: ::String?,
                                               firewall_name: ::String?,
                                               firewall_policy_arn: ::String?,
                                               firewall_policy_change_protection: bool?,
                                               subnet_change_protection: bool?,
                                               subnet_mappings: Array[
                                                 {
                                                   subnet_id: ::String?
                                                 },
                                               ]?,
                                               vpc_id: ::String?
                                             }?,
                                             aws_network_firewall_rule_group: {
                                               capacity: ::Integer?,
                                               description: ::String?,
                                               rule_group: {
                                                 rule_variables: {
                                                   ip_sets: {
                                                     definition: Array[::String]?
                                                   }?,
                                                   port_sets: {
                                                     definition: Array[::String]?
                                                   }?
                                                 }?,
                                                 rules_source: {
                                                   rules_source_list: {
                                                     generated_rules_type: ::String?,
                                                     target_types: Array[::String]?,
                                                     targets: Array[::String]?
                                                   }?,
                                                   rules_string: ::String?,
                                                   stateful_rules: Array[
                                                     {
                                                       action: ::String?,
                                                       header: {
                                                         destination: ::String?,
                                                         destination_port: ::String?,
                                                         direction: ::String?,
                                                         protocol: ::String?,
                                                         source: ::String?,
                                                         source_port: ::String?
                                                       }?,
                                                       rule_options: Array[
                                                         {
                                                           keyword: ::String?,
                                                           settings: Array[::String]?
                                                         },
                                                       ]?
                                                     },
                                                   ]?,
                                                   stateless_rules_and_custom_actions: {
                                                     custom_actions: Array[
                                                       {
                                                         action_definition: {
                                                           publish_metric_action: {
                                                             dimensions: Array[
                                                               {
                                                                 value: ::String?
                                                               },
                                                             ]?
                                                           }?
                                                         }?,
                                                         action_name: ::String?
                                                       },
                                                     ]?,
                                                     stateless_rules: Array[
                                                       {
                                                         priority: ::Integer?,
                                                         rule_definition: {
                                                           actions: Array[::String]?,
                                                           match_attributes: {
                                                             destination_ports: Array[
                                                               {
                                                                 from_port: ::Integer?,
                                                                 to_port: ::Integer?
                                                               },
                                                             ]?,
                                                             destinations: Array[
                                                               {
                                                                 address_definition: ::String?
                                                               },
                                                             ]?,
                                                             protocols: Array[::Integer]?,
                                                             source_ports: Array[
                                                               {
                                                                 from_port: ::Integer?,
                                                                 to_port: ::Integer?
                                                               },
                                                             ]?,
                                                             sources: Array[
                                                               {
                                                                 address_definition: ::String?
                                                               },
                                                             ]?,
                                                             tcp_flags: Array[
                                                               {
                                                                 flags: Array[::String]?,
                                                                 masks: Array[::String]?
                                                               },
                                                             ]?
                                                           }?
                                                         }?
                                                       },
                                                     ]?
                                                   }?
                                                 }?
                                               }?,
                                               rule_group_arn: ::String?,
                                               rule_group_id: ::String?,
                                               rule_group_name: ::String?,
                                               type: ::String?
                                             }?,
                                             aws_rds_db_security_group: {
                                               db_security_group_arn: ::String?,
                                               db_security_group_description: ::String?,
                                               db_security_group_name: ::String?,
                                               ec2_security_groups: Array[
                                                 {
                                                   ec2_security_group_id: ::String?,
                                                   ec2_security_group_name: ::String?,
                                                   ec2_security_group_owner_id: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               ip_ranges: Array[
                                                 {
                                                   cidr_ip: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               owner_id: ::String?,
                                               vpc_id: ::String?
                                             }?,
                                             aws_kinesis_stream: {
                                               name: ::String?,
                                               arn: ::String?,
                                               stream_encryption: {
                                                 encryption_type: ::String?,
                                                 key_id: ::String?
                                               }?,
                                               shard_count: ::Integer?,
                                               retention_period_hours: ::Integer?
                                             }?,
                                             aws_ec2_transit_gateway: {
                                               id: ::String?,
                                               description: ::String?,
                                               default_route_table_propagation: ::String?,
                                               auto_accept_shared_attachments: ::String?,
                                               default_route_table_association: ::String?,
                                               transit_gateway_cidr_blocks: Array[::String]?,
                                               association_default_route_table_id: ::String?,
                                               propagation_default_route_table_id: ::String?,
                                               vpn_ecmp_support: ::String?,
                                               dns_support: ::String?,
                                               multicast_support: ::String?,
                                               amazon_side_asn: ::Integer?
                                             }?,
                                             aws_efs_access_point: {
                                               access_point_id: ::String?,
                                               arn: ::String?,
                                               client_token: ::String?,
                                               file_system_id: ::String?,
                                               posix_user: {
                                                 gid: ::String?,
                                                 secondary_gids: Array[::String]?,
                                                 uid: ::String?
                                               }?,
                                               root_directory: {
                                                 creation_info: {
                                                   owner_gid: ::String?,
                                                   owner_uid: ::String?,
                                                   permissions: ::String?
                                                 }?,
                                                 path: ::String?
                                               }?
                                             }?,
                                             aws_cloud_formation_stack: {
                                               capabilities: Array[::String]?,
                                               creation_time: ::String?,
                                               description: ::String?,
                                               disable_rollback: bool?,
                                               drift_information: {
                                                 stack_drift_status: ::String?
                                               }?,
                                               enable_termination_protection: bool?,
                                               last_updated_time: ::String?,
                                               notification_arns: Array[::String]?,
                                               outputs: Array[
                                                 {
                                                   description: ::String?,
                                                   output_key: ::String?,
                                                   output_value: ::String?
                                                 },
                                               ]?,
                                               role_arn: ::String?,
                                               stack_id: ::String?,
                                               stack_name: ::String?,
                                               stack_status: ::String?,
                                               stack_status_reason: ::String?,
                                               timeout_in_minutes: ::Integer?
                                             }?,
                                             aws_cloud_watch_alarm: {
                                               actions_enabled: bool?,
                                               alarm_actions: Array[::String]?,
                                               alarm_arn: ::String?,
                                               alarm_configuration_updated_timestamp: ::String?,
                                               alarm_description: ::String?,
                                               alarm_name: ::String?,
                                               comparison_operator: ::String?,
                                               datapoints_to_alarm: ::Integer?,
                                               dimensions: Array[
                                                 {
                                                   name: ::String?,
                                                   value: ::String?
                                                 },
                                               ]?,
                                               evaluate_low_sample_count_percentile: ::String?,
                                               evaluation_periods: ::Integer?,
                                               extended_statistic: ::String?,
                                               insufficient_data_actions: Array[::String]?,
                                               metric_name: ::String?,
                                               namespace: ::String?,
                                               ok_actions: Array[::String]?,
                                               period: ::Integer?,
                                               statistic: ::String?,
                                               threshold: ::Float?,
                                               threshold_metric_id: ::String?,
                                               treat_missing_data: ::String?,
                                               unit: ::String?
                                             }?,
                                             aws_ec2_vpc_peering_connection: {
                                               accepter_vpc_info: {
                                                 cidr_block: ::String?,
                                                 cidr_block_set: Array[
                                                   {
                                                     cidr_block: ::String?
                                                   },
                                                 ]?,
                                                 ipv_6_cidr_block_set: Array[
                                                   {
                                                     ipv_6_cidr_block: ::String?
                                                   },
                                                 ]?,
                                                 owner_id: ::String?,
                                                 peering_options: {
                                                   allow_dns_resolution_from_remote_vpc: bool?,
                                                   allow_egress_from_local_classic_link_to_remote_vpc: bool?,
                                                   allow_egress_from_local_vpc_to_remote_classic_link: bool?
                                                 }?,
                                                 region: ::String?,
                                                 vpc_id: ::String?
                                               }?,
                                               expiration_time: ::String?,
                                               requester_vpc_info: {
                                                 cidr_block: ::String?,
                                                 cidr_block_set: Array[
                                                   {
                                                     cidr_block: ::String?
                                                   },
                                                 ]?,
                                                 ipv_6_cidr_block_set: Array[
                                                   {
                                                     ipv_6_cidr_block: ::String?
                                                   },
                                                 ]?,
                                                 owner_id: ::String?,
                                                 peering_options: {
                                                   allow_dns_resolution_from_remote_vpc: bool?,
                                                   allow_egress_from_local_classic_link_to_remote_vpc: bool?,
                                                   allow_egress_from_local_vpc_to_remote_classic_link: bool?
                                                 }?,
                                                 region: ::String?,
                                                 vpc_id: ::String?
                                               }?,
                                               status: {
                                                 code: ::String?,
                                                 message: ::String?
                                               }?,
                                               vpc_peering_connection_id: ::String?
                                             }?,
                                             aws_waf_regional_rule_group: {
                                               metric_name: ::String?,
                                               name: ::String?,
                                               rule_group_id: ::String?,
                                               rules: Array[
                                                 {
                                                   action: {
                                                     type: ::String?
                                                   }?,
                                                   priority: ::Integer?,
                                                   rule_id: ::String?,
                                                   type: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_waf_regional_rule: {
                                               metric_name: ::String?,
                                               name: ::String?,
                                               predicate_list: Array[
                                                 {
                                                   data_id: ::String?,
                                                   negated: bool?,
                                                   type: ::String?
                                                 },
                                               ]?,
                                               rule_id: ::String?
                                             }?,
                                             aws_waf_regional_web_acl: {
                                               default_action: ::String?,
                                               metric_name: ::String?,
                                               name: ::String?,
                                               rules_list: Array[
                                                 {
                                                   action: {
                                                     type: ::String?
                                                   }?,
                                                   override_action: {
                                                     type: ::String?
                                                   }?,
                                                   priority: ::Integer?,
                                                   rule_id: ::String?,
                                                   type: ::String?
                                                 },
                                               ]?,
                                               web_acl_id: ::String?
                                             }?,
                                             aws_waf_rule: {
                                               metric_name: ::String?,
                                               name: ::String?,
                                               predicate_list: Array[
                                                 {
                                                   data_id: ::String?,
                                                   negated: bool?,
                                                   type: ::String?
                                                 },
                                               ]?,
                                               rule_id: ::String?
                                             }?,
                                             aws_waf_rule_group: {
                                               metric_name: ::String?,
                                               name: ::String?,
                                               rule_group_id: ::String?,
                                               rules: Array[
                                                 {
                                                   action: {
                                                     type: ::String?
                                                   }?,
                                                   priority: ::Integer?,
                                                   rule_id: ::String?,
                                                   type: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_ecs_task: {
                                               cluster_arn: ::String?,
                                               task_definition_arn: ::String?,
                                               version: ::String?,
                                               created_at: ::String?,
                                               started_at: ::String?,
                                               started_by: ::String?,
                                               group: ::String?,
                                               volumes: Array[
                                                 {
                                                   name: ::String?,
                                                   host: {
                                                     source_path: ::String?
                                                   }?
                                                 },
                                               ]?,
                                               containers: Array[
                                                 {
                                                   name: ::String?,
                                                   image: ::String?,
                                                   mount_points: Array[
                                                     {
                                                       source_volume: ::String?,
                                                       container_path: ::String?
                                                     },
                                                   ]?,
                                                   privileged: bool?
                                                 },
                                               ]?
                                             }?,
                                             aws_backup_backup_vault: {
                                               backup_vault_arn: ::String?,
                                               backup_vault_name: ::String?,
                                               encryption_key_arn: ::String?,
                                               notifications: {
                                                 backup_vault_events: Array[::String]?,
                                                 sns_topic_arn: ::String?
                                               }?,
                                               access_policy: ::String?
                                             }?,
                                             aws_backup_backup_plan: {
                                               backup_plan: {
                                                 backup_plan_name: ::String?,
                                                 advanced_backup_settings: Array[
                                                   {
                                                     backup_options: Hash[::String, ::String]?,
                                                     resource_type: ::String?
                                                   },
                                                 ]?,
                                                 backup_plan_rule: Array[
                                                   {
                                                     target_backup_vault: ::String?,
                                                     start_window_minutes: ::Integer?,
                                                     schedule_expression: ::String?,
                                                     rule_name: ::String?,
                                                     rule_id: ::String?,
                                                     enable_continuous_backup: bool?,
                                                     completion_window_minutes: ::Integer?,
                                                     copy_actions: Array[
                                                       {
                                                         destination_backup_vault_arn: ::String?,
                                                         lifecycle: {
                                                           delete_after_days: ::Integer?,
                                                           move_to_cold_storage_after_days: ::Integer?
                                                         }?
                                                       },
                                                     ]?,
                                                     lifecycle: {
                                                       delete_after_days: ::Integer?,
                                                       move_to_cold_storage_after_days: ::Integer?
                                                     }?
                                                   },
                                                 ]?
                                               }?,
                                               backup_plan_arn: ::String?,
                                               backup_plan_id: ::String?,
                                               version_id: ::String?
                                             }?,
                                             aws_backup_recovery_point: {
                                               backup_size_in_bytes: ::Integer?,
                                               backup_vault_arn: ::String?,
                                               backup_vault_name: ::String?,
                                               calculated_lifecycle: {
                                                 delete_at: ::String?,
                                                 move_to_cold_storage_at: ::String?
                                               }?,
                                               completion_date: ::String?,
                                               created_by: {
                                                 backup_plan_arn: ::String?,
                                                 backup_plan_id: ::String?,
                                                 backup_plan_version: ::String?,
                                                 backup_rule_id: ::String?
                                               }?,
                                               creation_date: ::String?,
                                               encryption_key_arn: ::String?,
                                               iam_role_arn: ::String?,
                                               is_encrypted: bool?,
                                               last_restore_time: ::String?,
                                               lifecycle: {
                                                 delete_after_days: ::Integer?,
                                                 move_to_cold_storage_after_days: ::Integer?
                                               }?,
                                               recovery_point_arn: ::String?,
                                               resource_arn: ::String?,
                                               resource_type: ::String?,
                                               source_backup_vault_arn: ::String?,
                                               status: ::String?,
                                               status_message: ::String?,
                                               storage_class: ::String?
                                             }?,
                                             aws_ec2_launch_template: {
                                               launch_template_name: ::String?,
                                               id: ::String?,
                                               launch_template_data: {
                                                 block_device_mapping_set: Array[
                                                   {
                                                     device_name: ::String?,
                                                     ebs: {
                                                       delete_on_termination: bool?,
                                                       encrypted: bool?,
                                                       iops: ::Integer?,
                                                       kms_key_id: ::String?,
                                                       snapshot_id: ::String?,
                                                       throughput: ::Integer?,
                                                       volume_size: ::Integer?,
                                                       volume_type: ::String?
                                                     }?,
                                                     no_device: ::String?,
                                                     virtual_name: ::String?
                                                   },
                                                 ]?,
                                                 capacity_reservation_specification: {
                                                   capacity_reservation_preference: ::String?,
                                                   capacity_reservation_target: {
                                                     capacity_reservation_id: ::String?,
                                                     capacity_reservation_resource_group_arn: ::String?
                                                   }?
                                                 }?,
                                                 cpu_options: {
                                                   core_count: ::Integer?,
                                                   threads_per_core: ::Integer?
                                                 }?,
                                                 credit_specification: {
                                                   cpu_credits: ::String?
                                                 }?,
                                                 disable_api_stop: bool?,
                                                 disable_api_termination: bool?,
                                                 ebs_optimized: bool?,
                                                 elastic_gpu_specification_set: Array[
                                                   {
                                                     type: ::String?
                                                   },
                                                 ]?,
                                                 elastic_inference_accelerator_set: Array[
                                                   {
                                                     count: ::Integer?,
                                                     type: ::String?
                                                   },
                                                 ]?,
                                                 enclave_options: {
                                                   enabled: bool?
                                                 }?,
                                                 hibernation_options: {
                                                   configured: bool?
                                                 }?,
                                                 iam_instance_profile: {
                                                   arn: ::String?,
                                                   name: ::String?
                                                 }?,
                                                 image_id: ::String?,
                                                 instance_initiated_shutdown_behavior: ::String?,
                                                 instance_market_options: {
                                                   market_type: ::String?,
                                                   spot_options: {
                                                     block_duration_minutes: ::Integer?,
                                                     instance_interruption_behavior: ::String?,
                                                     max_price: ::String?,
                                                     spot_instance_type: ::String?,
                                                     valid_until: ::String?
                                                   }?
                                                 }?,
                                                 instance_requirements: {
                                                   accelerator_count: {
                                                     max: ::Integer?,
                                                     min: ::Integer?
                                                   }?,
                                                   accelerator_manufacturers: Array[::String]?,
                                                   accelerator_names: Array[::String]?,
                                                   accelerator_total_memory_mi_b: {
                                                     max: ::Integer?,
                                                     min: ::Integer?
                                                   }?,
                                                   accelerator_types: Array[::String]?,
                                                   bare_metal: ::String?,
                                                   baseline_ebs_bandwidth_mbps: {
                                                     max: ::Integer?,
                                                     min: ::Integer?
                                                   }?,
                                                   burstable_performance: ::String?,
                                                   cpu_manufacturers: Array[::String]?,
                                                   excluded_instance_types: Array[::String]?,
                                                   instance_generations: Array[::String]?,
                                                   local_storage: ::String?,
                                                   local_storage_types: Array[::String]?,
                                                   memory_gi_b_per_v_cpu: {
                                                     max: ::Float?,
                                                     min: ::Float?
                                                   }?,
                                                   memory_mi_b: {
                                                     max: ::Integer?,
                                                     min: ::Integer?
                                                   }?,
                                                   network_interface_count: {
                                                     max: ::Integer?,
                                                     min: ::Integer?
                                                   }?,
                                                   on_demand_max_price_percentage_over_lowest_price: ::Integer?,
                                                   require_hibernate_support: bool?,
                                                   spot_max_price_percentage_over_lowest_price: ::Integer?,
                                                   total_local_storage_gb: {
                                                     max: ::Float?,
                                                     min: ::Float?
                                                   }?,
                                                   v_cpu_count: {
                                                     max: ::Integer?,
                                                     min: ::Integer?
                                                   }?
                                                 }?,
                                                 instance_type: ::String?,
                                                 kernel_id: ::String?,
                                                 key_name: ::String?,
                                                 license_set: Array[
                                                   {
                                                     license_configuration_arn: ::String?
                                                   },
                                                 ]?,
                                                 maintenance_options: {
                                                   auto_recovery: ::String?
                                                 }?,
                                                 metadata_options: {
                                                   http_endpoint: ::String?,
                                                   http_protocol_ipv_6: ::String?,
                                                   http_tokens: ::String?,
                                                   http_put_response_hop_limit: ::Integer?,
                                                   instance_metadata_tags: ::String?
                                                 }?,
                                                 monitoring: {
                                                   enabled: bool?
                                                 }?,
                                                 network_interface_set: Array[
                                                   {
                                                     associate_carrier_ip_address: bool?,
                                                     associate_public_ip_address: bool?,
                                                     delete_on_termination: bool?,
                                                     description: ::String?,
                                                     device_index: ::Integer?,
                                                     groups: Array[::String]?,
                                                     interface_type: ::String?,
                                                     ipv_4_prefix_count: ::Integer?,
                                                     ipv_4_prefixes: Array[
                                                       {
                                                         ipv_4_prefix: ::String?
                                                       },
                                                     ]?,
                                                     ipv_6_address_count: ::Integer?,
                                                     ipv_6_addresses: Array[
                                                       {
                                                         ipv_6_address: ::String?
                                                       },
                                                     ]?,
                                                     ipv_6_prefix_count: ::Integer?,
                                                     ipv_6_prefixes: Array[
                                                       {
                                                         ipv_6_prefix: ::String?
                                                       },
                                                     ]?,
                                                     network_card_index: ::Integer?,
                                                     network_interface_id: ::String?,
                                                     private_ip_address: ::String?,
                                                     private_ip_addresses: Array[
                                                       {
                                                         primary: bool?,
                                                         private_ip_address: ::String?
                                                       },
                                                     ]?,
                                                     secondary_private_ip_address_count: ::Integer?,
                                                     subnet_id: ::String?
                                                   },
                                                 ]?,
                                                 placement: {
                                                   affinity: ::String?,
                                                   availability_zone: ::String?,
                                                   group_name: ::String?,
                                                   host_id: ::String?,
                                                   host_resource_group_arn: ::String?,
                                                   partition_number: ::Integer?,
                                                   spread_domain: ::String?,
                                                   tenancy: ::String?
                                                 }?,
                                                 private_dns_name_options: {
                                                   enable_resource_name_dns_aaaa_record: bool?,
                                                   enable_resource_name_dns_a_record: bool?,
                                                   hostname_type: ::String?
                                                 }?,
                                                 ram_disk_id: ::String?,
                                                 security_group_id_set: Array[::String]?,
                                                 security_group_set: Array[::String]?,
                                                 user_data: ::String?
                                               }?,
                                               default_version_number: ::Integer?,
                                               latest_version_number: ::Integer?
                                             }?,
                                             aws_sage_maker_notebook_instance: {
                                               accelerator_types: Array[::String]?,
                                               additional_code_repositories: Array[::String]?,
                                               default_code_repository: ::String?,
                                               direct_internet_access: ::String?,
                                               failure_reason: ::String?,
                                               instance_metadata_service_configuration: {
                                                 minimum_instance_metadata_service_version: ::String?
                                               }?,
                                               instance_type: ::String?,
                                               kms_key_id: ::String?,
                                               network_interface_id: ::String?,
                                               notebook_instance_arn: ::String?,
                                               notebook_instance_lifecycle_config_name: ::String?,
                                               notebook_instance_name: ::String?,
                                               notebook_instance_status: ::String?,
                                               platform_identifier: ::String?,
                                               role_arn: ::String?,
                                               root_access: ::String?,
                                               security_groups: Array[::String]?,
                                               subnet_id: ::String?,
                                               url: ::String?,
                                               volume_size_in_gb: ::Integer?
                                             }?,
                                             aws_wafv_2_web_acl: {
                                               name: ::String?,
                                               arn: ::String?,
                                               managedby_firewall_manager: bool?,
                                               id: ::String?,
                                               capacity: ::Integer?,
                                               captcha_config: {
                                                 immunity_time_property: {
                                                   immunity_time: ::Integer?
                                                 }?
                                               }?,
                                               default_action: {
                                                 allow: {
                                                   custom_request_handling: {
                                                     insert_headers: Array[
                                                       {
                                                         name: ::String?,
                                                         value: ::String?
                                                       },
                                                     ]?
                                                   }?
                                                 }?,
                                                 block: {
                                                   custom_response: {
                                                     custom_response_body_key: ::String?,
                                                     response_code: ::Integer?,
                                                     response_headers: Array[
                                                       {
                                                         name: ::String?,
                                                         value: ::String?
                                                       },
                                                     ]?
                                                   }?
                                                 }?
                                               }?,
                                               description: ::String?,
                                               rules: Array[
                                                 {
                                                   action: {
                                                     allow: {
                                                       custom_request_handling: {
                                                         insert_headers: Array[
                                                           {
                                                             name: ::String?,
                                                             value: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     }?,
                                                     block: {
                                                       custom_response: {
                                                         custom_response_body_key: ::String?,
                                                         response_code: ::Integer?,
                                                         response_headers: Array[
                                                           {
                                                             name: ::String?,
                                                             value: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     }?,
                                                     captcha: {
                                                       custom_request_handling: {
                                                         insert_headers: Array[
                                                           {
                                                             name: ::String?,
                                                             value: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     }?,
                                                     count: {
                                                       custom_request_handling: {
                                                         insert_headers: Array[
                                                           {
                                                             name: ::String?,
                                                             value: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     }?
                                                   }?,
                                                   name: ::String?,
                                                   override_action: ::String?,
                                                   priority: ::Integer?,
                                                   visibility_config: {
                                                     cloud_watch_metrics_enabled: bool?,
                                                     metric_name: ::String?,
                                                     sampled_requests_enabled: bool?
                                                   }?
                                                 },
                                               ]?,
                                               visibility_config: {
                                                 cloud_watch_metrics_enabled: bool?,
                                                 metric_name: ::String?,
                                                 sampled_requests_enabled: bool?
                                               }?
                                             }?,
                                             aws_wafv_2_rule_group: {
                                               capacity: ::Integer?,
                                               description: ::String?,
                                               id: ::String?,
                                               name: ::String?,
                                               arn: ::String?,
                                               rules: Array[
                                                 {
                                                   action: {
                                                     allow: {
                                                       custom_request_handling: {
                                                         insert_headers: Array[
                                                           {
                                                             name: ::String?,
                                                             value: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     }?,
                                                     block: {
                                                       custom_response: {
                                                         custom_response_body_key: ::String?,
                                                         response_code: ::Integer?,
                                                         response_headers: Array[
                                                           {
                                                             name: ::String?,
                                                             value: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     }?,
                                                     captcha: {
                                                       custom_request_handling: {
                                                         insert_headers: Array[
                                                           {
                                                             name: ::String?,
                                                             value: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     }?,
                                                     count: {
                                                       custom_request_handling: {
                                                         insert_headers: Array[
                                                           {
                                                             name: ::String?,
                                                             value: ::String?
                                                           },
                                                         ]?
                                                       }?
                                                     }?
                                                   }?,
                                                   name: ::String?,
                                                   override_action: ::String?,
                                                   priority: ::Integer?,
                                                   visibility_config: {
                                                     cloud_watch_metrics_enabled: bool?,
                                                     metric_name: ::String?,
                                                     sampled_requests_enabled: bool?
                                                   }?
                                                 },
                                               ]?,
                                               scope: ::String?,
                                               visibility_config: {
                                                 cloud_watch_metrics_enabled: bool?,
                                                 metric_name: ::String?,
                                                 sampled_requests_enabled: bool?
                                               }?
                                             }?,
                                             aws_ec2_route_table: {
                                               association_set: Array[
                                                 {
                                                   association_state: {
                                                     state: ::String?,
                                                     status_message: ::String?
                                                   }?,
                                                   gateway_id: ::String?,
                                                   main: bool?,
                                                   route_table_association_id: ::String?,
                                                   route_table_id: ::String?,
                                                   subnet_id: ::String?
                                                 },
                                               ]?,
                                               owner_id: ::String?,
                                               propagating_vgw_set: Array[
                                                 {
                                                   gateway_id: ::String?
                                                 },
                                               ]?,
                                               route_table_id: ::String?,
                                               route_set: Array[
                                                 {
                                                   carrier_gateway_id: ::String?,
                                                   core_network_arn: ::String?,
                                                   destination_cidr_block: ::String?,
                                                   destination_ipv_6_cidr_block: ::String?,
                                                   destination_prefix_list_id: ::String?,
                                                   egress_only_internet_gateway_id: ::String?,
                                                   gateway_id: ::String?,
                                                   instance_id: ::String?,
                                                   instance_owner_id: ::String?,
                                                   local_gateway_id: ::String?,
                                                   nat_gateway_id: ::String?,
                                                   network_interface_id: ::String?,
                                                   origin: ::String?,
                                                   state: ::String?,
                                                   transit_gateway_id: ::String?,
                                                   vpc_peering_connection_id: ::String?
                                                 },
                                               ]?,
                                               vpc_id: ::String?
                                             }?,
                                             aws_amazon_mq_broker: {
                                               authentication_strategy: ::String?,
                                               auto_minor_version_upgrade: bool?,
                                               broker_arn: ::String?,
                                               broker_name: ::String?,
                                               deployment_mode: ::String?,
                                               encryption_options: {
                                                 kms_key_id: ::String?,
                                                 use_aws_owned_key: bool?
                                               }?,
                                               engine_type: ::String?,
                                               engine_version: ::String?,
                                               host_instance_type: ::String?,
                                               broker_id: ::String?,
                                               ldap_server_metadata: {
                                                 hosts: Array[::String]?,
                                                 role_base: ::String?,
                                                 role_name: ::String?,
                                                 role_search_matching: ::String?,
                                                 role_search_subtree: bool?,
                                                 service_account_username: ::String?,
                                                 user_base: ::String?,
                                                 user_role_name: ::String?,
                                                 user_search_matching: ::String?,
                                                 user_search_subtree: bool?
                                               }?,
                                               logs: {
                                                 audit: bool?,
                                                 general: bool?,
                                                 audit_log_group: ::String?,
                                                 general_log_group: ::String?,
                                                 pending: {
                                                   audit: bool?,
                                                   general: bool?
                                                 }?
                                               }?,
                                               maintenance_window_start_time: {
                                                 day_of_week: ::String?,
                                                 time_of_day: ::String?,
                                                 time_zone: ::String?
                                               }?,
                                               publicly_accessible: bool?,
                                               security_groups: Array[::String]?,
                                               storage_type: ::String?,
                                               subnet_ids: Array[::String]?,
                                               users: Array[
                                                 {
                                                   pending_change: ::String?,
                                                   username: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_app_sync_graph_ql_api: {
                                               api_id: ::String?,
                                               id: ::String?,
                                               open_id_connect_config: {
                                                 auth_tt_l: ::Integer?,
                                                 client_id: ::String?,
                                                 iat_tt_l: ::Integer?,
                                                 issuer: ::String?
                                               }?,
                                               name: ::String?,
                                               lambda_authorizer_config: {
                                                 authorizer_result_ttl_in_seconds: ::Integer?,
                                                 authorizer_uri: ::String?,
                                                 identity_validation_expression: ::String?
                                               }?,
                                               xray_enabled: bool?,
                                               arn: ::String?,
                                               user_pool_config: {
                                                 app_id_client_regex: ::String?,
                                                 aws_region: ::String?,
                                                 default_action: ::String?,
                                                 user_pool_id: ::String?
                                               }?,
                                               authentication_type: ::String?,
                                               log_config: {
                                                 cloud_watch_logs_role_arn: ::String?,
                                                 exclude_verbose_content: bool?,
                                                 field_log_level: ::String?
                                               }?,
                                               additional_authentication_providers: Array[
                                                 {
                                                   authentication_type: ::String?,
                                                   lambda_authorizer_config: {
                                                     authorizer_result_ttl_in_seconds: ::Integer?,
                                                     authorizer_uri: ::String?,
                                                     identity_validation_expression: ::String?
                                                   }?,
                                                   open_id_connect_config: {
                                                     auth_tt_l: ::Integer?,
                                                     client_id: ::String?,
                                                     iat_tt_l: ::Integer?,
                                                     issuer: ::String?
                                                   }?,
                                                   user_pool_config: {
                                                     app_id_client_regex: ::String?,
                                                     aws_region: ::String?,
                                                     default_action: ::String?,
                                                     user_pool_id: ::String?
                                                   }?
                                                 },
                                               ]?,
                                               waf_web_acl_arn: ::String?
                                             }?,
                                             aws_event_schemas_registry: {
                                               description: ::String?,
                                               registry_arn: ::String?,
                                               registry_name: ::String?
                                             }?,
                                             aws_guard_duty_detector: {
                                               data_sources: {
                                                 cloud_trail: {
                                                   status: ::String?
                                                 }?,
                                                 dns_logs: {
                                                   status: ::String?
                                                 }?,
                                                 flow_logs: {
                                                   status: ::String?
                                                 }?,
                                                 kubernetes: {
                                                   audit_logs: {
                                                     status: ::String?
                                                   }?
                                                 }?,
                                                 malware_protection: {
                                                   scan_ec2_instance_with_findings: {
                                                     ebs_volumes: {
                                                       reason: ::String?,
                                                       status: ::String?
                                                     }?
                                                   }?,
                                                   service_role: ::String?
                                                 }?,
                                                 s3_logs: {
                                                   status: ::String?
                                                 }?
                                               }?,
                                               features: Array[
                                                 {
                                                   name: ::String?,
                                                   status: ::String?
                                                 },
                                               ]?,
                                               finding_publishing_frequency: ::String?,
                                               service_role: ::String?,
                                               status: ::String?
                                             }?,
                                             aws_step_function_state_machine: {
                                               label: ::String?,
                                               logging_configuration: {
                                                 destinations: Array[
                                                   {
                                                     cloud_watch_logs_log_group: {
                                                       log_group_arn: ::String?
                                                     }?
                                                   },
                                                 ]?,
                                                 include_execution_data: bool?,
                                                 level: ::String?
                                               }?,
                                               name: ::String?,
                                               role_arn: ::String?,
                                               state_machine_arn: ::String?,
                                               status: ::String?,
                                               tracing_configuration: {
                                                 enabled: bool?
                                               }?,
                                               type: ::String?
                                             }?,
                                             aws_athena_work_group: {
                                               name: ::String?,
                                               description: ::String?,
                                               state: ::String?,
                                               configuration: {
                                                 result_configuration: {
                                                   encryption_configuration: {
                                                     encryption_option: ::String?,
                                                     kms_key: ::String?
                                                   }?
                                                 }?
                                               }?
                                             }?,
                                             aws_events_eventbus: {
                                               arn: ::String?,
                                               name: ::String?,
                                               policy: ::String?
                                             }?,
                                             aws_dms_endpoint: {
                                               certificate_arn: ::String?,
                                               database_name: ::String?,
                                               endpoint_arn: ::String?,
                                               endpoint_identifier: ::String?,
                                               endpoint_type: ::String?,
                                               engine_name: ::String?,
                                               external_id: ::String?,
                                               extra_connection_attributes: ::String?,
                                               kms_key_id: ::String?,
                                               port: ::Integer?,
                                               server_name: ::String?,
                                               ssl_mode: ::String?,
                                               username: ::String?
                                             }?,
                                             aws_events_endpoint: {
                                               arn: ::String?,
                                               description: ::String?,
                                               endpoint_id: ::String?,
                                               endpoint_url: ::String?,
                                               event_buses: Array[
                                                 {
                                                   event_bus_arn: ::String?
                                                 },
                                               ]?,
                                               name: ::String?,
                                               replication_config: {
                                                 state: ::String?
                                               }?,
                                               role_arn: ::String?,
                                               routing_config: {
                                                 failover_config: {
                                                   primary: {
                                                     health_check: ::String?
                                                   }?,
                                                   secondary: {
                                                     route: ::String?
                                                   }?
                                                 }?
                                               }?,
                                               state: ::String?,
                                               state_reason: ::String?
                                             }?,
                                             aws_dms_replication_task: {
                                               cdc_start_position: ::String?,
                                               cdc_start_time: ::String?,
                                               cdc_stop_position: ::String?,
                                               migration_type: ::String?,
                                               id: ::String?,
                                               resource_identifier: ::String?,
                                               replication_instance_arn: ::String?,
                                               replication_task_identifier: ::String?,
                                               replication_task_settings: ::String?,
                                               source_endpoint_arn: ::String?,
                                               table_mappings: ::String?,
                                               target_endpoint_arn: ::String?,
                                               task_data: ::String?
                                             }?,
                                             aws_dms_replication_instance: {
                                               allocated_storage: ::Integer?,
                                               auto_minor_version_upgrade: bool?,
                                               availability_zone: ::String?,
                                               engine_version: ::String?,
                                               kms_key_id: ::String?,
                                               multi_az: bool?,
                                               preferred_maintenance_window: ::String?,
                                               publicly_accessible: bool?,
                                               replication_instance_class: ::String?,
                                               replication_instance_identifier: ::String?,
                                               replication_subnet_group: {
                                                 replication_subnet_group_identifier: ::String?
                                               }?,
                                               vpc_security_groups: Array[
                                                 {
                                                   vpc_security_group_id: ::String?
                                                 },
                                               ]?
                                             }?,
                                             aws_route_53_hosted_zone: {
                                               hosted_zone: {
                                                 id: ::String?,
                                                 name: ::String?,
                                                 config: {
                                                   comment: ::String?
                                                 }?
                                               }?,
                                               vpcs: Array[
                                                 {
                                                   id: ::String?,
                                                   region: ::String?
                                                 },
                                               ]?,
                                               name_servers: Array[::String]?,
                                               query_logging_config: {
                                                 cloud_watch_logs_log_group_arn: {
                                                   cloud_watch_logs_log_group_arn: ::String?,
                                                   hosted_zone_id: ::String?,
                                                   id: ::String?
                                                 }?
                                               }?
                                             }?,
                                             aws_msk_cluster: {
                                               cluster_info: {
                                                 encryption_info: {
                                                   encryption_in_transit: {
                                                     in_cluster: bool?,
                                                     client_broker: ::String?
                                                   }?,
                                                   encryption_at_rest: {
                                                     data_volume_kms_key_id: ::String?
                                                   }?
                                                 }?,
                                                 current_version: ::String?,
                                                 number_of_broker_nodes: ::Integer?,
                                                 cluster_name: ::String?,
                                                 client_authentication: {
                                                   sasl: {
                                                     iam: {
                                                       enabled: bool?
                                                     }?,
                                                     scram: {
                                                       enabled: bool?
                                                     }?
                                                   }?,
                                                   unauthenticated: {
                                                     enabled: bool?
                                                   }?,
                                                   tls: {
                                                     certificate_authority_arn_list: Array[::String]?,
                                                     enabled: bool?
                                                   }?
                                                 }?,
                                                 enhanced_monitoring: ::String?
                                               }?
                                             }?,
                                             aws_s3_access_point: {
                                               access_point_arn: ::String?,
                                               alias: ::String?,
                                               bucket: ::String?,
                                               bucket_account_id: ::String?,
                                               name: ::String?,
                                               network_origin: ::String?,
                                               public_access_block_configuration: {
                                                 block_public_acls: bool?,
                                                 block_public_policy: bool?,
                                                 ignore_public_acls: bool?,
                                                 restrict_public_buckets: bool?
                                               }?,
                                               vpc_configuration: {
                                                 vpc_id: ::String?
                                               }?
                                             }?,
                                             aws_ec2_client_vpn_endpoint: {
                                               client_vpn_endpoint_id: ::String?,
                                               description: ::String?,
                                               client_cidr_block: ::String?,
                                               dns_server: Array[::String]?,
                                               split_tunnel: bool?,
                                               transport_protocol: ::String?,
                                               vpn_port: ::Integer?,
                                               server_certificate_arn: ::String?,
                                               authentication_options: Array[
                                                 {
                                                   type: ::String?,
                                                   active_directory: {
                                                     directory_id: ::String?
                                                   }?,
                                                   mutual_authentication: {
                                                     client_root_certificate_chain: ::String?
                                                   }?,
                                                   federated_authentication: {
                                                     saml_provider_arn: ::String?,
                                                     self_service_saml_provider_arn: ::String?
                                                   }?
                                                 },
                                               ]?,
                                               connection_log_options: {
                                                 enabled: bool?,
                                                 cloudwatch_log_group: ::String?,
                                                 cloudwatch_log_stream: ::String?
                                               }?,
                                               security_group_id_set: Array[::String]?,
                                               vpc_id: ::String?,
                                               self_service_portal_url: ::String?,
                                               client_connect_options: {
                                                 enabled: bool?,
                                                 lambda_function_arn: ::String?,
                                                 status: {
                                                   code: ::String?,
                                                   message: ::String?
                                                 }?
                                               }?,
                                               session_timeout_hours: ::Integer?,
                                               client_login_banner_options: {
                                                 enabled: bool?,
                                                 banner_text: ::String?
                                               }?
                                             }?
                                           }?,
                                           application_name: ::String?,
                                           application_arn: ::String?
                                         },
                                       ],
                                       compliance: {
                                         status: ("PASSED" | "WARNING" | "FAILED" | "NOT_AVAILABLE")?,
                                         related_requirements: Array[::String]?,
                                         status_reasons: Array[
                                           {
                                             reason_code: ::String,
                                             description: ::String?
                                           },
                                         ]?,
                                         security_control_id: ::String?,
                                         associated_standards: Array[
                                           {
                                             standards_id: ::String?
                                           },
                                         ]?,
                                         security_control_parameters: Array[
                                           {
                                             name: ::String?,
                                             value: Array[::String]?
                                           },
                                         ]?
                                       }?,
                                       verification_state: ("UNKNOWN" | "TRUE_POSITIVE" | "FALSE_POSITIVE" | "BENIGN_POSITIVE")?,
                                       workflow_state: ("NEW" | "ASSIGNED" | "IN_PROGRESS" | "DEFERRED" | "RESOLVED")?,
                                       workflow: {
                                         status: ("NEW" | "NOTIFIED" | "RESOLVED" | "SUPPRESSED")?
                                       }?,
                                       record_state: ("ACTIVE" | "ARCHIVED")?,
                                       related_findings: Array[
                                         {
                                           product_arn: ::String,
                                           id: ::String
                                         },
                                       ]?,
                                       note: {
                                         text: ::String,
                                         updated_by: ::String,
                                         updated_at: ::String
                                       }?,
                                       vulnerabilities: Array[
                                         {
                                           id: ::String,
                                           vulnerable_packages: Array[
                                             {
                                               name: ::String?,
                                               version: ::String?,
                                               epoch: ::String?,
                                               release: ::String?,
                                               architecture: ::String?,
                                               package_manager: ::String?,
                                               file_path: ::String?,
                                               fixed_in_version: ::String?,
                                               remediation: ::String?,
                                               source_layer_hash: ::String?,
                                               source_layer_arn: ::String?
                                             },
                                           ]?,
                                           cvss: Array[
                                             {
                                               version: ::String?,
                                               base_score: ::Float?,
                                               base_vector: ::String?,
                                               source: ::String?,
                                               adjustments: Array[
                                                 {
                                                   metric: ::String?,
                                                   reason: ::String?
                                                 },
                                               ]?
                                             },
                                           ]?,
                                           related_vulnerabilities: Array[::String]?,
                                           vendor: {
                                             name: ::String,
                                             url: ::String?,
                                             vendor_severity: ::String?,
                                             vendor_created_at: ::String?,
                                             vendor_updated_at: ::String?
                                           }?,
                                           reference_urls: Array[::String]?,
                                           fix_available: ("YES" | "NO" | "PARTIAL")?,
                                           epss_score: ::Float?,
                                           exploit_available: ("YES" | "NO")?,
                                           code_vulnerabilities: Array[
                                             {
                                               cwes: Array[::String]?,
                                               file_path: {
                                                 end_line: ::Integer?,
                                                 file_name: ::String?,
                                                 file_path: ::String?,
                                                 start_line: ::Integer?
                                               }?,
                                               source_arn: ::String?
                                             },
                                           ]?
                                         },
                                       ]?,
                                       patch_summary: {
                                         id: ::String,
                                         installed_count: ::Integer?,
                                         missing_count: ::Integer?,
                                         failed_count: ::Integer?,
                                         installed_other_count: ::Integer?,
                                         installed_rejected_count: ::Integer?,
                                         installed_pending_reboot: ::Integer?,
                                         operation_start_time: ::String?,
                                         operation_end_time: ::String?,
                                         reboot_option: ::String?,
                                         operation: ::String?
                                       }?,
                                       action: {
                                         action_type: ::String?,
                                         network_connection_action: {
                                           connection_direction: ::String?,
                                           remote_ip_details: {
                                             ip_address_v4: ::String?,
                                             organization: {
                                               asn: ::Integer?,
                                               asn_org: ::String?,
                                               isp: ::String?,
                                               org: ::String?
                                             }?,
                                             country: {
                                               country_code: ::String?,
                                               country_name: ::String?
                                             }?,
                                             city: {
                                               city_name: ::String?
                                             }?,
                                             geo_location: {
                                               lon: ::Float?,
                                               lat: ::Float?
                                             }?
                                           }?,
                                           remote_port_details: {
                                             port: ::Integer?,
                                             port_name: ::String?
                                           }?,
                                           local_port_details: {
                                             port: ::Integer?,
                                             port_name: ::String?
                                           }?,
                                           protocol: ::String?,
                                           blocked: bool?
                                         }?,
                                         aws_api_call_action: {
                                           api: ::String?,
                                           service_name: ::String?,
                                           caller_type: ::String?,
                                           remote_ip_details: {
                                             ip_address_v4: ::String?,
                                             organization: {
                                               asn: ::Integer?,
                                               asn_org: ::String?,
                                               isp: ::String?,
                                               org: ::String?
                                             }?,
                                             country: {
                                               country_code: ::String?,
                                               country_name: ::String?
                                             }?,
                                             city: {
                                               city_name: ::String?
                                             }?,
                                             geo_location: {
                                               lon: ::Float?,
                                               lat: ::Float?
                                             }?
                                           }?,
                                           domain_details: {
                                             domain: ::String?
                                           }?,
                                           affected_resources: Hash[::String, ::String]?,
                                           first_seen: ::String?,
                                           last_seen: ::String?
                                         }?,
                                         dns_request_action: {
                                           domain: ::String?,
                                           protocol: ::String?,
                                           blocked: bool?
                                         }?,
                                         port_probe_action: {
                                           port_probe_details: Array[
                                             {
                                               local_port_details: {
                                                 port: ::Integer?,
                                                 port_name: ::String?
                                               }?,
                                               local_ip_details: {
                                                 ip_address_v4: ::String?
                                               }?,
                                               remote_ip_details: {
                                                 ip_address_v4: ::String?,
                                                 organization: {
                                                   asn: ::Integer?,
                                                   asn_org: ::String?,
                                                   isp: ::String?,
                                                   org: ::String?
                                                 }?,
                                                 country: {
                                                   country_code: ::String?,
                                                   country_name: ::String?
                                                 }?,
                                                 city: {
                                                   city_name: ::String?
                                                 }?,
                                                 geo_location: {
                                                   lon: ::Float?,
                                                   lat: ::Float?
                                                 }?
                                               }?
                                             },
                                           ]?,
                                           blocked: bool?
                                         }?
                                       }?,
                                       finding_provider_fields: {
                                         confidence: ::Integer?,
                                         criticality: ::Integer?,
                                         related_findings: Array[
                                           {
                                             product_arn: ::String,
                                             id: ::String
                                           },
                                         ]?,
                                         severity: {
                                           label: ("INFORMATIONAL" | "LOW" | "MEDIUM" | "HIGH" | "CRITICAL")?,
                                           original: ::String?
                                         }?,
                                         types: Array[::String]?
                                       }?,
                                       sample: bool?,
                                       generator_details: {
                                         name: ::String?,
                                         description: ::String?,
                                         labels: Array[::String]?
                                       }?,
                                       processed_at: ::String?,
                                       aws_account_name: ::String?
                                     },
                                   ]
                                 ) -> _BatchImportFindingsResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchImportFindingsResponseSuccess

      interface _BatchUpdateAutomationRulesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchUpdateAutomationRulesResponse]
        def processed_automation_rules: () -> ::Array[::String]
        def unprocessed_automation_rules: () -> ::Array[Types::UnprocessedAutomationRule]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_update_automation_rules-instance_method
      def batch_update_automation_rules: (
                                           update_automation_rules_request_items: Array[
                                             {
                                               rule_arn: ::String,
                                               rule_status: ("ENABLED" | "DISABLED")?,
                                               rule_order: ::Integer?,
                                               description: ::String?,
                                               rule_name: ::String?,
                                               is_terminal: bool?,
                                               criteria: {
                                                 product_arn: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 aws_account_id: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 id: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 generator_id: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 type: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 first_observed_at: Array[
                                                   {
                                                     start: ::String?,
                                                     end: ::String?,
                                                     date_range: {
                                                       value: ::Integer?,
                                                       unit: ("DAYS")?
                                                     }?
                                                   },
                                                 ]?,
                                                 last_observed_at: Array[
                                                   {
                                                     start: ::String?,
                                                     end: ::String?,
                                                     date_range: {
                                                       value: ::Integer?,
                                                       unit: ("DAYS")?
                                                     }?
                                                   },
                                                 ]?,
                                                 created_at: Array[
                                                   {
                                                     start: ::String?,
                                                     end: ::String?,
                                                     date_range: {
                                                       value: ::Integer?,
                                                       unit: ("DAYS")?
                                                     }?
                                                   },
                                                 ]?,
                                                 updated_at: Array[
                                                   {
                                                     start: ::String?,
                                                     end: ::String?,
                                                     date_range: {
                                                       value: ::Integer?,
                                                       unit: ("DAYS")?
                                                     }?
                                                   },
                                                 ]?,
                                                 confidence: Array[
                                                   {
                                                     gte: ::Float?,
                                                     lte: ::Float?,
                                                     eq: ::Float?,
                                                     gt: ::Float?,
                                                     lt: ::Float?
                                                   },
                                                 ]?,
                                                 criticality: Array[
                                                   {
                                                     gte: ::Float?,
                                                     lte: ::Float?,
                                                     eq: ::Float?,
                                                     gt: ::Float?,
                                                     lt: ::Float?
                                                   },
                                                 ]?,
                                                 title: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 description: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 source_url: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 product_name: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 company_name: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 severity_label: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 resource_type: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 resource_id: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 resource_partition: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 resource_region: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 resource_tags: Array[
                                                   {
                                                     key: ::String?,
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 resource_details_other: Array[
                                                   {
                                                     key: ::String?,
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 compliance_status: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 compliance_security_control_id: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 compliance_associated_standards_id: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 verification_state: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 workflow_status: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 record_state: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 related_findings_product_arn: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 related_findings_id: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 note_text: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 note_updated_at: Array[
                                                   {
                                                     start: ::String?,
                                                     end: ::String?,
                                                     date_range: {
                                                       value: ::Integer?,
                                                       unit: ("DAYS")?
                                                     }?
                                                   },
                                                 ]?,
                                                 note_updated_by: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 user_defined_fields: Array[
                                                   {
                                                     key: ::String?,
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 resource_application_arn: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 resource_application_name: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?,
                                                 aws_account_name: Array[
                                                   {
                                                     value: ::String?,
                                                     comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                                   },
                                                 ]?
                                               }?,
                                               actions: Array[
                                                 {
                                                   type: ("FINDING_FIELDS_UPDATE")?,
                                                   finding_fields_update: {
                                                     note: {
                                                       text: ::String,
                                                       updated_by: ::String
                                                     }?,
                                                     severity: {
                                                       normalized: ::Integer?,
                                                       product: ::Float?,
                                                       label: ("INFORMATIONAL" | "LOW" | "MEDIUM" | "HIGH" | "CRITICAL")?
                                                     }?,
                                                     verification_state: ("UNKNOWN" | "TRUE_POSITIVE" | "FALSE_POSITIVE" | "BENIGN_POSITIVE")?,
                                                     confidence: ::Integer?,
                                                     criticality: ::Integer?,
                                                     types: Array[::String]?,
                                                     user_defined_fields: Hash[::String, ::String]?,
                                                     workflow: {
                                                       status: ("NEW" | "NOTIFIED" | "RESOLVED" | "SUPPRESSED")?
                                                     }?,
                                                     related_findings: Array[
                                                       {
                                                         product_arn: ::String,
                                                         id: ::String
                                                       },
                                                     ]?
                                                   }?
                                                 },
                                               ]?
                                             },
                                           ]
                                         ) -> _BatchUpdateAutomationRulesResponseSuccess
                                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchUpdateAutomationRulesResponseSuccess

      interface _BatchUpdateFindingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchUpdateFindingsResponse]
        def processed_findings: () -> ::Array[Types::AwsSecurityFindingIdentifier]
        def unprocessed_findings: () -> ::Array[Types::BatchUpdateFindingsUnprocessedFinding]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_update_findings-instance_method
      def batch_update_findings: (
                                   finding_identifiers: Array[
                                     {
                                       id: ::String,
                                       product_arn: ::String
                                     },
                                   ],
                                   ?note: {
                                     text: ::String,
                                     updated_by: ::String
                                   },
                                   ?severity: {
                                     normalized: ::Integer?,
                                     product: ::Float?,
                                     label: ("INFORMATIONAL" | "LOW" | "MEDIUM" | "HIGH" | "CRITICAL")?
                                   },
                                   ?verification_state: ("UNKNOWN" | "TRUE_POSITIVE" | "FALSE_POSITIVE" | "BENIGN_POSITIVE"),
                                   ?confidence: ::Integer,
                                   ?criticality: ::Integer,
                                   ?types: Array[::String],
                                   ?user_defined_fields: Hash[::String, ::String],
                                   ?workflow: {
                                     status: ("NEW" | "NOTIFIED" | "RESOLVED" | "SUPPRESSED")?
                                   },
                                   ?related_findings: Array[
                                     {
                                       product_arn: ::String,
                                       id: ::String
                                     },
                                   ]
                                 ) -> _BatchUpdateFindingsResponseSuccess
                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchUpdateFindingsResponseSuccess

      interface _BatchUpdateStandardsControlAssociationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BatchUpdateStandardsControlAssociationsResponse]
        def unprocessed_association_updates: () -> ::Array[Types::UnprocessedStandardsControlAssociationUpdate]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#batch_update_standards_control_associations-instance_method
      def batch_update_standards_control_associations: (
                                                         standards_control_association_updates: Array[
                                                           {
                                                             standards_arn: ::String,
                                                             security_control_id: ::String,
                                                             association_status: ("ENABLED" | "DISABLED"),
                                                             updated_reason: ::String?
                                                           },
                                                         ]
                                                       ) -> _BatchUpdateStandardsControlAssociationsResponseSuccess
                                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BatchUpdateStandardsControlAssociationsResponseSuccess

      interface _CreateActionTargetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateActionTargetResponse]
        def action_target_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#create_action_target-instance_method
      def create_action_target: (
                                  name: ::String,
                                  description: ::String,
                                  id: ::String
                                ) -> _CreateActionTargetResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateActionTargetResponseSuccess

      interface _CreateAutomationRuleResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateAutomationRuleResponse]
        def rule_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#create_automation_rule-instance_method
      def create_automation_rule: (
                                    ?tags: Hash[::String, ::String],
                                    ?rule_status: ("ENABLED" | "DISABLED"),
                                    rule_order: ::Integer,
                                    rule_name: ::String,
                                    description: ::String,
                                    ?is_terminal: bool,
                                    criteria: {
                                      product_arn: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      aws_account_id: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      id: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      generator_id: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      type: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      first_observed_at: Array[
                                        {
                                          start: ::String?,
                                          end: ::String?,
                                          date_range: {
                                            value: ::Integer?,
                                            unit: ("DAYS")?
                                          }?
                                        },
                                      ]?,
                                      last_observed_at: Array[
                                        {
                                          start: ::String?,
                                          end: ::String?,
                                          date_range: {
                                            value: ::Integer?,
                                            unit: ("DAYS")?
                                          }?
                                        },
                                      ]?,
                                      created_at: Array[
                                        {
                                          start: ::String?,
                                          end: ::String?,
                                          date_range: {
                                            value: ::Integer?,
                                            unit: ("DAYS")?
                                          }?
                                        },
                                      ]?,
                                      updated_at: Array[
                                        {
                                          start: ::String?,
                                          end: ::String?,
                                          date_range: {
                                            value: ::Integer?,
                                            unit: ("DAYS")?
                                          }?
                                        },
                                      ]?,
                                      confidence: Array[
                                        {
                                          gte: ::Float?,
                                          lte: ::Float?,
                                          eq: ::Float?,
                                          gt: ::Float?,
                                          lt: ::Float?
                                        },
                                      ]?,
                                      criticality: Array[
                                        {
                                          gte: ::Float?,
                                          lte: ::Float?,
                                          eq: ::Float?,
                                          gt: ::Float?,
                                          lt: ::Float?
                                        },
                                      ]?,
                                      title: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      description: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      source_url: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      product_name: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      company_name: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      severity_label: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      resource_type: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      resource_id: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      resource_partition: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      resource_region: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      resource_tags: Array[
                                        {
                                          key: ::String?,
                                          value: ::String?,
                                          comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      resource_details_other: Array[
                                        {
                                          key: ::String?,
                                          value: ::String?,
                                          comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      compliance_status: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      compliance_security_control_id: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      compliance_associated_standards_id: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      verification_state: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      workflow_status: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      record_state: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      related_findings_product_arn: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      related_findings_id: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      note_text: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      note_updated_at: Array[
                                        {
                                          start: ::String?,
                                          end: ::String?,
                                          date_range: {
                                            value: ::Integer?,
                                            unit: ("DAYS")?
                                          }?
                                        },
                                      ]?,
                                      note_updated_by: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      user_defined_fields: Array[
                                        {
                                          key: ::String?,
                                          value: ::String?,
                                          comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      resource_application_arn: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      resource_application_name: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?,
                                      aws_account_name: Array[
                                        {
                                          value: ::String?,
                                          comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                        },
                                      ]?
                                    },
                                    actions: Array[
                                      {
                                        type: ("FINDING_FIELDS_UPDATE")?,
                                        finding_fields_update: {
                                          note: {
                                            text: ::String,
                                            updated_by: ::String
                                          }?,
                                          severity: {
                                            normalized: ::Integer?,
                                            product: ::Float?,
                                            label: ("INFORMATIONAL" | "LOW" | "MEDIUM" | "HIGH" | "CRITICAL")?
                                          }?,
                                          verification_state: ("UNKNOWN" | "TRUE_POSITIVE" | "FALSE_POSITIVE" | "BENIGN_POSITIVE")?,
                                          confidence: ::Integer?,
                                          criticality: ::Integer?,
                                          types: Array[::String]?,
                                          user_defined_fields: Hash[::String, ::String]?,
                                          workflow: {
                                            status: ("NEW" | "NOTIFIED" | "RESOLVED" | "SUPPRESSED")?
                                          }?,
                                          related_findings: Array[
                                            {
                                              product_arn: ::String,
                                              id: ::String
                                            },
                                          ]?
                                        }?
                                      },
                                    ]
                                  ) -> _CreateAutomationRuleResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateAutomationRuleResponseSuccess

      interface _CreateConfigurationPolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateConfigurationPolicyResponse]
        def arn: () -> ::String
        def id: () -> ::String
        def name: () -> ::String
        def description: () -> ::String
        def updated_at: () -> ::Time
        def created_at: () -> ::Time
        def configuration_policy: () -> Types::Policy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#create_configuration_policy-instance_method
      def create_configuration_policy: (
                                         name: ::String,
                                         ?description: ::String,
                                         configuration_policy: {
                                           security_hub: {
                                             service_enabled: bool?,
                                             enabled_standard_identifiers: Array[::String]?,
                                             security_controls_configuration: {
                                               enabled_security_control_identifiers: Array[::String]?,
                                               disabled_security_control_identifiers: Array[::String]?,
                                               security_control_custom_parameters: Array[
                                                 {
                                                   security_control_id: ::String?,
                                                   parameters: Hash[::String, {
                                                       value_type: ("DEFAULT" | "CUSTOM"),
                                                       value: {
                                                         integer: ::Integer?,
                                                         integer_list: Array[::Integer]?,
                                                         double: ::Float?,
                                                         string: ::String?,
                                                         string_list: Array[::String]?,
                                                         boolean: bool?,
                                                         enum: ::String?,
                                                         enum_list: Array[::String]?
                                                       }?
                                                     }]?
                                                 },
                                               ]?
                                             }?
                                           }?
                                         },
                                         ?tags: Hash[::String, ::String]
                                       ) -> _CreateConfigurationPolicyResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateConfigurationPolicyResponseSuccess

      interface _CreateFindingAggregatorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateFindingAggregatorResponse]
        def finding_aggregator_arn: () -> ::String
        def finding_aggregation_region: () -> ::String
        def region_linking_mode: () -> ::String
        def regions: () -> ::Array[::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#create_finding_aggregator-instance_method
      def create_finding_aggregator: (
                                       region_linking_mode: ::String,
                                       ?regions: Array[::String]
                                     ) -> _CreateFindingAggregatorResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateFindingAggregatorResponseSuccess

      interface _CreateInsightResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateInsightResponse]
        def insight_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#create_insight-instance_method
      def create_insight: (
                            name: ::String,
                            filters: {
                              product_arn: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              aws_account_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              generator_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              region: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              type: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              first_observed_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              last_observed_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              created_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              updated_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              severity_product: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              severity_normalized: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              severity_label: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              confidence: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              criticality: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              title: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              description: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              recommendation_text: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              source_url: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              product_fields: Array[
                                {
                                  key: ::String?,
                                  value: ::String?,
                                  comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              product_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              company_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              user_defined_fields: Array[
                                {
                                  key: ::String?,
                                  value: ::String?,
                                  comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              malware_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              malware_type: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              malware_path: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              malware_state: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              network_direction: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              network_protocol: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              network_source_ip_v4: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              network_source_ip_v6: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              network_source_port: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              network_source_domain: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              network_source_mac: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              network_destination_ip_v4: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              network_destination_ip_v6: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              network_destination_port: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              network_destination_domain: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              process_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              process_path: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              process_pid: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              process_parent_pid: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              process_launched_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              process_terminated_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              threat_intel_indicator_type: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              threat_intel_indicator_value: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              threat_intel_indicator_category: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              threat_intel_indicator_last_observed_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              threat_intel_indicator_source: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              threat_intel_indicator_source_url: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_type: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_partition: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_region: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_tags: Array[
                                {
                                  key: ::String?,
                                  value: ::String?,
                                  comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_type: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_image_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_ip_v4_addresses: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              resource_aws_ec2_instance_ip_v6_addresses: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              resource_aws_ec2_instance_key_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_iam_instance_profile_arn: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_vpc_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_subnet_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_launched_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              resource_aws_s3_bucket_owner_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_s3_bucket_owner_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_iam_access_key_user_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_iam_access_key_principal_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_iam_access_key_status: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_iam_access_key_created_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              resource_aws_iam_user_user_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_container_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_container_image_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_container_image_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_container_launched_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              resource_details_other: Array[
                                {
                                  key: ::String?,
                                  value: ::String?,
                                  comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              compliance_status: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              verification_state: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              workflow_state: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              workflow_status: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              record_state: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              related_findings_product_arn: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              related_findings_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              note_text: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              note_updated_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              note_updated_by: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              keyword: Array[
                                {
                                  value: ::String?
                                },
                              ]?,
                              finding_provider_fields_confidence: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              finding_provider_fields_criticality: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              finding_provider_fields_related_findings_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              finding_provider_fields_related_findings_product_arn: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              finding_provider_fields_severity_label: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              finding_provider_fields_severity_original: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              finding_provider_fields_types: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              sample: Array[
                                {
                                  value: bool?
                                },
                              ]?,
                              compliance_security_control_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              compliance_associated_standards_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              vulnerabilities_exploit_available: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              vulnerabilities_fix_available: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              compliance_security_control_parameters_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              compliance_security_control_parameters_value: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              aws_account_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_application_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_application_arn: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?
                            },
                            group_by_attribute: ::String
                          ) -> _CreateInsightResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateInsightResponseSuccess

      interface _CreateMembersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateMembersResponse]
        def unprocessed_accounts: () -> ::Array[Types::Result]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#create_members-instance_method
      def create_members: (
                            account_details: Array[
                              {
                                account_id: ::String,
                                email: ::String?
                              },
                            ]
                          ) -> _CreateMembersResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateMembersResponseSuccess

      interface _DeclineInvitationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeclineInvitationsResponse]
        def unprocessed_accounts: () -> ::Array[Types::Result]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#decline_invitations-instance_method
      def decline_invitations: (
                                 account_ids: Array[::String]
                               ) -> _DeclineInvitationsResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeclineInvitationsResponseSuccess

      interface _DeleteActionTargetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteActionTargetResponse]
        def action_target_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#delete_action_target-instance_method
      def delete_action_target: (
                                  action_target_arn: ::String
                                ) -> _DeleteActionTargetResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteActionTargetResponseSuccess

      interface _DeleteConfigurationPolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteConfigurationPolicyResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#delete_configuration_policy-instance_method
      def delete_configuration_policy: (
                                         identifier: ::String
                                       ) -> _DeleteConfigurationPolicyResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteConfigurationPolicyResponseSuccess

      interface _DeleteFindingAggregatorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteFindingAggregatorResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#delete_finding_aggregator-instance_method
      def delete_finding_aggregator: (
                                       finding_aggregator_arn: ::String
                                     ) -> _DeleteFindingAggregatorResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteFindingAggregatorResponseSuccess

      interface _DeleteInsightResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteInsightResponse]
        def insight_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#delete_insight-instance_method
      def delete_insight: (
                            insight_arn: ::String
                          ) -> _DeleteInsightResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteInsightResponseSuccess

      interface _DeleteInvitationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteInvitationsResponse]
        def unprocessed_accounts: () -> ::Array[Types::Result]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#delete_invitations-instance_method
      def delete_invitations: (
                                account_ids: Array[::String]
                              ) -> _DeleteInvitationsResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteInvitationsResponseSuccess

      interface _DeleteMembersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteMembersResponse]
        def unprocessed_accounts: () -> ::Array[Types::Result]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#delete_members-instance_method
      def delete_members: (
                            account_ids: Array[::String]
                          ) -> _DeleteMembersResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteMembersResponseSuccess

      interface _DescribeActionTargetsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeActionTargetsResponse]
        def action_targets: () -> ::Array[Types::ActionTarget]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#describe_action_targets-instance_method
      def describe_action_targets: (
                                     ?action_target_arns: Array[::String],
                                     ?next_token: ::String,
                                     ?max_results: ::Integer
                                   ) -> _DescribeActionTargetsResponseSuccess
                                 | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeActionTargetsResponseSuccess

      interface _DescribeHubResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeHubResponse]
        def hub_arn: () -> ::String
        def subscribed_at: () -> ::String
        def auto_enable_controls: () -> bool
        def control_finding_generator: () -> ("STANDARD_CONTROL" | "SECURITY_CONTROL")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#describe_hub-instance_method
      def describe_hub: (
                          ?hub_arn: ::String
                        ) -> _DescribeHubResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeHubResponseSuccess

      interface _DescribeOrganizationConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeOrganizationConfigurationResponse]
        def auto_enable: () -> bool
        def member_account_limit_reached: () -> bool
        def auto_enable_standards: () -> ("NONE" | "DEFAULT")
        def organization_configuration: () -> Types::OrganizationConfiguration
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#describe_organization_configuration-instance_method
      def describe_organization_configuration: (
                                               ) -> _DescribeOrganizationConfigurationResponseSuccess
                                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeOrganizationConfigurationResponseSuccess

      interface _DescribeProductsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeProductsResponse]
        def products: () -> ::Array[Types::Product]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#describe_products-instance_method
      def describe_products: (
                               ?next_token: ::String,
                               ?max_results: ::Integer,
                               ?product_arn: ::String
                             ) -> _DescribeProductsResponseSuccess
                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeProductsResponseSuccess

      interface _DescribeStandardsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeStandardsResponse]
        def standards: () -> ::Array[Types::Standard]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#describe_standards-instance_method
      def describe_standards: (
                                ?next_token: ::String,
                                ?max_results: ::Integer
                              ) -> _DescribeStandardsResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeStandardsResponseSuccess

      interface _DescribeStandardsControlsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeStandardsControlsResponse]
        def controls: () -> ::Array[Types::StandardsControl]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#describe_standards_controls-instance_method
      def describe_standards_controls: (
                                         standards_subscription_arn: ::String,
                                         ?next_token: ::String,
                                         ?max_results: ::Integer
                                       ) -> _DescribeStandardsControlsResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeStandardsControlsResponseSuccess

      interface _DisableImportFindingsForProductResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisableImportFindingsForProductResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#disable_import_findings_for_product-instance_method
      def disable_import_findings_for_product: (
                                                 product_subscription_arn: ::String
                                               ) -> _DisableImportFindingsForProductResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisableImportFindingsForProductResponseSuccess

      interface _DisableOrganizationAdminAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisableOrganizationAdminAccountResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#disable_organization_admin_account-instance_method
      def disable_organization_admin_account: (
                                                admin_account_id: ::String
                                              ) -> _DisableOrganizationAdminAccountResponseSuccess
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisableOrganizationAdminAccountResponseSuccess

      interface _DisableSecurityHubResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisableSecurityHubResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#disable_security_hub-instance_method
      def disable_security_hub: (
                                ) -> _DisableSecurityHubResponseSuccess
                              | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisableSecurityHubResponseSuccess

      interface _DisassociateFromAdministratorAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateFromAdministratorAccountResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#disassociate_from_administrator_account-instance_method
      def disassociate_from_administrator_account: (
                                                   ) -> _DisassociateFromAdministratorAccountResponseSuccess
                                                 | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateFromAdministratorAccountResponseSuccess

      interface _DisassociateFromMasterAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateFromMasterAccountResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#disassociate_from_master_account-instance_method
      def disassociate_from_master_account: (
                                            ) -> _DisassociateFromMasterAccountResponseSuccess
                                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateFromMasterAccountResponseSuccess

      interface _DisassociateMembersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisassociateMembersResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#disassociate_members-instance_method
      def disassociate_members: (
                                  account_ids: Array[::String]
                                ) -> _DisassociateMembersResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisassociateMembersResponseSuccess

      interface _EnableImportFindingsForProductResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::EnableImportFindingsForProductResponse]
        def product_subscription_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#enable_import_findings_for_product-instance_method
      def enable_import_findings_for_product: (
                                                product_arn: ::String
                                              ) -> _EnableImportFindingsForProductResponseSuccess
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _EnableImportFindingsForProductResponseSuccess

      interface _EnableOrganizationAdminAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::EnableOrganizationAdminAccountResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#enable_organization_admin_account-instance_method
      def enable_organization_admin_account: (
                                               admin_account_id: ::String
                                             ) -> _EnableOrganizationAdminAccountResponseSuccess
                                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _EnableOrganizationAdminAccountResponseSuccess

      interface _EnableSecurityHubResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::EnableSecurityHubResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#enable_security_hub-instance_method
      def enable_security_hub: (
                                 ?tags: Hash[::String, ::String],
                                 ?enable_default_standards: bool,
                                 ?control_finding_generator: ("STANDARD_CONTROL" | "SECURITY_CONTROL")
                               ) -> _EnableSecurityHubResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _EnableSecurityHubResponseSuccess

      interface _GetAdministratorAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetAdministratorAccountResponse]
        def administrator: () -> Types::Invitation
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_administrator_account-instance_method
      def get_administrator_account: (
                                     ) -> _GetAdministratorAccountResponseSuccess
                                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetAdministratorAccountResponseSuccess

      interface _GetConfigurationPolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetConfigurationPolicyResponse]
        def arn: () -> ::String
        def id: () -> ::String
        def name: () -> ::String
        def description: () -> ::String
        def updated_at: () -> ::Time
        def created_at: () -> ::Time
        def configuration_policy: () -> Types::Policy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_configuration_policy-instance_method
      def get_configuration_policy: (
                                      identifier: ::String
                                    ) -> _GetConfigurationPolicyResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetConfigurationPolicyResponseSuccess

      interface _GetConfigurationPolicyAssociationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetConfigurationPolicyAssociationResponse]
        def configuration_policy_id: () -> ::String
        def target_id: () -> ::String
        def target_type: () -> ("ACCOUNT" | "ORGANIZATIONAL_UNIT")
        def association_type: () -> ("INHERITED" | "APPLIED")
        def updated_at: () -> ::Time
        def association_status: () -> ("PENDING" | "SUCCESS" | "FAILED")
        def association_status_message: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_configuration_policy_association-instance_method
      def get_configuration_policy_association: (
                                                  target: {
                                                    account_id: ::String?,
                                                    organizational_unit_id: ::String?,
                                                    root_id: ::String?
                                                  }
                                                ) -> _GetConfigurationPolicyAssociationResponseSuccess
                                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetConfigurationPolicyAssociationResponseSuccess

      interface _GetEnabledStandardsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetEnabledStandardsResponse]
        def standards_subscriptions: () -> ::Array[Types::StandardsSubscription]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_enabled_standards-instance_method
      def get_enabled_standards: (
                                   ?standards_subscription_arns: Array[::String],
                                   ?next_token: ::String,
                                   ?max_results: ::Integer
                                 ) -> _GetEnabledStandardsResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetEnabledStandardsResponseSuccess

      interface _GetFindingAggregatorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetFindingAggregatorResponse]
        def finding_aggregator_arn: () -> ::String
        def finding_aggregation_region: () -> ::String
        def region_linking_mode: () -> ::String
        def regions: () -> ::Array[::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_finding_aggregator-instance_method
      def get_finding_aggregator: (
                                    finding_aggregator_arn: ::String
                                  ) -> _GetFindingAggregatorResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetFindingAggregatorResponseSuccess

      interface _GetFindingHistoryResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetFindingHistoryResponse]
        def records: () -> ::Array[Types::FindingHistoryRecord]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_finding_history-instance_method
      def get_finding_history: (
                                 finding_identifier: {
                                   id: ::String,
                                   product_arn: ::String
                                 },
                                 ?start_time: ::Time,
                                 ?end_time: ::Time,
                                 ?next_token: ::String,
                                 ?max_results: ::Integer
                               ) -> _GetFindingHistoryResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetFindingHistoryResponseSuccess

      interface _GetFindingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetFindingsResponse]
        def findings: () -> ::Array[Types::AwsSecurityFinding]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_findings-instance_method
      def get_findings: (
                          ?filters: {
                            product_arn: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            aws_account_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            generator_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            region: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            type: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            first_observed_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            last_observed_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            created_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            updated_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            severity_product: Array[
                              {
                                gte: ::Float?,
                                lte: ::Float?,
                                eq: ::Float?,
                                gt: ::Float?,
                                lt: ::Float?
                              },
                            ]?,
                            severity_normalized: Array[
                              {
                                gte: ::Float?,
                                lte: ::Float?,
                                eq: ::Float?,
                                gt: ::Float?,
                                lt: ::Float?
                              },
                            ]?,
                            severity_label: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            confidence: Array[
                              {
                                gte: ::Float?,
                                lte: ::Float?,
                                eq: ::Float?,
                                gt: ::Float?,
                                lt: ::Float?
                              },
                            ]?,
                            criticality: Array[
                              {
                                gte: ::Float?,
                                lte: ::Float?,
                                eq: ::Float?,
                                gt: ::Float?,
                                lt: ::Float?
                              },
                            ]?,
                            title: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            description: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            recommendation_text: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            source_url: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            product_fields: Array[
                              {
                                key: ::String?,
                                value: ::String?,
                                comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            product_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            company_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            user_defined_fields: Array[
                              {
                                key: ::String?,
                                value: ::String?,
                                comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            malware_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            malware_type: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            malware_path: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            malware_state: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            network_direction: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            network_protocol: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            network_source_ip_v4: Array[
                              {
                                cidr: ::String?
                              },
                            ]?,
                            network_source_ip_v6: Array[
                              {
                                cidr: ::String?
                              },
                            ]?,
                            network_source_port: Array[
                              {
                                gte: ::Float?,
                                lte: ::Float?,
                                eq: ::Float?,
                                gt: ::Float?,
                                lt: ::Float?
                              },
                            ]?,
                            network_source_domain: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            network_source_mac: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            network_destination_ip_v4: Array[
                              {
                                cidr: ::String?
                              },
                            ]?,
                            network_destination_ip_v6: Array[
                              {
                                cidr: ::String?
                              },
                            ]?,
                            network_destination_port: Array[
                              {
                                gte: ::Float?,
                                lte: ::Float?,
                                eq: ::Float?,
                                gt: ::Float?,
                                lt: ::Float?
                              },
                            ]?,
                            network_destination_domain: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            process_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            process_path: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            process_pid: Array[
                              {
                                gte: ::Float?,
                                lte: ::Float?,
                                eq: ::Float?,
                                gt: ::Float?,
                                lt: ::Float?
                              },
                            ]?,
                            process_parent_pid: Array[
                              {
                                gte: ::Float?,
                                lte: ::Float?,
                                eq: ::Float?,
                                gt: ::Float?,
                                lt: ::Float?
                              },
                            ]?,
                            process_launched_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            process_terminated_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            threat_intel_indicator_type: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            threat_intel_indicator_value: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            threat_intel_indicator_category: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            threat_intel_indicator_last_observed_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            threat_intel_indicator_source: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            threat_intel_indicator_source_url: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_type: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_partition: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_region: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_tags: Array[
                              {
                                key: ::String?,
                                value: ::String?,
                                comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_ec2_instance_type: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_ec2_instance_image_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_ec2_instance_ip_v4_addresses: Array[
                              {
                                cidr: ::String?
                              },
                            ]?,
                            resource_aws_ec2_instance_ip_v6_addresses: Array[
                              {
                                cidr: ::String?
                              },
                            ]?,
                            resource_aws_ec2_instance_key_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_ec2_instance_iam_instance_profile_arn: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_ec2_instance_vpc_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_ec2_instance_subnet_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_ec2_instance_launched_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            resource_aws_s3_bucket_owner_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_s3_bucket_owner_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_iam_access_key_user_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_iam_access_key_principal_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_iam_access_key_status: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_aws_iam_access_key_created_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            resource_aws_iam_user_user_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_container_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_container_image_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_container_image_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_container_launched_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            resource_details_other: Array[
                              {
                                key: ::String?,
                                value: ::String?,
                                comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            compliance_status: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            verification_state: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            workflow_state: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            workflow_status: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            record_state: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            related_findings_product_arn: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            related_findings_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            note_text: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            note_updated_at: Array[
                              {
                                start: ::String?,
                                end: ::String?,
                                date_range: {
                                  value: ::Integer?,
                                  unit: ("DAYS")?
                                }?
                              },
                            ]?,
                            note_updated_by: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            keyword: Array[
                              {
                                value: ::String?
                              },
                            ]?,
                            finding_provider_fields_confidence: Array[
                              {
                                gte: ::Float?,
                                lte: ::Float?,
                                eq: ::Float?,
                                gt: ::Float?,
                                lt: ::Float?
                              },
                            ]?,
                            finding_provider_fields_criticality: Array[
                              {
                                gte: ::Float?,
                                lte: ::Float?,
                                eq: ::Float?,
                                gt: ::Float?,
                                lt: ::Float?
                              },
                            ]?,
                            finding_provider_fields_related_findings_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            finding_provider_fields_related_findings_product_arn: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            finding_provider_fields_severity_label: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            finding_provider_fields_severity_original: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            finding_provider_fields_types: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            sample: Array[
                              {
                                value: bool?
                              },
                            ]?,
                            compliance_security_control_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            compliance_associated_standards_id: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            vulnerabilities_exploit_available: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            vulnerabilities_fix_available: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            compliance_security_control_parameters_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            compliance_security_control_parameters_value: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            aws_account_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_application_name: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?,
                            resource_application_arn: Array[
                              {
                                value: ::String?,
                                comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                              },
                            ]?
                          },
                          ?sort_criteria: Array[
                            {
                              field: ::String?,
                              sort_order: ("asc" | "desc")?
                            },
                          ],
                          ?next_token: ::String,
                          ?max_results: ::Integer
                        ) -> _GetFindingsResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetFindingsResponseSuccess

      interface _GetInsightResultsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetInsightResultsResponse]
        def insight_results: () -> Types::InsightResults
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_insight_results-instance_method
      def get_insight_results: (
                                 insight_arn: ::String
                               ) -> _GetInsightResultsResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetInsightResultsResponseSuccess

      interface _GetInsightsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetInsightsResponse]
        def insights: () -> ::Array[Types::Insight]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_insights-instance_method
      def get_insights: (
                          ?insight_arns: Array[::String],
                          ?next_token: ::String,
                          ?max_results: ::Integer
                        ) -> _GetInsightsResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetInsightsResponseSuccess

      interface _GetInvitationsCountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetInvitationsCountResponse]
        def invitations_count: () -> ::Integer
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_invitations_count-instance_method
      def get_invitations_count: (
                                 ) -> _GetInvitationsCountResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetInvitationsCountResponseSuccess

      interface _GetMasterAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetMasterAccountResponse]
        def master: () -> Types::Invitation
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_master_account-instance_method
      def get_master_account: (
                              ) -> _GetMasterAccountResponseSuccess
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetMasterAccountResponseSuccess

      interface _GetMembersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetMembersResponse]
        def members: () -> ::Array[Types::Member]
        def unprocessed_accounts: () -> ::Array[Types::Result]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_members-instance_method
      def get_members: (
                         account_ids: Array[::String]
                       ) -> _GetMembersResponseSuccess
                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetMembersResponseSuccess

      interface _GetSecurityControlDefinitionResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetSecurityControlDefinitionResponse]
        def security_control_definition: () -> Types::SecurityControlDefinition
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#get_security_control_definition-instance_method
      def get_security_control_definition: (
                                             security_control_id: ::String
                                           ) -> _GetSecurityControlDefinitionResponseSuccess
                                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetSecurityControlDefinitionResponseSuccess

      interface _InviteMembersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::InviteMembersResponse]
        def unprocessed_accounts: () -> ::Array[Types::Result]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#invite_members-instance_method
      def invite_members: (
                            account_ids: Array[::String]
                          ) -> _InviteMembersResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _InviteMembersResponseSuccess

      interface _ListAutomationRulesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAutomationRulesResponse]
        def automation_rules_metadata: () -> ::Array[Types::AutomationRulesMetadata]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_automation_rules-instance_method
      def list_automation_rules: (
                                   ?next_token: ::String,
                                   ?max_results: ::Integer
                                 ) -> _ListAutomationRulesResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAutomationRulesResponseSuccess

      interface _ListConfigurationPoliciesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListConfigurationPoliciesResponse]
        def configuration_policy_summaries: () -> ::Array[Types::ConfigurationPolicySummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_configuration_policies-instance_method
      def list_configuration_policies: (
                                         ?next_token: ::String,
                                         ?max_results: ::Integer
                                       ) -> _ListConfigurationPoliciesResponseSuccess
                                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListConfigurationPoliciesResponseSuccess

      interface _ListConfigurationPolicyAssociationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListConfigurationPolicyAssociationsResponse]
        def configuration_policy_association_summaries: () -> ::Array[Types::ConfigurationPolicyAssociationSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_configuration_policy_associations-instance_method
      def list_configuration_policy_associations: (
                                                    ?next_token: ::String,
                                                    ?max_results: ::Integer,
                                                    ?filters: {
                                                      configuration_policy_id: ::String?,
                                                      association_type: ("INHERITED" | "APPLIED")?,
                                                      association_status: ("PENDING" | "SUCCESS" | "FAILED")?
                                                    }
                                                  ) -> _ListConfigurationPolicyAssociationsResponseSuccess
                                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListConfigurationPolicyAssociationsResponseSuccess

      interface _ListEnabledProductsForImportResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListEnabledProductsForImportResponse]
        def product_subscriptions: () -> ::Array[::String]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_enabled_products_for_import-instance_method
      def list_enabled_products_for_import: (
                                              ?next_token: ::String,
                                              ?max_results: ::Integer
                                            ) -> _ListEnabledProductsForImportResponseSuccess
                                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListEnabledProductsForImportResponseSuccess

      interface _ListFindingAggregatorsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListFindingAggregatorsResponse]
        def finding_aggregators: () -> ::Array[Types::FindingAggregator]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_finding_aggregators-instance_method
      def list_finding_aggregators: (
                                      ?next_token: ::String,
                                      ?max_results: ::Integer
                                    ) -> _ListFindingAggregatorsResponseSuccess
                                  | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListFindingAggregatorsResponseSuccess

      interface _ListInvitationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListInvitationsResponse]
        def invitations: () -> ::Array[Types::Invitation]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_invitations-instance_method
      def list_invitations: (
                              ?max_results: ::Integer,
                              ?next_token: ::String
                            ) -> _ListInvitationsResponseSuccess
                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListInvitationsResponseSuccess

      interface _ListMembersResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListMembersResponse]
        def members: () -> ::Array[Types::Member]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_members-instance_method
      def list_members: (
                          ?only_associated: bool,
                          ?max_results: ::Integer,
                          ?next_token: ::String
                        ) -> _ListMembersResponseSuccess
                      | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListMembersResponseSuccess

      interface _ListOrganizationAdminAccountsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListOrganizationAdminAccountsResponse]
        def admin_accounts: () -> ::Array[Types::AdminAccount]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_organization_admin_accounts-instance_method
      def list_organization_admin_accounts: (
                                              ?max_results: ::Integer,
                                              ?next_token: ::String
                                            ) -> _ListOrganizationAdminAccountsResponseSuccess
                                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListOrganizationAdminAccountsResponseSuccess

      interface _ListSecurityControlDefinitionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListSecurityControlDefinitionsResponse]
        def security_control_definitions: () -> ::Array[Types::SecurityControlDefinition]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_security_control_definitions-instance_method
      def list_security_control_definitions: (
                                               ?standards_arn: ::String,
                                               ?next_token: ::String,
                                               ?max_results: ::Integer
                                             ) -> _ListSecurityControlDefinitionsResponseSuccess
                                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListSecurityControlDefinitionsResponseSuccess

      interface _ListStandardsControlAssociationsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListStandardsControlAssociationsResponse]
        def standards_control_association_summaries: () -> ::Array[Types::StandardsControlAssociationSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_standards_control_associations-instance_method
      def list_standards_control_associations: (
                                                 security_control_id: ::String,
                                                 ?next_token: ::String,
                                                 ?max_results: ::Integer
                                               ) -> _ListStandardsControlAssociationsResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListStandardsControlAssociationsResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Hash[::String, ::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _StartConfigurationPolicyAssociationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartConfigurationPolicyAssociationResponse]
        def configuration_policy_id: () -> ::String
        def target_id: () -> ::String
        def target_type: () -> ("ACCOUNT" | "ORGANIZATIONAL_UNIT")
        def association_type: () -> ("INHERITED" | "APPLIED")
        def updated_at: () -> ::Time
        def association_status: () -> ("PENDING" | "SUCCESS" | "FAILED")
        def association_status_message: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#start_configuration_policy_association-instance_method
      def start_configuration_policy_association: (
                                                    configuration_policy_identifier: ::String,
                                                    target: {
                                                      account_id: ::String?,
                                                      organizational_unit_id: ::String?,
                                                      root_id: ::String?
                                                    }
                                                  ) -> _StartConfigurationPolicyAssociationResponseSuccess
                                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartConfigurationPolicyAssociationResponseSuccess

      interface _StartConfigurationPolicyDisassociationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::StartConfigurationPolicyDisassociationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#start_configuration_policy_disassociation-instance_method
      def start_configuration_policy_disassociation: (
                                                       ?target: {
                                                         account_id: ::String?,
                                                         organizational_unit_id: ::String?,
                                                         root_id: ::String?
                                                       },
                                                       configuration_policy_identifier: ::String
                                                     ) -> _StartConfigurationPolicyDisassociationResponseSuccess
                                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _StartConfigurationPolicyDisassociationResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Hash[::String, ::String]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      interface _UpdateActionTargetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateActionTargetResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#update_action_target-instance_method
      def update_action_target: (
                                  action_target_arn: ::String,
                                  ?name: ::String,
                                  ?description: ::String
                                ) -> _UpdateActionTargetResponseSuccess
                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateActionTargetResponseSuccess

      interface _UpdateConfigurationPolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateConfigurationPolicyResponse]
        def arn: () -> ::String
        def id: () -> ::String
        def name: () -> ::String
        def description: () -> ::String
        def updated_at: () -> ::Time
        def created_at: () -> ::Time
        def configuration_policy: () -> Types::Policy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#update_configuration_policy-instance_method
      def update_configuration_policy: (
                                         identifier: ::String,
                                         ?name: ::String,
                                         ?description: ::String,
                                         ?updated_reason: ::String,
                                         ?configuration_policy: {
                                           security_hub: {
                                             service_enabled: bool?,
                                             enabled_standard_identifiers: Array[::String]?,
                                             security_controls_configuration: {
                                               enabled_security_control_identifiers: Array[::String]?,
                                               disabled_security_control_identifiers: Array[::String]?,
                                               security_control_custom_parameters: Array[
                                                 {
                                                   security_control_id: ::String?,
                                                   parameters: Hash[::String, {
                                                       value_type: ("DEFAULT" | "CUSTOM"),
                                                       value: {
                                                         integer: ::Integer?,
                                                         integer_list: Array[::Integer]?,
                                                         double: ::Float?,
                                                         string: ::String?,
                                                         string_list: Array[::String]?,
                                                         boolean: bool?,
                                                         enum: ::String?,
                                                         enum_list: Array[::String]?
                                                       }?
                                                     }]?
                                                 },
                                               ]?
                                             }?
                                           }?
                                         }
                                       ) -> _UpdateConfigurationPolicyResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateConfigurationPolicyResponseSuccess

      interface _UpdateFindingAggregatorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateFindingAggregatorResponse]
        def finding_aggregator_arn: () -> ::String
        def finding_aggregation_region: () -> ::String
        def region_linking_mode: () -> ::String
        def regions: () -> ::Array[::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#update_finding_aggregator-instance_method
      def update_finding_aggregator: (
                                       finding_aggregator_arn: ::String,
                                       region_linking_mode: ::String,
                                       ?regions: Array[::String]
                                     ) -> _UpdateFindingAggregatorResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateFindingAggregatorResponseSuccess

      interface _UpdateFindingsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateFindingsResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#update_findings-instance_method
      def update_findings: (
                             filters: {
                               product_arn: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               aws_account_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               generator_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               region: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               type: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               first_observed_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               last_observed_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               created_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               updated_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               severity_product: Array[
                                 {
                                   gte: ::Float?,
                                   lte: ::Float?,
                                   eq: ::Float?,
                                   gt: ::Float?,
                                   lt: ::Float?
                                 },
                               ]?,
                               severity_normalized: Array[
                                 {
                                   gte: ::Float?,
                                   lte: ::Float?,
                                   eq: ::Float?,
                                   gt: ::Float?,
                                   lt: ::Float?
                                 },
                               ]?,
                               severity_label: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               confidence: Array[
                                 {
                                   gte: ::Float?,
                                   lte: ::Float?,
                                   eq: ::Float?,
                                   gt: ::Float?,
                                   lt: ::Float?
                                 },
                               ]?,
                               criticality: Array[
                                 {
                                   gte: ::Float?,
                                   lte: ::Float?,
                                   eq: ::Float?,
                                   gt: ::Float?,
                                   lt: ::Float?
                                 },
                               ]?,
                               title: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               description: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               recommendation_text: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               source_url: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               product_fields: Array[
                                 {
                                   key: ::String?,
                                   value: ::String?,
                                   comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               product_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               company_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               user_defined_fields: Array[
                                 {
                                   key: ::String?,
                                   value: ::String?,
                                   comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               malware_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               malware_type: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               malware_path: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               malware_state: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               network_direction: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               network_protocol: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               network_source_ip_v4: Array[
                                 {
                                   cidr: ::String?
                                 },
                               ]?,
                               network_source_ip_v6: Array[
                                 {
                                   cidr: ::String?
                                 },
                               ]?,
                               network_source_port: Array[
                                 {
                                   gte: ::Float?,
                                   lte: ::Float?,
                                   eq: ::Float?,
                                   gt: ::Float?,
                                   lt: ::Float?
                                 },
                               ]?,
                               network_source_domain: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               network_source_mac: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               network_destination_ip_v4: Array[
                                 {
                                   cidr: ::String?
                                 },
                               ]?,
                               network_destination_ip_v6: Array[
                                 {
                                   cidr: ::String?
                                 },
                               ]?,
                               network_destination_port: Array[
                                 {
                                   gte: ::Float?,
                                   lte: ::Float?,
                                   eq: ::Float?,
                                   gt: ::Float?,
                                   lt: ::Float?
                                 },
                               ]?,
                               network_destination_domain: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               process_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               process_path: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               process_pid: Array[
                                 {
                                   gte: ::Float?,
                                   lte: ::Float?,
                                   eq: ::Float?,
                                   gt: ::Float?,
                                   lt: ::Float?
                                 },
                               ]?,
                               process_parent_pid: Array[
                                 {
                                   gte: ::Float?,
                                   lte: ::Float?,
                                   eq: ::Float?,
                                   gt: ::Float?,
                                   lt: ::Float?
                                 },
                               ]?,
                               process_launched_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               process_terminated_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               threat_intel_indicator_type: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               threat_intel_indicator_value: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               threat_intel_indicator_category: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               threat_intel_indicator_last_observed_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               threat_intel_indicator_source: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               threat_intel_indicator_source_url: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_type: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_partition: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_region: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_tags: Array[
                                 {
                                   key: ::String?,
                                   value: ::String?,
                                   comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_ec2_instance_type: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_ec2_instance_image_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_ec2_instance_ip_v4_addresses: Array[
                                 {
                                   cidr: ::String?
                                 },
                               ]?,
                               resource_aws_ec2_instance_ip_v6_addresses: Array[
                                 {
                                   cidr: ::String?
                                 },
                               ]?,
                               resource_aws_ec2_instance_key_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_ec2_instance_iam_instance_profile_arn: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_ec2_instance_vpc_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_ec2_instance_subnet_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_ec2_instance_launched_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               resource_aws_s3_bucket_owner_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_s3_bucket_owner_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_iam_access_key_user_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_iam_access_key_principal_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_iam_access_key_status: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_aws_iam_access_key_created_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               resource_aws_iam_user_user_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_container_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_container_image_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_container_image_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_container_launched_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               resource_details_other: Array[
                                 {
                                   key: ::String?,
                                   value: ::String?,
                                   comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               compliance_status: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               verification_state: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               workflow_state: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               workflow_status: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               record_state: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               related_findings_product_arn: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               related_findings_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               note_text: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               note_updated_at: Array[
                                 {
                                   start: ::String?,
                                   end: ::String?,
                                   date_range: {
                                     value: ::Integer?,
                                     unit: ("DAYS")?
                                   }?
                                 },
                               ]?,
                               note_updated_by: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               keyword: Array[
                                 {
                                   value: ::String?
                                 },
                               ]?,
                               finding_provider_fields_confidence: Array[
                                 {
                                   gte: ::Float?,
                                   lte: ::Float?,
                                   eq: ::Float?,
                                   gt: ::Float?,
                                   lt: ::Float?
                                 },
                               ]?,
                               finding_provider_fields_criticality: Array[
                                 {
                                   gte: ::Float?,
                                   lte: ::Float?,
                                   eq: ::Float?,
                                   gt: ::Float?,
                                   lt: ::Float?
                                 },
                               ]?,
                               finding_provider_fields_related_findings_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               finding_provider_fields_related_findings_product_arn: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               finding_provider_fields_severity_label: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               finding_provider_fields_severity_original: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               finding_provider_fields_types: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               sample: Array[
                                 {
                                   value: bool?
                                 },
                               ]?,
                               compliance_security_control_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               compliance_associated_standards_id: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               vulnerabilities_exploit_available: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               vulnerabilities_fix_available: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               compliance_security_control_parameters_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               compliance_security_control_parameters_value: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               aws_account_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_application_name: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?,
                               resource_application_arn: Array[
                                 {
                                   value: ::String?,
                                   comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                 },
                               ]?
                             },
                             ?note: {
                               text: ::String,
                               updated_by: ::String
                             },
                             ?record_state: ("ACTIVE" | "ARCHIVED")
                           ) -> _UpdateFindingsResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateFindingsResponseSuccess

      interface _UpdateInsightResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateInsightResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#update_insight-instance_method
      def update_insight: (
                            insight_arn: ::String,
                            ?name: ::String,
                            ?filters: {
                              product_arn: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              aws_account_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              generator_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              region: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              type: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              first_observed_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              last_observed_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              created_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              updated_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              severity_product: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              severity_normalized: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              severity_label: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              confidence: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              criticality: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              title: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              description: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              recommendation_text: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              source_url: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              product_fields: Array[
                                {
                                  key: ::String?,
                                  value: ::String?,
                                  comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              product_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              company_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              user_defined_fields: Array[
                                {
                                  key: ::String?,
                                  value: ::String?,
                                  comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              malware_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              malware_type: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              malware_path: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              malware_state: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              network_direction: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              network_protocol: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              network_source_ip_v4: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              network_source_ip_v6: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              network_source_port: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              network_source_domain: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              network_source_mac: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              network_destination_ip_v4: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              network_destination_ip_v6: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              network_destination_port: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              network_destination_domain: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              process_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              process_path: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              process_pid: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              process_parent_pid: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              process_launched_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              process_terminated_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              threat_intel_indicator_type: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              threat_intel_indicator_value: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              threat_intel_indicator_category: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              threat_intel_indicator_last_observed_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              threat_intel_indicator_source: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              threat_intel_indicator_source_url: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_type: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_partition: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_region: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_tags: Array[
                                {
                                  key: ::String?,
                                  value: ::String?,
                                  comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_type: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_image_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_ip_v4_addresses: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              resource_aws_ec2_instance_ip_v6_addresses: Array[
                                {
                                  cidr: ::String?
                                },
                              ]?,
                              resource_aws_ec2_instance_key_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_iam_instance_profile_arn: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_vpc_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_subnet_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_ec2_instance_launched_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              resource_aws_s3_bucket_owner_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_s3_bucket_owner_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_iam_access_key_user_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_iam_access_key_principal_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_iam_access_key_status: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_aws_iam_access_key_created_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              resource_aws_iam_user_user_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_container_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_container_image_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_container_image_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_container_launched_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              resource_details_other: Array[
                                {
                                  key: ::String?,
                                  value: ::String?,
                                  comparison: ("EQUALS" | "NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              compliance_status: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              verification_state: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              workflow_state: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              workflow_status: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              record_state: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              related_findings_product_arn: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              related_findings_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              note_text: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              note_updated_at: Array[
                                {
                                  start: ::String?,
                                  end: ::String?,
                                  date_range: {
                                    value: ::Integer?,
                                    unit: ("DAYS")?
                                  }?
                                },
                              ]?,
                              note_updated_by: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              keyword: Array[
                                {
                                  value: ::String?
                                },
                              ]?,
                              finding_provider_fields_confidence: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              finding_provider_fields_criticality: Array[
                                {
                                  gte: ::Float?,
                                  lte: ::Float?,
                                  eq: ::Float?,
                                  gt: ::Float?,
                                  lt: ::Float?
                                },
                              ]?,
                              finding_provider_fields_related_findings_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              finding_provider_fields_related_findings_product_arn: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              finding_provider_fields_severity_label: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              finding_provider_fields_severity_original: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              finding_provider_fields_types: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              sample: Array[
                                {
                                  value: bool?
                                },
                              ]?,
                              compliance_security_control_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              compliance_associated_standards_id: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              vulnerabilities_exploit_available: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              vulnerabilities_fix_available: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              compliance_security_control_parameters_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              compliance_security_control_parameters_value: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              aws_account_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_application_name: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?,
                              resource_application_arn: Array[
                                {
                                  value: ::String?,
                                  comparison: ("EQUALS" | "PREFIX" | "NOT_EQUALS" | "PREFIX_NOT_EQUALS" | "CONTAINS" | "NOT_CONTAINS")?
                                },
                              ]?
                            },
                            ?group_by_attribute: ::String
                          ) -> _UpdateInsightResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateInsightResponseSuccess

      interface _UpdateOrganizationConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateOrganizationConfigurationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#update_organization_configuration-instance_method
      def update_organization_configuration: (
                                               auto_enable: bool,
                                               ?auto_enable_standards: ("NONE" | "DEFAULT"),
                                               ?organization_configuration: {
                                                 configuration_type: ("CENTRAL" | "LOCAL")?,
                                                 status: ("PENDING" | "ENABLED" | "FAILED")?,
                                                 status_message: ::String?
                                               }
                                             ) -> _UpdateOrganizationConfigurationResponseSuccess
                                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateOrganizationConfigurationResponseSuccess

      interface _UpdateSecurityControlResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateSecurityControlResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#update_security_control-instance_method
      def update_security_control: (
                                     security_control_id: ::String,
                                     parameters: Hash[::String, {
                                         value_type: ("DEFAULT" | "CUSTOM"),
                                         value: {
                                           integer: ::Integer?,
                                           integer_list: Array[::Integer]?,
                                           double: ::Float?,
                                           string: ::String?,
                                           string_list: Array[::String]?,
                                           boolean: bool?,
                                           enum: ::String?,
                                           enum_list: Array[::String]?
                                         }?
                                       }],
                                     ?last_update_reason: ::String
                                   ) -> _UpdateSecurityControlResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateSecurityControlResponseSuccess

      interface _UpdateSecurityHubConfigurationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateSecurityHubConfigurationResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#update_security_hub_configuration-instance_method
      def update_security_hub_configuration: (
                                               ?auto_enable_controls: bool,
                                               ?control_finding_generator: ("STANDARD_CONTROL" | "SECURITY_CONTROL")
                                             ) -> _UpdateSecurityHubConfigurationResponseSuccess
                                           | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateSecurityHubConfigurationResponseSuccess

      interface _UpdateStandardsControlResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateStandardsControlResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/SecurityHub/Client.html#update_standards_control-instance_method
      def update_standards_control: (
                                      standards_control_arn: ::String,
                                      ?control_status: ("ENABLED" | "DISABLED"),
                                      ?disabled_reason: ::String
                                    ) -> _UpdateStandardsControlResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateStandardsControlResponseSuccess
    end
  end
end

