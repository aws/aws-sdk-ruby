# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module Organizations
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?simple_json: bool,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _AcceptHandshakeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::AcceptHandshakeResponse]
        def handshake: () -> Types::Handshake
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#accept_handshake-instance_method
      def accept_handshake: (
                              handshake_id: ::String
                            ) -> _AcceptHandshakeResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _AcceptHandshakeResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#attach_policy-instance_method
      def attach_policy: (
                           policy_id: ::String,
                           target_id: ::String
                         ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _CancelHandshakeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CancelHandshakeResponse]
        def handshake: () -> Types::Handshake
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#cancel_handshake-instance_method
      def cancel_handshake: (
                              handshake_id: ::String
                            ) -> _CancelHandshakeResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CancelHandshakeResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#close_account-instance_method
      def close_account: (
                           account_id: ::String
                         ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _CreateAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateAccountResponse]
        def create_account_status: () -> Types::CreateAccountStatus
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#create_account-instance_method
      def create_account: (
                            email: ::String,
                            account_name: ::String,
                            ?role_name: ::String,
                            ?iam_user_access_to_billing: ("ALLOW" | "DENY"),
                            ?tags: Array[
                              {
                                key: ::String,
                                value: ::String
                              },
                            ]
                          ) -> _CreateAccountResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateAccountResponseSuccess

      interface _CreateGovCloudAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateGovCloudAccountResponse]
        def create_account_status: () -> Types::CreateAccountStatus
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#create_gov_cloud_account-instance_method
      def create_gov_cloud_account: (
                                      email: ::String,
                                      account_name: ::String,
                                      ?role_name: ::String,
                                      ?iam_user_access_to_billing: ("ALLOW" | "DENY"),
                                      ?tags: Array[
                                        {
                                          key: ::String,
                                          value: ::String
                                        },
                                      ]
                                    ) -> _CreateGovCloudAccountResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateGovCloudAccountResponseSuccess

      interface _CreateOrganizationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateOrganizationResponse]
        def organization: () -> Types::Organization
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#create_organization-instance_method
      def create_organization: (
                                 ?feature_set: ("ALL" | "CONSOLIDATED_BILLING")
                               ) -> _CreateOrganizationResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateOrganizationResponseSuccess

      interface _CreateOrganizationalUnitResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateOrganizationalUnitResponse]
        def organizational_unit: () -> Types::OrganizationalUnit
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#create_organizational_unit-instance_method
      def create_organizational_unit: (
                                        parent_id: ::String,
                                        name: ::String,
                                        ?tags: Array[
                                          {
                                            key: ::String,
                                            value: ::String
                                          },
                                        ]
                                      ) -> _CreateOrganizationalUnitResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateOrganizationalUnitResponseSuccess

      interface _CreatePolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreatePolicyResponse]
        def policy: () -> Types::Policy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#create_policy-instance_method
      def create_policy: (
                           content: ::String,
                           description: ::String,
                           name: ::String,
                           type: ("SERVICE_CONTROL_POLICY" | "TAG_POLICY" | "BACKUP_POLICY" | "AISERVICES_OPT_OUT_POLICY"),
                           ?tags: Array[
                             {
                               key: ::String,
                               value: ::String
                             },
                           ]
                         ) -> _CreatePolicyResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreatePolicyResponseSuccess

      interface _DeclineHandshakeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeclineHandshakeResponse]
        def handshake: () -> Types::Handshake
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#decline_handshake-instance_method
      def decline_handshake: (
                               handshake_id: ::String
                             ) -> _DeclineHandshakeResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeclineHandshakeResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#delete_organization-instance_method
      def delete_organization: () -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#delete_organizational_unit-instance_method
      def delete_organizational_unit: (
                                        organizational_unit_id: ::String
                                      ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#delete_policy-instance_method
      def delete_policy: (
                           policy_id: ::String
                         ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#delete_resource_policy-instance_method
      def delete_resource_policy: () -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#deregister_delegated_administrator-instance_method
      def deregister_delegated_administrator: (
                                                account_id: ::String,
                                                service_principal: ::String
                                              ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DescribeAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeAccountResponse]
        def account: () -> Types::Account
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#describe_account-instance_method
      def describe_account: (
                              account_id: ::String
                            ) -> _DescribeAccountResponseSuccess
                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeAccountResponseSuccess

      interface _DescribeCreateAccountStatusResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeCreateAccountStatusResponse]
        def create_account_status: () -> Types::CreateAccountStatus
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#describe_create_account_status-instance_method
      def describe_create_account_status: (
                                            create_account_request_id: ::String
                                          ) -> _DescribeCreateAccountStatusResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeCreateAccountStatusResponseSuccess

      interface _DescribeEffectivePolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeEffectivePolicyResponse]
        def effective_policy: () -> Types::EffectivePolicy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#describe_effective_policy-instance_method
      def describe_effective_policy: (
                                       policy_type: ("TAG_POLICY" | "BACKUP_POLICY" | "AISERVICES_OPT_OUT_POLICY"),
                                       ?target_id: ::String
                                     ) -> _DescribeEffectivePolicyResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeEffectivePolicyResponseSuccess

      interface _DescribeHandshakeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeHandshakeResponse]
        def handshake: () -> Types::Handshake
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#describe_handshake-instance_method
      def describe_handshake: (
                                handshake_id: ::String
                              ) -> _DescribeHandshakeResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeHandshakeResponseSuccess

      interface _DescribeOrganizationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeOrganizationResponse]
        def organization: () -> Types::Organization
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#describe_organization-instance_method
      def describe_organization: () -> _DescribeOrganizationResponseSuccess
                               | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeOrganizationResponseSuccess

      interface _DescribeOrganizationalUnitResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeOrganizationalUnitResponse]
        def organizational_unit: () -> Types::OrganizationalUnit
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#describe_organizational_unit-instance_method
      def describe_organizational_unit: (
                                          organizational_unit_id: ::String
                                        ) -> _DescribeOrganizationalUnitResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeOrganizationalUnitResponseSuccess

      interface _DescribePolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribePolicyResponse]
        def policy: () -> Types::Policy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#describe_policy-instance_method
      def describe_policy: (
                             policy_id: ::String
                           ) -> _DescribePolicyResponseSuccess
                         | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribePolicyResponseSuccess

      interface _DescribeResourcePolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeResourcePolicyResponse]
        def resource_policy: () -> Types::ResourcePolicy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#describe_resource_policy-instance_method
      def describe_resource_policy: () -> _DescribeResourcePolicyResponseSuccess
                                  | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeResourcePolicyResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#detach_policy-instance_method
      def detach_policy: (
                           policy_id: ::String,
                           target_id: ::String
                         ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#disable_aws_service_access-instance_method
      def disable_aws_service_access: (
                                        service_principal: ::String
                                      ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _DisablePolicyTypeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DisablePolicyTypeResponse]
        def root: () -> Types::Root
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#disable_policy_type-instance_method
      def disable_policy_type: (
                                 root_id: ::String,
                                 policy_type: ("SERVICE_CONTROL_POLICY" | "TAG_POLICY" | "BACKUP_POLICY" | "AISERVICES_OPT_OUT_POLICY")
                               ) -> _DisablePolicyTypeResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DisablePolicyTypeResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#enable_aws_service_access-instance_method
      def enable_aws_service_access: (
                                       service_principal: ::String
                                     ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _EnableAllFeaturesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::EnableAllFeaturesResponse]
        def handshake: () -> Types::Handshake
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#enable_all_features-instance_method
      def enable_all_features: (
                               ) -> _EnableAllFeaturesResponseSuccess
                             | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _EnableAllFeaturesResponseSuccess

      interface _EnablePolicyTypeResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::EnablePolicyTypeResponse]
        def root: () -> Types::Root
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#enable_policy_type-instance_method
      def enable_policy_type: (
                                root_id: ::String,
                                policy_type: ("SERVICE_CONTROL_POLICY" | "TAG_POLICY" | "BACKUP_POLICY" | "AISERVICES_OPT_OUT_POLICY")
                              ) -> _EnablePolicyTypeResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _EnablePolicyTypeResponseSuccess

      interface _InviteAccountToOrganizationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::InviteAccountToOrganizationResponse]
        def handshake: () -> Types::Handshake
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#invite_account_to_organization-instance_method
      def invite_account_to_organization: (
                                            target: {
                                              id: ::String,
                                              type: ("ACCOUNT" | "ORGANIZATION" | "EMAIL")
                                            },
                                            ?notes: ::String,
                                            ?tags: Array[
                                              {
                                                key: ::String,
                                                value: ::String
                                              },
                                            ]
                                          ) -> _InviteAccountToOrganizationResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _InviteAccountToOrganizationResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#leave_organization-instance_method
      def leave_organization: () -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                            | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _ListAWSServiceAccessForOrganizationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAWSServiceAccessForOrganizationResponse]
        def enabled_service_principals: () -> ::Array[Types::EnabledServicePrincipal]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_aws_service_access_for_organization-instance_method
      def list_aws_service_access_for_organization: (
                                                      ?next_token: ::String,
                                                      ?max_results: ::Integer
                                                    ) -> _ListAWSServiceAccessForOrganizationResponseSuccess
                                                  | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAWSServiceAccessForOrganizationResponseSuccess

      interface _ListAccountsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAccountsResponse]
        def accounts: () -> ::Array[Types::Account]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_accounts-instance_method
      def list_accounts: (
                           ?next_token: ::String,
                           ?max_results: ::Integer
                         ) -> _ListAccountsResponseSuccess
                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAccountsResponseSuccess

      interface _ListAccountsForParentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAccountsForParentResponse]
        def accounts: () -> ::Array[Types::Account]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_accounts_for_parent-instance_method
      def list_accounts_for_parent: (
                                      parent_id: ::String,
                                      ?next_token: ::String,
                                      ?max_results: ::Integer
                                    ) -> _ListAccountsForParentResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAccountsForParentResponseSuccess

      interface _ListChildrenResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListChildrenResponse]
        def children: () -> ::Array[Types::Child]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_children-instance_method
      def list_children: (
                           parent_id: ::String,
                           child_type: ("ACCOUNT" | "ORGANIZATIONAL_UNIT"),
                           ?next_token: ::String,
                           ?max_results: ::Integer
                         ) -> _ListChildrenResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListChildrenResponseSuccess

      interface _ListCreateAccountStatusResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListCreateAccountStatusResponse]
        def create_account_statuses: () -> ::Array[Types::CreateAccountStatus]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_create_account_status-instance_method
      def list_create_account_status: (
                                        ?states: Array[("IN_PROGRESS" | "SUCCEEDED" | "FAILED")],
                                        ?next_token: ::String,
                                        ?max_results: ::Integer
                                      ) -> _ListCreateAccountStatusResponseSuccess
                                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListCreateAccountStatusResponseSuccess

      interface _ListDelegatedAdministratorsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListDelegatedAdministratorsResponse]
        def delegated_administrators: () -> ::Array[Types::DelegatedAdministrator]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_delegated_administrators-instance_method
      def list_delegated_administrators: (
                                           ?service_principal: ::String,
                                           ?next_token: ::String,
                                           ?max_results: ::Integer
                                         ) -> _ListDelegatedAdministratorsResponseSuccess
                                       | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListDelegatedAdministratorsResponseSuccess

      interface _ListDelegatedServicesForAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListDelegatedServicesForAccountResponse]
        def delegated_services: () -> ::Array[Types::DelegatedService]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_delegated_services_for_account-instance_method
      def list_delegated_services_for_account: (
                                                 account_id: ::String,
                                                 ?next_token: ::String,
                                                 ?max_results: ::Integer
                                               ) -> _ListDelegatedServicesForAccountResponseSuccess
                                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListDelegatedServicesForAccountResponseSuccess

      interface _ListHandshakesForAccountResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListHandshakesForAccountResponse]
        def handshakes: () -> ::Array[Types::Handshake]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_handshakes_for_account-instance_method
      def list_handshakes_for_account: (
                                         ?filter: {
                                           action_type: ("INVITE" | "ENABLE_ALL_FEATURES" | "APPROVE_ALL_FEATURES" | "ADD_ORGANIZATIONS_SERVICE_LINKED_ROLE")?,
                                           parent_handshake_id: ::String?
                                         },
                                         ?next_token: ::String,
                                         ?max_results: ::Integer
                                       ) -> _ListHandshakesForAccountResponseSuccess
                                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListHandshakesForAccountResponseSuccess

      interface _ListHandshakesForOrganizationResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListHandshakesForOrganizationResponse]
        def handshakes: () -> ::Array[Types::Handshake]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_handshakes_for_organization-instance_method
      def list_handshakes_for_organization: (
                                              ?filter: {
                                                action_type: ("INVITE" | "ENABLE_ALL_FEATURES" | "APPROVE_ALL_FEATURES" | "ADD_ORGANIZATIONS_SERVICE_LINKED_ROLE")?,
                                                parent_handshake_id: ::String?
                                              },
                                              ?next_token: ::String,
                                              ?max_results: ::Integer
                                            ) -> _ListHandshakesForOrganizationResponseSuccess
                                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListHandshakesForOrganizationResponseSuccess

      interface _ListOrganizationalUnitsForParentResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListOrganizationalUnitsForParentResponse]
        def organizational_units: () -> ::Array[Types::OrganizationalUnit]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_organizational_units_for_parent-instance_method
      def list_organizational_units_for_parent: (
                                                  parent_id: ::String,
                                                  ?next_token: ::String,
                                                  ?max_results: ::Integer
                                                ) -> _ListOrganizationalUnitsForParentResponseSuccess
                                              | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListOrganizationalUnitsForParentResponseSuccess

      interface _ListParentsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListParentsResponse]
        def parents: () -> ::Array[Types::Parent]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_parents-instance_method
      def list_parents: (
                          child_id: ::String,
                          ?next_token: ::String,
                          ?max_results: ::Integer
                        ) -> _ListParentsResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListParentsResponseSuccess

      interface _ListPoliciesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListPoliciesResponse]
        def policies: () -> ::Array[Types::PolicySummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_policies-instance_method
      def list_policies: (
                           filter: ("SERVICE_CONTROL_POLICY" | "TAG_POLICY" | "BACKUP_POLICY" | "AISERVICES_OPT_OUT_POLICY"),
                           ?next_token: ::String,
                           ?max_results: ::Integer
                         ) -> _ListPoliciesResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListPoliciesResponseSuccess

      interface _ListPoliciesForTargetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListPoliciesForTargetResponse]
        def policies: () -> ::Array[Types::PolicySummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_policies_for_target-instance_method
      def list_policies_for_target: (
                                      target_id: ::String,
                                      filter: ("SERVICE_CONTROL_POLICY" | "TAG_POLICY" | "BACKUP_POLICY" | "AISERVICES_OPT_OUT_POLICY"),
                                      ?next_token: ::String,
                                      ?max_results: ::Integer
                                    ) -> _ListPoliciesForTargetResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListPoliciesForTargetResponseSuccess

      interface _ListRootsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListRootsResponse]
        def roots: () -> ::Array[Types::Root]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_roots-instance_method
      def list_roots: (
                        ?next_token: ::String,
                        ?max_results: ::Integer
                      ) -> _ListRootsResponseSuccess
                    | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListRootsResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Array[Types::Tag]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_id: ::String,
                                    ?next_token: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _ListTargetsForPolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTargetsForPolicyResponse]
        def targets: () -> ::Array[Types::PolicyTargetSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#list_targets_for_policy-instance_method
      def list_targets_for_policy: (
                                     policy_id: ::String,
                                     ?next_token: ::String,
                                     ?max_results: ::Integer
                                   ) -> _ListTargetsForPolicyResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTargetsForPolicyResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#move_account-instance_method
      def move_account: (
                          account_id: ::String,
                          source_parent_id: ::String,
                          destination_parent_id: ::String
                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _PutResourcePolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutResourcePolicyResponse]
        def resource_policy: () -> Types::ResourcePolicy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#put_resource_policy-instance_method
      def put_resource_policy: (
                                 content: ::String,
                                 ?tags: Array[
                                   {
                                     key: ::String,
                                     value: ::String
                                   },
                                 ]
                               ) -> _PutResourcePolicyResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutResourcePolicyResponseSuccess

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#register_delegated_administrator-instance_method
      def register_delegated_administrator: (
                                              account_id: ::String,
                                              service_principal: ::String
                                            ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#remove_account_from_organization-instance_method
      def remove_account_from_organization: (
                                              account_id: ::String
                                            ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                                          | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_id: ::String,
                          tags: Array[
                            {
                              key: ::String,
                              value: ::String
                            },
                          ]
                        ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_id: ::String,
                            tag_keys: Array[::String]
                          ) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> ::Seahorse::Client::_ResponseSuccess[::Aws::EmptyStructure]

      interface _UpdateOrganizationalUnitResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateOrganizationalUnitResponse]
        def organizational_unit: () -> Types::OrganizationalUnit
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#update_organizational_unit-instance_method
      def update_organizational_unit: (
                                        organizational_unit_id: ::String,
                                        ?name: ::String
                                      ) -> _UpdateOrganizationalUnitResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateOrganizationalUnitResponseSuccess

      interface _UpdatePolicyResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdatePolicyResponse]
        def policy: () -> Types::Policy
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/Organizations/Client.html#update_policy-instance_method
      def update_policy: (
                           policy_id: ::String,
                           ?name: ::String,
                           ?description: ::String,
                           ?content: ::String
                         ) -> _UpdatePolicyResponseSuccess
                       | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdatePolicyResponseSuccess
    end
  end
end

