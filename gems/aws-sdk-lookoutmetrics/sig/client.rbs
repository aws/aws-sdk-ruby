# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module LookoutMetrics
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?endpoint_provider: untyped,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _ActivateAnomalyDetectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ActivateAnomalyDetectorResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#activate_anomaly_detector-instance_method
      def activate_anomaly_detector: (
                                       anomaly_detector_arn: ::String
                                     ) -> _ActivateAnomalyDetectorResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ActivateAnomalyDetectorResponseSuccess

      interface _BackTestAnomalyDetectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::BackTestAnomalyDetectorResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#back_test_anomaly_detector-instance_method
      def back_test_anomaly_detector: (
                                        anomaly_detector_arn: ::String
                                      ) -> _BackTestAnomalyDetectorResponseSuccess
                                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _BackTestAnomalyDetectorResponseSuccess

      interface _CreateAlertResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateAlertResponse]
        def alert_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#create_alert-instance_method
      def create_alert: (
                          alert_name: ::String,
                          ?alert_sensitivity_threshold: ::Integer,
                          ?alert_description: ::String,
                          anomaly_detector_arn: ::String,
                          action: {
                            sns_configuration: {
                              role_arn: ::String,
                              sns_topic_arn: ::String,
                              sns_format: ("LONG_TEXT" | "SHORT_TEXT" | "JSON")?
                            }?,
                            lambda_configuration: {
                              role_arn: ::String,
                              lambda_arn: ::String
                            }?
                          },
                          ?tags: Hash[::String, ::String],
                          ?alert_filters: {
                            metric_list: Array[::String]?,
                            dimension_filter_list: Array[
                              {
                                dimension_name: ::String?,
                                dimension_value_list: Array[::String]?
                              },
                            ]?
                          }
                        ) -> _CreateAlertResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateAlertResponseSuccess

      interface _CreateAnomalyDetectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateAnomalyDetectorResponse]
        def anomaly_detector_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#create_anomaly_detector-instance_method
      def create_anomaly_detector: (
                                     anomaly_detector_name: ::String,
                                     ?anomaly_detector_description: ::String,
                                     anomaly_detector_config: {
                                       anomaly_detector_frequency: ("P1D" | "PT1H" | "PT10M" | "PT5M")?
                                     },
                                     ?kms_key_arn: ::String,
                                     ?tags: Hash[::String, ::String]
                                   ) -> _CreateAnomalyDetectorResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateAnomalyDetectorResponseSuccess

      interface _CreateMetricSetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateMetricSetResponse]
        def metric_set_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#create_metric_set-instance_method
      def create_metric_set: (
                               anomaly_detector_arn: ::String,
                               metric_set_name: ::String,
                               ?metric_set_description: ::String,
                               metric_list: Array[
                                 {
                                   metric_name: ::String,
                                   aggregation_function: ("AVG" | "SUM"),
                                   namespace: ::String?
                                 },
                               ],
                               ?offset: ::Integer,
                               ?timestamp_column: {
                                 column_name: ::String?,
                                 column_format: ::String?
                               },
                               ?dimension_list: Array[::String],
                               ?metric_set_frequency: ("P1D" | "PT1H" | "PT10M" | "PT5M"),
                               metric_source: {
                                 s3_source_config: {
                                   role_arn: ::String?,
                                   templated_path_list: Array[::String]?,
                                   historical_data_path_list: Array[::String]?,
                                   file_format_descriptor: {
                                     csv_format_descriptor: {
                                       file_compression: ("NONE" | "GZIP")?,
                                       charset: ::String?,
                                       contains_header: bool?,
                                       delimiter: ::String?,
                                       header_list: Array[::String]?,
                                       quote_symbol: ::String?
                                     }?,
                                     json_format_descriptor: {
                                       file_compression: ("NONE" | "GZIP")?,
                                       charset: ::String?
                                     }?
                                   }?
                                 }?,
                                 app_flow_config: {
                                   role_arn: ::String?,
                                   flow_name: ::String?
                                 }?,
                                 cloud_watch_config: {
                                   role_arn: ::String?,
                                   back_test_configuration: {
                                     run_back_test_mode: bool
                                   }?
                                 }?,
                                 rds_source_config: {
                                   db_instance_identifier: ::String?,
                                   database_host: ::String?,
                                   database_port: ::Integer?,
                                   secret_manager_arn: ::String?,
                                   database_name: ::String?,
                                   table_name: ::String?,
                                   role_arn: ::String?,
                                   vpc_configuration: {
                                     subnet_id_list: Array[::String],
                                     security_group_id_list: Array[::String]
                                   }?
                                 }?,
                                 redshift_source_config: {
                                   cluster_identifier: ::String?,
                                   database_host: ::String?,
                                   database_port: ::Integer?,
                                   secret_manager_arn: ::String?,
                                   database_name: ::String?,
                                   table_name: ::String?,
                                   role_arn: ::String?,
                                   vpc_configuration: {
                                     subnet_id_list: Array[::String],
                                     security_group_id_list: Array[::String]
                                   }?
                                 }?,
                                 athena_source_config: {
                                   role_arn: ::String?,
                                   database_name: ::String?,
                                   data_catalog: ::String?,
                                   table_name: ::String?,
                                   work_group_name: ::String?,
                                   s3_results_path: ::String?,
                                   back_test_configuration: {
                                     run_back_test_mode: bool
                                   }?
                                 }?
                               },
                               ?timezone: ::String,
                               ?tags: Hash[::String, ::String],
                               ?dimension_filter_list: Array[
                                 {
                                   name: ::String?,
                                   filter_list: Array[
                                     {
                                       dimension_value: ::String?,
                                       filter_operation: ("EQUALS")?
                                     },
                                   ]?
                                 },
                               ]
                             ) -> _CreateMetricSetResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateMetricSetResponseSuccess

      interface _DeactivateAnomalyDetectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeactivateAnomalyDetectorResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#deactivate_anomaly_detector-instance_method
      def deactivate_anomaly_detector: (
                                         anomaly_detector_arn: ::String
                                       ) -> _DeactivateAnomalyDetectorResponseSuccess
                                     | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeactivateAnomalyDetectorResponseSuccess

      interface _DeleteAlertResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteAlertResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#delete_alert-instance_method
      def delete_alert: (
                          alert_arn: ::String
                        ) -> _DeleteAlertResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteAlertResponseSuccess

      interface _DeleteAnomalyDetectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DeleteAnomalyDetectorResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#delete_anomaly_detector-instance_method
      def delete_anomaly_detector: (
                                     anomaly_detector_arn: ::String
                                   ) -> _DeleteAnomalyDetectorResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DeleteAnomalyDetectorResponseSuccess

      interface _DescribeAlertResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeAlertResponse]
        def alert: () -> Types::Alert
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#describe_alert-instance_method
      def describe_alert: (
                            alert_arn: ::String
                          ) -> _DescribeAlertResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeAlertResponseSuccess

      interface _DescribeAnomalyDetectionExecutionsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeAnomalyDetectionExecutionsResponse]
        def execution_list: () -> ::Array[Types::ExecutionStatus]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#describe_anomaly_detection_executions-instance_method
      def describe_anomaly_detection_executions: (
                                                   anomaly_detector_arn: ::String,
                                                   ?timestamp: ::String,
                                                   ?max_results: ::Integer,
                                                   ?next_token: ::String
                                                 ) -> _DescribeAnomalyDetectionExecutionsResponseSuccess
                                               | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeAnomalyDetectionExecutionsResponseSuccess

      interface _DescribeAnomalyDetectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeAnomalyDetectorResponse]
        def anomaly_detector_arn: () -> ::String
        def anomaly_detector_name: () -> ::String
        def anomaly_detector_description: () -> ::String
        def anomaly_detector_config: () -> Types::AnomalyDetectorConfigSummary
        def creation_time: () -> ::Time
        def last_modification_time: () -> ::Time
        def status: () -> ("ACTIVE" | "ACTIVATING" | "DELETING" | "FAILED" | "INACTIVE" | "LEARNING" | "BACK_TEST_ACTIVATING" | "BACK_TEST_ACTIVE" | "BACK_TEST_COMPLETE" | "DEACTIVATED" | "DEACTIVATING")
        def failure_reason: () -> ::String
        def kms_key_arn: () -> ::String
        def failure_type: () -> ("ACTIVATION_FAILURE" | "BACK_TEST_ACTIVATION_FAILURE" | "DELETION_FAILURE" | "DEACTIVATION_FAILURE")
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#describe_anomaly_detector-instance_method
      def describe_anomaly_detector: (
                                       anomaly_detector_arn: ::String
                                     ) -> _DescribeAnomalyDetectorResponseSuccess
                                   | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeAnomalyDetectorResponseSuccess

      interface _DescribeMetricSetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DescribeMetricSetResponse]
        def metric_set_arn: () -> ::String
        def anomaly_detector_arn: () -> ::String
        def metric_set_name: () -> ::String
        def metric_set_description: () -> ::String
        def creation_time: () -> ::Time
        def last_modification_time: () -> ::Time
        def offset: () -> ::Integer
        def metric_list: () -> ::Array[Types::Metric]
        def timestamp_column: () -> Types::TimestampColumn
        def dimension_list: () -> ::Array[::String]
        def metric_set_frequency: () -> ("P1D" | "PT1H" | "PT10M" | "PT5M")
        def timezone: () -> ::String
        def metric_source: () -> Types::MetricSource
        def dimension_filter_list: () -> ::Array[Types::MetricSetDimensionFilter]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#describe_metric_set-instance_method
      def describe_metric_set: (
                                 metric_set_arn: ::String
                               ) -> _DescribeMetricSetResponseSuccess
                             | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DescribeMetricSetResponseSuccess

      interface _DetectMetricSetConfigResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::DetectMetricSetConfigResponse]
        def detected_metric_set_config: () -> Types::DetectedMetricSetConfig
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#detect_metric_set_config-instance_method
      def detect_metric_set_config: (
                                      anomaly_detector_arn: ::String,
                                      auto_detection_metric_source: {
                                        s3_source_config: {
                                          templated_path_list: Array[::String]?,
                                          historical_data_path_list: Array[::String]?
                                        }?
                                      }
                                    ) -> _DetectMetricSetConfigResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _DetectMetricSetConfigResponseSuccess

      interface _GetAnomalyGroupResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetAnomalyGroupResponse]
        def anomaly_group: () -> Types::AnomalyGroup
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#get_anomaly_group-instance_method
      def get_anomaly_group: (
                               anomaly_group_id: ::String,
                               anomaly_detector_arn: ::String
                             ) -> _GetAnomalyGroupResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetAnomalyGroupResponseSuccess

      interface _GetDataQualityMetricsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetDataQualityMetricsResponse]
        def anomaly_detector_data_quality_metric_list: () -> ::Array[Types::AnomalyDetectorDataQualityMetric]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#get_data_quality_metrics-instance_method
      def get_data_quality_metrics: (
                                      anomaly_detector_arn: ::String,
                                      ?metric_set_arn: ::String
                                    ) -> _GetDataQualityMetricsResponseSuccess
                                  | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetDataQualityMetricsResponseSuccess

      interface _GetFeedbackResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetFeedbackResponse]
        def anomaly_group_time_series_feedback: () -> ::Array[Types::TimeSeriesFeedback]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#get_feedback-instance_method
      def get_feedback: (
                          anomaly_detector_arn: ::String,
                          anomaly_group_time_series_feedback: {
                            anomaly_group_id: ::String,
                            time_series_id: ::String?
                          },
                          ?max_results: ::Integer,
                          ?next_token: ::String
                        ) -> _GetFeedbackResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetFeedbackResponseSuccess

      interface _GetSampleDataResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetSampleDataResponse]
        def header_values: () -> ::Array[::String]
        def sample_rows: () -> ::Array[::Array[::String]]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#get_sample_data-instance_method
      def get_sample_data: (
                             ?s3_source_config: {
                               role_arn: ::String,
                               templated_path_list: Array[::String]?,
                               historical_data_path_list: Array[::String]?,
                               file_format_descriptor: {
                                 csv_format_descriptor: {
                                   file_compression: ("NONE" | "GZIP")?,
                                   charset: ::String?,
                                   contains_header: bool?,
                                   delimiter: ::String?,
                                   header_list: Array[::String]?,
                                   quote_symbol: ::String?
                                 }?,
                                 json_format_descriptor: {
                                   file_compression: ("NONE" | "GZIP")?,
                                   charset: ::String?
                                 }?
                               }
                             }
                           ) -> _GetSampleDataResponseSuccess
                         | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetSampleDataResponseSuccess

      interface _ListAlertsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAlertsResponse]
        def alert_summary_list: () -> ::Array[Types::AlertSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#list_alerts-instance_method
      def list_alerts: (
                         ?anomaly_detector_arn: ::String,
                         ?next_token: ::String,
                         ?max_results: ::Integer
                       ) -> _ListAlertsResponseSuccess
                     | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAlertsResponseSuccess

      interface _ListAnomalyDetectorsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAnomalyDetectorsResponse]
        def anomaly_detector_summary_list: () -> ::Array[Types::AnomalyDetectorSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#list_anomaly_detectors-instance_method
      def list_anomaly_detectors: (
                                    ?max_results: ::Integer,
                                    ?next_token: ::String
                                  ) -> _ListAnomalyDetectorsResponseSuccess
                                | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAnomalyDetectorsResponseSuccess

      interface _ListAnomalyGroupRelatedMetricsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAnomalyGroupRelatedMetricsResponse]
        def inter_metric_impact_list: () -> ::Array[Types::InterMetricImpactDetails]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#list_anomaly_group_related_metrics-instance_method
      def list_anomaly_group_related_metrics: (
                                                anomaly_detector_arn: ::String,
                                                anomaly_group_id: ::String,
                                                ?relationship_type_filter: ("CAUSE_OF_INPUT_ANOMALY_GROUP" | "EFFECT_OF_INPUT_ANOMALY_GROUP"),
                                                ?max_results: ::Integer,
                                                ?next_token: ::String
                                              ) -> _ListAnomalyGroupRelatedMetricsResponseSuccess
                                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAnomalyGroupRelatedMetricsResponseSuccess

      interface _ListAnomalyGroupSummariesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAnomalyGroupSummariesResponse]
        def anomaly_group_summary_list: () -> ::Array[Types::AnomalyGroupSummary]
        def anomaly_group_statistics: () -> Types::AnomalyGroupStatistics
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#list_anomaly_group_summaries-instance_method
      def list_anomaly_group_summaries: (
                                          anomaly_detector_arn: ::String,
                                          sensitivity_threshold: ::Integer,
                                          ?max_results: ::Integer,
                                          ?next_token: ::String
                                        ) -> _ListAnomalyGroupSummariesResponseSuccess
                                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAnomalyGroupSummariesResponseSuccess

      interface _ListAnomalyGroupTimeSeriesResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListAnomalyGroupTimeSeriesResponse]
        def anomaly_group_id: () -> ::String
        def metric_name: () -> ::String
        def timestamp_list: () -> ::Array[::String]
        def next_token: () -> ::String
        def time_series_list: () -> ::Array[Types::TimeSeries]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#list_anomaly_group_time_series-instance_method
      def list_anomaly_group_time_series: (
                                            anomaly_detector_arn: ::String,
                                            anomaly_group_id: ::String,
                                            metric_name: ::String,
                                            ?max_results: ::Integer,
                                            ?next_token: ::String
                                          ) -> _ListAnomalyGroupTimeSeriesResponseSuccess
                                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListAnomalyGroupTimeSeriesResponseSuccess

      interface _ListMetricSetsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListMetricSetsResponse]
        def metric_set_summary_list: () -> ::Array[Types::MetricSetSummary]
        def next_token: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#list_metric_sets-instance_method
      def list_metric_sets: (
                              ?anomaly_detector_arn: ::String,
                              ?max_results: ::Integer,
                              ?next_token: ::String
                            ) -> _ListMetricSetsResponseSuccess
                          | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListMetricSetsResponseSuccess

      interface _ListTagsForResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListTagsForResourceResponse]
        def tags: () -> ::Hash[::String, ::String]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#list_tags_for_resource-instance_method
      def list_tags_for_resource: (
                                    resource_arn: ::String
                                  ) -> _ListTagsForResourceResponseSuccess
                                | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListTagsForResourceResponseSuccess

      interface _PutFeedbackResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::PutFeedbackResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#put_feedback-instance_method
      def put_feedback: (
                          anomaly_detector_arn: ::String,
                          anomaly_group_time_series_feedback: {
                            anomaly_group_id: ::String,
                            time_series_id: ::String,
                            is_anomaly: bool
                          }
                        ) -> _PutFeedbackResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _PutFeedbackResponseSuccess

      interface _TagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::TagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#tag_resource-instance_method
      def tag_resource: (
                          resource_arn: ::String,
                          tags: Hash[::String, ::String]
                        ) -> _TagResourceResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _TagResourceResponseSuccess

      interface _UntagResourceResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UntagResourceResponse]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#untag_resource-instance_method
      def untag_resource: (
                            resource_arn: ::String,
                            tag_keys: Array[::String]
                          ) -> _UntagResourceResponseSuccess
                        | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UntagResourceResponseSuccess

      interface _UpdateAlertResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateAlertResponse]
        def alert_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#update_alert-instance_method
      def update_alert: (
                          alert_arn: ::String,
                          ?alert_description: ::String,
                          ?alert_sensitivity_threshold: ::Integer,
                          ?action: {
                            sns_configuration: {
                              role_arn: ::String,
                              sns_topic_arn: ::String,
                              sns_format: ("LONG_TEXT" | "SHORT_TEXT" | "JSON")?
                            }?,
                            lambda_configuration: {
                              role_arn: ::String,
                              lambda_arn: ::String
                            }?
                          },
                          ?alert_filters: {
                            metric_list: Array[::String]?,
                            dimension_filter_list: Array[
                              {
                                dimension_name: ::String?,
                                dimension_value_list: Array[::String]?
                              },
                            ]?
                          }
                        ) -> _UpdateAlertResponseSuccess
                      | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateAlertResponseSuccess

      interface _UpdateAnomalyDetectorResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateAnomalyDetectorResponse]
        def anomaly_detector_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#update_anomaly_detector-instance_method
      def update_anomaly_detector: (
                                     anomaly_detector_arn: ::String,
                                     ?kms_key_arn: ::String,
                                     ?anomaly_detector_description: ::String,
                                     ?anomaly_detector_config: {
                                       anomaly_detector_frequency: ("P1D" | "PT1H" | "PT10M" | "PT5M")?
                                     }
                                   ) -> _UpdateAnomalyDetectorResponseSuccess
                                 | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateAnomalyDetectorResponseSuccess

      interface _UpdateMetricSetResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateMetricSetResponse]
        def metric_set_arn: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/LookoutMetrics/Client.html#update_metric_set-instance_method
      def update_metric_set: (
                               metric_set_arn: ::String,
                               ?metric_set_description: ::String,
                               ?metric_list: Array[
                                 {
                                   metric_name: ::String,
                                   aggregation_function: ("AVG" | "SUM"),
                                   namespace: ::String?
                                 },
                               ],
                               ?offset: ::Integer,
                               ?timestamp_column: {
                                 column_name: ::String?,
                                 column_format: ::String?
                               },
                               ?dimension_list: Array[::String],
                               ?metric_set_frequency: ("P1D" | "PT1H" | "PT10M" | "PT5M"),
                               ?metric_source: {
                                 s3_source_config: {
                                   role_arn: ::String?,
                                   templated_path_list: Array[::String]?,
                                   historical_data_path_list: Array[::String]?,
                                   file_format_descriptor: {
                                     csv_format_descriptor: {
                                       file_compression: ("NONE" | "GZIP")?,
                                       charset: ::String?,
                                       contains_header: bool?,
                                       delimiter: ::String?,
                                       header_list: Array[::String]?,
                                       quote_symbol: ::String?
                                     }?,
                                     json_format_descriptor: {
                                       file_compression: ("NONE" | "GZIP")?,
                                       charset: ::String?
                                     }?
                                   }?
                                 }?,
                                 app_flow_config: {
                                   role_arn: ::String?,
                                   flow_name: ::String?
                                 }?,
                                 cloud_watch_config: {
                                   role_arn: ::String?,
                                   back_test_configuration: {
                                     run_back_test_mode: bool
                                   }?
                                 }?,
                                 rds_source_config: {
                                   db_instance_identifier: ::String?,
                                   database_host: ::String?,
                                   database_port: ::Integer?,
                                   secret_manager_arn: ::String?,
                                   database_name: ::String?,
                                   table_name: ::String?,
                                   role_arn: ::String?,
                                   vpc_configuration: {
                                     subnet_id_list: Array[::String],
                                     security_group_id_list: Array[::String]
                                   }?
                                 }?,
                                 redshift_source_config: {
                                   cluster_identifier: ::String?,
                                   database_host: ::String?,
                                   database_port: ::Integer?,
                                   secret_manager_arn: ::String?,
                                   database_name: ::String?,
                                   table_name: ::String?,
                                   role_arn: ::String?,
                                   vpc_configuration: {
                                     subnet_id_list: Array[::String],
                                     security_group_id_list: Array[::String]
                                   }?
                                 }?,
                                 athena_source_config: {
                                   role_arn: ::String?,
                                   database_name: ::String?,
                                   data_catalog: ::String?,
                                   table_name: ::String?,
                                   work_group_name: ::String?,
                                   s3_results_path: ::String?,
                                   back_test_configuration: {
                                     run_back_test_mode: bool
                                   }?
                                 }?
                               },
                               ?dimension_filter_list: Array[
                                 {
                                   name: ::String?,
                                   filter_list: Array[
                                     {
                                       dimension_value: ::String?,
                                       filter_operation: ("EQUALS")?
                                     },
                                   ]?
                                 },
                               ]
                             ) -> _UpdateMetricSetResponseSuccess
                           | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateMetricSetResponseSuccess
    end
  end
end

