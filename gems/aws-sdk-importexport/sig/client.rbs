# WARNING ABOUT GENERATED CODE
#
# This file is generated. See the contributing guide for more information:
# https://github.com/aws/aws-sdk-ruby/blob/version-3/CONTRIBUTING.md
#
# WARNING ABOUT GENERATED CODE

module Aws
  module ImportExport
    class Client < ::Seahorse::Client::Base
      include ::Aws::ClientStubs

      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ImportExport/Client.html#initialize-instance_method
      def self.new: (
                      ?credentials: untyped,
                      ?region: String,
                      ?access_key_id: String,
                      ?active_endpoint_cache: bool,
                      ?adaptive_retry_wait_to_fill: bool,
                      ?client_side_monitoring: bool,
                      ?client_side_monitoring_client_id: String,
                      ?client_side_monitoring_host: String,
                      ?client_side_monitoring_port: Integer,
                      ?client_side_monitoring_publisher: untyped,
                      ?convert_params: bool,
                      ?correct_clock_skew: bool,
                      ?defaults_mode: String,
                      ?disable_host_prefix_injection: bool,
                      ?disable_request_compression: bool,
                      ?endpoint: String,
                      ?endpoint_cache_max_entries: Integer,
                      ?endpoint_cache_max_threads: Integer,
                      ?endpoint_cache_poll_interval: Integer,
                      ?endpoint_discovery: bool,
                      ?ignore_configured_endpoint_urls: bool,
                      ?log_formatter: untyped,
                      ?log_level: Symbol,
                      ?logger: untyped,
                      ?max_attempts: Integer,
                      ?profile: String,
                      ?request_min_compression_size_bytes: Integer,
                      ?retry_backoff: Proc,
                      ?retry_base_delay: Float,
                      ?retry_jitter: (:none | :equal | :full | ^(Integer) -> Integer),
                      ?retry_limit: Integer,
                      ?retry_max_delay: Integer,
                      ?retry_mode: ("legacy" | "standard" | "adaptive"),
                      ?sdk_ua_app_id: String,
                      ?secret_access_key: String,
                      ?session_token: String,
                      ?stub_responses: untyped,
                      ?token_provider: untyped,
                      ?use_dualstack_endpoint: bool,
                      ?use_fips_endpoint: bool,
                      ?validate_params: bool,
                      ?http_proxy: String,
                      ?http_open_timeout: (Float | Integer),
                      ?http_read_timeout: (Float | Integer),
                      ?http_idle_timeout: (Float | Integer),
                      ?http_continue_timeout: (Float | Integer),
                      ?ssl_timeout: (Float | Integer | nil),
                      ?http_wire_trace: bool,
                      ?ssl_verify_peer: bool,
                      ?ssl_ca_bundle: String,
                      ?ssl_ca_directory: String,
                      ?ssl_ca_store: String,
                      ?on_chunk_received: Proc,
                      ?on_chunk_sent: Proc,
                      ?raise_response_errors: bool
                    ) -> instance
                  | (?Hash[Symbol, untyped]) -> instance


      interface _CancelJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CancelJobOutput]
        def success: () -> bool
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ImportExport/Client.html#cancel_job-instance_method
      def cancel_job: (
                        job_id: ::String,
                        ?api_version: ::String
                      ) -> _CancelJobResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CancelJobResponseSuccess

      interface _CreateJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::CreateJobOutput]
        def job_id: () -> ::String
        def job_type: () -> ("Import" | "Export")
        def signature: () -> ::String
        def signature_file_contents: () -> ::String
        def warning_message: () -> ::String
        def artifact_list: () -> ::Array[Types::Artifact]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ImportExport/Client.html#create_job-instance_method
      def create_job: (
                        job_type: ("Import" | "Export"),
                        manifest: ::String,
                        ?manifest_addendum: ::String,
                        validate_only: bool,
                        ?api_version: ::String
                      ) -> _CreateJobResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _CreateJobResponseSuccess

      interface _GetShippingLabelResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetShippingLabelOutput]
        def shipping_label_url: () -> ::String
        def warning: () -> ::String
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ImportExport/Client.html#get_shipping_label-instance_method
      def get_shipping_label: (
                                job_ids: Array[::String],
                                ?name: ::String,
                                ?company: ::String,
                                ?phone_number: ::String,
                                ?country: ::String,
                                ?state_or_province: ::String,
                                ?city: ::String,
                                ?postal_code: ::String,
                                ?street1: ::String,
                                ?street2: ::String,
                                ?street3: ::String,
                                ?api_version: ::String
                              ) -> _GetShippingLabelResponseSuccess
                            | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetShippingLabelResponseSuccess

      interface _GetStatusResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::GetStatusOutput]
        def job_id: () -> ::String
        def job_type: () -> ("Import" | "Export")
        def location_code: () -> ::String
        def location_message: () -> ::String
        def progress_code: () -> ::String
        def progress_message: () -> ::String
        def carrier: () -> ::String
        def tracking_number: () -> ::String
        def log_bucket: () -> ::String
        def log_key: () -> ::String
        def error_count: () -> ::Integer
        def signature: () -> ::String
        def signature_file_contents: () -> ::String
        def current_manifest: () -> ::String
        def creation_date: () -> ::Time
        def artifact_list: () -> ::Array[Types::Artifact]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ImportExport/Client.html#get_status-instance_method
      def get_status: (
                        job_id: ::String,
                        ?api_version: ::String
                      ) -> _GetStatusResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _GetStatusResponseSuccess

      interface _ListJobsResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::ListJobsOutput]
        def jobs: () -> ::Array[Types::Job]
        def is_truncated: () -> bool
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ImportExport/Client.html#list_jobs-instance_method
      def list_jobs: (
                       ?max_jobs: ::Integer,
                       ?marker: ::String,
                       ?api_version: ::String
                     ) -> _ListJobsResponseSuccess
                   | (?Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _ListJobsResponseSuccess

      interface _UpdateJobResponseSuccess
        include ::Seahorse::Client::_ResponseSuccess[Types::UpdateJobOutput]
        def success: () -> bool
        def warning_message: () -> ::String
        def artifact_list: () -> ::Array[Types::Artifact]
      end
      # https://docs.aws.amazon.com/sdk-for-ruby/v3/api/Aws/ImportExport/Client.html#update_job-instance_method
      def update_job: (
                        job_id: ::String,
                        manifest: ::String,
                        job_type: ("Import" | "Export"),
                        validate_only: bool,
                        ?api_version: ::String
                      ) -> _UpdateJobResponseSuccess
                    | (Hash[Symbol, untyped] params, ?Hash[Symbol, untyped] options) -> _UpdateJobResponseSuccess
    end
  end
end

