---
:create_cloud_front_origin_access_identity: |-
  Calls the POST CreateCloudFrontOriginAccessIdentity API operation.
  @param [Hash] options
    * `:cloud_front_origin_access_identity_config` - *required* - (Hash) The origin access identity's configuration information.
      * `:caller_reference` - *required* - (String) A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.
      * `:comment` - *required* - (String) Any comments you want to include about the origin access identity.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:id` - (String)
    * `:s3_canonical_user_id` - (String)
    * `:cloud_front_origin_access_identity_config` - (Hash)
      * `:caller_reference` - (String)
      * `:comment` - (String)
:create_distribution: "Calls the POST CreateDistribution API operation.\n@param [Hash]
  options\n  * `:distribution_config` - *required* - (Hash) The distribution's configuration
  information.\n    * `:caller_reference` - *required* - (String) A unique number
  that ensures the request can't be replayed. If the CallerReference is new (no matter
  the content of the DistributionConfig object), a new distribution is created. If
  the CallerReference is a value you already sent in a previous request to create
  a distribution, and the content of the DistributionConfig is identical to the original
  request (ignoring white space), the response includes the same information returned
  to the original request. If the CallerReference is a value you already sent in a
  previous request to create a distribution but the content of the DistributionConfig
  is different from the original request, CloudFront returns a DistributionAlreadyExists
  error.\n    * `:aliases` - *required* - (Hash) A complex type that contains information
  about CNAMEs (alternate domain names), if any, for this distribution.\n      * `:quantity`
  - *required* - (Integer) The number of CNAMEs, if any, for this distribution.\n
  \     * `:items` - (Array&lt;String>) Optional: A complex type that contains CNAME
  elements, if any, for this distribution. If Quantity is 0, you can omit Items.\n
  \     * `:CNAME` - (String) \n    * `:default_root_object` - *required* - (String)
  The object that you want CloudFront to return (for example, index.html) when an
  end user requests the root URL for your distribution (http://www.example.com) instead
  of an object in your distribution (http://www.example.com/index.html). Specifying
  a default root object avoids exposing the contents of your distribution. If you
  don't want to specify a default root object when you create a distribution, include
  an empty DefaultRootObject element. To delete the default root object from an existing
  distribution, update the distribution configuration and include an empty DefaultRootObject
  element. To replace the default root object, update the distribution configuration
  and specify the new object.\n    * `:origins` - *required* - (Hash) A complex type
  that contains information about origins for this distribution.\n      * `:quantity`
  - *required* - (Integer) The number of origins for this distribution.\n      * `:items`
  - (Array&lt;Hash>) A complex type that contains origins for this distribution.\n
  \     * `:Origin` - (Hash) \n        * `:id` - *required* - (String) A unique identifier
  for the origin. The value of Id must be unique within the distribution. You use
  the value of Id when you create a cache behavior. The Id identifies the origin that
  CloudFront routes a request to when the request matches the path pattern for that
  cache behavior.\n        * `:domain_name` - *required* - (String) Amazon S3 origins:
  The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects
  for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The
  DNS domain name for the HTTP server from which you want CloudFront to get objects
  for this origin, for example, www.example.com.\n        * `:s3_origin_config` -
  (Hash) A complex type that contains information about the Amazon S3 origin. If the
  origin is a custom origin, use the CustomOriginConfig element instead.\n          *
  `:origin_access_identity` - *required* - (String) The CloudFront origin access identity
  to associate with the origin. Use an origin access identity to configure the origin
  so that end users can only access objects in an Amazon S3 bucket through CloudFront.
  If you want end users to be able to access objects using either the CloudFront URL
  or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the
  origin access identity from an existing distribution, update the distribution configuration
  and include an empty OriginAccessIdentity element. To replace the origin access
  identity, update the distribution configuration and specify the new origin access
  identity. Use the format origin-access-identity/cloudfront/Id where Id is the value
  that CloudFront returned in the Id element when you created the origin access identity.\n
  \       * `:custom_origin_config` - (Hash) A complex type that contains information
  about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig
  element instead.\n          * `:http_port` - *required* - (Integer) The HTTP port
  the custom origin listens on.\n          * `:https_port` - *required* - (Integer)
  The HTTPS port the custom origin listens on.\n          * `:origin_protocol_policy`
  - *required* - (String) The origin protocol policy to apply to your origin.  Valid
  values include:\n            * `http-only`\n            * `match-viewer`\n    *
  `:default_cache_behavior` - *required* - (Hash) A complex type that describes the
  default cache behavior if you do not specify a CacheBehavior element or if files
  don't match any of the values of PathPattern in CacheBehavior elements.You must
  create exactly one default cache behavior.\n      * `:target_origin_id` - *required*
  - (String) The value of ID for the origin that you want CloudFront to route requests
  to when a request matches the path pattern either for a cache behavior or for the
  default cache behavior.\n      * `:forwarded_values` - *required* - (Hash) A complex
  type that specifies how CloudFront handles query strings and cookies.\n        *
  `:query_string` - *required* - (Boolean) Indicates whether you want CloudFront to
  forward query strings to the origin that is associated with this cache behavior.
  If so, specify  `true` ; if not, specify  `false` .\n        * `:cookies` - *required*
  - (Hash) A complex type that specifies how CloudFront handles cookies.\n          *
  `:forward` - *required* - (String) Use this element to specify whether you want
  CloudFront to forward cookies to the origin that is associated with this cache behavior.
  You can specify all, none or whitelist. If you choose All, CloudFront forwards all
  cookies regardless of how many your application uses.  Valid values include:\n            *
  `none`\n            * `whitelist`\n            * `all`\n          * `:whitelisted_names`
  - (Hash) A complex type that specifies the whitelisted cookies, if any, that you
  want CloudFront to forward to your origin that is associated with this cache behavior.\n
  \           * `:quantity` - *required* - (Integer) The number of whitelisted cookies
  for this cache behavior.\n            * `:items` - (Array&lt;String>) Optional:
  A complex type that contains whitelisted cookies for this cache behavior. If Quantity
  is 0, you can omit Items.\n            * `:Name` - (String) \n      * `:trusted_signers`
  - *required* - (Hash) A complex type that specifies the AWS accounts, if any, that
  you want to allow to create signed URLs for private content. If you want to require
  signed URLs in requests for objects in the target origin that match the PathPattern
  for this cache behavior, specify  `true`  for Enabled, and specify the applicable
  values for Quantity and Items. For more information, go to Using a Signed URL to
  Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want
  to require signed URLs in requests for objects that match PathPattern, specify  `false`
  \ for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more
  trusted signers, change Enabled to  `true`  (if it's currently  `false` ), change
  Quantity as applicable, and specify all of the trusted signers that you want to
  include in the updated distribution.\n        * `:enabled` - *required* - (Boolean)
  Specifies whether you want to require end users to use signed URLs to access the
  files specified by PathPattern and TargetOriginId.\n        * `:quantity` - *required*
  - (Integer) The number of trusted signers for this cache behavior.\n        * `:items`
  - (Array&lt;String>) Optional: A complex type that contains trusted signers for
  this cache behavior. If Quantity is 0, you can omit Items.\n        * `:AwsAccountNumber`
  - (String) \n      * `:viewer_protocol_policy` - *required* - (String) Use this
  element to specify the protocol that users can use to access the files in the origin
  specified by TargetOriginId when a request matches the path pattern in PathPattern.
  If you want CloudFront to allow end users to use any available protocol, specify
  allow-all. If you want CloudFront to require HTTPS, specify https. If you want CloudFront
  to respond to an HTTP request with an HTTP status code of 301 (Moved Permanently)
  and the HTTPS URL, specify redirect-to-https. The viewer then resubmits the request
  using the HTTPS URL.  Valid values include:\n        * `allow-all`\n        * `https-only`\n
  \       * `redirect-to-https`\n      * `:min_ttl` - *required* - (Integer) The minimum
  amount of time that you want objects to stay in CloudFront caches before CloudFront
  queries your origin to see whether the object has been updated.You can specify a
  value from 0 to 3,153,600,000 seconds (100 years).\n      * `:allowed_methods` -
  (Hash) \n        * `:quantity` - *required* - (Integer) The number of HTTP methods
  that you want CloudFront to forward to your origin. Valid values are 2 (for GET
  and HEAD requests) and 7 (for DELETE, GET, HEAD, OPTIONS, PATCH, POST, and PUT requests).\n
  \       * `:items` - (Array&lt;String>) A complex type that contains the HTTP methods
  that you want CloudFront to process and forward to your origin.\n        * `:Method`
  - (String) \n      * `:smooth_streaming` - (Boolean) Indicates whether you want
  to distribute media files in Microsoft Smooth Streaming format using the origin
  that is associated with this cache behavior. If so, specify  `true` ; if not, specify
  \ `false` .\n    * `:cache_behaviors` - *required* - (Hash) A complex type that
  contains zero or more CacheBehavior elements.\n      * `:quantity` - *required*
  - (Integer) The number of cache behaviors for this distribution.\n      * `:items`
  - (Array&lt;Hash>) Optional: A complex type that contains cache behaviors for this
  distribution. If Quantity is 0, you can omit Items.\n      * `:CacheBehavior` -
  (Hash) \n        * `:path_pattern` - *required* - (String) The pattern (for example,
  images/*.jpg) that specifies which requests you want this cache behavior to apply
  to. When CloudFront receives an end-user request, the requested path is compared
  with path patterns in the order in which cache behaviors are listed in the distribution.
  The path pattern for the default cache behavior is * and cannot be changed. If the
  request for an object does not match the path pattern for any cache behaviors, CloudFront
  applies the behavior in the default cache behavior.\n        * `:target_origin_id`
  - *required* - (String) The value of ID for the origin that you want CloudFront
  to route requests to when a request matches the path pattern either for a cache
  behavior or for the default cache behavior.\n        * `:forwarded_values` - *required*
  - (Hash) A complex type that specifies how CloudFront handles query strings and
  cookies.\n          * `:query_string` - *required* - (Boolean) Indicates whether
  you want CloudFront to forward query strings to the origin that is associated with
  this cache behavior. If so, specify  `true` ; if not, specify  `false` .\n          *
  `:cookies` - *required* - (Hash) A complex type that specifies how CloudFront handles
  cookies.\n            * `:forward` - *required* - (String) Use this element to specify
  whether you want CloudFront to forward cookies to the origin that is associated
  with this cache behavior. You can specify all, none or whitelist. If you choose
  All, CloudFront forwards all cookies regardless of how many your application uses.
  \ Valid values include:\n              * `none`\n              * `whitelist`\n              *
  `all`\n            * `:whitelisted_names` - (Hash) A complex type that specifies
  the whitelisted cookies, if any, that you want CloudFront to forward to your origin
  that is associated with this cache behavior.\n              * `:quantity` - *required*
  - (Integer) The number of whitelisted cookies for this cache behavior.\n              *
  `:items` - (Array&lt;String>) Optional: A complex type that contains whitelisted
  cookies for this cache behavior. If Quantity is 0, you can omit Items.\n              *
  `:Name` - (String) \n        * `:trusted_signers` - *required* - (Hash) A complex
  type that specifies the AWS accounts, if any, that you want to allow to create signed
  URLs for private content. If you want to require signed URLs in requests for objects
  in the target origin that match the PathPattern for this cache behavior, specify
  \ `true`  for Enabled, and specify the applicable values for Quantity and Items.
  For more information, go to Using a Signed URL to Serve Private Content in the Amazon
  CloudFront Developer Guide. If you don't want to require signed URLs in requests
  for objects that match PathPattern, specify  `false`  for Enabled and 0 for Quantity.
  Omit Items. To add, change, or remove one or more trusted signers, change Enabled
  to  `true`  (if it's currently  `false` ), change Quantity as applicable, and specify
  all of the trusted signers that you want to include in the updated distribution.\n
  \         * `:enabled` - *required* - (Boolean) Specifies whether you want to require
  end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.\n
  \         * `:quantity` - *required* - (Integer) The number of trusted signers for
  this cache behavior.\n          * `:items` - (Array&lt;String>) Optional: A complex
  type that contains trusted signers for this cache behavior. If Quantity is 0, you
  can omit Items.\n          * `:AwsAccountNumber` - (String) \n        * `:viewer_protocol_policy`
  - *required* - (String) Use this element to specify the protocol that users can
  use to access the files in the origin specified by TargetOriginId when a request
  matches the path pattern in PathPattern. If you want CloudFront to allow end users
  to use any available protocol, specify allow-all. If you want CloudFront to require
  HTTPS, specify https. If you want CloudFront to respond to an HTTP request with
  an HTTP status code of 301 (Moved Permanently) and the HTTPS URL, specify redirect-to-https.
  The viewer then resubmits the request using the HTTPS URL.  Valid values include:\n
  \         * `allow-all`\n          * `https-only`\n          * `redirect-to-https`\n
  \       * `:min_ttl` - *required* - (Integer) The minimum amount of time that you
  want objects to stay in CloudFront caches before CloudFront queries your origin
  to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000
  seconds (100 years).\n        * `:allowed_methods` - (Hash) \n          * `:quantity`
  - *required* - (Integer) The number of HTTP methods that you want CloudFront to
  forward to your origin. Valid values are 2 (for GET and HEAD requests) and 7 (for
  DELETE, GET, HEAD, OPTIONS, PATCH, POST, and PUT requests).\n          * `:items`
  - (Array&lt;String>) A complex type that contains the HTTP methods that you want
  CloudFront to process and forward to your origin.\n          * `:Method` - (String)
  \n        * `:smooth_streaming` - (Boolean) Indicates whether you want to distribute
  media files in Microsoft Smooth Streaming format using the origin that is associated
  with this cache behavior. If so, specify  `true` ; if not, specify  `false` .\n
  \   * `:custom_error_responses` - (Hash) A complex type that contains zero or more
  CustomErrorResponse elements.\n      * `:quantity` - *required* - (Integer) The
  number of custom error responses for this distribution.\n      * `:items` - (Array&lt;Hash>)
  Optional: A complex type that contains custom error responses for this distribution.
  If Quantity is 0, you can omit Items.\n      * `:CustomErrorResponse` - (Hash) \n
  \       * `:error_code` - *required* - (Integer) The 4xx or 5xx HTTP status code
  that you want to customize. For a list of HTTP status codes that you can customize,
  see CloudFront documentation.\n        * `:response_page_path` - (String) The path
  of the custom error page (for example, /custom_404.html). The path is relative to
  the distribution and must begin with a slash (/). If the path includes any non-ASCII
  characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt),
  URL encode those characters. Do not URL encode any other characters in the path,
  or CloudFront will not return the custom error page to the viewer.\n        * `:response_code`
  - (String) The HTTP status code that you want CloudFront to return with the custom
  error page to the viewer. For a list of HTTP status codes that you can replace,
  see CloudFront Documentation.\n        * `:error_caching_min_ttl` - (Integer) The
  minimum amount of time you want HTTP error codes to stay in CloudFront caches before
  CloudFront queries your origin to see whether the object has been updated. You can
  specify a value from 0 to 31,536,000.\n    * `:comment` - *required* - (String)
  Any comments you want to include about the distribution.\n    * `:logging` - *required*
  - (Hash) A complex type that controls whether access logs are written for the distribution.\n
  \     * `:enabled` - *required* - (Boolean) Specifies whether you want CloudFront
  to save access logs to an Amazon S3 bucket. If you do not want to enable logging
  when you create a distribution or if you want to disable logging for an existing
  distribution, specify  `false`  for Enabled, and specify empty Bucket and Prefix
  elements. If you specify  `false`  for Enabled but you specify values for Bucket,
  prefix and IncludeCookies, the values are automatically deleted.\n      * `:include_cookies`
  - *required* - (Boolean) Specifies whether you want CloudFront to include cookies
  in access logs, specify  `true`  for IncludeCookies. If you choose to include cookies
  in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors
  for this distribution. If you do not want to include cookies when you create a distribution
  or if you want to disable include cookies for an existing distribution, specify
  \ `false`  for IncludeCookies.\n      * `:bucket` - *required* - (String) The Amazon
  S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.\n
  \     * `:prefix` - *required* - (String) An optional string that you want CloudFront
  to prefix to the access log filenames for this distribution, for example, myprefix/.
  If you want to enable logging, but you do not want to specify a prefix, you still
  must include an empty Prefix element in the Logging element.\n    * `:price_class`
  - *required* - (String) A complex type that contains information about price class
  for this distribution.  Valid values include:\n      * `PriceClass_100`\n      *
  `PriceClass_200`\n      * `PriceClass_All`\n    * `:enabled` - *required* - (Boolean)
  Whether the distribution is enabled to accept end user requests for content.\n    *
  `:viewer_certificate` - (Hash) \n      * `:iam_certificate_id` - (String) If you
  want viewers to use HTTPS to request your objects and you're using an alternate
  domain name in your object URLs (for example, https://example.com/logo.jpg), specify
  the IAM certificate identifier of the custom viewer certificate for this distribution.
  Specify either this value or CloudFrontDefaultCertificate.\n      * `:cloud_front_default_certificate`
  - (Boolean) If you want viewers to use HTTPS to request your objects and you're
  using the CloudFront domain name of your distribution in your object URLs (for example,
  https://d111111abcdef8.cloudfront.net/logo.jpg), set to  `true` . Omit this value
  if you are setting an IAMCertificateId.\n      * `:ssl_support_method` - (String)
  If you specify a value for IAMCertificateId, you must also specify how you want
  CloudFront to serve HTTPS requests. Valid values are vip and sni-only. If you specify
  vip, CloudFront uses dedicated IP addresses for your content and can respond to
  HTTPS requests from any viewer. However, you must request permission to use this
  feature, and you incur additional monthly charges. If you specify sni-only, CloudFront
  can only respond to HTTPS requests from viewers that support Server Name Indication
  (SNI). All modern browsers support SNI, but some browsers still in use don't support
  SNI. Do not specify a value for SSLSupportMethod if you specified  `true`  for CloudFrontDefaultCertificate.
  \ Valid values include:\n        * `sni-only`\n        * `vip`\n    * `:restrictions`
  - (Hash) \n      * `:geo_restriction` - *required* - (Hash) \n        * `:restriction_type`
  - *required* - (String) The method that you want to use to restrict distribution
  of your content by country: - none: No geo restriction is enabled, meaning access
  to content is not restricted by client geo location. - blacklist: The Location elements
  specify the countries in which you do not want CloudFront to distribute your content.
  - whitelist: The Location elements specify the countries in which you want CloudFront
  to distribute your content.  Valid values include:\n          * `blacklist`\n          *
  `whitelist`\n          * `none`\n        * `:quantity` - *required* - (Integer)
  When geo restriction is enabled, this is the number of countries in your whitelist
  or blacklist. Otherwise, when it is not enabled, Quantity is 0, and you can omit
  Items.\n        * `:items` - (Array&lt;String>) A complex type that contains a Location
  element for each country in which you want CloudFront either to distribute your
  content (whitelist) or not distribute your content (blacklist). The Location element
  is a two-letter, uppercase country code for a country that you want to include in
  your blacklist or whitelist. Include one Location element for each country. CloudFront
  and MaxMind both use ISO 3166 country codes. For the current list of countries and
  the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization
  for Standardization website. You can also refer to the country list in the CloudFront
  console, which includes both country names and codes.\n        * `:Location` - (String)
  \n@return [Core::Response] The `#data` method of the response object returns a hash
  with the following structure:\n\n  * `:id` - (String)\n  * `:status` - (String)\n
  \ * `:last_modified_time` - (Time)\n  * `:in_progress_invalidation_batches` - (Integer)\n
  \ * `:domain_name` - (String)\n  * `:active_trusted_signers` - (Hash)\n    * `:enabled`
  - (Boolean)\n    * `:quantity` - (Integer)\n    * `:items` - (Array<Hash>)\n      *
  `:aws_account_number` - (String)\n      * `:key_pair_ids` - (Hash)\n        * `:quantity`
  - (Integer)\n        * `:items` - (Array<String>)\n  * `:distribution_config` -
  (Hash)\n    * `:caller_reference` - (String)\n    * `:aliases` - (Hash)\n      *
  `:quantity` - (Integer)\n      * `:items` - (Array<String>)\n    * `:default_root_object`
  - (String)\n    * `:origins` - (Hash)\n      * `:quantity` - (Integer)\n      *
  `:items` - (Array<Hash>)\n        * `:id` - (String)\n        * `:domain_name` -
  (String)\n        * `:s3_origin_config` - (Hash)\n          * `:origin_access_identity`
  - (String)\n        * `:custom_origin_config` - (Hash)\n          * `:http_port`
  - (Integer)\n          * `:https_port` - (Integer)\n          * `:origin_protocol_policy`
  - (String)\n    * `:default_cache_behavior` - (Hash)\n      * `:target_origin_id`
  - (String)\n      * `:forwarded_values` - (Hash)\n        * `:query_string` - (Boolean)\n
  \       * `:cookies` - (Hash)\n          * `:forward` - (String)\n          * `:whitelisted_names`
  - (Hash)\n            * `:quantity` - (Integer)\n            * `:items` - (Array<String>)\n
  \     * `:trusted_signers` - (Hash)\n        * `:enabled` - (Boolean)\n        *
  `:quantity` - (Integer)\n        * `:items` - (Array<String>)\n      * `:viewer_protocol_policy`
  - (String)\n      * `:min_ttl` - (Integer)\n      * `:allowed_methods` - (Hash)\n
  \       * `:quantity` - (Integer)\n        * `:items` - (Array<String>)\n      *
  `:smooth_streaming` - (Boolean)\n    * `:cache_behaviors` - (Hash)\n      * `:quantity`
  - (Integer)\n      * `:items` - (Array<Hash>)\n        * `:path_pattern` - (String)\n
  \       * `:target_origin_id` - (String)\n        * `:forwarded_values` - (Hash)\n
  \         * `:query_string` - (Boolean)\n          * `:cookies` - (Hash)\n            *
  `:forward` - (String)\n            * `:whitelisted_names` - (Hash)\n              *
  `:quantity` - (Integer)\n              * `:items` - (Array<String>)\n        * `:trusted_signers`
  - (Hash)\n          * `:enabled` - (Boolean)\n          * `:quantity` - (Integer)\n
  \         * `:items` - (Array<String>)\n        * `:viewer_protocol_policy` - (String)\n
  \       * `:min_ttl` - (Integer)\n        * `:allowed_methods` - (Hash)\n          *
  `:quantity` - (Integer)\n          * `:items` - (Array<String>)\n        * `:smooth_streaming`
  - (Boolean)\n    * `:custom_error_responses` - (Hash)\n      * `:quantity` - (Integer)\n
  \     * `:items` - (Array<Hash>)\n        * `:error_code` - (Integer)\n        *
  `:response_page_path` - (String)\n        * `:response_code` - (String)\n        *
  `:error_caching_min_ttl` - (Integer)\n    * `:comment` - (String)\n    * `:logging`
  - (Hash)\n      * `:enabled` - (Boolean)\n      * `:include_cookies` - (Boolean)\n
  \     * `:bucket` - (String)\n      * `:prefix` - (String)\n    * `:price_class`
  - (String)\n    * `:enabled` - (Boolean)\n    * `:viewer_certificate` - (Hash)\n
  \     * `:iam_certificate_id` - (String)\n      * `:cloud_front_default_certificate`
  - (Boolean)\n      * `:ssl_support_method` - (String)\n    * `:restrictions` - (Hash)\n
  \     * `:geo_restriction` - (Hash)\n        * `:restriction_type` - (String)\n
  \       * `:quantity` - (Integer)\n        * `:items` - (Array<String>)"
:create_invalidation: "Calls the POST CreateInvalidation API operation.\n@param [Hash]
  options\n  * `:distribution_id` - *required* - (String) The distribution's id.\n
  \ * `:invalidation_batch` - *required* - (Hash) The batch information for the invalidation.\n
  \   * `:paths` - *required* - (Hash) The path of the object to invalidate. The path
  is relative to the distribution and must begin with a slash (/). You must enclose
  each invalidation object with the Path element tags. If the path includes non-ASCII
  characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt),
  URL encode those characters. Do not URL encode any other characters in the path,
  or CloudFront will not invalidate the old version of the updated object.\n      *
  `:quantity` - *required* - (Integer) The number of objects that you want to invalidate.\n
  \     * `:items` - (Array&lt;String>) A complex type that contains a list of the
  objects that you want to invalidate.\n      * `:Path` - (String) \n    * `:caller_reference`
  - *required* - (String) A unique name that ensures the request can't be replayed.
  If the CallerReference is new (no matter the content of the Path object), a new
  distribution is created. If the CallerReference is a value you already sent in a
  previous request to create an invalidation batch, and the content of each Path element
  is identical to the original request, the response includes the same information
  returned to the original request. If the CallerReference is a value you already
  sent in a previous request to create a distribution but the content of any Path
  is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists
  error.\n@return [Core::Response] The `#data` method of the response object returns
  a hash with the following structure:\n\n  * `:id` - (String)\n  * `:status` - (String)\n
  \ * `:create_time` - (Time)\n  * `:invalidation_batch` - (Hash)\n    * `:paths`
  - (Hash)\n      * `:quantity` - (Integer)\n      * `:items` - (Array<String>)\n
  \   * `:caller_reference` - (String)"
:create_streaming_distribution: "Calls the POST CreateStreamingDistribution API operation.\n@param
  [Hash] options\n  * `:streaming_distribution_config` - *required* - (Hash) The streaming
  distribution's configuration information.\n    * `:caller_reference` - *required*
  - (String) A unique number that ensures the request can't be replayed. If the CallerReference
  is new (no matter the content of the StreamingDistributionConfig object), a new
  streaming distribution is created. If the CallerReference is a value you already
  sent in a previous request to create a streaming distribution, and the content of
  the StreamingDistributionConfig is identical to the original request (ignoring white
  space), the response includes the same information returned to the original request.
  If the CallerReference is a value you already sent in a previous request to create
  a streaming distribution but the content of the StreamingDistributionConfig is different
  from the original request, CloudFront returns a DistributionAlreadyExists error.\n
  \   * `:s3_origin` - *required* - (Hash) A complex type that contains information
  about the Amazon S3 bucket from which you want CloudFront to get your media files
  for distribution.\n      * `:domain_name` - *required* - (String) The DNS name of
  the S3 origin.\n      * `:origin_access_identity` - *required* - (String) Your S3
  origin's origin access identity.\n    * `:aliases` - *required* - (Hash) A complex
  type that contains information about CNAMEs (alternate domain names), if any, for
  this streaming distribution.\n      * `:quantity` - *required* - (Integer) The number
  of CNAMEs, if any, for this distribution.\n      * `:items` - (Array&lt;String>)
  Optional: A complex type that contains CNAME elements, if any, for this distribution.
  If Quantity is 0, you can omit Items.\n      * `:CNAME` - (String) \n    * `:comment`
  - *required* - (String) Any comments you want to include about the streaming distribution.\n
  \   * `:logging` - *required* - (Hash) A complex type that controls whether access
  logs are written for the streaming distribution.\n      * `:enabled` - *required*
  - (Boolean) Specifies whether you want CloudFront to save access logs to an Amazon
  S3 bucket. If you do not want to enable logging when you create a streaming distribution
  or if you want to disable logging for an existing streaming distribution, specify
  \ `false`  for Enabled, and specify empty Bucket and Prefix elements. If you specify
  \ `false`  for Enabled but you specify values for Bucket and Prefix, the values
  are automatically deleted.\n      * `:bucket` - *required* - (String) The Amazon
  S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.\n
  \     * `:prefix` - *required* - (String) An optional string that you want CloudFront
  to prefix to the access log filenames for this streaming distribution, for example,
  myprefix/. If you want to enable logging, but you do not want to specify a prefix,
  you still must include an empty Prefix element in the Logging element.\n    * `:trusted_signers`
  - *required* - (Hash) A complex type that specifies the AWS accounts, if any, that
  you want to allow to create signed URLs for private content. If you want to require
  signed URLs in requests for objects in the target origin that match the PathPattern
  for this cache behavior, specify  `true`  for Enabled, and specify the applicable
  values for Quantity and Items. For more information, go to Using a Signed URL to
  Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want
  to require signed URLs in requests for objects that match PathPattern, specify  `false`
  \ for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more
  trusted signers, change Enabled to  `true`  (if it's currently  `false` ), change
  Quantity as applicable, and specify all of the trusted signers that you want to
  include in the updated distribution.\n      * `:enabled` - *required* - (Boolean)
  Specifies whether you want to require end users to use signed URLs to access the
  files specified by PathPattern and TargetOriginId.\n      * `:quantity` - *required*
  - (Integer) The number of trusted signers for this cache behavior.\n      * `:items`
  - (Array&lt;String>) Optional: A complex type that contains trusted signers for
  this cache behavior. If Quantity is 0, you can omit Items.\n      * `:AwsAccountNumber`
  - (String) \n    * `:price_class` - *required* - (String) A complex type that contains
  information about price class for this streaming distribution.  Valid values include:\n
  \     * `PriceClass_100`\n      * `PriceClass_200`\n      * `PriceClass_All`\n    *
  `:enabled` - *required* - (Boolean) Whether the streaming distribution is enabled
  to accept end user requests for content.\n@return [Core::Response] The `#data` method
  of the response object returns a hash with the following structure:\n\n  * `:id`
  - (String)\n  * `:status` - (String)\n  * `:last_modified_time` - (Time)\n  * `:domain_name`
  - (String)\n  * `:active_trusted_signers` - (Hash)\n    * `:enabled` - (Boolean)\n
  \   * `:quantity` - (Integer)\n    * `:items` - (Array<Hash>)\n      * `:aws_account_number`
  - (String)\n      * `:key_pair_ids` - (Hash)\n        * `:quantity` - (Integer)\n
  \       * `:items` - (Array<String>)\n  * `:streaming_distribution_config` - (Hash)\n
  \   * `:caller_reference` - (String)\n    * `:s3_origin` - (Hash)\n      * `:domain_name`
  - (String)\n      * `:origin_access_identity` - (String)\n    * `:aliases` - (Hash)\n
  \     * `:quantity` - (Integer)\n      * `:items` - (Array<String>)\n    * `:comment`
  - (String)\n    * `:logging` - (Hash)\n      * `:enabled` - (Boolean)\n      * `:bucket`
  - (String)\n      * `:prefix` - (String)\n    * `:trusted_signers` - (Hash)\n      *
  `:enabled` - (Boolean)\n      * `:quantity` - (Integer)\n      * `:items` - (Array<String>)\n
  \   * `:price_class` - (String)\n    * `:enabled` - (Boolean)"
:delete_cloud_front_origin_access_identity: |-
  Calls the DELETE DeleteCloudFrontOriginAccessIdentity API operation.
  @param [Hash] options
    * `:id` - *required* - (String) The origin access identity's id.
    * `:if_match` - (String) The value of the ETag header you received from a previous GET or PUT request. For example: E2QWRUHAPOMQZL.
  @return [Core::Response]
:delete_distribution: |-
  Calls the DELETE DeleteDistribution API operation.
  @param [Hash] options
    * `:id` - *required* - (String) The distribution id.
    * `:if_match` - (String) The value of the ETag header you received when you disabled the distribution. For example: E2QWRUHAPOMQZL.
  @return [Core::Response]
:delete_streaming_distribution: |-
  Calls the DELETE DeleteStreamingDistribution API operation.
  @param [Hash] options
    * `:id` - *required* - (String) The distribution id.
    * `:if_match` - (String) The value of the ETag header you received when you disabled the streaming distribution. For example: E2QWRUHAPOMQZL.
  @return [Core::Response]
:get_cloud_front_origin_access_identity: |-
  Calls the GET GetCloudFrontOriginAccessIdentity API operation.
  @param [Hash] options
    * `:id` - *required* - (String) The identity's id.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:id` - (String)
    * `:s3_canonical_user_id` - (String)
    * `:cloud_front_origin_access_identity_config` - (Hash)
      * `:caller_reference` - (String)
      * `:comment` - (String)
:get_cloud_front_origin_access_identity_config: |-
  Calls the GET GetCloudFrontOriginAccessIdentityConfig API operation.
  @param [Hash] options
    * `:id` - *required* - (String) The identity's id.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:caller_reference` - (String)
    * `:comment` - (String)
:get_distribution: |-
  Calls the GET GetDistribution API operation.
  @param [Hash] options
    * `:id` - *required* - (String) The distribution's id.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:id` - (String)
    * `:status` - (String)
    * `:last_modified_time` - (Time)
    * `:in_progress_invalidation_batches` - (Integer)
    * `:domain_name` - (String)
    * `:active_trusted_signers` - (Hash)
      * `:enabled` - (Boolean)
      * `:quantity` - (Integer)
      * `:items` - (Array<Hash>)
        * `:aws_account_number` - (String)
        * `:key_pair_ids` - (Hash)
          * `:quantity` - (Integer)
          * `:items` - (Array<String>)
    * `:distribution_config` - (Hash)
      * `:caller_reference` - (String)
      * `:aliases` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<String>)
      * `:default_root_object` - (String)
      * `:origins` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<Hash>)
          * `:id` - (String)
          * `:domain_name` - (String)
          * `:s3_origin_config` - (Hash)
            * `:origin_access_identity` - (String)
          * `:custom_origin_config` - (Hash)
            * `:http_port` - (Integer)
            * `:https_port` - (Integer)
            * `:origin_protocol_policy` - (String)
      * `:default_cache_behavior` - (Hash)
        * `:target_origin_id` - (String)
        * `:forwarded_values` - (Hash)
          * `:query_string` - (Boolean)
          * `:cookies` - (Hash)
            * `:forward` - (String)
            * `:whitelisted_names` - (Hash)
              * `:quantity` - (Integer)
              * `:items` - (Array<String>)
        * `:trusted_signers` - (Hash)
          * `:enabled` - (Boolean)
          * `:quantity` - (Integer)
          * `:items` - (Array<String>)
        * `:viewer_protocol_policy` - (String)
        * `:min_ttl` - (Integer)
        * `:allowed_methods` - (Hash)
          * `:quantity` - (Integer)
          * `:items` - (Array<String>)
        * `:smooth_streaming` - (Boolean)
      * `:cache_behaviors` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<Hash>)
          * `:path_pattern` - (String)
          * `:target_origin_id` - (String)
          * `:forwarded_values` - (Hash)
            * `:query_string` - (Boolean)
            * `:cookies` - (Hash)
              * `:forward` - (String)
              * `:whitelisted_names` - (Hash)
                * `:quantity` - (Integer)
                * `:items` - (Array<String>)
          * `:trusted_signers` - (Hash)
            * `:enabled` - (Boolean)
            * `:quantity` - (Integer)
            * `:items` - (Array<String>)
          * `:viewer_protocol_policy` - (String)
          * `:min_ttl` - (Integer)
          * `:allowed_methods` - (Hash)
            * `:quantity` - (Integer)
            * `:items` - (Array<String>)
          * `:smooth_streaming` - (Boolean)
      * `:custom_error_responses` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<Hash>)
          * `:error_code` - (Integer)
          * `:response_page_path` - (String)
          * `:response_code` - (String)
          * `:error_caching_min_ttl` - (Integer)
      * `:comment` - (String)
      * `:logging` - (Hash)
        * `:enabled` - (Boolean)
        * `:include_cookies` - (Boolean)
        * `:bucket` - (String)
        * `:prefix` - (String)
      * `:price_class` - (String)
      * `:enabled` - (Boolean)
      * `:viewer_certificate` - (Hash)
        * `:iam_certificate_id` - (String)
        * `:cloud_front_default_certificate` - (Boolean)
        * `:ssl_support_method` - (String)
      * `:restrictions` - (Hash)
        * `:geo_restriction` - (Hash)
          * `:restriction_type` - (String)
          * `:quantity` - (Integer)
          * `:items` - (Array<String>)
:get_distribution_config: |-
  Calls the GET GetDistributionConfig API operation.
  @param [Hash] options
    * `:id` - *required* - (String) The distribution's id.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:caller_reference` - (String)
    * `:aliases` - (Hash)
      * `:quantity` - (Integer)
      * `:items` - (Array<String>)
    * `:default_root_object` - (String)
    * `:origins` - (Hash)
      * `:quantity` - (Integer)
      * `:items` - (Array<Hash>)
        * `:id` - (String)
        * `:domain_name` - (String)
        * `:s3_origin_config` - (Hash)
          * `:origin_access_identity` - (String)
        * `:custom_origin_config` - (Hash)
          * `:http_port` - (Integer)
          * `:https_port` - (Integer)
          * `:origin_protocol_policy` - (String)
    * `:default_cache_behavior` - (Hash)
      * `:target_origin_id` - (String)
      * `:forwarded_values` - (Hash)
        * `:query_string` - (Boolean)
        * `:cookies` - (Hash)
          * `:forward` - (String)
          * `:whitelisted_names` - (Hash)
            * `:quantity` - (Integer)
            * `:items` - (Array<String>)
      * `:trusted_signers` - (Hash)
        * `:enabled` - (Boolean)
        * `:quantity` - (Integer)
        * `:items` - (Array<String>)
      * `:viewer_protocol_policy` - (String)
      * `:min_ttl` - (Integer)
      * `:allowed_methods` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<String>)
      * `:smooth_streaming` - (Boolean)
    * `:cache_behaviors` - (Hash)
      * `:quantity` - (Integer)
      * `:items` - (Array<Hash>)
        * `:path_pattern` - (String)
        * `:target_origin_id` - (String)
        * `:forwarded_values` - (Hash)
          * `:query_string` - (Boolean)
          * `:cookies` - (Hash)
            * `:forward` - (String)
            * `:whitelisted_names` - (Hash)
              * `:quantity` - (Integer)
              * `:items` - (Array<String>)
        * `:trusted_signers` - (Hash)
          * `:enabled` - (Boolean)
          * `:quantity` - (Integer)
          * `:items` - (Array<String>)
        * `:viewer_protocol_policy` - (String)
        * `:min_ttl` - (Integer)
        * `:allowed_methods` - (Hash)
          * `:quantity` - (Integer)
          * `:items` - (Array<String>)
        * `:smooth_streaming` - (Boolean)
    * `:custom_error_responses` - (Hash)
      * `:quantity` - (Integer)
      * `:items` - (Array<Hash>)
        * `:error_code` - (Integer)
        * `:response_page_path` - (String)
        * `:response_code` - (String)
        * `:error_caching_min_ttl` - (Integer)
    * `:comment` - (String)
    * `:logging` - (Hash)
      * `:enabled` - (Boolean)
      * `:include_cookies` - (Boolean)
      * `:bucket` - (String)
      * `:prefix` - (String)
    * `:price_class` - (String)
    * `:enabled` - (Boolean)
    * `:viewer_certificate` - (Hash)
      * `:iam_certificate_id` - (String)
      * `:cloud_front_default_certificate` - (Boolean)
      * `:ssl_support_method` - (String)
    * `:restrictions` - (Hash)
      * `:geo_restriction` - (Hash)
        * `:restriction_type` - (String)
        * `:quantity` - (Integer)
        * `:items` - (Array<String>)
:get_invalidation: |-
  Calls the GET GetInvalidation API operation.
  @param [Hash] options
    * `:distribution_id` - *required* - (String) The distribution's id.
    * `:id` - *required* - (String) The invalidation's id.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:id` - (String)
    * `:status` - (String)
    * `:create_time` - (Time)
    * `:invalidation_batch` - (Hash)
      * `:paths` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<String>)
      * `:caller_reference` - (String)
:get_streaming_distribution: |-
  Calls the GET GetStreamingDistribution API operation.
  @param [Hash] options
    * `:id` - *required* - (String) The streaming distribution's id.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:id` - (String)
    * `:status` - (String)
    * `:last_modified_time` - (Time)
    * `:domain_name` - (String)
    * `:active_trusted_signers` - (Hash)
      * `:enabled` - (Boolean)
      * `:quantity` - (Integer)
      * `:items` - (Array<Hash>)
        * `:aws_account_number` - (String)
        * `:key_pair_ids` - (Hash)
          * `:quantity` - (Integer)
          * `:items` - (Array<String>)
    * `:streaming_distribution_config` - (Hash)
      * `:caller_reference` - (String)
      * `:s3_origin` - (Hash)
        * `:domain_name` - (String)
        * `:origin_access_identity` - (String)
      * `:aliases` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<String>)
      * `:comment` - (String)
      * `:logging` - (Hash)
        * `:enabled` - (Boolean)
        * `:bucket` - (String)
        * `:prefix` - (String)
      * `:trusted_signers` - (Hash)
        * `:enabled` - (Boolean)
        * `:quantity` - (Integer)
        * `:items` - (Array<String>)
      * `:price_class` - (String)
      * `:enabled` - (Boolean)
:get_streaming_distribution_config: |-
  Calls the GET GetStreamingDistributionConfig API operation.
  @param [Hash] options
    * `:id` - *required* - (String) The streaming distribution's id.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:caller_reference` - (String)
    * `:s3_origin` - (Hash)
      * `:domain_name` - (String)
      * `:origin_access_identity` - (String)
    * `:aliases` - (Hash)
      * `:quantity` - (Integer)
      * `:items` - (Array<String>)
    * `:comment` - (String)
    * `:logging` - (Hash)
      * `:enabled` - (Boolean)
      * `:bucket` - (String)
      * `:prefix` - (String)
    * `:trusted_signers` - (Hash)
      * `:enabled` - (Boolean)
      * `:quantity` - (Integer)
      * `:items` - (Array<String>)
    * `:price_class` - (String)
    * `:enabled` - (Boolean)
:list_cloud_front_origin_access_identities: |-
  Calls the GET ListCloudFrontOriginAccessIdentities API operation.
  @param [Hash] options
    * `:marker` - (String) Use this when paginating results to indicate where to begin in your list of origin access identities. The results include identities in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last identity on that page).
    * `:max_items` - (Integer) The maximum number of origin access identities you want in the response body.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:marker` - (String)
    * `:next_marker` - (String)
    * `:max_items` - (Integer)
    * `:is_truncated` - (Boolean)
    * `:quantity` - (Integer)
    * `:items` - (Array<Hash>)
      * `:id` - (String)
      * `:s3_canonical_user_id` - (String)
      * `:comment` - (String)
:list_distributions: |-
  Calls the GET ListDistributions API operation.
  @param [Hash] options
    * `:marker` - (String) Use this when paginating results to indicate where to begin in your list of distributions. The results include distributions in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last distribution on that page).
    * `:max_items` - (Integer) The maximum number of distributions you want in the response body.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:marker` - (String)
    * `:next_marker` - (String)
    * `:max_items` - (Integer)
    * `:is_truncated` - (Boolean)
    * `:quantity` - (Integer)
    * `:items` - (Array<Hash>)
      * `:id` - (String)
      * `:status` - (String)
      * `:last_modified_time` - (Time)
      * `:domain_name` - (String)
      * `:aliases` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<String>)
      * `:origins` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<Hash>)
          * `:id` - (String)
          * `:domain_name` - (String)
          * `:s3_origin_config` - (Hash)
            * `:origin_access_identity` - (String)
          * `:custom_origin_config` - (Hash)
            * `:http_port` - (Integer)
            * `:https_port` - (Integer)
            * `:origin_protocol_policy` - (String)
      * `:default_cache_behavior` - (Hash)
        * `:target_origin_id` - (String)
        * `:forwarded_values` - (Hash)
          * `:query_string` - (Boolean)
          * `:cookies` - (Hash)
            * `:forward` - (String)
            * `:whitelisted_names` - (Hash)
              * `:quantity` - (Integer)
              * `:items` - (Array<String>)
        * `:trusted_signers` - (Hash)
          * `:enabled` - (Boolean)
          * `:quantity` - (Integer)
          * `:items` - (Array<String>)
        * `:viewer_protocol_policy` - (String)
        * `:min_ttl` - (Integer)
        * `:allowed_methods` - (Hash)
          * `:quantity` - (Integer)
          * `:items` - (Array<String>)
        * `:smooth_streaming` - (Boolean)
      * `:cache_behaviors` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<Hash>)
          * `:path_pattern` - (String)
          * `:target_origin_id` - (String)
          * `:forwarded_values` - (Hash)
            * `:query_string` - (Boolean)
            * `:cookies` - (Hash)
              * `:forward` - (String)
              * `:whitelisted_names` - (Hash)
                * `:quantity` - (Integer)
                * `:items` - (Array<String>)
          * `:trusted_signers` - (Hash)
            * `:enabled` - (Boolean)
            * `:quantity` - (Integer)
            * `:items` - (Array<String>)
          * `:viewer_protocol_policy` - (String)
          * `:min_ttl` - (Integer)
          * `:allowed_methods` - (Hash)
            * `:quantity` - (Integer)
            * `:items` - (Array<String>)
          * `:smooth_streaming` - (Boolean)
      * `:custom_error_responses` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<Hash>)
          * `:error_code` - (Integer)
          * `:response_page_path` - (String)
          * `:response_code` - (String)
          * `:error_caching_min_ttl` - (Integer)
      * `:comment` - (String)
      * `:price_class` - (String)
      * `:enabled` - (Boolean)
      * `:viewer_certificate` - (Hash)
        * `:iam_certificate_id` - (String)
        * `:cloud_front_default_certificate` - (Boolean)
        * `:ssl_support_method` - (String)
      * `:restrictions` - (Hash)
        * `:geo_restriction` - (Hash)
          * `:restriction_type` - (String)
          * `:quantity` - (Integer)
          * `:items` - (Array<String>)
:list_invalidations: |-
  Calls the GET ListInvalidations API operation.
  @param [Hash] options
    * `:distribution_id` - *required* - (String) The distribution's id.
    * `:marker` - (String) Use this parameter when paginating results to indicate where to begin in your list of invalidation batches. Because the results are returned in decreasing order from most recent to oldest, the most recent results are on the first page, the second page will contain earlier results, and so on. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response. This value is the same as the ID of the last invalidation batch on that page.
    * `:max_items` - (Integer) The maximum number of invalidation batches you want in the response body.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:marker` - (String)
    * `:next_marker` - (String)
    * `:max_items` - (Integer)
    * `:is_truncated` - (Boolean)
    * `:quantity` - (Integer)
    * `:items` - (Array<Hash>)
      * `:id` - (String)
      * `:create_time` - (Time)
      * `:status` - (String)
:list_streaming_distributions: |-
  Calls the GET ListStreamingDistributions API operation.
  @param [Hash] options
    * `:marker` - (String) Use this when paginating results to indicate where to begin in your list of streaming distributions. The results include distributions in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last distribution on that page).
    * `:max_items` - (Integer) The maximum number of streaming distributions you want in the response body.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:marker` - (String)
    * `:next_marker` - (String)
    * `:max_items` - (Integer)
    * `:is_truncated` - (Boolean)
    * `:quantity` - (Integer)
    * `:items` - (Array<Hash>)
      * `:id` - (String)
      * `:status` - (String)
      * `:last_modified_time` - (Time)
      * `:domain_name` - (String)
      * `:s3_origin` - (Hash)
        * `:domain_name` - (String)
        * `:origin_access_identity` - (String)
      * `:aliases` - (Hash)
        * `:quantity` - (Integer)
        * `:items` - (Array<String>)
      * `:trusted_signers` - (Hash)
        * `:enabled` - (Boolean)
        * `:quantity` - (Integer)
        * `:items` - (Array<String>)
      * `:comment` - (String)
      * `:price_class` - (String)
      * `:enabled` - (Boolean)
:update_cloud_front_origin_access_identity: |-
  Calls the PUT UpdateCloudFrontOriginAccessIdentity API operation.
  @param [Hash] options
    * `:cloud_front_origin_access_identity_config` - *required* - (Hash) The identity's configuration information.
      * `:caller_reference` - *required* - (String) A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.
      * `:comment` - *required* - (String) Any comments you want to include about the origin access identity.
    * `:id` - *required* - (String) The identity's id.
    * `:if_match` - (String) The value of the ETag header you received when retrieving the identity's configuration. For example: E2QWRUHAPOMQZL.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:id` - (String)
    * `:s3_canonical_user_id` - (String)
    * `:cloud_front_origin_access_identity_config` - (Hash)
      * `:caller_reference` - (String)
      * `:comment` - (String)
:update_distribution: "Calls the PUT UpdateDistribution API operation.\n@param [Hash]
  options\n  * `:distribution_config` - *required* - (Hash) The distribution's configuration
  information.\n    * `:caller_reference` - *required* - (String) A unique number
  that ensures the request can't be replayed. If the CallerReference is new (no matter
  the content of the DistributionConfig object), a new distribution is created. If
  the CallerReference is a value you already sent in a previous request to create
  a distribution, and the content of the DistributionConfig is identical to the original
  request (ignoring white space), the response includes the same information returned
  to the original request. If the CallerReference is a value you already sent in a
  previous request to create a distribution but the content of the DistributionConfig
  is different from the original request, CloudFront returns a DistributionAlreadyExists
  error.\n    * `:aliases` - *required* - (Hash) A complex type that contains information
  about CNAMEs (alternate domain names), if any, for this distribution.\n      * `:quantity`
  - *required* - (Integer) The number of CNAMEs, if any, for this distribution.\n
  \     * `:items` - (Array&lt;String>) Optional: A complex type that contains CNAME
  elements, if any, for this distribution. If Quantity is 0, you can omit Items.\n
  \     * `:CNAME` - (String) \n    * `:default_root_object` - *required* - (String)
  The object that you want CloudFront to return (for example, index.html) when an
  end user requests the root URL for your distribution (http://www.example.com) instead
  of an object in your distribution (http://www.example.com/index.html). Specifying
  a default root object avoids exposing the contents of your distribution. If you
  don't want to specify a default root object when you create a distribution, include
  an empty DefaultRootObject element. To delete the default root object from an existing
  distribution, update the distribution configuration and include an empty DefaultRootObject
  element. To replace the default root object, update the distribution configuration
  and specify the new object.\n    * `:origins` - *required* - (Hash) A complex type
  that contains information about origins for this distribution.\n      * `:quantity`
  - *required* - (Integer) The number of origins for this distribution.\n      * `:items`
  - (Array&lt;Hash>) A complex type that contains origins for this distribution.\n
  \     * `:Origin` - (Hash) \n        * `:id` - *required* - (String) A unique identifier
  for the origin. The value of Id must be unique within the distribution. You use
  the value of Id when you create a cache behavior. The Id identifies the origin that
  CloudFront routes a request to when the request matches the path pattern for that
  cache behavior.\n        * `:domain_name` - *required* - (String) Amazon S3 origins:
  The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects
  for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The
  DNS domain name for the HTTP server from which you want CloudFront to get objects
  for this origin, for example, www.example.com.\n        * `:s3_origin_config` -
  (Hash) A complex type that contains information about the Amazon S3 origin. If the
  origin is a custom origin, use the CustomOriginConfig element instead.\n          *
  `:origin_access_identity` - *required* - (String) The CloudFront origin access identity
  to associate with the origin. Use an origin access identity to configure the origin
  so that end users can only access objects in an Amazon S3 bucket through CloudFront.
  If you want end users to be able to access objects using either the CloudFront URL
  or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the
  origin access identity from an existing distribution, update the distribution configuration
  and include an empty OriginAccessIdentity element. To replace the origin access
  identity, update the distribution configuration and specify the new origin access
  identity. Use the format origin-access-identity/cloudfront/Id where Id is the value
  that CloudFront returned in the Id element when you created the origin access identity.\n
  \       * `:custom_origin_config` - (Hash) A complex type that contains information
  about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig
  element instead.\n          * `:http_port` - *required* - (Integer) The HTTP port
  the custom origin listens on.\n          * `:https_port` - *required* - (Integer)
  The HTTPS port the custom origin listens on.\n          * `:origin_protocol_policy`
  - *required* - (String) The origin protocol policy to apply to your origin.  Valid
  values include:\n            * `http-only`\n            * `match-viewer`\n    *
  `:default_cache_behavior` - *required* - (Hash) A complex type that describes the
  default cache behavior if you do not specify a CacheBehavior element or if files
  don't match any of the values of PathPattern in CacheBehavior elements.You must
  create exactly one default cache behavior.\n      * `:target_origin_id` - *required*
  - (String) The value of ID for the origin that you want CloudFront to route requests
  to when a request matches the path pattern either for a cache behavior or for the
  default cache behavior.\n      * `:forwarded_values` - *required* - (Hash) A complex
  type that specifies how CloudFront handles query strings and cookies.\n        *
  `:query_string` - *required* - (Boolean) Indicates whether you want CloudFront to
  forward query strings to the origin that is associated with this cache behavior.
  If so, specify  `true` ; if not, specify  `false` .\n        * `:cookies` - *required*
  - (Hash) A complex type that specifies how CloudFront handles cookies.\n          *
  `:forward` - *required* - (String) Use this element to specify whether you want
  CloudFront to forward cookies to the origin that is associated with this cache behavior.
  You can specify all, none or whitelist. If you choose All, CloudFront forwards all
  cookies regardless of how many your application uses.  Valid values include:\n            *
  `none`\n            * `whitelist`\n            * `all`\n          * `:whitelisted_names`
  - (Hash) A complex type that specifies the whitelisted cookies, if any, that you
  want CloudFront to forward to your origin that is associated with this cache behavior.\n
  \           * `:quantity` - *required* - (Integer) The number of whitelisted cookies
  for this cache behavior.\n            * `:items` - (Array&lt;String>) Optional:
  A complex type that contains whitelisted cookies for this cache behavior. If Quantity
  is 0, you can omit Items.\n            * `:Name` - (String) \n      * `:trusted_signers`
  - *required* - (Hash) A complex type that specifies the AWS accounts, if any, that
  you want to allow to create signed URLs for private content. If you want to require
  signed URLs in requests for objects in the target origin that match the PathPattern
  for this cache behavior, specify  `true`  for Enabled, and specify the applicable
  values for Quantity and Items. For more information, go to Using a Signed URL to
  Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want
  to require signed URLs in requests for objects that match PathPattern, specify  `false`
  \ for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more
  trusted signers, change Enabled to  `true`  (if it's currently  `false` ), change
  Quantity as applicable, and specify all of the trusted signers that you want to
  include in the updated distribution.\n        * `:enabled` - *required* - (Boolean)
  Specifies whether you want to require end users to use signed URLs to access the
  files specified by PathPattern and TargetOriginId.\n        * `:quantity` - *required*
  - (Integer) The number of trusted signers for this cache behavior.\n        * `:items`
  - (Array&lt;String>) Optional: A complex type that contains trusted signers for
  this cache behavior. If Quantity is 0, you can omit Items.\n        * `:AwsAccountNumber`
  - (String) \n      * `:viewer_protocol_policy` - *required* - (String) Use this
  element to specify the protocol that users can use to access the files in the origin
  specified by TargetOriginId when a request matches the path pattern in PathPattern.
  If you want CloudFront to allow end users to use any available protocol, specify
  allow-all. If you want CloudFront to require HTTPS, specify https. If you want CloudFront
  to respond to an HTTP request with an HTTP status code of 301 (Moved Permanently)
  and the HTTPS URL, specify redirect-to-https. The viewer then resubmits the request
  using the HTTPS URL.  Valid values include:\n        * `allow-all`\n        * `https-only`\n
  \       * `redirect-to-https`\n      * `:min_ttl` - *required* - (Integer) The minimum
  amount of time that you want objects to stay in CloudFront caches before CloudFront
  queries your origin to see whether the object has been updated.You can specify a
  value from 0 to 3,153,600,000 seconds (100 years).\n      * `:allowed_methods` -
  (Hash) \n        * `:quantity` - *required* - (Integer) The number of HTTP methods
  that you want CloudFront to forward to your origin. Valid values are 2 (for GET
  and HEAD requests) and 7 (for DELETE, GET, HEAD, OPTIONS, PATCH, POST, and PUT requests).\n
  \       * `:items` - (Array&lt;String>) A complex type that contains the HTTP methods
  that you want CloudFront to process and forward to your origin.\n        * `:Method`
  - (String) \n      * `:smooth_streaming` - (Boolean) Indicates whether you want
  to distribute media files in Microsoft Smooth Streaming format using the origin
  that is associated with this cache behavior. If so, specify  `true` ; if not, specify
  \ `false` .\n    * `:cache_behaviors` - *required* - (Hash) A complex type that
  contains zero or more CacheBehavior elements.\n      * `:quantity` - *required*
  - (Integer) The number of cache behaviors for this distribution.\n      * `:items`
  - (Array&lt;Hash>) Optional: A complex type that contains cache behaviors for this
  distribution. If Quantity is 0, you can omit Items.\n      * `:CacheBehavior` -
  (Hash) \n        * `:path_pattern` - *required* - (String) The pattern (for example,
  images/*.jpg) that specifies which requests you want this cache behavior to apply
  to. When CloudFront receives an end-user request, the requested path is compared
  with path patterns in the order in which cache behaviors are listed in the distribution.
  The path pattern for the default cache behavior is * and cannot be changed. If the
  request for an object does not match the path pattern for any cache behaviors, CloudFront
  applies the behavior in the default cache behavior.\n        * `:target_origin_id`
  - *required* - (String) The value of ID for the origin that you want CloudFront
  to route requests to when a request matches the path pattern either for a cache
  behavior or for the default cache behavior.\n        * `:forwarded_values` - *required*
  - (Hash) A complex type that specifies how CloudFront handles query strings and
  cookies.\n          * `:query_string` - *required* - (Boolean) Indicates whether
  you want CloudFront to forward query strings to the origin that is associated with
  this cache behavior. If so, specify  `true` ; if not, specify  `false` .\n          *
  `:cookies` - *required* - (Hash) A complex type that specifies how CloudFront handles
  cookies.\n            * `:forward` - *required* - (String) Use this element to specify
  whether you want CloudFront to forward cookies to the origin that is associated
  with this cache behavior. You can specify all, none or whitelist. If you choose
  All, CloudFront forwards all cookies regardless of how many your application uses.
  \ Valid values include:\n              * `none`\n              * `whitelist`\n              *
  `all`\n            * `:whitelisted_names` - (Hash) A complex type that specifies
  the whitelisted cookies, if any, that you want CloudFront to forward to your origin
  that is associated with this cache behavior.\n              * `:quantity` - *required*
  - (Integer) The number of whitelisted cookies for this cache behavior.\n              *
  `:items` - (Array&lt;String>) Optional: A complex type that contains whitelisted
  cookies for this cache behavior. If Quantity is 0, you can omit Items.\n              *
  `:Name` - (String) \n        * `:trusted_signers` - *required* - (Hash) A complex
  type that specifies the AWS accounts, if any, that you want to allow to create signed
  URLs for private content. If you want to require signed URLs in requests for objects
  in the target origin that match the PathPattern for this cache behavior, specify
  \ `true`  for Enabled, and specify the applicable values for Quantity and Items.
  For more information, go to Using a Signed URL to Serve Private Content in the Amazon
  CloudFront Developer Guide. If you don't want to require signed URLs in requests
  for objects that match PathPattern, specify  `false`  for Enabled and 0 for Quantity.
  Omit Items. To add, change, or remove one or more trusted signers, change Enabled
  to  `true`  (if it's currently  `false` ), change Quantity as applicable, and specify
  all of the trusted signers that you want to include in the updated distribution.\n
  \         * `:enabled` - *required* - (Boolean) Specifies whether you want to require
  end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.\n
  \         * `:quantity` - *required* - (Integer) The number of trusted signers for
  this cache behavior.\n          * `:items` - (Array&lt;String>) Optional: A complex
  type that contains trusted signers for this cache behavior. If Quantity is 0, you
  can omit Items.\n          * `:AwsAccountNumber` - (String) \n        * `:viewer_protocol_policy`
  - *required* - (String) Use this element to specify the protocol that users can
  use to access the files in the origin specified by TargetOriginId when a request
  matches the path pattern in PathPattern. If you want CloudFront to allow end users
  to use any available protocol, specify allow-all. If you want CloudFront to require
  HTTPS, specify https. If you want CloudFront to respond to an HTTP request with
  an HTTP status code of 301 (Moved Permanently) and the HTTPS URL, specify redirect-to-https.
  The viewer then resubmits the request using the HTTPS URL.  Valid values include:\n
  \         * `allow-all`\n          * `https-only`\n          * `redirect-to-https`\n
  \       * `:min_ttl` - *required* - (Integer) The minimum amount of time that you
  want objects to stay in CloudFront caches before CloudFront queries your origin
  to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000
  seconds (100 years).\n        * `:allowed_methods` - (Hash) \n          * `:quantity`
  - *required* - (Integer) The number of HTTP methods that you want CloudFront to
  forward to your origin. Valid values are 2 (for GET and HEAD requests) and 7 (for
  DELETE, GET, HEAD, OPTIONS, PATCH, POST, and PUT requests).\n          * `:items`
  - (Array&lt;String>) A complex type that contains the HTTP methods that you want
  CloudFront to process and forward to your origin.\n          * `:Method` - (String)
  \n        * `:smooth_streaming` - (Boolean) Indicates whether you want to distribute
  media files in Microsoft Smooth Streaming format using the origin that is associated
  with this cache behavior. If so, specify  `true` ; if not, specify  `false` .\n
  \   * `:custom_error_responses` - (Hash) A complex type that contains zero or more
  CustomErrorResponse elements.\n      * `:quantity` - *required* - (Integer) The
  number of custom error responses for this distribution.\n      * `:items` - (Array&lt;Hash>)
  Optional: A complex type that contains custom error responses for this distribution.
  If Quantity is 0, you can omit Items.\n      * `:CustomErrorResponse` - (Hash) \n
  \       * `:error_code` - *required* - (Integer) The 4xx or 5xx HTTP status code
  that you want to customize. For a list of HTTP status codes that you can customize,
  see CloudFront documentation.\n        * `:response_page_path` - (String) The path
  of the custom error page (for example, /custom_404.html). The path is relative to
  the distribution and must begin with a slash (/). If the path includes any non-ASCII
  characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt),
  URL encode those characters. Do not URL encode any other characters in the path,
  or CloudFront will not return the custom error page to the viewer.\n        * `:response_code`
  - (String) The HTTP status code that you want CloudFront to return with the custom
  error page to the viewer. For a list of HTTP status codes that you can replace,
  see CloudFront Documentation.\n        * `:error_caching_min_ttl` - (Integer) The
  minimum amount of time you want HTTP error codes to stay in CloudFront caches before
  CloudFront queries your origin to see whether the object has been updated. You can
  specify a value from 0 to 31,536,000.\n    * `:comment` - *required* - (String)
  Any comments you want to include about the distribution.\n    * `:logging` - *required*
  - (Hash) A complex type that controls whether access logs are written for the distribution.\n
  \     * `:enabled` - *required* - (Boolean) Specifies whether you want CloudFront
  to save access logs to an Amazon S3 bucket. If you do not want to enable logging
  when you create a distribution or if you want to disable logging for an existing
  distribution, specify  `false`  for Enabled, and specify empty Bucket and Prefix
  elements. If you specify  `false`  for Enabled but you specify values for Bucket,
  prefix and IncludeCookies, the values are automatically deleted.\n      * `:include_cookies`
  - *required* - (Boolean) Specifies whether you want CloudFront to include cookies
  in access logs, specify  `true`  for IncludeCookies. If you choose to include cookies
  in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors
  for this distribution. If you do not want to include cookies when you create a distribution
  or if you want to disable include cookies for an existing distribution, specify
  \ `false`  for IncludeCookies.\n      * `:bucket` - *required* - (String) The Amazon
  S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.\n
  \     * `:prefix` - *required* - (String) An optional string that you want CloudFront
  to prefix to the access log filenames for this distribution, for example, myprefix/.
  If you want to enable logging, but you do not want to specify a prefix, you still
  must include an empty Prefix element in the Logging element.\n    * `:price_class`
  - *required* - (String) A complex type that contains information about price class
  for this distribution.  Valid values include:\n      * `PriceClass_100`\n      *
  `PriceClass_200`\n      * `PriceClass_All`\n    * `:enabled` - *required* - (Boolean)
  Whether the distribution is enabled to accept end user requests for content.\n    *
  `:viewer_certificate` - (Hash) \n      * `:iam_certificate_id` - (String) If you
  want viewers to use HTTPS to request your objects and you're using an alternate
  domain name in your object URLs (for example, https://example.com/logo.jpg), specify
  the IAM certificate identifier of the custom viewer certificate for this distribution.
  Specify either this value or CloudFrontDefaultCertificate.\n      * `:cloud_front_default_certificate`
  - (Boolean) If you want viewers to use HTTPS to request your objects and you're
  using the CloudFront domain name of your distribution in your object URLs (for example,
  https://d111111abcdef8.cloudfront.net/logo.jpg), set to  `true` . Omit this value
  if you are setting an IAMCertificateId.\n      * `:ssl_support_method` - (String)
  If you specify a value for IAMCertificateId, you must also specify how you want
  CloudFront to serve HTTPS requests. Valid values are vip and sni-only. If you specify
  vip, CloudFront uses dedicated IP addresses for your content and can respond to
  HTTPS requests from any viewer. However, you must request permission to use this
  feature, and you incur additional monthly charges. If you specify sni-only, CloudFront
  can only respond to HTTPS requests from viewers that support Server Name Indication
  (SNI). All modern browsers support SNI, but some browsers still in use don't support
  SNI. Do not specify a value for SSLSupportMethod if you specified  `true`  for CloudFrontDefaultCertificate.
  \ Valid values include:\n        * `sni-only`\n        * `vip`\n    * `:restrictions`
  - (Hash) \n      * `:geo_restriction` - *required* - (Hash) \n        * `:restriction_type`
  - *required* - (String) The method that you want to use to restrict distribution
  of your content by country: - none: No geo restriction is enabled, meaning access
  to content is not restricted by client geo location. - blacklist: The Location elements
  specify the countries in which you do not want CloudFront to distribute your content.
  - whitelist: The Location elements specify the countries in which you want CloudFront
  to distribute your content.  Valid values include:\n          * `blacklist`\n          *
  `whitelist`\n          * `none`\n        * `:quantity` - *required* - (Integer)
  When geo restriction is enabled, this is the number of countries in your whitelist
  or blacklist. Otherwise, when it is not enabled, Quantity is 0, and you can omit
  Items.\n        * `:items` - (Array&lt;String>) A complex type that contains a Location
  element for each country in which you want CloudFront either to distribute your
  content (whitelist) or not distribute your content (blacklist). The Location element
  is a two-letter, uppercase country code for a country that you want to include in
  your blacklist or whitelist. Include one Location element for each country. CloudFront
  and MaxMind both use ISO 3166 country codes. For the current list of countries and
  the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization
  for Standardization website. You can also refer to the country list in the CloudFront
  console, which includes both country names and codes.\n        * `:Location` - (String)
  \n  * `:id` - *required* - (String) The distribution's id.\n  * `:if_match` - (String)
  The value of the ETag header you received when retrieving the distribution's configuration.
  For example: E2QWRUHAPOMQZL.\n@return [Core::Response] The `#data` method of the
  response object returns a hash with the following structure:\n\n  * `:id` - (String)\n
  \ * `:status` - (String)\n  * `:last_modified_time` - (Time)\n  * `:in_progress_invalidation_batches`
  - (Integer)\n  * `:domain_name` - (String)\n  * `:active_trusted_signers` - (Hash)\n
  \   * `:enabled` - (Boolean)\n    * `:quantity` - (Integer)\n    * `:items` - (Array<Hash>)\n
  \     * `:aws_account_number` - (String)\n      * `:key_pair_ids` - (Hash)\n        *
  `:quantity` - (Integer)\n        * `:items` - (Array<String>)\n  * `:distribution_config`
  - (Hash)\n    * `:caller_reference` - (String)\n    * `:aliases` - (Hash)\n      *
  `:quantity` - (Integer)\n      * `:items` - (Array<String>)\n    * `:default_root_object`
  - (String)\n    * `:origins` - (Hash)\n      * `:quantity` - (Integer)\n      *
  `:items` - (Array<Hash>)\n        * `:id` - (String)\n        * `:domain_name` -
  (String)\n        * `:s3_origin_config` - (Hash)\n          * `:origin_access_identity`
  - (String)\n        * `:custom_origin_config` - (Hash)\n          * `:http_port`
  - (Integer)\n          * `:https_port` - (Integer)\n          * `:origin_protocol_policy`
  - (String)\n    * `:default_cache_behavior` - (Hash)\n      * `:target_origin_id`
  - (String)\n      * `:forwarded_values` - (Hash)\n        * `:query_string` - (Boolean)\n
  \       * `:cookies` - (Hash)\n          * `:forward` - (String)\n          * `:whitelisted_names`
  - (Hash)\n            * `:quantity` - (Integer)\n            * `:items` - (Array<String>)\n
  \     * `:trusted_signers` - (Hash)\n        * `:enabled` - (Boolean)\n        *
  `:quantity` - (Integer)\n        * `:items` - (Array<String>)\n      * `:viewer_protocol_policy`
  - (String)\n      * `:min_ttl` - (Integer)\n      * `:allowed_methods` - (Hash)\n
  \       * `:quantity` - (Integer)\n        * `:items` - (Array<String>)\n      *
  `:smooth_streaming` - (Boolean)\n    * `:cache_behaviors` - (Hash)\n      * `:quantity`
  - (Integer)\n      * `:items` - (Array<Hash>)\n        * `:path_pattern` - (String)\n
  \       * `:target_origin_id` - (String)\n        * `:forwarded_values` - (Hash)\n
  \         * `:query_string` - (Boolean)\n          * `:cookies` - (Hash)\n            *
  `:forward` - (String)\n            * `:whitelisted_names` - (Hash)\n              *
  `:quantity` - (Integer)\n              * `:items` - (Array<String>)\n        * `:trusted_signers`
  - (Hash)\n          * `:enabled` - (Boolean)\n          * `:quantity` - (Integer)\n
  \         * `:items` - (Array<String>)\n        * `:viewer_protocol_policy` - (String)\n
  \       * `:min_ttl` - (Integer)\n        * `:allowed_methods` - (Hash)\n          *
  `:quantity` - (Integer)\n          * `:items` - (Array<String>)\n        * `:smooth_streaming`
  - (Boolean)\n    * `:custom_error_responses` - (Hash)\n      * `:quantity` - (Integer)\n
  \     * `:items` - (Array<Hash>)\n        * `:error_code` - (Integer)\n        *
  `:response_page_path` - (String)\n        * `:response_code` - (String)\n        *
  `:error_caching_min_ttl` - (Integer)\n    * `:comment` - (String)\n    * `:logging`
  - (Hash)\n      * `:enabled` - (Boolean)\n      * `:include_cookies` - (Boolean)\n
  \     * `:bucket` - (String)\n      * `:prefix` - (String)\n    * `:price_class`
  - (String)\n    * `:enabled` - (Boolean)\n    * `:viewer_certificate` - (Hash)\n
  \     * `:iam_certificate_id` - (String)\n      * `:cloud_front_default_certificate`
  - (Boolean)\n      * `:ssl_support_method` - (String)\n    * `:restrictions` - (Hash)\n
  \     * `:geo_restriction` - (Hash)\n        * `:restriction_type` - (String)\n
  \       * `:quantity` - (Integer)\n        * `:items` - (Array<String>)"
:update_streaming_distribution: "Calls the PUT UpdateStreamingDistribution API operation.\n@param
  [Hash] options\n  * `:streaming_distribution_config` - *required* - (Hash) The streaming
  distribution's configuration information.\n    * `:caller_reference` - *required*
  - (String) A unique number that ensures the request can't be replayed. If the CallerReference
  is new (no matter the content of the StreamingDistributionConfig object), a new
  streaming distribution is created. If the CallerReference is a value you already
  sent in a previous request to create a streaming distribution, and the content of
  the StreamingDistributionConfig is identical to the original request (ignoring white
  space), the response includes the same information returned to the original request.
  If the CallerReference is a value you already sent in a previous request to create
  a streaming distribution but the content of the StreamingDistributionConfig is different
  from the original request, CloudFront returns a DistributionAlreadyExists error.\n
  \   * `:s3_origin` - *required* - (Hash) A complex type that contains information
  about the Amazon S3 bucket from which you want CloudFront to get your media files
  for distribution.\n      * `:domain_name` - *required* - (String) The DNS name of
  the S3 origin.\n      * `:origin_access_identity` - *required* - (String) Your S3
  origin's origin access identity.\n    * `:aliases` - *required* - (Hash) A complex
  type that contains information about CNAMEs (alternate domain names), if any, for
  this streaming distribution.\n      * `:quantity` - *required* - (Integer) The number
  of CNAMEs, if any, for this distribution.\n      * `:items` - (Array&lt;String>)
  Optional: A complex type that contains CNAME elements, if any, for this distribution.
  If Quantity is 0, you can omit Items.\n      * `:CNAME` - (String) \n    * `:comment`
  - *required* - (String) Any comments you want to include about the streaming distribution.\n
  \   * `:logging` - *required* - (Hash) A complex type that controls whether access
  logs are written for the streaming distribution.\n      * `:enabled` - *required*
  - (Boolean) Specifies whether you want CloudFront to save access logs to an Amazon
  S3 bucket. If you do not want to enable logging when you create a streaming distribution
  or if you want to disable logging for an existing streaming distribution, specify
  \ `false`  for Enabled, and specify empty Bucket and Prefix elements. If you specify
  \ `false`  for Enabled but you specify values for Bucket and Prefix, the values
  are automatically deleted.\n      * `:bucket` - *required* - (String) The Amazon
  S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.\n
  \     * `:prefix` - *required* - (String) An optional string that you want CloudFront
  to prefix to the access log filenames for this streaming distribution, for example,
  myprefix/. If you want to enable logging, but you do not want to specify a prefix,
  you still must include an empty Prefix element in the Logging element.\n    * `:trusted_signers`
  - *required* - (Hash) A complex type that specifies the AWS accounts, if any, that
  you want to allow to create signed URLs for private content. If you want to require
  signed URLs in requests for objects in the target origin that match the PathPattern
  for this cache behavior, specify  `true`  for Enabled, and specify the applicable
  values for Quantity and Items. For more information, go to Using a Signed URL to
  Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want
  to require signed URLs in requests for objects that match PathPattern, specify  `false`
  \ for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more
  trusted signers, change Enabled to  `true`  (if it's currently  `false` ), change
  Quantity as applicable, and specify all of the trusted signers that you want to
  include in the updated distribution.\n      * `:enabled` - *required* - (Boolean)
  Specifies whether you want to require end users to use signed URLs to access the
  files specified by PathPattern and TargetOriginId.\n      * `:quantity` - *required*
  - (Integer) The number of trusted signers for this cache behavior.\n      * `:items`
  - (Array&lt;String>) Optional: A complex type that contains trusted signers for
  this cache behavior. If Quantity is 0, you can omit Items.\n      * `:AwsAccountNumber`
  - (String) \n    * `:price_class` - *required* - (String) A complex type that contains
  information about price class for this streaming distribution.  Valid values include:\n
  \     * `PriceClass_100`\n      * `PriceClass_200`\n      * `PriceClass_All`\n    *
  `:enabled` - *required* - (Boolean) Whether the streaming distribution is enabled
  to accept end user requests for content.\n  * `:id` - *required* - (String) The
  streaming distribution's id.\n  * `:if_match` - (String) The value of the ETag header
  you received when retrieving the streaming distribution's configuration. For example:
  E2QWRUHAPOMQZL.\n@return [Core::Response] The `#data` method of the response object
  returns a hash with the following structure:\n\n  * `:id` - (String)\n  * `:status`
  - (String)\n  * `:last_modified_time` - (Time)\n  * `:domain_name` - (String)\n
  \ * `:active_trusted_signers` - (Hash)\n    * `:enabled` - (Boolean)\n    * `:quantity`
  - (Integer)\n    * `:items` - (Array<Hash>)\n      * `:aws_account_number` - (String)\n
  \     * `:key_pair_ids` - (Hash)\n        * `:quantity` - (Integer)\n        * `:items`
  - (Array<String>)\n  * `:streaming_distribution_config` - (Hash)\n    * `:caller_reference`
  - (String)\n    * `:s3_origin` - (Hash)\n      * `:domain_name` - (String)\n      *
  `:origin_access_identity` - (String)\n    * `:aliases` - (Hash)\n      * `:quantity`
  - (Integer)\n      * `:items` - (Array<String>)\n    * `:comment` - (String)\n    *
  `:logging` - (Hash)\n      * `:enabled` - (Boolean)\n      * `:bucket` - (String)\n
  \     * `:prefix` - (String)\n    * `:trusted_signers` - (Hash)\n      * `:enabled`
  - (Boolean)\n      * `:quantity` - (Integer)\n      * `:items` - (Array<String>)\n
  \   * `:price_class` - (String)\n    * `:enabled` - (Boolean)"
