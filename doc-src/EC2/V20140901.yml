---
:accept_vpc_peering_connection: "Calls the AcceptVpcPeeringConnection API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:vpc_peering_connection_id` -
  (String) The ID of the VPC peering connection.\n@return [Core::Response] The `#data`
  method of the response object returns a hash with the following structure:\n\n  *
  `:vpc_peering_connection` - (Hash)\n    * `:accepter_vpc_info` - (Hash)\n      *
  `:cidr_block` - (String)\n      * `:owner_id` - (String)\n      * `:vpc_id` - (String)\n
  \   * `:expiration_time` - (Time)\n    * `:requester_vpc_info` - (Hash)\n      *
  `:cidr_block` - (String)\n      * `:owner_id` - (String)\n      * `:vpc_id` - (String)\n
  \   * `:status` - (Hash)\n      * `:code` - (String)\n      * `:message` - (String)\n
  \   * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` -
  (String)\n    * `:vpc_peering_connection_id` - (String)"
:allocate_address: "Calls the AllocateAddress API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:domain` - (String) Set to vpc to allocate the
  address for use with instances in a VPC. Default: The address is for use with instances
  in EC2-Classic.  Valid values include:\n    * `vpc`\n    * `standard`\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:public_ip` - (String)\n  * `:domain` - (String)\n  * `:allocation_id` - (String)"
:assign_private_ip_addresses: |-
  Calls the AssignPrivateIpAddresses API operation.
  @param [Hash] options
    * `:network_interface_id` - *required* - (String) The ID of the network interface.
    * `:private_ip_addresses` - (Array&lt;<String>) One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses. If you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.
    * `:secondary_private_ip_address_count` - (Integer) The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.
    * `:allow_reassignment` - (Boolean) Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.
  @return [Core::Response]
:associate_address: "Calls the AssociateAddress API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:instance_id` - (String) The ID of the instance.
  This is required for EC2-Classic. For EC2-VPC, you can specify either the instance
  ID or the network interface ID, but not both. The operation fails if you specify
  an instance ID unless exactly one network interface is attached.\n  * `:public_ip`
  - (String) The Elastic IP address. This is required for EC2-Classic.\n  * `:allocation_id`
  - (String) [EC2-VPC] The allocation ID. This is required for EC2-VPC.\n  * `:network_interface_id`
  - (String) [EC2-VPC] The ID of the network interface. If the instance has more than
  one network interface, you must specify a network interface ID.\n  * `:private_ip_address`
  - (String) [EC2-VPC] The primary or secondary private IP address to associate with
  the Elastic IP address. If no private IP address is specified, the Elastic IP address
  is associated with the primary private IP address.\n  * `:allow_reassociation` -
  (Boolean) [EC2-VPC] Allows an Elastic IP address that is already associated with
  an instance or network interface to be re-associated with the specified instance
  or network interface. Otherwise, the operation fails. Default:  `false` \n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:association_id` - (String)"
:associate_dhcp_options: "Calls the AssociateDhcpOptions API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:dhcp_options_id` - *required* - (String)
  The ID of the DHCP options set, or default to associate no DHCP options with the
  VPC.\n  * `:vpc_id` - *required* - (String) The ID of the VPC.\n@return [Core::Response]"
:associate_route_table: "Calls the AssociateRouteTable API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:subnet_id` - *required* - (String) The
  ID of the subnet.\n  * `:route_table_id` - *required* - (String) The ID of the route
  table.\n@return [Core::Response] The `#data` method of the response object returns
  a hash with the following structure:\n\n  * `:association_id` - (String)"
:attach_internet_gateway: "Calls the AttachInternetGateway API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:internet_gateway_id` - *required*
  - (String) The ID of the Internet gateway.\n  * `:vpc_id` - *required* - (String)
  The ID of the VPC.\n@return [Core::Response]"
:attach_network_interface: "Calls the AttachNetworkInterface API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:network_interface_id` - *required*
  - (String) The ID of the network interface.\n  * `:instance_id` - *required* - (String)
  The ID of the instance.\n  * `:device_index` - *required* - (Integer) The index
  of the device for the network interface attachment.\n@return [Core::Response] The
  `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:attachment_id` - (String)"
:attach_volume: "Calls the AttachVolume API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:volume_id` - *required* - (String) The ID of the
  Amazon EBS volume. The volume and instance must be within the same Availability
  Zone.\n  * `:instance_id` - *required* - (String) The ID of the instance.\n  * `:device`
  - *required* - (String) The device name to expose to the instance (for example,
  /dev/sdh or xvdh).\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:volume_id` - (String)\n
  \ * `:instance_id` - (String)\n  * `:device` - (String)\n  * `:status` - (String)\n
  \ * `:attach_time` - (Time)\n  * `:delete_on_termination` - (Boolean)"
:attach_vpn_gateway: "Calls the AttachVpnGateway API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:vpn_gateway_id` - *required* - (String) The ID
  of the virtual private gateway.\n  * `:vpc_id` - *required* - (String) The ID of
  the VPC.\n@return [Core::Response] The `#data` method of the response object returns
  a hash with the following structure:\n\n  * `:attachment` - (Hash)\n    * `:vpc_id`
  - (String)\n    * `:state` - (String)"
:authorize_security_group_egress: "Calls the AuthorizeSecurityGroupEgress API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:group_id` - *required* - (String)
  The ID of the security group.\n  * `:source_security_group_name` - (String) [EC2-Classic,
  default VPC] The name of the destination security group. You can't specify a destination
  security group and a CIDR IP address range.\n  * `:source_security_group_owner_id`
  - (String) The ID of the destination security group. You can't specify a destination
  security group and a CIDR IP address range.\n  * `:ip_protocol` - (String) The IP
  protocol name (tcp, udp, icmp) or number (see Protocol Numbers). Use -1 to specify
  all.\n  * `:from_port` - (Integer) The start of port range for the TCP and UDP protocols,
  or an ICMP type number. For the ICMP type number, use -1 to specify all ICMP types.\n
  \ * `:to_port` - (Integer) The end of port range for the TCP and UDP protocols,
  or an ICMP code number. For the ICMP code number, use -1 to specify all ICMP codes
  for the ICMP type.\n  * `:cidr_ip` - (String) The CIDR IP address range. You can't
  specify this parameter when specifying a source security group.\n  * `:ip_permissions`
  - (Array&lt;<Hash>) A set of IP permissions. You can't specify a destination security
  group and a CIDR IP address range.\n    * `:ip_protocol` - (String) The protocol.
  When you call DescribeSecurityGroups, the protocol value returned is the number.
  Exception: For TCP, UDP, and ICMP, the value returned is the name (for example,
  tcp, udp, or icmp). For a list of protocol numbers, see Protocol Numbers.\n    *
  `:from_port` - (Integer) The start of port range for the TCP and UDP protocols,
  or an ICMP type number. A value of -1 indicates all ICMP types.\n    * `:to_port`
  - (Integer) The end of port range for the TCP and UDP protocols, or an ICMP code.
  A value of -1 indicates all ICMP codes for the specified ICMP type.\n    * `:user_id_group_pairs`
  - (Array&lt;<Hash>) One or more security group and AWS account ID pairs.\n      *
  `:user_id` - (String) The ID of an AWS account.\n      * `:group_name` - (String)
  The ID of the security group owned by the specified AWS account.\n      * `:group_id`
  - (String) The name of the security group in the specified AWS account.\n    * `:ip_ranges`
  - (Array&lt;<Hash>) One or more IP ranges.\n      * `:cidr_ip` - (String) The CIDR
  range. You can either specify a CIDR range or a source security group, not both.\n@return
  [Core::Response]"
:authorize_security_group_ingress: "Calls the AuthorizeSecurityGroupIngress API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:group_name` - (String) [EC2-Classic,
  default VPC] The name of the security group.\n  * `:group_id` - (String) The ID
  of the security group.\n  * `:source_security_group_name` - (String) [EC2-Classic,
  default VPC] The name of the source security group. You can't specify a source security
  group and a CIDR IP address range.\n  * `:source_security_group_owner_id` - (String)
  The ID of the source security group. You can't specify a source security group and
  a CIDR IP address range.\n  * `:ip_protocol` - (String) The IP protocol name (tcp,
  udp, icmp) or number (see Protocol Numbers). Use -1 to specify all.\n  * `:from_port`
  - (Integer) The start of port range for the TCP and UDP protocols, or an ICMP type
  number. For the ICMP type number, use -1 to specify all ICMP types.\n  * `:to_port`
  - (Integer) The end of port range for the TCP and UDP protocols, or an ICMP code
  number. For the ICMP code number, use -1 to specify all ICMP codes for the ICMP
  type.\n  * `:cidr_ip` - (String) The CIDR IP address range. You can't specify this
  parameter when specifying a source security group.\n  * `:ip_permissions` - (Array&lt;<Hash>)
  A set of IP permissions. You can't specify a source security group and a CIDR IP
  address range.\n    * `:ip_protocol` - (String) The protocol. When you call DescribeSecurityGroups,
  the protocol value returned is the number. Exception: For TCP, UDP, and ICMP, the
  value returned is the name (for example, tcp, udp, or icmp). For a list of protocol
  numbers, see Protocol Numbers.\n    * `:from_port` - (Integer) The start of port
  range for the TCP and UDP protocols, or an ICMP type number. A value of -1 indicates
  all ICMP types.\n    * `:to_port` - (Integer) The end of port range for the TCP
  and UDP protocols, or an ICMP code. A value of -1 indicates all ICMP codes for the
  specified ICMP type.\n    * `:user_id_group_pairs` - (Array&lt;<Hash>) One or more
  security group and AWS account ID pairs.\n      * `:user_id` - (String) The ID of
  an AWS account.\n      * `:group_name` - (String) The ID of the security group owned
  by the specified AWS account.\n      * `:group_id` - (String) The name of the security
  group in the specified AWS account.\n    * `:ip_ranges` - (Array&lt;<Hash>) One
  or more IP ranges.\n      * `:cidr_ip` - (String) The CIDR range. You can either
  specify a CIDR range or a source security group, not both.\n@return [Core::Response]"
:bundle_instance: "Calls the BundleInstance API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:instance_id` - *required* - (String) The ID of
  the instance to bundle.\n  * `:storage` - *required* - (Hash) The bucket in which
  to store the AMI. You can specify a bucket that you already own or a new bucket
  that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to
  someone else, Amazon EC2 returns an error.\n    * `:s3` - (Hash) An Amazon S3 storage
  location.\n      * `:bucket` - (String) The bucket in which to store the AMI. You
  can specify a bucket that you already own or a new bucket that Amazon EC2 creates
  on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2
  returns an error.\n      * `:prefix` - (String) The beginning of the file name of
  the AMI.\n      * `:aws_access_key_id` - (String) The access key ID of the owner
  of the bucket. Before you specify a value for your access key ID, review and follow
  the guidance in Best Practices for Managing AWS Access Keys.\n      * `:upload_policy`
  - (String) A Base64-encoded Amazon S3 upload policy that gives Amazon EC2 permission
  to upload items into Amazon S3 on your behalf.\n      * `:upload_policy_signature`
  - (String) The signature of the Base64 encoded JSON document.\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:bundle_instance_task` - (Hash)\n    * `:instance_id` - (String)\n    * `:bundle_id`
  - (String)\n    * `:state` - (String)\n    * `:start_time` - (Time)\n    * `:update_time`
  - (Time)\n    * `:storage` - (Hash)\n      * `:s3` - (Hash)\n        * `:bucket`
  - (String)\n        * `:prefix` - (String)\n        * `:aws_access_key_id` - (String)\n
  \       * `:upload_policy` - (String)\n        * `:upload_policy_signature` - (String)\n
  \   * `:progress` - (String)\n    * `:error` - (Hash)\n      * `:code` - (String)\n
  \     * `:message` - (String)"
:cancel_bundle_task: "Calls the CancelBundleTask API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:bundle_id` - *required* - (String) The ID of
  the bundle task.\n@return [Core::Response] The `#data` method of the response object
  returns a hash with the following structure:\n\n  * `:bundle_instance_task` - (Hash)\n
  \   * `:instance_id` - (String)\n    * `:bundle_id` - (String)\n    * `:state` -
  (String)\n    * `:start_time` - (Time)\n    * `:update_time` - (Time)\n    * `:storage`
  - (Hash)\n      * `:s3` - (Hash)\n        * `:bucket` - (String)\n        * `:prefix`
  - (String)\n        * `:aws_access_key_id` - (String)\n        * `:upload_policy`
  - (String)\n        * `:upload_policy_signature` - (String)\n    * `:progress` -
  (String)\n    * `:error` - (Hash)\n      * `:code` - (String)\n      * `:message`
  - (String)"
:cancel_conversion_task: "Calls the CancelConversionTask API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:conversion_task_id` - *required* - (String)
  The ID of the conversion task.\n  * `:reason_message` - (String) \n@return [Core::Response]"
:cancel_export_task: |-
  Calls the CancelExportTask API operation.
  @param [Hash] options
    * `:export_task_id` - *required* - (String) The ID of the export task. This is the ID returned by CreateInstanceExportTask.
  @return [Core::Response]
:cancel_reserved_instances_listing: |-
  Calls the CancelReservedInstancesListing API operation.
  @param [Hash] options
    * `:reserved_instances_listing_id` - *required* - (String) The ID of the Reserved Instance listing.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:reserved_instances_listings_set` - (Array<Hash>)
      * `:reserved_instances_listing_id` - (String)
      * `:reserved_instances_id` - (String)
      * `:create_date` - (Time)
      * `:update_date` - (Time)
      * `:status` - (String)
      * `:status_message` - (String)
      * `:instance_counts` - (Array<Hash>)
        * `:state` - (String)
        * `:instance_count` - (Integer)
      * `:price_schedules` - (Array<Hash>)
        * `:term` - (Integer)
        * `:price` - (Numeric)
        * `:currency_code` - (String)
        * `:active` - (Boolean)
      * `:tag_set` - (Array<Hash>)
        * `:key` - (String)
        * `:value` - (String)
      * `:client_token` - (String)
:cancel_spot_instance_requests: "Calls the CancelSpotInstanceRequests API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:spot_instance_request_ids` -
  *required* - (Array&lt;<String>) One or more Spot Instance request IDs.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:spot_instance_request_set` - (Array<Hash>)\n    *
  `:spot_instance_request_id` - (String)\n    * `:state` - (String)"
:confirm_product_instance: "Calls the ConfirmProductInstance API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:product_code` - *required* -
  (String) The product code. This must be a product code that you own.\n  * `:instance_id`
  - *required* - (String) The ID of the instance.\n@return [Core::Response] The `#data`
  method of the response object returns a hash with the following structure:\n\n  *
  `:owner_id` - (String)"
:copy_image: "Calls the CopyImage API operation.\n@param [Hash] options\n  * `:dry_run`
  - (Boolean) \n  * `:source_region` - *required* - (String) The name of the region
  that contains the AMI to copy.\n  * `:source_image_id` - *required* - (String) The
  ID of the AMI to copy.\n  * `:name` - *required* - (String) The name of the new
  AMI in the destination region.\n  * `:description` - (String) A description for
  the new AMI in the destination region.\n  * `:client_token` - (String) Unique, case-sensitive
  identifier you provide to ensure idempotency of the request. For more information,
  see How to Ensure Idempotency in the Amazon Elastic Compute Cloud User Guide.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:image_id` - (String)"
:copy_snapshot: "Calls the CopySnapshot API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:source_region` - *required* - (String) The ID of
  the region that contains the snapshot to be copied.\n  * `:source_snapshot_id` -
  *required* - (String) The ID of the Amazon EBS snapshot to copy.\n  * `:description`
  - (String) A description for the new Amazon EBS snapshot.\n  * `:destination_region`
  - (String) The destination region of the snapshot copy operation. This parameter
  is required in the PresignedUrl.\n  * `:presigned_url` - (String) The pre-signed
  URL that facilitates copying an encrypted snapshot. This parameter is only required
  when copying an encrypted snapshot with the Amazon EC2 Query API; it is available
  as an optional parameter in all other cases. The PresignedUrl should use the snapshot
  source endpoint, the CopySnapshot action, and include the SourceRegion, SourceSnapshotId,
  and DestinationRegion parameters. The PresignedUrl must be signed using AWS Signature
  Version 4. Because Amazon EBS snapshots are stored in Amazon S3, the signing algorithm
  for this parameter uses the same logic that is described in Authenticating Requests
  by Using Query Parameters (AWS Signature Version 4) in the Amazon Simple Storage
  Service API Reference. An invalid or improperly signed PresignedUrl will cause the
  copy operation to fail asynchronously, and the snapshot will move to an error state.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:snapshot_id` - (String)"
:create_customer_gateway: "Calls the CreateCustomerGateway API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:type` - *required* - (String)
  The type of VPN connection that this customer gateway supports (ipsec.1).  Valid
  values include:\n    * `ipsec.1`\n  * `:public_ip` - *required* - (String) The Internet-routable
  IP address for the customer gateway's outside interface. The address must be static.\n
  \ * `:bgp_asn` - *required* - (Integer) For devices that support BGP, the customer
  gateway's BGP ASN. Default: 65000\n@return [Core::Response] The `#data` method of
  the response object returns a hash with the following structure:\n\n  * `:customer_gateway`
  - (Hash)\n    * `:customer_gateway_id` - (String)\n    * `:state` - (String)\n    *
  `:type` - (String)\n    * `:ip_address` - (String)\n    * `:bgp_asn` - (String)\n
  \   * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` -
  (String)"
:create_dhcp_options: "Calls the CreateDhcpOptions API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:dhcp_configurations` - *required* - (Array&lt;<Hash>)
  A DHCP configuration option.\n    * `:key` - (String) The name of a DHCP option.\n
  \   * `:values` - (Array&lt;<String>) One or more values for the DHCP option.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:dhcp_options` - (Hash)\n    * `:dhcp_options_id` -
  (String)\n    * `:dhcp_configuration_set` - (Array<Hash>)\n      * `:key` - (String)\n
  \     * `:value_set` - (Array<String>)\n    * `:tag_set` - (Array<Hash>)\n      *
  `:key` - (String)\n      * `:value` - (String)"
:create_image: "Calls the CreateImage API operation.\n@param [Hash] options\n  * `:dry_run`
  - (Boolean) \n  * `:instance_id` - *required* - (String) The ID of the instance.\n
  \ * `:name` - *required* - (String) A name for the new image. Constraints: 3-128
  alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods
  (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)\n
  \ * `:description` - (String) A description for the new image.\n  * `:no_reboot`
  - (Boolean) By default, this parameter is set to  `false` , which means Amazon EC2
  attempts to shut down the instance cleanly before image creation and then reboots
  the instance. When the parameter is set to  `true` , Amazon EC2 doesn't shut down
  the instance before creating the image. When this option is used, file system integrity
  on the created image can't be guaranteed.\n  * `:block_device_mappings` - (Array&lt;<Hash>)
  Information about one or more block device mappings.\n    * `:virtual_name` - (String)
  The virtual device name (ephemeral[0..3]). The number of available instance store
  volumes depends on the instance type. After you connect to the instance, you must
  mount the volume. Constraints: For M3 instances, you must specify instance store
  volumes in the block device mapping for the instance. When you launch an M3 instance,
  we ignore any instance store volumes specified in the block device mapping for the
  AMI.\n    * `:device_name` - (String) The device name exposed to the instance (for
  example, /dev/sdh).\n    * `:ebs` - (Hash) Parameters used to automatically set
  up Amazon EBS volumes when the instance is launched.\n      * `:snapshot_id` - (String)
  The ID of the snapshot.\n      * `:volume_size` - (Integer) The size of the volume,
  in GiB. Constraints: If the volume type is io1, the minimum size of the volume is
  10 GiB; otherwise, the minimum size is 1 GiB. The maximum volume size is 1024 GiB.
  If you specify a snapshot, the volume size must be equal to or larger than the snapshot
  size. Default: If you're creating the volume from a snapshot and don't specify a
  volume size, the default is the snapshot size.\n      * `:delete_on_termination`
  - (Boolean) Indicates whether the Amazon EBS volume is deleted on instance termination.\n
  \     * `:volume_type` - (String) The volume type. gp2 for General Purpose (SSD)
  volumes, io1 for Provisioned IOPS (SSD) volumes, and standard for Magnetic volumes.
  Default: standard  Valid values include:\n        * `standard`\n        * `io1`\n
  \       * `gp2`\n      * `:iops` - (Integer) The number of I/O operations per second
  (IOPS) that the volume supports. For Provisioned IOPS (SSD) volumes, this represents
  the number of IOPS that are provisioned for the volume. For General Purpose (SSD)
  volumes, this represents the baseline performance of the volume and the rate at
  which the volume accumulates I/O credits for bursting. For more information on General
  Purpose (SSD) baseline performance, I/O credits, and bursting, see Amazon EBS Volume
  Types in the Amazon Elastic Compute Cloud User Guide. Constraint: Range is 100 to
  4000 for Provisioned IOPS (SSD) volumes and 3 to 3072 for General Purpose (SSD)
  volumes. Condition: This parameter is required for requests to create io1 volumes;
  it is not used in requests to create standard or gp2 volumes.\n      * `:encrypted`
  - (Boolean) Indicates whether the Amazon EBS volume is encrypted. Encrypted Amazon
  EBS volumes may only be attached to instances that support Amazon EBS encryption.\n
  \   * `:no_device` - (String) Suppresses the specified device included in the block
  device mapping of the AMI.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:image_id` - (String)"
:create_instance_export_task: "Calls the CreateInstanceExportTask API operation.\n@param
  [Hash] options\n  * `:description` - (String) A description for the conversion task
  or the resource being exported. The maximum length is 255 bytes.\n  * `:instance_id`
  - *required* - (String) The ID of the instance.\n  * `:target_environment` - (String)
  The target virtualization environment.  Valid values include:\n    * `citrix`\n
  \   * `vmware`\n    * `microsoft`\n  * `:export_to_s3_task` - (Hash) \n    * `:disk_image_format`
  - (String) Valid values include:\n      * `VMDK`\n      * `RAW`\n      * `VHD`\n
  \   * `:container_format` - (String) Valid values include:\n      * `ova`\n    *
  `:s3_bucket` - (String) \n    * `:s3_prefix` - (String) The image is written to
  a single object in the Amazon S3 bucket at the S3 key s3prefix + exportTaskId +
  '.' + diskImageFormat.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:export_task` - (Hash)\n
  \   * `:export_task_id` - (String)\n    * `:description` - (String)\n    * `:state`
  - (String)\n    * `:status_message` - (String)\n    * `:instance_export` - (Hash)\n
  \     * `:instance_id` - (String)\n      * `:target_environment` - (String)\n    *
  `:export_to_s3` - (Hash)\n      * `:disk_image_format` - (String)\n      * `:container_format`
  - (String)\n      * `:s3_bucket` - (String)\n      * `:s3_key` - (String)"
:create_internet_gateway: "Calls the CreateInternetGateway API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n@return [Core::Response] The `#data`
  method of the response object returns a hash with the following structure:\n\n  *
  `:internet_gateway` - (Hash)\n    * `:internet_gateway_id` - (String)\n    * `:attachment_set`
  - (Array<Hash>)\n      * `:vpc_id` - (String)\n      * `:state` - (String)\n    *
  `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` - (String)"
:create_key_pair: "Calls the CreateKeyPair API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:key_name` - *required* - (String) A unique name
  for the key pair. Constraints: Up to 255 ASCII characters\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:key_pair` - (Hash)\n    * `:key_name` - (String)\n    * `:key_fingerprint`
  - (String)\n    * `:key_material` - (String)"
:create_network_acl: "Calls the CreateNetworkAcl API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:vpc_id` - *required* - (String) The ID of the
  VPC.\n@return [Core::Response] The `#data` method of the response object returns
  a hash with the following structure:\n\n  * `:network_acl` - (Hash)\n    * `:network_acl_id`
  - (String)\n    * `:vpc_id` - (String)\n    * `:default` - (Boolean)\n    * `:entry_set`
  - (Array<Hash>)\n      * `:rule_number` - (Integer)\n      * `:protocol` - (String)\n
  \     * `:rule_action` - (String)\n      * `:egress` - (Boolean)\n      * `:cidr_block`
  - (String)\n      * `:icmp_type_code` - (Hash)\n        * `:type` - (Integer)\n
  \       * `:code` - (Integer)\n      * `:port_range` - (Hash)\n        * `:from`
  - (Integer)\n        * `:to` - (Integer)\n    * `:association_set` - (Array<Hash>)\n
  \     * `:network_acl_association_id` - (String)\n      * `:network_acl_id` - (String)\n
  \     * `:subnet_id` - (String)\n    * `:tag_set` - (Array<Hash>)\n      * `:key`
  - (String)\n      * `:value` - (String)"
:create_network_acl_entry: "Calls the CreateNetworkAclEntry API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:network_acl_id` - *required*
  - (String) The ID of the network ACL.\n  * `:rule_number` - *required* - (Integer)
  The rule number for the entry (for example, 100). ACL entries are processed in ascending
  order by rule number. Constraints: Positive integer from 1 to 32766\n  * `:protocol`
  - *required* - (String) The protocol. A value of -1 means all protocols.\n  * `:rule_action`
  - *required* - (String) Indicates whether to allow or deny the traffic that matches
  the rule.  Valid values include:\n    * `allow`\n    * `deny`\n  * `:egress` - *required*
  - (Boolean) Indicates whether this is an egress rule (rule is applied to traffic
  leaving the subnet).\n  * `:cidr_block` - *required* - (String) The network range
  to allow or deny, in CIDR notation (for example 172.16.0.0/24).\n  * `:icmp_type_code`
  - (Hash) ICMP protocol: The ICMP type and code. Required if specifying ICMP for
  the protocol.\n    * `:type` - (Integer) The ICMP code. A value of -1 means all
  codes for the specified ICMP type.\n    * `:code` - (Integer) The ICMP type. A value
  of -1 means all types.\n  * `:port_range` - (Hash) TCP or UDP protocols: The range
  of ports the rule applies to.\n    * `:from` - (Integer) The first port in the range.\n
  \   * `:to` - (Integer) The last port in the range.\n@return [Core::Response]"
:create_network_interface: "Calls the CreateNetworkInterface API operation.\n@param
  [Hash] options\n  * `:subnet_id` - *required* - (String) The ID of the subnet to
  associate with the network interface.\n  * `:description` - (String) A description
  for the network interface.\n  * `:private_ip_address` - (String) The primary private
  IP address of the network interface. If you don't specify an IP address, Amazon
  EC2 selects one for you from the subnet range. If you specify an IP address, you
  cannot indicate any IP addresses specified in privateIpAddresses as primary (only
  one IP address can be designated as primary).\n  * `:groups` - (Array&lt;<String>)
  The IDs of one or more security groups.\n  * `:private_ip_addresses` - (Array&lt;<Hash>)
  One or more private IP addresses.\n    * `:private_ip_address` - *required* - (String)
  The private IP addresses.\n    * `:primary` - (Boolean) Indicates whether the private
  IP address is the primary private IP address. Only one IP address can be designated
  as primary.\n  * `:secondary_private_ip_address_count` - (Integer) The number of
  secondary private IP addresses to assign to a network interface. When you specify
  a number of secondary IP addresses, Amazon EC2 selects these IP addresses within
  the subnet range. You can't specify this option and specify more than one private
  IP address using privateIpAddresses. The number of IP addresses you can assign to
  a network interface varies by instance type. For more information, see Private IP
  Addresses Per ENI Per Instance Type in the Amazon Elastic Compute Cloud User Guide.\n
  \ * `:dry_run` - (Boolean) \n@return [Core::Response] The `#data` method of the
  response object returns a hash with the following structure:\n\n  * `:network_interface`
  - (Hash)\n    * `:network_interface_id` - (String)\n    * `:subnet_id` - (String)\n
  \   * `:vpc_id` - (String)\n    * `:availability_zone` - (String)\n    * `:description`
  - (String)\n    * `:owner_id` - (String)\n    * `:requester_id` - (String)\n    *
  `:requester_managed` - (Boolean)\n    * `:status` - (String)\n    * `:mac_address`
  - (String)\n    * `:private_ip_address` - (String)\n    * `:private_dns_name` -
  (String)\n    * `:source_dest_check` - (Boolean)\n    * `:group_set` - (Array<Hash>)\n
  \     * `:group_name` - (String)\n      * `:group_id` - (String)\n    * `:attachment`
  - (Hash)\n      * `:attachment_id` - (String)\n      * `:instance_id` - (String)\n
  \     * `:instance_owner_id` - (String)\n      * `:device_index` - (Integer)\n      *
  `:status` - (String)\n      * `:attach_time` - (Time)\n      * `:delete_on_termination`
  - (Boolean)\n    * `:association` - (Hash)\n      * `:public_ip` - (String)\n      *
  `:public_dns_name` - (String)\n      * `:ip_owner_id` - (String)\n      * `:allocation_id`
  - (String)\n      * `:association_id` - (String)\n    * `:tag_set` - (Array<Hash>)\n
  \     * `:key` - (String)\n      * `:value` - (String)\n    * `:private_ip_addresses_set`
  - (Array<Hash>)\n      * `:private_ip_address` - (String)\n      * `:private_dns_name`
  - (String)\n      * `:primary` - (Boolean)\n      * `:association` - (Hash)\n        *
  `:public_ip` - (String)\n        * `:public_dns_name` - (String)\n        * `:ip_owner_id`
  - (String)\n        * `:allocation_id` - (String)\n        * `:association_id` -
  (String)"
:create_placement_group: "Calls the CreatePlacementGroup API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:group_name` - *required* - (String)
  A name for the placement group. Constraints: Up to 255 ASCII characters\n  * `:strategy`
  - *required* - (String) The placement strategy.  Valid values include:\n    * `cluster`\n@return
  [Core::Response]"
:create_reserved_instances_listing: |-
  Calls the CreateReservedInstancesListing API operation.
  @param [Hash] options
    * `:reserved_instances_id` - *required* - (String) The ID of the active Reserved Instance.
    * `:instance_count` - *required* - (Integer) The number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.
    * `:price_schedules` - *required* - (Array&lt;<Hash>) A list specifying the price of the Reserved Instance for each month remaining in the Reserved Instance term.
      * `:term` - (Integer) The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.
      * `:price` - (Float) The fixed price for the term.
      * `:currency_code` - (String) The currency for transacting the Reserved Instance resale. At this time, the only supported currency is USD.  Valid values include:
        * `USD`
    * `:client_token` - *required* - (String) Unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see Ensuring Idempotency in the Amazon Elastic Compute Cloud User Guide for Linux.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:reserved_instances_listings_set` - (Array<Hash>)
      * `:reserved_instances_listing_id` - (String)
      * `:reserved_instances_id` - (String)
      * `:create_date` - (Time)
      * `:update_date` - (Time)
      * `:status` - (String)
      * `:status_message` - (String)
      * `:instance_counts` - (Array<Hash>)
        * `:state` - (String)
        * `:instance_count` - (Integer)
      * `:price_schedules` - (Array<Hash>)
        * `:term` - (Integer)
        * `:price` - (Numeric)
        * `:currency_code` - (String)
        * `:active` - (Boolean)
      * `:tag_set` - (Array<Hash>)
        * `:key` - (String)
        * `:value` - (String)
      * `:client_token` - (String)
:create_route: "Calls the CreateRoute API operation.\n@param [Hash] options\n  * `:dry_run`
  - (Boolean) \n  * `:route_table_id` - *required* - (String) The ID of the route
  table for the route.\n  * `:destination_cidr_block` - *required* - (String) The
  CIDR address block used for the destination match. Routing decisions are based on
  the most specific match.\n  * `:gateway_id` - (String) The ID of an Internet gateway
  or virtual private gateway attached to your VPC.\n  * `:instance_id` - (String)
  The ID of a NAT instance in your VPC. The operation fails if you specify an instance
  ID unless exactly one network interface is attached.\n  * `:network_interface_id`
  - (String) The ID of a network interface.\n  * `:vpc_peering_connection_id` - (String)
  The ID of a VPC peering connection.\n@return [Core::Response]"
:create_route_table: "Calls the CreateRouteTable API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:vpc_id` - *required* - (String) The ID of the
  VPC.\n@return [Core::Response] The `#data` method of the response object returns
  a hash with the following structure:\n\n  * `:route_table` - (Hash)\n    * `:route_table_id`
  - (String)\n    * `:vpc_id` - (String)\n    * `:route_set` - (Array<Hash>)\n      *
  `:destination_cidr_block` - (String)\n      * `:gateway_id` - (String)\n      *
  `:instance_id` - (String)\n      * `:instance_owner_id` - (String)\n      * `:network_interface_id`
  - (String)\n      * `:vpc_peering_connection_id` - (String)\n      * `:state` -
  (String)\n      * `:origin` - (String)\n    * `:association_set` - (Array<Hash>)\n
  \     * `:route_table_association_id` - (String)\n      * `:route_table_id` - (String)\n
  \     * `:subnet_id` - (String)\n      * `:main` - (Boolean)\n    * `:tag_set` -
  (Array<Hash>)\n      * `:key` - (String)\n      * `:value` - (String)\n    * `:propagating_vgw_set`
  - (Array<Hash>)\n      * `:gateway_id` - (String)"
:create_security_group: "Calls the CreateSecurityGroup API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:group_name` - *required* - (String)
  The name of the security group. Constraints: Up to 255 characters in length Constraints
  for EC2-Classic: ASCII characters Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces,
  and ._-:/()#,@[]+=&amp;;{}!$*\n  * `:description` - *required* - (String) A description
  for the security group. This is informational only. Constraints: Up to 255 characters
  in length Constraints for EC2-Classic: ASCII characters Constraints for EC2-VPC:
  a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*\n  * `:vpc_id` - (String) [EC2-VPC]
  The ID of the VPC. Required for EC2-VPC.\n@return [Core::Response] The `#data` method
  of the response object returns a hash with the following structure:\n\n  * `:group_id`
  - (String)"
:create_snapshot: "Calls the CreateSnapshot API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:volume_id` - *required* - (String) The ID of
  the Amazon EBS volume.\n  * `:description` - (String) A description for the snapshot.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:snapshot_id` - (String)\n  * `:volume_id` - (String)\n
  \ * `:status` - (String)\n  * `:start_time` - (Time)\n  * `:progress` - (String)\n
  \ * `:owner_id` - (String)\n  * `:description` - (String)\n  * `:volume_size` -
  (Integer)\n  * `:owner_alias` - (String)\n  * `:tag_set` - (Array<Hash>)\n    *
  `:key` - (String)\n    * `:value` - (String)\n  * `:encrypted` - (Boolean)"
:create_spot_datafeed_subscription: "Calls the CreateSpotDatafeedSubscription API
  operation.\n@param [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:bucket` -
  *required* - (String) The Amazon S3 bucket in which to store the Spot Instance datafeed.
  Constraints: Must be a valid bucket associated with your AWS account.\n  * `:prefix`
  - (String) A prefix for the datafeed file names.\n@return [Core::Response] The `#data`
  method of the response object returns a hash with the following structure:\n\n  *
  `:spot_datafeed_subscription` - (Hash)\n    * `:owner_id` - (String)\n    * `:bucket`
  - (String)\n    * `:prefix` - (String)\n    * `:state` - (String)\n    * `:fault`
  - (Hash)\n      * `:code` - (String)\n      * `:message` - (String)"
:create_subnet: "Calls the CreateSubnet API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:vpc_id` - *required* - (String) The ID of the VPC.\n
  \ * `:cidr_block` - *required* - (String) The network range for the subnet, in CIDR
  notation. For example, 10.0.0.0/24.\n  * `:availability_zone` - (String) The Availability
  Zone for the subnet. Default: Amazon EC2 selects one for you (recommended).\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:subnet` - (Hash)\n    * `:subnet_id` - (String)\n
  \   * `:state` - (String)\n    * `:vpc_id` - (String)\n    * `:cidr_block` - (String)\n
  \   * `:available_ip_address_count` - (Integer)\n    * `:availability_zone` - (String)\n
  \   * `:default_for_az` - (Boolean)\n    * `:map_public_ip_on_launch` - (Boolean)\n
  \   * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` -
  (String)"
:create_tags: "Calls the CreateTags API operation.\n@param [Hash] options\n  * `:dry_run`
  - (Boolean) \n  * `:resources` - *required* - (Array&lt;<String>) The IDs of one
  or more resources to tag. For example, ami-1a2b3c4d.\n  * `:tags` - *required* -
  (Array&lt;<Hash>) One or more tags. The value parameter is required, but if you
  don't want the tag to have a value, specify the parameter with no value, and we
  set the value to an empty string.\n    * `:key` - (String) The key of the tag. Constraints:
  Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May
  not begin with aws:\n    * `:value` - (String) The value of the tag. Constraints:
  Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\n@return
  [Core::Response]"
:create_volume: "Calls the CreateVolume API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:size` - (Integer) The size of the volume, in GiBs.
  Constraints: If the volume type is io1, the minimum size of the volume is 10 GiB.
  Default: If you're creating the volume from a snapshot and don't specify a volume
  size, the default is the snapshot size.\n  * `:snapshot_id` - (String) The snapshot
  from which to create the volume.\n  * `:availability_zone` - *required* - (String)
  The Availability Zone in which to create the volume. Use DescribeAvailabilityZones
  to list the Availability Zones that are currently available to you.\n  * `:volume_type`
  - (String) The volume type. This can be gp2 for General Purpose (SSD) volumes, io1
  for Provisioned IOPS (SSD) volumes, or standard for Magnetic volumes. Default: standard
  \ Valid values include:\n    * `standard`\n    * `io1`\n    * `gp2`\n  * `:iops`
  - (Integer) Only valid for Provisioned IOPS (SSD) volumes. The number of I/O operations
  per second (IOPS) to provision for the volume.\n  * `:encrypted` - (Boolean) Specifies
  whether the volume should be encrypted.\n@return [Core::Response] The `#data` method
  of the response object returns a hash with the following structure:\n\n  * `:volume_id`
  - (String)\n  * `:size` - (Integer)\n  * `:snapshot_id` - (String)\n  * `:availability_zone`
  - (String)\n  * `:status` - (String)\n  * `:create_time` - (Time)\n  * `:attachment_set`
  - (Array<Hash>)\n    * `:volume_id` - (String)\n    * `:instance_id` - (String)\n
  \   * `:device` - (String)\n    * `:status` - (String)\n    * `:attach_time` - (Time)\n
  \   * `:delete_on_termination` - (Boolean)\n  * `:tag_set` - (Array<Hash>)\n    *
  `:key` - (String)\n    * `:value` - (String)\n  * `:volume_type` - (String)\n  *
  `:iops` - (Integer)\n  * `:encrypted` - (Boolean)"
:create_vpc: "Calls the CreateVpc API operation.\n@param [Hash] options\n  * `:dry_run`
  - (Boolean) \n  * `:cidr_block` - *required* - (String) The network range for the
  VPC, in CIDR notation. For example, 10.0.0.0/16.\n  * `:instance_tenancy` - (String)
  The supported tenancy options for instances launched into the VPC. A value of default
  means that instances can be launched with any tenancy; a value of dedicated means
  all instances launched into the VPC are launched as dedicated tenancy instances
  regardless of the tenancy assigned to the instance at launch. Dedicated tenancy
  instances run on single-tenant hardware. Default: default  Valid values include:\n
  \   * `default`\n    * `dedicated`\n@return [Core::Response] The `#data` method
  of the response object returns a hash with the following structure:\n\n  * `:vpc`
  - (Hash)\n    * `:vpc_id` - (String)\n    * `:state` - (String)\n    * `:cidr_block`
  - (String)\n    * `:dhcp_options_id` - (String)\n    * `:tag_set` - (Array<Hash>)\n
  \     * `:key` - (String)\n      * `:value` - (String)\n    * `:instance_tenancy`
  - (String)\n    * `:is_default` - (Boolean)"
:create_vpc_peering_connection: "Calls the CreateVpcPeeringConnection API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:vpc_id` - (String) The ID of
  the requester VPC.\n  * `:peer_vpc_id` - (String) The ID of the VPC with which you
  are creating the VPC peering connection.\n  * `:peer_owner_id` - (String) The AWS
  account ID of the owner of the peer VPC. Default: Your AWS account ID\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:vpc_peering_connection` - (Hash)\n    * `:accepter_vpc_info` - (Hash)\n      *
  `:cidr_block` - (String)\n      * `:owner_id` - (String)\n      * `:vpc_id` - (String)\n
  \   * `:expiration_time` - (Time)\n    * `:requester_vpc_info` - (Hash)\n      *
  `:cidr_block` - (String)\n      * `:owner_id` - (String)\n      * `:vpc_id` - (String)\n
  \   * `:status` - (Hash)\n      * `:code` - (String)\n      * `:message` - (String)\n
  \   * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` -
  (String)\n    * `:vpc_peering_connection_id` - (String)"
:create_vpn_connection: "Calls the CreateVpnConnection API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:type` - *required* - (String) The type
  of VPN connection (ipsec.1).\n  * `:customer_gateway_id` - *required* - (String)
  The ID of the customer gateway.\n  * `:vpn_gateway_id` - *required* - (String) The
  ID of the virtual private gateway.\n  * `:options` - (Hash) Indicates whether the
  VPN connection requires static routes. If you are creating a VPN connection for
  a device that does not support BGP, you must specify  `true` . Default:  `false`
  \n    * `:static_routes_only` - (Boolean) Indicates whether the VPN connection uses
  static routes only. Static routes must be used for devices that don't support BGP.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:vpn_connection` - (Hash)\n    * `:vpn_connection_id`
  - (String)\n    * `:state` - (String)\n    * `:customer_gateway_configuration` -
  (String)\n    * `:type` - (String)\n    * `:customer_gateway_id` - (String)\n    *
  `:vpn_gateway_id` - (String)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` -
  (String)\n      * `:value` - (String)\n    * `:vgw_telemetry` - (Array<Hash>)\n
  \     * `:outside_ip_address` - (String)\n      * `:status` - (String)\n      *
  `:last_status_change` - (Time)\n      * `:status_message` - (String)\n      * `:accepted_route_count`
  - (Integer)\n    * `:options` - (Hash)\n      * `:static_routes_only` - (Boolean)\n
  \   * `:routes` - (Array<Hash>)\n      * `:destination_cidr_block` - (String)\n
  \     * `:source` - (String)\n      * `:state` - (String)"
:create_vpn_connection_route: |-
  Calls the CreateVpnConnectionRoute API operation.
  @param [Hash] options
    * `:vpn_connection_id` - *required* - (String) The ID of the VPN connection.
    * `:destination_cidr_block` - *required* - (String) The CIDR block associated with the local subnet of the customer network.
  @return [Core::Response]
:create_vpn_gateway: "Calls the CreateVpnGateway API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:type` - *required* - (String) The type of VPN
  connection this virtual private gateway supports.  Valid values include:\n    *
  `ipsec.1`\n  * `:availability_zone` - (String) The Availability Zone for the virtual
  private gateway.\n@return [Core::Response] The `#data` method of the response object
  returns a hash with the following structure:\n\n  * `:vpn_gateway` - (Hash)\n    *
  `:vpn_gateway_id` - (String)\n    * `:state` - (String)\n    * `:vpn_type` - (String)\n
  \   * `:availability_zone` - (String)\n    * `:attachments` - (Array<Hash>)\n      *
  `:vpc_id` - (String)\n      * `:state` - (String)\n    * `:tag_set` - (Array<Hash>)\n
  \     * `:key` - (String)\n      * `:value` - (String)"
:delete_customer_gateway: "Calls the DeleteCustomerGateway API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:customer_gateway_id` - *required*
  - (String) The ID of the customer gateway.\n@return [Core::Response]"
:delete_dhcp_options: "Calls the DeleteDhcpOptions API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:dhcp_options_id` - *required* - (String) The
  ID of the DHCP options set.\n@return [Core::Response]"
:delete_internet_gateway: "Calls the DeleteInternetGateway API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:internet_gateway_id` - *required*
  - (String) The ID of the Internet gateway.\n@return [Core::Response]"
:delete_key_pair: "Calls the DeleteKeyPair API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:key_name` - *required* - (String) The name of
  the key pair.\n@return [Core::Response]"
:delete_network_acl: "Calls the DeleteNetworkAcl API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:network_acl_id` - *required* - (String) The ID
  of the network ACL.\n@return [Core::Response]"
:delete_network_acl_entry: "Calls the DeleteNetworkAclEntry API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:network_acl_id` - *required*
  - (String) The ID of the network ACL.\n  * `:rule_number` - *required* - (Integer)
  The rule number of the entry to delete.\n  * `:egress` - *required* - (Boolean)
  Indicates whether the rule is an egress rule.\n@return [Core::Response]"
:delete_network_interface: "Calls the DeleteNetworkInterface API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:network_interface_id` - *required*
  - (String) The ID of the network interface.\n@return [Core::Response]"
:delete_placement_group: "Calls the DeletePlacementGroup API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:group_name` - *required* - (String)
  The name of the placement group.\n@return [Core::Response]"
:delete_route: "Calls the DeleteRoute API operation.\n@param [Hash] options\n  * `:dry_run`
  - (Boolean) \n  * `:route_table_id` - *required* - (String) The ID of the route
  table.\n  * `:destination_cidr_block` - *required* - (String) The CIDR range for
  the route. The value you specify must match the CIDR for the route exactly.\n@return
  [Core::Response]"
:delete_route_table: "Calls the DeleteRouteTable API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:route_table_id` - *required* - (String) The ID
  of the route table.\n@return [Core::Response]"
:delete_security_group: "Calls the DeleteSecurityGroup API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:group_name` - (String) [EC2-Classic,
  default VPC] The name of the security group. You can specify either the security
  group name or the security group ID.\n  * `:group_id` - (String) The ID of the security
  group. Required for a nondefault VPC.\n@return [Core::Response]"
:delete_snapshot: "Calls the DeleteSnapshot API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:snapshot_id` - *required* - (String) The ID of
  the Amazon EBS snapshot.\n@return [Core::Response]"
:delete_spot_datafeed_subscription: "Calls the DeleteSpotDatafeedSubscription API
  operation.\n@param [Hash] options\n  * `:dry_run` - (Boolean) \n@return [Core::Response]"
:delete_subnet: "Calls the DeleteSubnet API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:subnet_id` - *required* - (String) The ID of the
  subnet.\n@return [Core::Response]"
:delete_tags: "Calls the DeleteTags API operation.\n@param [Hash] options\n  * `:dry_run`
  - (Boolean) \n  * `:resources` - *required* - (Array&lt;<String>) The ID of the
  resource. For example, ami-1a2b3c4d. You can specify more than one resource ID.\n
  \ * `:tags` - (Array&lt;<Hash>) One or more tags to delete. If you omit the value
  parameter, we delete the tag regardless of its value. If you specify this parameter
  with an empty string as the value, we delete the key only if its value is an empty
  string.\n    * `:key` - (String) The key of the tag. Constraints: Tag keys are case-sensitive
  and accept a maximum of 127 Unicode characters. May not begin with aws:\n    * `:value`
  - (String) The value of the tag. Constraints: Tag values are case-sensitive and
  accept a maximum of 255 Unicode characters.\n@return [Core::Response]"
:delete_volume: "Calls the DeleteVolume API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:volume_id` - *required* - (String) The ID of the
  volume.\n@return [Core::Response]"
:delete_vpc: "Calls the DeleteVpc API operation.\n@param [Hash] options\n  * `:dry_run`
  - (Boolean) \n  * `:vpc_id` - *required* - (String) The ID of the VPC.\n@return
  [Core::Response]"
:delete_vpc_peering_connection: "Calls the DeleteVpcPeeringConnection API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:vpc_peering_connection_id` -
  *required* - (String) The ID of the VPC peering connection.\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:return` - (Boolean)"
:delete_vpn_connection: "Calls the DeleteVpnConnection API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:vpn_connection_id` - *required* - (String)
  The ID of the VPN connection.\n@return [Core::Response]"
:delete_vpn_connection_route: |-
  Calls the DeleteVpnConnectionRoute API operation.
  @param [Hash] options
    * `:vpn_connection_id` - *required* - (String) The ID of the VPN connection.
    * `:destination_cidr_block` - *required* - (String) The CIDR block associated with the local subnet of the customer network.
  @return [Core::Response]
:delete_vpn_gateway: "Calls the DeleteVpnGateway API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:vpn_gateway_id` - *required* - (String) The ID
  of the virtual private gateway.\n@return [Core::Response]"
:deregister_image: "Calls the DeregisterImage API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:image_id` - *required* - (String) The ID of the
  AMI.\n@return [Core::Response]"
:describe_account_attributes: "Calls the DescribeAccountAttributes API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:attribute_names` - (Array&lt;<String>)
  One or more account attribute names.\n@return [Core::Response] The `#data` method
  of the response object returns a hash with the following structure:\n\n  * `:account_attribute_set`
  - (Array<Hash>)\n    * `:attribute_name` - (String)\n    * `:attribute_value_set`
  - (Array<Hash>)\n      * `:attribute_value` - (String)"
:describe_addresses: "Calls the DescribeAddresses API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:public_ips` - (Array&lt;<String>) [EC2-Classic]
  One or more Elastic IP addresses. Default: Describes all your Elastic IP addresses.\n
  \ * `:filters` - (Array&lt;<Hash>) One or more filters. Filter names and values
  are case-sensitive. allocation-id - [EC2-VPC] The allocation ID for the address.
  association-id - [EC2-VPC] The association ID for the address. domain - Indicates
  whether the address is for use in EC2-Classic (standard) or in a VPC (vpc). instance-id
  - The ID of the instance the address is associated with, if any. network-interface-id
  - [EC2-VPC] The ID of the network interface that the address is associated with,
  if any. network-interface-owner-id - The AWS account ID of the owner. private-ip-address
  - [EC2-VPC] The private IP address associated with the Elastic IP address. public-ip
  - The Elastic IP address.\n    * `:name` - (String) The name of the filter.\n    *
  `:values` - (Array&lt;<String>) One or more filter values.\n  * `:allocation_ids`
  - (Array&lt;<String>) [EC2-VPC] One or more allocation IDs. Default: Describes all
  your Elastic IP addresses.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:addresses_set` - (Array<Hash>)\n
  \   * `:instance_id` - (String)\n    * `:public_ip` - (String)\n    * `:allocation_id`
  - (String)\n    * `:association_id` - (String)\n    * `:domain` - (String)\n    *
  `:network_interface_id` - (String)\n    * `:network_interface_owner_id` - (String)\n
  \   * `:private_ip_address` - (String)"
:describe_availability_zones: "Calls the DescribeAvailabilityZones API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:zone_names` - (Array&lt;<String>)
  The names of one or more Availability Zones.\n  * `:filters` - (Array&lt;<Hash>)
  One or more filters. message - Information about the Availability Zone. region-name
  - The name of the region for the Availability Zone (for example, us-east-1). state
  - The state of the Availability Zone (available | impaired | unavailable). zone-name
  - The name of the Availability Zone (for example, us-east-1a).\n    * `:name` -
  (String) The name of the filter.\n    * `:values` - (Array&lt;<String>) One or more
  filter values.\n@return [Core::Response] The `#data` method of the response object
  returns a hash with the following structure:\n\n  * `:availability_zone_info` -
  (Array<Hash>)\n    * `:zone_name` - (String)\n    * `:zone_state` - (String)\n    *
  `:region_name` - (String)\n    * `:message_set` - (Array<Hash>)\n      * `:message`
  - (String)"
:describe_bundle_tasks: "Calls the DescribeBundleTasks API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:bundle_ids` - (Array&lt;<String>) One
  or more bundle task IDs. Default: Describes all your bundle tasks.\n  * `:filters`
  - (Array&lt;<Hash>) One or more filters. bundle-id - The ID of the bundle task.
  error-code - If the task failed, the error code returned. error-message - If the
  task failed, the error message returned. instance-id - The ID of the instance. progress
  - The level of task completion, as a percentage (for example, 20%). s3-bucket -
  The Amazon S3 bucket to store the AMI. s3-prefix - The beginning of the AMI name.
  start-time - The time the task started (for example, 2013-09-15T17:15:20.000Z).
  state - The state of the task (pending | waiting-for-shutdown | bundling | storing
  | cancelling | complete | failed). update-time - The time of the most recent update
  for the task.\n    * `:name` - (String) The name of the filter.\n    * `:values`
  - (Array&lt;<String>) One or more filter values.\n@return [Core::Response] The `#data`
  method of the response object returns a hash with the following structure:\n\n  *
  `:bundle_instance_tasks_set` - (Array<Hash>)\n    * `:instance_id` - (String)\n
  \   * `:bundle_id` - (String)\n    * `:state` - (String)\n    * `:start_time` -
  (Time)\n    * `:update_time` - (Time)\n    * `:storage` - (Hash)\n      * `:s3`
  - (Hash)\n        * `:bucket` - (String)\n        * `:prefix` - (String)\n        *
  `:aws_access_key_id` - (String)\n        * `:upload_policy` - (String)\n        *
  `:upload_policy_signature` - (String)\n    * `:progress` - (String)\n    * `:error`
  - (Hash)\n      * `:code` - (String)\n      * `:message` - (String)"
:describe_conversion_tasks: "Calls the DescribeConversionTasks API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:filters` - (Array&lt;<Hash>)
  \n    * `:name` - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>)
  One or more filter values.\n  * `:conversion_task_ids` - (Array&lt;<String>) One
  or more conversion task IDs.\n@return [Core::Response] The `#data` method of the
  response object returns a hash with the following structure:\n\n  * `:conversion_tasks`
  - (Array<Hash>)\n    * `:conversion_task_id` - (String)\n    * `:expiration_time`
  - (String)\n    * `:import_instance` - (Hash)\n      * `:volumes` - (Array<Hash>)\n
  \       * `:bytes_converted` - (Integer)\n        * `:availability_zone` - (String)\n
  \       * `:image` - (Hash)\n          * `:format` - (String)\n          * `:size`
  - (Integer)\n          * `:import_manifest_url` - (String)\n          * `:checksum`
  - (String)\n        * `:volume` - (Hash)\n          * `:size` - (Integer)\n          *
  `:id` - (String)\n        * `:status` - (String)\n        * `:status_message` -
  (String)\n        * `:description` - (String)\n      * `:instance_id` - (String)\n
  \     * `:platform` - (String)\n      * `:description` - (String)\n    * `:import_volume`
  - (Hash)\n      * `:bytes_converted` - (Integer)\n      * `:availability_zone` -
  (String)\n      * `:description` - (String)\n      * `:image` - (Hash)\n        *
  `:format` - (String)\n        * `:size` - (Integer)\n        * `:import_manifest_url`
  - (String)\n        * `:checksum` - (String)\n      * `:volume` - (Hash)\n        *
  `:size` - (Integer)\n        * `:id` - (String)\n    * `:state` - (String)\n    *
  `:status_message` - (String)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` -
  (String)\n      * `:value` - (String)"
:describe_customer_gateways: "Calls the DescribeCustomerGateways API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:customer_gateway_ids` - (Array&lt;<String>)
  One or more customer gateway IDs. Default: Describes all your customer gateways.\n
  \ * `:filters` - (Array&lt;<Hash>) One or more filters. bgp-asn - The customer gateway's
  Border Gateway Protocol (BGP) Autonomous System Number (ASN). customer-gateway-id
  - The ID of the customer gateway. ip-address - The IP address of the customer gateway's
  Internet-routable external interface. state - The state of the customer gateway
  (pending | available | deleting | deleted). type - The type of customer gateway.
  Currently, the only supported type is ipsec.1. tag:key=value - The key/value combination
  of a tag assigned to the resource. tag-key - The key of a tag assigned to the resource.
  This filter is independent of the tag-value filter. For example, if you use both
  the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources
  assigned both the tag key Purpose (regardless of what the tag's value is), and the
  tag value X (regardless of what the tag's key is). If you want to list only resources
  where Purpose is X, see the tag:key=value filter. tag-value - The value of a tag
  assigned to the resource. This filter is independent of the tag-key filter.\n    *
  `:name` - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>)
  One or more filter values.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:customer_gateway_set`
  - (Array<Hash>)\n    * `:customer_gateway_id` - (String)\n    * `:state` - (String)\n
  \   * `:vpn_type` - (String)\n    * `:ip_address` - (String)\n    * `:bgp_asn` -
  (String)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value`
  - (String)"
:describe_dhcp_options: "Calls the DescribeDhcpOptions API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:dhcp_options_ids` - (Array&lt;<String>)
  The IDs of one or more DHCP options sets. Default: Describes all your DHCP options
  sets.\n  * `:filters` - (Array&lt;<Hash>) One or more filters. dhcp-options-id -
  The ID of a set of DHCP options. key - The key for one of the options (for example,
  domain-name). value - The value for one of the options. tag:key=value - The key/value
  combination of a tag assigned to the resource. tag-key - The key of a tag assigned
  to the resource. This filter is independent of the tag-value filter. For example,
  if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you
  get any resources assigned both the tag key Purpose (regardless of what the tag's
  value is), and the tag value X (regardless of what the tag's key is). If you want
  to list only resources where Purpose is X, see the tag:key=value filter. tag-value
  - The value of a tag assigned to the resource. This filter is independent of the
  tag-key filter.\n    * `:name` - (String) The name of the filter.\n    * `:values`
  - (Array&lt;<String>) One or more filter values.\n@return [Core::Response] The `#data`
  method of the response object returns a hash with the following structure:\n\n  *
  `:dhcp_options_set` - (Array<Hash>)\n    * `:dhcp_options_id` - (String)\n    *
  `:dhcp_configuration_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value_set`
  - (Array<String>)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n
  \     * `:value` - (String)"
:describe_export_tasks: |-
  Calls the DescribeExportTasks API operation.
  @param [Hash] options
    * `:export_task_ids` - (Array&lt;<String>) One or more export task IDs.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:export_task_set` - (Array<Hash>)
      * `:export_task_id` - (String)
      * `:description` - (String)
      * `:state` - (String)
      * `:status_message` - (String)
      * `:instance_export` - (Hash)
        * `:instance_id` - (String)
        * `:target_environment` - (String)
      * `:export_to_s3` - (Hash)
        * `:disk_image_format` - (String)
        * `:container_format` - (String)
        * `:s3_bucket` - (String)
        * `:s3_key` - (String)
:describe_image_attribute: "Calls the DescribeImageAttribute API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:image_id` - *required* - (String)
  The ID of the AMI.\n  * `:attribute` - *required* - (String) The AMI attribute.
  \ Valid values include:\n    * `description`\n    * `kernel`\n    * `ramdisk`\n
  \   * `launchPermission`\n    * `productCodes`\n    * `blockDeviceMapping`\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:image_id` - (String)\n  * `:launch_permission` - (Array<Hash>)\n
  \   * `:user_id` - (String)\n    * `:group` - (String)\n  * `:product_codes` - (Array<Hash>)\n
  \   * `:product_code` - (String)\n    * `:type` - (String)\n  * `:kernel` - (Hash)\n
  \   * `:value` - (String)\n  * `:ramdisk` - (Hash)\n    * `:value` - (String)\n
  \ * `:description` - (Hash)\n    * `:value` - (String)\n  * `:sriov_net_support`
  - (Hash)\n    * `:value` - (String)\n  * `:block_device_mapping` - (Array<Hash>)\n
  \   * `:virtual_name` - (String)\n    * `:device_name` - (String)\n    * `:ebs`
  - (Hash)\n      * `:snapshot_id` - (String)\n      * `:volume_size` - (Integer)\n
  \     * `:delete_on_termination` - (Boolean)\n      * `:volume_type` - (String)\n
  \     * `:iops` - (Integer)\n      * `:encrypted` - (Boolean)\n    * `:no_device`
  - (String)"
:describe_images: "Calls the DescribeImages API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:image_ids` - (Array&lt;<String>) One or more
  image IDs. Default: Describes all images available to you.\n  * `:owners` - (Array&lt;<String>)
  Filters the images by the owner. Specify an AWS account ID, amazon (owner is Amazon),
  aws-marketplace (owner is AWS Marketplace), self (owner is the sender of the request),
  or all (all owners).\n  * `:executable_users` - (Array&lt;<String>) Scopes the images
  by users with explicit launch permissions. Specify an AWS account ID, self (the
  sender of the request), or all (public AMIs).\n  * `:filters` - (Array&lt;<Hash>)
  One or more filters. architecture - The image architecture (i386 | x86_64). block-device-mapping.delete-on-termination
  - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance
  termination. block-device-mapping.device-name - The device name for the Amazon EBS
  volume (for example, /dev/sdh). block-device-mapping.snapshot-id - The ID of the
  snapshot used for the Amazon EBS volume. block-device-mapping.volume-size - The
  volume size of the Amazon EBS volume, in GiB. block-device-mapping.volume-type -
  The volume type of the Amazon EBS volume (gp2 | standard | io1). description - The
  description of the image (provided during image creation). hypervisor - The hypervisor
  type (ovm | xen). image-id - The ID of the image. image-type - The image type (machine
  | kernel | ramdisk). is-public - A Boolean that indicates whether the image is public.
  kernel-id - The kernel ID. manifest-location - The location of the image manifest.
  name - The name of the AMI (provided during image creation). owner-alias - The AWS
  account alias (for example, amazon). owner-id - The AWS account ID of the image
  owner. platform - The platform. To only list Windows-based AMIs, use windows. product-code
  - The product code. product-code.type - The type of the product code (devpay | marketplace).
  ramdisk-id - The RAM disk ID. root-device-name - The name of the root device volume
  (for example, /dev/sda1). root-device-type - The type of the root device volume
  (ebs | instance-store). state - The state of the image (available | pending | failed).
  state-reason-code - The reason code for the state change. state-reason-message -
  The message for the state change. tag:key=value - The key/value combination of a
  tag assigned to the resource. tag-key - The key of a tag assigned to the resource.
  This filter is independent of the tag-value filter. For example, if you use both
  the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources
  assigned both the tag key Purpose (regardless of what the tag's value is), and the
  tag value X (regardless of what the tag's key is). If you want to list only resources
  where Purpose is X, see the tag:key=value filter. tag-value - The value of a tag
  assigned to the resource. This filter is independent of the tag-key filter. virtualization-type
  - The virtualization type (paravirtual | hvm).\n    * `:name` - (String) The name
  of the filter.\n    * `:values` - (Array&lt;<String>) One or more filter values.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:images_set` - (Array<Hash>)\n    * `:image_id` - (String)\n
  \   * `:image_location` - (String)\n    * `:image_state` - (String)\n    * `:image_owner_id`
  - (String)\n    * `:is_public` - (Boolean)\n    * `:product_codes` - (Array<Hash>)\n
  \     * `:product_code` - (String)\n      * `:type` - (String)\n    * `:architecture`
  - (String)\n    * `:image_type` - (String)\n    * `:kernel_id` - (String)\n    *
  `:ramdisk_id` - (String)\n    * `:platform` - (String)\n    * `:sriov_net_support`
  - (String)\n    * `:state_reason` - (Hash)\n      * `:code` - (String)\n      *
  `:message` - (String)\n    * `:image_owner_alias` - (String)\n    * `:name` - (String)\n
  \   * `:description` - (String)\n    * `:root_device_type` - (String)\n    * `:root_device_name`
  - (String)\n    * `:block_device_mapping` - (Array<Hash>)\n      * `:virtual_name`
  - (String)\n      * `:device_name` - (String)\n      * `:ebs` - (Hash)\n        *
  `:snapshot_id` - (String)\n        * `:volume_size` - (Integer)\n        * `:delete_on_termination`
  - (Boolean)\n        * `:volume_type` - (String)\n        * `:iops` - (Integer)\n
  \       * `:encrypted` - (Boolean)\n      * `:no_device` - (String)\n    * `:virtualization_type`
  - (String)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      *
  `:value` - (String)\n    * `:hypervisor` - (String)"
:describe_instance_attribute: "Calls the DescribeInstanceAttribute API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:instance_id` - *required* - (String)
  The ID of the instance.\n  * `:attribute` - *required* - (String) The instance attribute.
  \ Valid values include:\n    * `instanceType`\n    * `kernel`\n    * `ramdisk`\n
  \   * `userData`\n    * `disableApiTermination`\n    * `instanceInitiatedShutdownBehavior`\n
  \   * `rootDeviceName`\n    * `blockDeviceMapping`\n    * `productCodes`\n    *
  `sourceDestCheck`\n    * `groupSet`\n    * `ebsOptimized`\n    * `sriovNetSupport`\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:instance_id` - (String)\n  * `:instance_type` - (Hash)\n
  \   * `:value` - (String)\n  * `:kernel` - (Hash)\n    * `:value` - (String)\n  *
  `:ramdisk` - (Hash)\n    * `:value` - (String)\n  * `:user_data` - (Hash)\n    *
  `:value` - (String)\n  * `:disable_api_termination` - (Hash)\n    * `:value` - (Boolean)\n
  \ * `:instance_initiated_shutdown_behavior` - (Hash)\n    * `:value` - (String)\n
  \ * `:root_device_name` - (Hash)\n    * `:value` - (String)\n  * `:block_device_mapping`
  - (Array<Hash>)\n    * `:device_name` - (String)\n    * `:ebs` - (Hash)\n      *
  `:volume_id` - (String)\n      * `:status` - (String)\n      * `:attach_time` -
  (Time)\n      * `:delete_on_termination` - (Boolean)\n  * `:product_codes` - (Array<Hash>)\n
  \   * `:product_code` - (String)\n    * `:type` - (String)\n  * `:ebs_optimized`
  - (Hash)\n    * `:value` - (Boolean)\n  * `:sriov_net_support` - (Hash)\n    * `:value`
  - (String)\n  * `:source_dest_check` - (Hash)\n    * `:value` - (Boolean)\n  * `:group_set`
  - (Array<Hash>)\n    * `:group_name` - (String)\n    * `:group_id` - (String)"
:describe_instance_status: "Calls the DescribeInstanceStatus API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:instance_ids` - (Array&lt;<String>)
  One or more instance IDs. Default: Describes all your instances. Constraints: Maximum
  100 explicitly specified instance IDs.\n  * `:filters` - (Array&lt;<Hash>) One or
  more filters. availability-zone - The Availability Zone of the instance. event.code
  - The code identifying the type of event (instance-reboot | system-reboot | system-maintenance
  | instance-retirement | instance-stop). event.description - A description of the
  event. event.not-after - The latest end time for the scheduled event, for example:
  2010-09-15T17:15:20.000Z. event.not-before - The earliest start time for the scheduled
  event, for example: 2010-09-15T17:15:20.000Z. instance-state-code - A code representing
  the state of the instance, as a 16-bit unsigned integer. The high byte is an opaque
  internal value and should be ignored. The low byte is set based on the state represented.
  The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated),
  64 (stopping), and 80 (stopped). instance-state-name - The state of the instance
  (pending | running | shutting-down | terminated | stopping | stopped). instance-status.reachability
  - Filters on instance status where the name is reachability (passed | failed | initializing
  | insufficient-data). instance-status.status - The status of the instance (ok |
  impaired | initializing | insufficient-data | not-applicable). system-status.reachability
  - Filters on system status where the name is reachability (passed | failed | initializing
  | insufficient-data). system-status.status - The system status of the instance (ok
  | impaired | initializing | insufficient-data | not-applicable).\n    * `:name`
  - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>) One or
  more filter values.\n  * `:next_token` - (String) The next paginated set of results
  to return. (You received this token from a prior call.)\n  * `:max_results` - (Integer)
  The maximum number of paginated instance items per response. The call also returns
  a token that you can specify in a subsequent call to get the next set of results.
  If the value is greater than 1000, we return only 1000 items. Default: 1000\n  *
  `:include_all_instances` - (Boolean) When  `true` , includes the health status for
  all instances. When  `false` , includes the health status for running instances
  only. Default:  `false` \n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:instance_status_set`
  - (Array<Hash>)\n    * `:instance_id` - (String)\n    * `:availability_zone` - (String)\n
  \   * `:events_set` - (Array<Hash>)\n      * `:code` - (String)\n      * `:description`
  - (String)\n      * `:not_before` - (Time)\n      * `:not_after` - (Time)\n    *
  `:instance_state` - (Hash)\n      * `:code` - (Integer)\n      * `:name` - (String)\n
  \   * `:system_status` - (Hash)\n      * `:status` - (String)\n      * `:details`
  - (Array<Hash>)\n        * `:name` - (String)\n        * `:status` - (String)\n
  \       * `:impaired_since` - (Time)\n    * `:instance_status` - (Hash)\n      *
  `:status` - (String)\n      * `:details` - (Array<Hash>)\n        * `:name` - (String)\n
  \       * `:status` - (String)\n        * `:impaired_since` - (Time)\n  * `:next_token`
  - (String)"
:describe_instances: "Calls the DescribeInstances API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:instance_ids` - (Array&lt;<String>) One or more
  instance IDs. Default: Describes all your instances.\n  * `:filters` - (Array&lt;<Hash>)
  One or more filters. architecture - The instance architecture (i386 | x86_64). availability-zone
  - The Availability Zone of the instance. block-device-mapping.attach-time - The
  attach time for an Amazon EBS volume mapped to the instance, for example, 2010-09-15T17:15:20.000Z.
  block-device-mapping.delete-on-termination - A Boolean that indicates whether the
  Amazon EBS volume is deleted on instance termination. block-device-mapping.device-name
  - The device name for the Amazon EBS volume (for example, /dev/sdh). block-device-mapping.status
  - The status for the Amazon EBS volume (attaching | attached | detaching | detached).
  block-device-mapping.volume-id - The volume ID of the Amazon EBS volume. client-token
  - The idempotency token you provided when you launched the instance. dns-name -
  The public DNS name of the instance. group-id - The ID of the security group for
  the instance. If the instance is in EC2-Classic or a default VPC, you can use group-name
  instead. group-name - The name of the security group for the instance. If the instance
  is in a nondefault VPC, you must use group-id instead. hypervisor - The hypervisor
  type of the instance (ovm | xen). iam-instance-profile.arn - The instance profile
  associated with the instance. Specified as an ARN. image-id - The ID of the image
  used to launch the instance. instance-id - The ID of the instance. instance-lifecycle
  - Indicates whether this is a Spot Instance (spot). instance-state-code - The state
  of the instance, as a 16-bit unsigned integer. The high byte is an opaque internal
  value and should be ignored. The low byte is set based on the state represented.
  The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated),
  64 (stopping), and 80 (stopped). instance-state-name - The state of the instance
  (pending | running | shutting-down | terminated | stopping | stopped). instance-type
  - The type of instance (for example, m1.small). instance.group-id - The ID of the
  security group for the instance. If the instance is in EC2-Classic or a default
  VPC, you can use instance.group-name instead. instance.group-name - The name of
  the security group for the instance. If the instance is in a nondefault VPC, you
  must use instance.group-id instead. ip-address - The public IP address of the instance.
  kernel-id - The kernel ID. key-name - The name of the key pair used when the instance
  was launched. launch-index - When launching multiple instances, this is the index
  for the instance in the launch group (for example, 0, 1, 2, and so on). launch-time
  - The time when the instance was launched. monitoring-state - Indicates whether
  monitoring is enabled for the instance (disabled | enabled). owner-id - The AWS
  account ID of the instance owner. placement-group-name - The name of the placement
  group for the instance. platform - The platform. Use windows if you have Windows
  instances; otherwise, leave blank. private-dns-name - The private DNS name of the
  instance. private-ip-address - The private IP address of the instance. product-code
  - The product code associated with the AMI used to launch the instance. product-code.type
  - The type of product code (devpay | marketplace). ramdisk-id - The RAM disk ID.
  reason - The reason for the current state of the instance (for example, shows \"User
  Initiated [date]\" when you stop or terminate the instance). Similar to the state-reason-code
  filter. requester-id - The ID of the entity that launched the instance on your behalf
  (for example, AWS Management Console, Auto Scaling, and so on). reservation-id -
  The ID of the instance's reservation. A reservation ID is created any time you launch
  an instance. A reservation ID has a one-to-one relationship with an instance launch
  request, but can be associated with more than one instance if you launch multiple
  instances using the same launch request. For example, if you launch one instance,
  you'll get one reservation ID. If you launch ten instances using the same launch
  request, you'll also get one reservation ID. root-device-name - The name of the
  root device for the instance (for example, /dev/sda1). root-device-type - The type
  of root device that the instance uses (ebs | instance-store). source-dest-check
  - Indicates whether the instance performs source/destination checking. A value of
  \ `true`  means that checking is enabled, and  `false`  means checking is disabled.
  The value must be  `false`  for the instance to perform network address translation
  (NAT) in your VPC. spot-instance-request-id - The ID of the Spot Instance request.
  state-reason-code - The reason code for the state change. state-reason-message -
  A message that describes the state change. subnet-id - The ID of the subnet for
  the instance. tag:key=value - The key/value combination of a tag assigned to the
  resource, where tag:key is the tag's key. tag-key - The key of a tag assigned to
  the resource. This filter is independent of the tag-value filter. For example, if
  you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you
  get any resources assigned both the tag key Purpose (regardless of what the tag's
  value is), and the tag value X (regardless of what the tag's key is). If you want
  to list only resources where Purpose is X, see the tag:key=value filter. tag-value
  - The value of a tag assigned to the resource. This filter is independent of the
  tag-key filter. tenancy - The tenancy of an instance (dedicated | default). virtualization-type
  - The virtualization type of the instance (paravirtual | hvm). vpc-id - The ID of
  the VPC that the instance is running in. network-interface.description - The description
  of the network interface. network-interface.subnet-id - The ID of the subnet for
  the network interface. network-interface.vpc-id - The ID of the VPC for the network
  interface. network-interface.network-interface.id - The ID of the network interface.
  network-interface.owner-id - The ID of the owner of the network interface. network-interface.availability-zone
  - The Availability Zone for the network interface. network-interface.requester-id
  - The requester ID for the network interface. network-interface.requester-managed
  - Indicates whether the network interface is being managed by AWS. network-interface.status
  - The status of the network interface (available) | in-use). network-interface.mac-address
  - The MAC address of the network interface. network-interface-private-dns-name -
  The private DNS name of the network interface. network-interface.source-destination-check
  - Whether the network interface performs source/destination checking. A value of
  \ `true`  means checking is enabled, and  `false`  means checking is disabled. The
  value must be  `false`  for the network interface to perform network address translation
  (NAT) in your VPC. network-interface.group-id - The ID of a security group associated
  with the network interface. network-interface.group-name - The name of a security
  group associated with the network interface. network-interface.attachment.attachment-id
  - The ID of the interface attachment. network-interface.attachment.instance-id -
  The ID of the instance to which the network interface is attached. network-interface.attachment.instance-owner-id
  - The owner ID of the instance to which the network interface is attached. network-interface.addresses.private-ip-address
  - The private IP address associated with the network interface. network-interface.attachment.device-index
  - The device index to which the network interface is attached. network-interface.attachment.status
  - The status of the attachment (attaching | attached | detaching | detached). network-interface.attachment.attach-time
  - The time that the network interface was attached to an instance. network-interface.attachment.delete-on-termination
  - Specifies whether the attachment is deleted when an instance is terminated. network-interface.addresses.primary
  - Specifies whether the IP address of the network interface is the primary private
  IP address. network-interface.addresses.association.public-ip - The ID of the association
  of an Elastic IP address with a network interface. network-interface.addresses.association.ip-owner-id
  - The owner ID of the private IP address associated with the network interface.
  association.public-ip - The address of the Elastic IP address bound to the network
  interface. association.ip-owner-id - The owner of the Elastic IP address associated
  with the network interface. association.allocation-id - The allocation ID returned
  when you allocated the Elastic IP address for your network interface. association.association-id
  - The association ID returned when the network interface was associated with an
  IP address.\n    * `:name` - (String) The name of the filter.\n    * `:values` -
  (Array&lt;<String>) One or more filter values.\n  * `:next_token` - (String) The
  token for the next set of items to return. (You received this token from a prior
  call.)\n  * `:max_results` - (Integer) The maximum number of items to return for
  this call. The call also returns a token that you can specify in a subsequent call
  to get the next set of results. If the value is greater than 1000, we return only
  1000 items.\n@return [Core::Response] The `#data` method of the response object
  returns a hash with the following structure:\n\n  * `:reservation_set` - (Array<Hash>)\n
  \   * `:reservation_id` - (String)\n    * `:owner_id` - (String)\n    * `:requester_id`
  - (String)\n    * `:group_set` - (Array<Hash>)\n      * `:group_name` - (String)\n
  \     * `:group_id` - (String)\n    * `:instances_set` - (Array<Hash>)\n      *
  `:instance_id` - (String)\n      * `:image_id` - (String)\n      * `:instance_state`
  - (Hash)\n        * `:code` - (Integer)\n        * `:name` - (String)\n      * `:private_dns_name`
  - (String)\n      * `:dns_name` - (String)\n      * `:reason` - (String)\n      *
  `:key_name` - (String)\n      * `:ami_launch_index` - (Integer)\n      * `:product_codes`
  - (Array<Hash>)\n        * `:product_code` - (String)\n        * `:type` - (String)\n
  \     * `:instance_type` - (String)\n      * `:launch_time` - (Time)\n      * `:placement`
  - (Hash)\n        * `:availability_zone` - (String)\n        * `:group_name` - (String)\n
  \       * `:tenancy` - (String)\n      * `:kernel_id` - (String)\n      * `:ramdisk_id`
  - (String)\n      * `:platform` - (String)\n      * `:monitoring` - (Hash)\n        *
  `:state` - (String)\n      * `:subnet_id` - (String)\n      * `:vpc_id` - (String)\n
  \     * `:private_ip_address` - (String)\n      * `:ip_address` - (String)\n      *
  `:state_reason` - (Hash)\n        * `:code` - (String)\n        * `:message` - (String)\n
  \     * `:architecture` - (String)\n      * `:root_device_type` - (String)\n      *
  `:root_device_name` - (String)\n      * `:block_device_mapping` - (Array<Hash>)\n
  \       * `:device_name` - (String)\n        * `:ebs` - (Hash)\n          * `:volume_id`
  - (String)\n          * `:status` - (String)\n          * `:attach_time` - (Time)\n
  \         * `:delete_on_termination` - (Boolean)\n      * `:virtualization_type`
  - (String)\n      * `:instance_lifecycle` - (String)\n      * `:spot_instance_request_id`
  - (String)\n      * `:client_token` - (String)\n      * `:tag_set` - (Array<Hash>)\n
  \       * `:key` - (String)\n        * `:value` - (String)\n      * `:group_set`
  - (Array<Hash>)\n        * `:group_name` - (String)\n        * `:group_id` - (String)\n
  \     * `:source_dest_check` - (Boolean)\n      * `:hypervisor` - (String)\n      *
  `:network_interface_set` - (Array<Hash>)\n        * `:network_interface_id` - (String)\n
  \       * `:subnet_id` - (String)\n        * `:vpc_id` - (String)\n        * `:description`
  - (String)\n        * `:owner_id` - (String)\n        * `:status` - (String)\n        *
  `:mac_address` - (String)\n        * `:private_ip_address` - (String)\n        *
  `:private_dns_name` - (String)\n        * `:source_dest_check` - (Boolean)\n        *
  `:group_set` - (Array<Hash>)\n          * `:group_name` - (String)\n          *
  `:group_id` - (String)\n        * `:attachment` - (Hash)\n          * `:attachment_id`
  - (String)\n          * `:device_index` - (Integer)\n          * `:status` - (String)\n
  \         * `:attach_time` - (Time)\n          * `:delete_on_termination` - (Boolean)\n
  \       * `:association` - (Hash)\n          * `:public_ip` - (String)\n          *
  `:public_dns_name` - (String)\n          * `:ip_owner_id` - (String)\n        *
  `:private_ip_addresses_set` - (Array<Hash>)\n          * `:private_ip_address` -
  (String)\n          * `:private_dns_name` - (String)\n          * `:primary` - (Boolean)\n
  \         * `:association` - (Hash)\n            * `:public_ip` - (String)\n            *
  `:public_dns_name` - (String)\n            * `:ip_owner_id` - (String)\n      *
  `:iam_instance_profile` - (Hash)\n        * `:arn` - (String)\n        * `:id` -
  (String)\n      * `:ebs_optimized` - (Boolean)\n      * `:sriov_net_support` - (String)\n
  \ * `:next_token` - (String)"
:describe_internet_gateways: "Calls the DescribeInternetGateways API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:internet_gateway_ids` - (Array&lt;<String>)
  One or more Internet gateway IDs. Default: Describes all your Internet gateways.\n
  \ * `:filters` - (Array&lt;<Hash>) One or more filters. attachment.state - The current
  state of the attachment between the gateway and the VPC (available). Present only
  if a VPC is attached. attachment.vpc-id - The ID of an attached VPC. internet-gateway-id
  - The ID of the Internet gateway. tag:key=value - The key/value combination of a
  tag assigned to the resource. tag-key - The key of a tag assigned to the resource.
  This filter is independent of the tag-value filter. For example, if you use both
  the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources
  assigned both the tag key Purpose (regardless of what the tag's value is), and the
  tag value X (regardless of what the tag's key is). If you want to list only resources
  where Purpose is X, see the tag:key=value filter. tag-value - The value of a tag
  assigned to the resource. This filter is independent of the tag-key filter.\n    *
  `:name` - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>)
  One or more filter values.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:internet_gateway_set`
  - (Array<Hash>)\n    * `:internet_gateway_id` - (String)\n    * `:attachment_set`
  - (Array<Hash>)\n      * `:vpc_id` - (String)\n      * `:state` - (String)\n    *
  `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` - (String)"
:describe_key_pairs: "Calls the DescribeKeyPairs API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:key_names` - (Array&lt;<String>) One or more
  key pair names. Default: Describes all your key pairs.\n  * `:filters` - (Array&lt;<Hash>)
  One or more filters. fingerprint - The fingerprint of the key pair. key-name - The
  name of the key pair.\n    * `:name` - (String) The name of the filter.\n    * `:values`
  - (Array&lt;<String>) One or more filter values.\n@return [Core::Response] The `#data`
  method of the response object returns a hash with the following structure:\n\n  *
  `:key_set` - (Array<Hash>)\n    * `:key_name` - (String)\n    * `:key_fingerprint`
  - (String)"
:describe_network_acls: "Calls the DescribeNetworkAcls API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:network_acl_ids` - (Array&lt;<String>)
  One or more network ACL IDs. Default: Describes all your network ACLs.\n  * `:filters`
  - (Array&lt;<Hash>) One or more filters. association.association-id - The ID of
  an association ID for the ACL. association.network-acl-id - The ID of the network
  ACL involved in the association. association.subnet-id - The ID of the subnet involved
  in the association. default - Indicates whether the ACL is the default network ACL
  for the VPC. entry.cidr - The CIDR range specified in the entry. entry.egress -
  Indicates whether the entry applies to egress traffic. entry.icmp.code - The ICMP
  code specified in the entry, if any. entry.icmp.type - The ICMP type specified in
  the entry, if any. entry.port-range.from - The start of the port range specified
  in the entry. entry.port-range.to - The end of the port range specified in the entry.
  entry.protocol - The protocol specified in the entry (tcp | udp | icmp or a protocol
  number). entry.rule-action - Allows or denies the matching traffic (allow | deny).
  entry.rule-number - The number of an entry (in other words, rule) in the ACL's set
  of entries. network-acl-id - The ID of the network ACL. tag:key=value - The key/value
  combination of a tag assigned to the resource. tag-key - The key of a tag assigned
  to the resource. This filter is independent of the tag-value filter. For example,
  if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you
  get any resources assigned both the tag key Purpose (regardless of what the tag's
  value is), and the tag value X (regardless of what the tag's key is). If you want
  to list only resources where Purpose is X, see the tag:key=value filter. tag-value
  - The value of a tag assigned to the resource. This filter is independent of the
  tag-key filter. vpc-id - The ID of the VPC for the network ACL.\n    * `:name` -
  (String) The name of the filter.\n    * `:values` - (Array&lt;<String>) One or more
  filter values.\n@return [Core::Response] The `#data` method of the response object
  returns a hash with the following structure:\n\n  * `:network_acl_set` - (Array<Hash>)\n
  \   * `:network_acl_id` - (String)\n    * `:vpc_id` - (String)\n    * `:default`
  - (Boolean)\n    * `:entry_set` - (Array<Hash>)\n      * `:rule_number` - (Integer)\n
  \     * `:protocol` - (String)\n      * `:rule_action` - (String)\n      * `:egress`
  - (Boolean)\n      * `:cidr_block` - (String)\n      * `:icmp_type_code` - (Hash)\n
  \       * `:type` - (Integer)\n        * `:code` - (Integer)\n      * `:port_range`
  - (Hash)\n        * `:from` - (Integer)\n        * `:to` - (Integer)\n    * `:association_set`
  - (Array<Hash>)\n      * `:network_acl_association_id` - (String)\n      * `:network_acl_id`
  - (String)\n      * `:subnet_id` - (String)\n    * `:tag_set` - (Array<Hash>)\n
  \     * `:key` - (String)\n      * `:value` - (String)"
:describe_network_interface_attribute: "Calls the DescribeNetworkInterfaceAttribute
  API operation.\n@param [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:network_interface_id`
  - *required* - (String) The ID of the network interface.\n  * `:attribute` - (String)
  The attribute of the network interface.  Valid values include:\n    * `description`\n
  \   * `groupSet`\n    * `sourceDestCheck`\n    * `attachment`\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:network_interface_id` - (String)\n  * `:description` - (Hash)\n    * `:value`
  - (String)\n  * `:source_dest_check` - (Hash)\n    * `:value` - (Boolean)\n  * `:group_set`
  - (Array<Hash>)\n    * `:group_name` - (String)\n    * `:group_id` - (String)\n
  \ * `:attachment` - (Hash)\n    * `:attachment_id` - (String)\n    * `:instance_id`
  - (String)\n    * `:instance_owner_id` - (String)\n    * `:device_index` - (Integer)\n
  \   * `:status` - (String)\n    * `:attach_time` - (Time)\n    * `:delete_on_termination`
  - (Boolean)"
:describe_network_interfaces: "Calls the DescribeNetworkInterfaces API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:network_interface_ids` - (Array&lt;<String>)
  One or more network interface IDs. Default: Describes all your network interfaces.\n
  \ * `:filters` - (Array&lt;<Hash>) One or more filters. addresses.private-ip-address
  - The private IP addresses associated with the network interface. addresses.primary
  - Whether the private IP address is the primary IP address associated with the network
  interface. addresses.association.public-ip - The association ID returned when the
  network interface was associated with the Elastic IP address. addresses.association.owner-id
  - The owner ID of the addresses associated with the network interface. association.association-id
  - The association ID returned when the network interface was associated with an
  IP address. association.allocation-id - The allocation ID returned when you allocated
  the Elastic IP address for your network interface. association.ip-owner-id - The
  owner of the Elastic IP address associated with the network interface. association.public-ip
  - The address of the Elastic IP address bound to the network interface. association.public-dns-name
  - The public DNS name for the network interface. attachment.attachment-id - The
  ID of the interface attachment. attachment.instance-id - The ID of the instance
  to which the network interface is attached. attachment.instance-owner-id - The owner
  ID of the instance to which the network interface is attached. attachment.device-index
  - The device index to which the network interface is attached. attachment.status
  - The status of the attachment (attaching | attached | detaching | detached). attachment.attach.time
  - The time that the network interface was attached to an instance. attachment.delete-on-termination
  - Indicates whether the attachment is deleted when an instance is terminated. availability-zone
  - The Availability Zone of the network interface. description - The description
  of the network interface. group-id - The ID of a security group associated with
  the network interface. group-name - The name of a security group associated with
  the network interface. mac-address - The MAC address of the network interface. network-interface-id
  - The ID of the network interface. owner-id - The AWS account ID of the network
  interface owner. private-ip-address - The private IP address or addresses of the
  network interface. private-dns-name - The private DNS name of the network interface.
  requester-id - The ID of the entity that launched the instance on your behalf (for
  example, AWS Management Console, Auto Scaling, and so on). requester-managed - Indicates
  whether the network interface is being managed by an AWS service (for example, AWS
  Management Console, Auto Scaling, and so on). source-desk-check - Indicates whether
  the network interface performs source/destination checking. A value of  `true`  means
  checking is enabled, and  `false`  means checking is disabled. The value must be
  \ `false`  for the network interface to perform Network Address Translation (NAT)
  in your VPC. status - The status of the network interface. If the network interface
  is not attached to an instance, the status is available; if a network interface
  is attached to an instance the status is in-use. subnet-id - The ID of the subnet
  for the network interface. tag:key=value - The key/value combination of a tag assigned
  to the resource. tag-key - The key of a tag assigned to the resource. This filter
  is independent of the tag-value filter. For example, if you use both the filter
  \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned
  both the tag key Purpose (regardless of what the tag's value is), and the tag value
  X (regardless of what the tag's key is). If you want to list only resources where
  Purpose is X, see the tag:key=value filter. tag-value - The value of a tag assigned
  to the resource. This filter is independent of the tag-key filter. vpc-id - The
  ID of the VPC for the network interface.\n    * `:name` - (String) The name of the
  filter.\n    * `:values` - (Array&lt;<String>) One or more filter values.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:network_interface_set` - (Array<Hash>)\n    * `:network_interface_id`
  - (String)\n    * `:subnet_id` - (String)\n    * `:vpc_id` - (String)\n    * `:availability_zone`
  - (String)\n    * `:description` - (String)\n    * `:owner_id` - (String)\n    *
  `:requester_id` - (String)\n    * `:requester_managed` - (Boolean)\n    * `:status`
  - (String)\n    * `:mac_address` - (String)\n    * `:private_ip_address` - (String)\n
  \   * `:private_dns_name` - (String)\n    * `:source_dest_check` - (Boolean)\n    *
  `:groups` - (Array<Hash>)\n      * `:group_name` - (String)\n      * `:group_id`
  - (String)\n    * `:attachment` - (Hash)\n      * `:attachment_id` - (String)\n
  \     * `:instance_id` - (String)\n      * `:instance_owner_id` - (String)\n      *
  `:device_index` - (Integer)\n      * `:status` - (String)\n      * `:attach_time`
  - (Time)\n      * `:delete_on_termination` - (Boolean)\n    * `:association` - (Hash)\n
  \     * `:public_ip` - (String)\n      * `:public_dns_name` - (String)\n      *
  `:ip_owner_id` - (String)\n      * `:allocation_id` - (String)\n      * `:association_id`
  - (String)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      *
  `:value` - (String)\n    * `:private_ip_addresses_set` - (Array<Hash>)\n      *
  `:private_ip_address` - (String)\n      * `:private_dns_name` - (String)\n      *
  `:primary` - (Boolean)\n      * `:association` - (Hash)\n        * `:public_ip`
  - (String)\n        * `:public_dns_name` - (String)\n        * `:ip_owner_id` -
  (String)\n        * `:allocation_id` - (String)\n        * `:association_id` - (String)"
:describe_placement_groups: "Calls the DescribePlacementGroups API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:group_names` - (Array&lt;<String>)
  One or more placement group names. Default: Describes all your placement groups,
  or only those otherwise specified.\n  * `:filters` - (Array&lt;<Hash>) One or more
  filters. group-name - The name of the placement group. state - The state of the
  placement group (pending | available | deleting | deleted). strategy - The strategy
  of the placement group (cluster).\n    * `:name` - (String) The name of the filter.\n
  \   * `:values` - (Array&lt;<String>) One or more filter values.\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:placement_group_set` - (Array<Hash>)\n    * `:group_name` - (String)\n    *
  `:strategy` - (String)\n    * `:state` - (String)"
:describe_regions: "Calls the DescribeRegions API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:region_names` - (Array&lt;<String>) The names
  of one or more regions.\n  * `:filters` - (Array&lt;<Hash>) One or more filters.
  endpoint - The endpoint of the region (for example, ec2.us-east-1.amazonaws.com).
  region-name - The name of the region (for example, us-east-1).\n    * `:name` -
  (String) The name of the filter.\n    * `:values` - (Array&lt;<String>) One or more
  filter values.\n@return [Core::Response] The `#data` method of the response object
  returns a hash with the following structure:\n\n  * `:region_info` - (Array<Hash>)\n
  \   * `:region_name` - (String)\n    * `:region_endpoint` - (String)"
:describe_reserved_instances: "Calls the DescribeReservedInstances API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:reserved_instances_ids` - (Array&lt;<String>)
  One or more Reserved Instance IDs. Default: Describes all your Reserved Instances,
  or only those otherwise specified.\n  * `:filters` - (Array&lt;<Hash>) One or more
  filters. availability-zone - The Availability Zone where the Reserved Instance can
  be used. duration - The duration of the Reserved Instance (one year or three years),
  in seconds (31536000 | 94608000). end - The time when the Reserved Instance expires
  (for example, 2014-08-07T11:54:42.000Z). fixed-price - The purchase price of the
  Reserved Instance (for example, 9800.0). instance-type - The instance type on which
  the Reserved Instance can be used. product-description - The product description
  of the Reserved Instance (Linux/UNIX | Linux/UNIX (Amazon VPC) | Windows | Windows
  (Amazon VPC)). reserved-instances-id - The ID of the Reserved Instance. start -
  The time at which the Reserved Instance purchase request was placed (for example,
  2014-08-07T11:54:42.000Z). state - The state of the Reserved Instance (pending-payment
  | active | payment-failed | retired). tag:key=value - The key/value combination
  of a tag assigned to the resource. tag-key - The key of a tag assigned to the resource.
  This filter is independent of the tag-value filter. For example, if you use both
  the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources
  assigned both the tag key Purpose (regardless of what the tag's value is), and the
  tag value X (regardless of what the tag's key is). If you want to list only resources
  where Purpose is X, see the tag:key=value filter. tag-value - The value of a tag
  assigned to the resource. This filter is independent of the tag-key filter. usage-price
  - The usage price of the Reserved Instance, per hour (for example, 0.84).\n    *
  `:name` - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>)
  One or more filter values.\n  * `:offering_type` - (String) The Reserved Instance
  offering type. If you are using tools that predate the 2011-11-01 API version, you
  only have access to the Medium Utilization Reserved Instance offering type.  Valid
  values include:\n    * `Heavy Utilization`\n    * `Medium Utilization`\n    * `Light
  Utilization`\n@return [Core::Response] The `#data` method of the response object
  returns a hash with the following structure:\n\n  * `:reserved_instances_set` -
  (Array<Hash>)\n    * `:reserved_instances_id` - (String)\n    * `:instance_type`
  - (String)\n    * `:availability_zone` - (String)\n    * `:start` - (Time)\n    *
  `:end` - (Time)\n    * `:duration` - (Integer)\n    * `:usage_price` - (Numeric)\n
  \   * `:fixed_price` - (Numeric)\n    * `:instance_count` - (Integer)\n    * `:product_description`
  - (String)\n    * `:state` - (String)\n    * `:tag_set` - (Array<Hash>)\n      *
  `:key` - (String)\n      * `:value` - (String)\n    * `:instance_tenancy` - (String)\n
  \   * `:currency_code` - (String)\n    * `:offering_type` - (String)\n    * `:recurring_charges`
  - (Array<Hash>)\n      * `:frequency` - (String)\n      * `:amount` - (Numeric)"
:describe_reserved_instances_listings: |-
  Calls the DescribeReservedInstancesListings API operation.
  @param [Hash] options
    * `:reserved_instances_id` - (String) One or more Reserved Instance IDs.
    * `:reserved_instances_listing_id` - (String) One or more Reserved Instance Listing IDs.
    * `:filters` - (Array&lt;<Hash>) One or more filters. reserved-instances-id - The ID of the Reserved Instances. reserved-instances-listing-id - The ID of the Reserved Instances listing. status - The status of the Reserved Instance listing (pending | active | cancelled | closed). status-message - The reason for the status.
      * `:name` - (String) The name of the filter.
      * `:values` - (Array&lt;<String>) One or more filter values.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:reserved_instances_listings_set` - (Array<Hash>)
      * `:reserved_instances_listing_id` - (String)
      * `:reserved_instances_id` - (String)
      * `:create_date` - (Time)
      * `:update_date` - (Time)
      * `:status` - (String)
      * `:status_message` - (String)
      * `:instance_counts` - (Array<Hash>)
        * `:state` - (String)
        * `:instance_count` - (Integer)
      * `:price_schedules` - (Array<Hash>)
        * `:term` - (Integer)
        * `:price` - (Numeric)
        * `:currency_code` - (String)
        * `:active` - (Boolean)
      * `:tag_set` - (Array<Hash>)
        * `:key` - (String)
        * `:value` - (String)
      * `:client_token` - (String)
:describe_reserved_instances_modifications: |-
  Calls the DescribeReservedInstancesModifications API operation.
  @param [Hash] options
    * `:reserved_instances_modification_ids` - (Array&lt;<String>) IDs for the submitted modification request.
    * `:next_token` - (String) The token for the next page of data.
    * `:filters` - (Array&lt;<Hash>) One or more filters. client-token - The idempotency token for the modification request. create-date - The time when the modification request was created. effective-date - The time when the modification becomes effective. modification-result.reserved-instances-id - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is fulfilled. modification-result.target-configuration.availability-zone - The Availability Zone for the new Reserved Instances. modification-result.target-configuration.instance-count - The number of new Reserved Instances. modification-result.target-configuration.instance-type - The instance type of the new Reserved Instances. modification-result.target-configuration.platform - The network platform of the new Reserved Instances (EC2-Classic | EC2-VPC). reserved-instances-id - The ID of the Reserved Instances modified. reserved-instances-modification-id - The ID of the modification request. status - The status of the Reserved Instances modification request (processing | fulfilled | failed). status-message - The reason for the status. update-date - The time when the modification request was last updated.
      * `:name` - (String) The name of the filter.
      * `:values` - (Array&lt;<String>) One or more filter values.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:reserved_instances_modifications_set` - (Array<Hash>)
      * `:reserved_instances_modification_id` - (String)
      * `:reserved_instances_set` - (Array<Hash>)
        * `:reserved_instances_id` - (String)
      * `:modification_result_set` - (Array<Hash>)
        * `:reserved_instances_id` - (String)
        * `:target_configuration` - (Hash)
          * `:availability_zone` - (String)
          * `:platform` - (String)
          * `:instance_count` - (Integer)
          * `:instance_type` - (String)
      * `:create_date` - (Time)
      * `:update_date` - (Time)
      * `:effective_date` - (Time)
      * `:status` - (String)
      * `:status_message` - (String)
      * `:client_token` - (String)
    * `:next_token` - (String)
:describe_reserved_instances_offerings: "Calls the DescribeReservedInstancesOfferings
  API operation.\n@param [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:reserved_instances_offering_ids`
  - (Array&lt;<String>) One or more Reserved Instances offering IDs.\n  * `:instance_type`
  - (String) The instance type on which the Reserved Instance can be used. For more
  information, see Instance Types in the Amazon Elastic Compute Cloud User Guide for
  Linux.  Valid values include:\n    * `t1.micro`\n    * `m1.small`\n    * `m1.medium`\n
  \   * `m1.large`\n    * `m1.xlarge`\n    * `m3.medium`\n    * `m3.large`\n    *
  `m3.xlarge`\n    * `m3.2xlarge`\n    * `t2.micro`\n    * `t2.small`\n    * `t2.medium`\n
  \   * `m2.xlarge`\n    * `m2.2xlarge`\n    * `m2.4xlarge`\n    * `cr1.8xlarge`\n
  \   * `i2.xlarge`\n    * `i2.2xlarge`\n    * `i2.4xlarge`\n    * `i2.8xlarge`\n
  \   * `hi1.4xlarge`\n    * `hs1.8xlarge`\n    * `c1.medium`\n    * `c1.xlarge`\n
  \   * `c3.large`\n    * `c3.xlarge`\n    * `c3.2xlarge`\n    * `c3.4xlarge`\n    *
  `c3.8xlarge`\n    * `cc1.4xlarge`\n    * `cc2.8xlarge`\n    * `g2.2xlarge`\n    *
  `cg1.4xlarge`\n    * `r3.large`\n    * `r3.xlarge`\n    * `r3.2xlarge`\n    * `r3.4xlarge`\n
  \   * `r3.8xlarge`\n  * `:availability_zone` - (String) The Availability Zone in
  which the Reserved Instance can be used.\n  * `:product_description` - (String)
  The Reserved Instance description. Instances that include (Amazon VPC) in the description
  are for use with Amazon VPC.  Valid values include:\n    * `Linux/UNIX`\n    * `Linux/UNIX
  (Amazon VPC)`\n    * `Windows`\n    * `Windows (Amazon VPC)`\n  * `:filters` - (Array&lt;<Hash>)
  One or more filters. availability-zone - The Availability Zone where the Reserved
  Instance can be used. duration - The duration of the Reserved Instance (for example,
  one year or three years), in seconds (31536000 | 94608000). fixed-price - The purchase
  price of the Reserved Instance (for example, 9800.0). instance-type - The instance
  type on which the Reserved Instance can be used. marketplace - Set to  `true`  to
  show only Reserved Instance Marketplace offerings. When this filter is not used,
  which is the default behavior, all offerings from AWS and Reserved Instance Marketplace
  are listed. product-description - The description of the Reserved Instance (Linux/UNIX
  | Linux/UNIX (Amazon VPC) | Windows | Windows (Amazon VPC)). reserved-instances-offering-id
  - The Reserved Instances offering ID. usage-price - The usage price of the Reserved
  Instance, per hour (for example, 0.84).\n    * `:name` - (String) The name of the
  filter.\n    * `:values` - (Array&lt;<String>) One or more filter values.\n  * `:instance_tenancy`
  - (String) The tenancy of the Reserved Instance offering. A Reserved Instance with
  dedicated tenancy runs on single-tenant hardware and can only be launched within
  a VPC. Default: default  Valid values include:\n    * `default`\n    * `dedicated`\n
  \ * `:offering_type` - (String) The Reserved Instance offering type. If you are
  using tools that predate the 2011-11-01 API version, you only have access to the
  Medium Utilization Reserved Instance offering type.  Valid values include:\n    *
  `Heavy Utilization`\n    * `Medium Utilization`\n    * `Light Utilization`\n  *
  `:next_token` - (String) The token to use when requesting the next paginated set
  of offerings.\n  * `:max_results` - (Integer) The maximum number of offerings to
  return. The maximum is 100. Default: 100\n  * `:include_marketplace` - (Boolean)
  Include Marketplace offerings in the response.\n  * `:min_duration` - (Integer)
  The minimum duration (in seconds) to filter when searching for offerings. Default:
  2592000 (1 month)\n  * `:max_duration` - (Integer) The maximum duration (in seconds)
  to filter when searching for offerings. Default: 94608000 (3 years)\n  * `:max_instance_count`
  - (Integer) The maximum number of instances to filter when searching for offerings.
  Default: 20\n@return [Core::Response] The `#data` method of the response object
  returns a hash with the following structure:\n\n  * `:reserved_instances_offerings_set`
  - (Array<Hash>)\n    * `:reserved_instances_offering_id` - (String)\n    * `:instance_type`
  - (String)\n    * `:availability_zone` - (String)\n    * `:duration` - (Integer)\n
  \   * `:usage_price` - (Numeric)\n    * `:fixed_price` - (Numeric)\n    * `:product_description`
  - (String)\n    * `:instance_tenancy` - (String)\n    * `:currency_code` - (String)\n
  \   * `:offering_type` - (String)\n    * `:recurring_charges` - (Array<Hash>)\n
  \     * `:frequency` - (String)\n      * `:amount` - (Numeric)\n    * `:marketplace`
  - (Boolean)\n    * `:pricing_details_set` - (Array<Hash>)\n      * `:price` - (Numeric)\n
  \     * `:count` - (Integer)\n  * `:next_token` - (String)"
:describe_route_tables: "Calls the DescribeRouteTables API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:route_table_ids` - (Array&lt;<String>)
  One or more route table IDs. Default: Describes all your route tables.\n  * `:filters`
  - (Array&lt;<Hash>) One or more filters. association.route-table-association-id
  - The ID of an association ID for the route table. association.route-table-id -
  The ID of the route table involved in the association. association.subnet-id - The
  ID of the subnet involved in the association. association.main - Indicates whether
  the route table is the main route table for the VPC. route-table-id - The ID of
  the route table. route.destination-cidr-block - The CIDR range specified in a route
  in the table. route.gateway-id - The ID of a gateway specified in a route in the
  table. route.instance-id - The ID of an instance specified in a route in the table.
  route.origin - Describes how the route was created. CreateRouteTable indicates that
  the route was automatically created when the route table was created; CreateRoute
  indicates that the route was manually added to the route table; EnableVgwRoutePropagation
  indicates that the route was propagated by route propagation. route.state - The
  state of a route in the route table (active | blackhole). The blackhole state indicates
  that the route's target isn't available (for example, the specified gateway isn't
  attached to the VPC, the specified NAT instance has been terminated, and so on).
  route.vpc-peering-connection-id - The ID of a VPC peering connection specified in
  a route in the table. tag:key=value - The key/value combination of a tag assigned
  to the resource. tag-key - The key of a tag assigned to the resource. This filter
  is independent of the tag-value filter. For example, if you use both the filter
  \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned
  both the tag key Purpose (regardless of what the tag's value is), and the tag value
  X (regardless of what the tag's key is). If you want to list only resources where
  Purpose is X, see the tag:key=value filter. tag-value - The value of a tag assigned
  to the resource. This filter is independent of the tag-key filter. vpc-id - The
  ID of the VPC for the route table.\n    * `:name` - (String) The name of the filter.\n
  \   * `:values` - (Array&lt;<String>) One or more filter values.\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:route_table_set` - (Array<Hash>)\n    * `:route_table_id` - (String)\n    *
  `:vpc_id` - (String)\n    * `:route_set` - (Array<Hash>)\n      * `:destination_cidr_block`
  - (String)\n      * `:gateway_id` - (String)\n      * `:instance_id` - (String)\n
  \     * `:instance_owner_id` - (String)\n      * `:network_interface_id` - (String)\n
  \     * `:vpc_peering_connection_id` - (String)\n      * `:state` - (String)\n      *
  `:origin` - (String)\n    * `:association_set` - (Array<Hash>)\n      * `:route_table_association_id`
  - (String)\n      * `:route_table_id` - (String)\n      * `:subnet_id` - (String)\n
  \     * `:main` - (Boolean)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` -
  (String)\n      * `:value` - (String)\n    * `:propagating_vgw_set` - (Array<Hash>)\n
  \     * `:gateway_id` - (String)"
:describe_security_groups: "Calls the DescribeSecurityGroups API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:group_names` - (Array&lt;<String>)
  [EC2-Classic, default VPC] One or more security group names. You can specify either
  the security group name or the security group ID. Default: Describes all your security
  groups.\n  * `:group_ids` - (Array&lt;<String>) One or more security group IDs.
  Required for nondefault VPCs. Default: Describes all your security groups.\n  *
  `:filters` - (Array&lt;<Hash>) One or more filters. description - The description
  of the security group. group-id - The ID of the security group. group-name - The
  name of the security group. ip-permission.cidr - A CIDR range that has been granted
  permission. ip-permission.from-port - The start of port range for the TCP and UDP
  protocols, or an ICMP type number. ip-permission.group-id - The ID of a security
  group that has been granted permission. ip-permission.group-name - The name of a
  security group that has been granted permission. ip-permission.protocol - The IP
  protocol for the permission (tcp | udp | icmp or a protocol number). ip-permission.to-port
  - The end of port range for the TCP and UDP protocols, or an ICMP code. ip-permission.user-id
  - The ID of an AWS account that has been granted permission. owner-id - The AWS
  account ID of the owner of the security group. tag-key - The key of a tag assigned
  to the security group. tag-value - The value of a tag assigned to the security group.
  vpc-id - The ID of the VPC specified when the security group was created.\n    *
  `:name` - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>)
  One or more filter values.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:security_group_info`
  - (Array<Hash>)\n    * `:owner_id` - (String)\n    * `:group_name` - (String)\n
  \   * `:group_id` - (String)\n    * `:group_description` - (String)\n    * `:ip_permissions`
  - (Array<Hash>)\n      * `:ip_protocol` - (String)\n      * `:from_port` - (Integer)\n
  \     * `:to_port` - (Integer)\n      * `:groups` - (Array<Hash>)\n        * `:user_id`
  - (String)\n        * `:group_name` - (String)\n        * `:group_id` - (String)\n
  \     * `:ip_ranges` - (Array<Hash>)\n        * `:cidr_ip` - (String)\n    * `:ip_permissions_egress`
  - (Array<Hash>)\n      * `:ip_protocol` - (String)\n      * `:from_port` - (Integer)\n
  \     * `:to_port` - (Integer)\n      * `:groups` - (Array<Hash>)\n        * `:user_id`
  - (String)\n        * `:group_name` - (String)\n        * `:group_id` - (String)\n
  \     * `:ip_ranges` - (Array<Hash>)\n        * `:cidr_ip` - (String)\n    * `:vpc_id`
  - (String)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      *
  `:value` - (String)"
:describe_snapshot_attribute: "Calls the DescribeSnapshotAttribute API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:snapshot_id` - *required* - (String)
  The ID of the Amazon EBS snapshot.\n  * `:attribute` - *required* - (String) The
  snapshot attribute you would like to view.  Valid values include:\n    * `productCodes`\n
  \   * `createVolumePermission`\n@return [Core::Response] The `#data` method of the
  response object returns a hash with the following structure:\n\n  * `:snapshot_id`
  - (String)\n  * `:create_volume_permission` - (Array<Hash>)\n    * `:user_id` -
  (String)\n    * `:group` - (String)\n  * `:product_codes` - (Array<Hash>)\n    *
  `:product_code` - (String)\n    * `:type` - (String)"
:describe_snapshots: "Calls the DescribeSnapshots API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:snapshot_ids` - (Array&lt;<String>) One or more
  snapshot IDs. Default: Describes snapshots for which you have launch permissions.\n
  \ * `:owner_ids` - (Array&lt;<String>) Returns the snapshots owned by the specified
  owner. Multiple owners can be specified.\n  * `:restorable_by_user_ids` - (Array&lt;<String>)
  One or more AWS accounts IDs that can create volumes from the snapshot.\n  * `:filters`
  - (Array&lt;<Hash>) One or more filters. description - A description of the snapshot.
  owner-alias - The AWS account alias (for example, amazon) that owns the snapshot.
  owner-id - The ID of the AWS account that owns the snapshot. progress - The progress
  of the snapshot, as a percentage (for example, 80%). snapshot-id - The snapshot
  ID. start-time - The time stamp when the snapshot was initiated. status - The status
  of the snapshot (pending | completed | error). tag:key=value - The key/value combination
  of a tag assigned to the resource. tag-key - The key of a tag assigned to the resource.
  This filter is independent of the tag-value filter. For example, if you use both
  the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources
  assigned both the tag key Purpose (regardless of what the tag's value is), and the
  tag value X (regardless of what the tag's key is). If you want to list only resources
  where Purpose is X, see the tag:key=value filter. tag-value - The value of a tag
  assigned to the resource. This filter is independent of the tag-key filter. volume-id
  - The ID of the volume the snapshot is for. volume-size - The size of the volume,
  in GiB.\n    * `:name` - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>)
  One or more filter values.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:snapshot_set` - (Array<Hash>)\n
  \   * `:snapshot_id` - (String)\n    * `:volume_id` - (String)\n    * `:status`
  - (String)\n    * `:start_time` - (Time)\n    * `:progress` - (String)\n    * `:owner_id`
  - (String)\n    * `:description` - (String)\n    * `:volume_size` - (Integer)\n
  \   * `:owner_alias` - (String)\n    * `:tag_set` - (Array<Hash>)\n      * `:key`
  - (String)\n      * `:value` - (String)\n    * `:encrypted` - (Boolean)"
:describe_spot_datafeed_subscription: "Calls the DescribeSpotDatafeedSubscription
  API operation.\n@param [Hash] options\n  * `:dry_run` - (Boolean) \n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:spot_datafeed_subscription` - (Hash)\n    * `:owner_id` - (String)\n    *
  `:bucket` - (String)\n    * `:prefix` - (String)\n    * `:state` - (String)\n    *
  `:fault` - (Hash)\n      * `:code` - (String)\n      * `:message` - (String)"
:describe_spot_instance_requests: "Calls the DescribeSpotInstanceRequests API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:spot_instance_request_ids` -
  (Array&lt;<String>) One or more Spot Instance request IDs.\n  * `:filters` - (Array&lt;<Hash>)
  One or more filters. availability-zone-group - The Availability Zone group. create-time
  - The time stamp when the Spot Instance request was created. fault-code - The fault
  code related to the request. fault-message - The fault message related to the request.
  instance-id - The ID of the instance that fulfilled the request. launch-group -
  The Spot Instance launch group. launch.block-device-mapping.delete-on-termination
  - Indicates whether the Amazon EBS volume is deleted on instance termination. launch.block-device-mapping.device-name
  - The device name for the Amazon EBS volume (for example, /dev/sdh). launch.block-device-mapping.snapshot-id
  - The ID of the snapshot used for the Amazon EBS volume. launch.block-device-mapping.volume-size
  - The size of the Amazon EBS volume, in GiB. launch.block-device-mapping.volume-type
  - The type of the Amazon EBS volume (gp2 | standard | io1). launch.group-id - The
  security group for the instance. launch.image-id - The ID of the AMI. launch.instance-type
  - The type of instance (for example, m1.small). launch.kernel-id - The kernel ID.
  launch.key-name - The name of the key pair the instance launched with. launch.monitoring-enabled
  - Whether monitoring is enabled for the Spot Instance. launch.ramdisk-id - The RAM
  disk ID. network-interface.network-interface-id - The ID of the network interface.
  network-interface.device-index - The index of the device for the network interface
  attachment on the instance. network-interface.subnet-id - The ID of the subnet for
  the instance. network-interface.description - A description of the network interface.
  network-interface.private-ip-address - The primary private IP address of the network
  interface. network-interface.delete-on-termination - Indicates whether the network
  interface is deleted when the instance is terminated. network-interface.group-id
  - The ID of the security group associated with the network interface. network-interface.group-name
  - The name of the security group associated with the network interface. network-interface.addresses.primary
  - Indicates whether the IP address is the primary private IP address. product-description
  - The product description associated with the instance (Linux/UNIX | Windows). spot-instance-request-id
  - The Spot Instance request ID. spot-price - The maximum hourly price for any Spot
  Instance launched to fulfill the request. state - The state of the Spot Instance
  request (open | active | closed | cancelled | failed). Spot bid status information
  can help you track your Amazon EC2 Spot Instance requests. For information, see
  Tracking Spot Requests with Bid Status Codes in the Amazon Elastic Compute Cloud
  User Guide for Linux. status-code - The short code describing the most recent evaluation
  of your Spot Instance request. status-message - The message explaining the status
  of the Spot Instance request. tag:key=value - The key/value combination of a tag
  assigned to the resource. tag-key - The key of a tag assigned to the resource. This
  filter is independent of the tag-value filter. For example, if you use both the
  filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources
  assigned both the tag key Purpose (regardless of what the tag's value is), and the
  tag value X (regardless of what the tag's key is). If you want to list only resources
  where Purpose is X, see the tag:key=value filter. tag-value - The value of a tag
  assigned to the resource. This filter is independent of the tag-key filter. type
  - The type of Spot Instance request (one-time | persistent). launched-availability-zone
  - The Availability Zone in which the bid is launched. valid-from - The start date
  of the request. valid-until - The end date of the request.\n    * `:name` - (String)
  The name of the filter.\n    * `:values` - (Array&lt;<String>) One or more filter
  values.\n@return [Core::Response] The `#data` method of the response object returns
  a hash with the following structure:\n\n  * `:spot_instance_request_set` - (Array<Hash>)\n
  \   * `:spot_instance_request_id` - (String)\n    * `:spot_price` - (String)\n    *
  `:type` - (String)\n    * `:state` - (String)\n    * `:fault` - (Hash)\n      *
  `:code` - (String)\n      * `:message` - (String)\n    * `:status` - (Hash)\n      *
  `:code` - (String)\n      * `:update_time` - (Time)\n      * `:message` - (String)\n
  \   * `:valid_from` - (Time)\n    * `:valid_until` - (Time)\n    * `:launch_group`
  - (String)\n    * `:availability_zone_group` - (String)\n    * `:launch_specification`
  - (Hash)\n      * `:image_id` - (String)\n      * `:key_name` - (String)\n      *
  `:group_set` - (Array<Hash>)\n        * `:group_name` - (String)\n        * `:group_id`
  - (String)\n      * `:user_data` - (String)\n      * `:addressing_type` - (String)\n
  \     * `:instance_type` - (String)\n      * `:placement` - (Hash)\n        * `:availability_zone`
  - (String)\n        * `:group_name` - (String)\n      * `:kernel_id` - (String)\n
  \     * `:ramdisk_id` - (String)\n      * `:block_device_mapping` - (Array<Hash>)\n
  \       * `:virtual_name` - (String)\n        * `:device_name` - (String)\n        *
  `:ebs` - (Hash)\n          * `:snapshot_id` - (String)\n          * `:volume_size`
  - (Integer)\n          * `:delete_on_termination` - (Boolean)\n          * `:volume_type`
  - (String)\n          * `:iops` - (Integer)\n          * `:encrypted` - (Boolean)\n
  \       * `:no_device` - (String)\n      * `:monitoring_enabled` - (Boolean)\n      *
  `:subnet_id` - (String)\n      * `:network_interface_set` - (Array<Hash>)\n        *
  `:network_interface_id` - (String)\n        * `:device_index` - (Integer)\n        *
  `:subnet_id` - (String)\n        * `:description` - (String)\n        * `:private_ip_address`
  - (String)\n        * `:security_group_id` - (Array<String>)\n        * `:delete_on_termination`
  - (Boolean)\n        * `:private_ip_addresses_set` - (Array<Hash>)\n          *
  `:private_ip_address` - (String)\n          * `:primary` - (Boolean)\n        *
  `:secondary_private_ip_address_count` - (Integer)\n        * `:associate_public_ip_address`
  - (Boolean)\n      * `:iam_instance_profile` - (Hash)\n        * `:arn` - (String)\n
  \       * `:name` - (String)\n      * `:ebs_optimized` - (Boolean)\n    * `:instance_id`
  - (String)\n    * `:create_time` - (Time)\n    * `:product_description` - (String)\n
  \   * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` -
  (String)\n    * `:launched_availability_zone` - (String)"
:describe_spot_price_history: "Calls the DescribeSpotPriceHistory API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:start_time` - (String&lt;<ISO8601
  datetime>) The start date and time of the Spot Price history data.\n  * `:end_time`
  - (String&lt;<ISO8601 datetime>) The end date and time of the Spot Price history
  data.\n  * `:instance_types` - (Array&lt;<String>) One or more instance types.\n
  \ * `:product_descriptions` - (Array&lt;<String>) One or more basic product descriptions.\n
  \ * `:filters` - (Array&lt;<Hash>) One or more filters. availability-zone - The
  Availability Zone for which prices should be returned. instance-type - The type
  of instance (for example, m1.small). product-description - The product description
  for the Spot Price (Linux/UNIX | SUSE Linux | Windows | Linux/UNIX (Amazon VPC)
  | SUSE Linux (Amazon VPC) | Windows (Amazon VPC)). spot-price - The Spot Price.
  The value must match exactly (or use wildcards; greater than or less than comparison
  is not supported). timestamp - The timestamp of the Spot Price history (for example,
  2010-08-16T05:06:11.000Z). You can use wildcards (* and ?). Greater than or less
  than comparison is not supported.\n    * `:name` - (String) The name of the filter.\n
  \   * `:values` - (Array&lt;<String>) One or more filter values.\n  * `:availability_zone`
  - (String) The Availability Zone.\n  * `:max_results` - (Integer) The number of
  rows to return.\n  * `:next_token` - (String) The next set of rows to return.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:spot_price_history_set` - (Array<Hash>)\n    * `:instance_type`
  - (String)\n    * `:product_description` - (String)\n    * `:spot_price` - (String)\n
  \   * `:timestamp` - (Time)\n    * `:availability_zone` - (String)\n  * `:next_token`
  - (String)"
:describe_subnets: "Calls the DescribeSubnets API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:subnet_ids` - (Array&lt;<String>) One or more
  subnet IDs. Default: Describes all your subnets.\n  * `:filters` - (Array&lt;<Hash>)
  One or more filters. availabilityZone - The Availability Zone for the subnet. You
  can also use availability-zone as the filter name. available-ip-address-count -
  The number of IP addresses in the subnet that are available. cidrBlock - The CIDR
  block of the subnet. The CIDR block you specify must exactly match the subnet's
  CIDR block for information to be returned for the subnet. You can also use cidr
  or cidr-block as the filter names. defaultForAz - Indicates whether this is the
  default subnet for the Availability Zone. You can also use default-for-az as the
  filter name. state - The state of the subnet (pending | available). subnet-id -
  The ID of the subnet. tag:key=value - The key/value combination of a tag assigned
  to the resource. tag-key - The key of a tag assigned to the resource. This filter
  is independent of the tag-value filter. For example, if you use both the filter
  \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned
  both the tag key Purpose (regardless of what the tag's value is), and the tag value
  X (regardless of what the tag's key is). If you want to list only resources where
  Purpose is X, see the tag:key=value filter. tag-value - The value of a tag assigned
  to the resource. This filter is independent of the tag-key filter. vpc-id - The
  ID of the VPC for the subnet.\n    * `:name` - (String) The name of the filter.\n
  \   * `:values` - (Array&lt;<String>) One or more filter values.\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:subnet_set` - (Array<Hash>)\n    * `:subnet_id` - (String)\n    * `:state`
  - (String)\n    * `:vpc_id` - (String)\n    * `:cidr_block` - (String)\n    * `:available_ip_address_count`
  - (Integer)\n    * `:availability_zone` - (String)\n    * `:default_for_az` - (Boolean)\n
  \   * `:map_public_ip_on_launch` - (Boolean)\n    * `:tag_set` - (Array<Hash>)\n
  \     * `:key` - (String)\n      * `:value` - (String)"
:describe_tags: "Calls the DescribeTags API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:filters` - (Array&lt;<Hash>) One or more filters.
  key - The tag key. resource-id - The resource ID. resource-type - The resource type
  (customer-gateway | dhcp-options | image | instance | internet-gateway | network-acl
  | network-interface | reserved-instances | route-table | security-group | snapshot
  | spot-instances-request | subnet | volume | vpc | vpn-connection | vpn-gateway).
  value - The tag value.\n    * `:name` - (String) The name of the filter.\n    *
  `:values` - (Array&lt;<String>) One or more filter values.\n  * `:max_results` -
  (Integer) The maximum number of items to return for this call. The call also returns
  a token that you can specify in a subsequent call to get the next set of results.
  If the value is greater than 1000, we return only 1000 items.\n  * `:next_token`
  - (String) The token for the next set of items to return. (You received this token
  from a prior call.)\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:tag_set` - (Array<Hash>)\n
  \   * `:resource_id` - (String)\n    * `:resource_type` - (String)\n    * `:key`
  - (String)\n    * `:value` - (String)\n  * `:next_token` - (String)"
:describe_volume_attribute: "Calls the DescribeVolumeAttribute API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:volume_id` - *required* - (String)
  The ID of the volume.\n  * `:attribute` - (String) The instance attribute.  Valid
  values include:\n    * `autoEnableIO`\n    * `productCodes`\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:volume_id` - (String)\n  * `:auto_enable_io` - (Hash)\n    * `:value` - (Boolean)\n
  \ * `:product_codes` - (Array<Hash>)\n    * `:product_code` - (String)\n    * `:type`
  - (String)"
:describe_volume_status: "Calls the DescribeVolumeStatus API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:volume_ids` - (Array&lt;<String>) One
  or more volume IDs. Default: Describes all your volumes.\n  * `:filters` - (Array&lt;<Hash>)
  One or more filters. action.code - The action code for the event (for example, enable-volume-io).
  action.description - A description of the action. action.event-id - The event ID
  associated with the action. availability-zone - The Availability Zone of the instance.
  event.description - A description of the event. event.event-id - The event ID. event.event-type
  - The event type (for io-enabled: passed | failed; for io-performance: io-performance:degraded
  | io-performance:severely-degraded | io-performance:stalled). event.not-after -
  The latest end time for the event. event.not-before - The earliest start time for
  the event. volume-status.details-name - The cause for volume-status.status (io-enabled
  | io-performance). volume-status.details-status - The status of volume-status.details-name
  (for io-enabled: passed | failed; for io-performance: normal | degraded | severely-degraded
  | stalled). volume-status.status - The status of the volume (ok | impaired | warning
  | insufficient-data).\n    * `:name` - (String) The name of the filter.\n    * `:values`
  - (Array&lt;<String>) One or more filter values.\n  * `:next_token` - (String) The
  next paginated set of results to return using the pagination token returned by a
  previous call.\n  * `:max_results` - (Integer) The maximum number of paginated volume
  items per response.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:volume_status_set`
  - (Array<Hash>)\n    * `:volume_id` - (String)\n    * `:availability_zone` - (String)\n
  \   * `:volume_status` - (Hash)\n      * `:status` - (String)\n      * `:details`
  - (Array<Hash>)\n        * `:name` - (String)\n        * `:status` - (String)\n
  \   * `:events_set` - (Array<Hash>)\n      * `:event_type` - (String)\n      * `:description`
  - (String)\n      * `:not_before` - (Time)\n      * `:not_after` - (Time)\n      *
  `:event_id` - (String)\n    * `:actions_set` - (Array<Hash>)\n      * `:code` -
  (String)\n      * `:description` - (String)\n      * `:event_type` - (String)\n
  \     * `:event_id` - (String)\n  * `:next_token` - (String)"
:describe_volumes: "Calls the DescribeVolumes API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:volume_ids` - (Array&lt;<String>) One or more
  volume IDs.\n  * `:filters` - (Array&lt;<Hash>) One or more filters. attachment.attach-time
  - The time stamp when the attachment initiated. attachment.delete-on-termination
  - Whether the volume is deleted on instance termination. attachment.device - The
  device name that is exposed to the instance (for example, /dev/sda1). attachment.instance-id
  - The ID of the instance the volume is attached to. attachment.status - The attachment
  state (attaching | attached | detaching | detached). availability-zone - The Availability
  Zone in which the volume was created. create-time - The time stamp when the volume
  was created. encrypted - The encryption status of the volume. size - The size of
  the volume, in GiB. snapshot-id - The snapshot from which the volume was created.
  status - The status of the volume (creating | available | in-use | deleting | deleted
  | error). tag:key=value - The key/value combination of a tag assigned to the resource.
  tag-key - The key of a tag assigned to the resource. This filter is independent
  of the tag-value filter. For example, if you use both the filter \"tag-key=Purpose\"
  and the filter \"tag-value=X\", you get any resources assigned both the tag key
  Purpose (regardless of what the tag's value is), and the tag value X (regardless
  of what the tag's key is). If you want to list only resources where Purpose is X,
  see the tag:key=value filter. tag-value - The value of a tag assigned to the resource.
  This filter is independent of the tag-key filter. volume-id - The volume ID. volume-type
  - The Amazon EBS volume type. This can be gp2 for General Purpose (SSD) volumes,
  io1 for Provisioned IOPS (SSD) volumes, or standard for Magnetic volumes.\n    *
  `:name` - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>)
  One or more filter values.\n  * `:next_token` - (String) The NextToken value returned
  from a previous paginated DescribeVolumes request where MaxResults was used and
  the results exceeded the value of that parameter. Pagination continues from the
  end of the previous results that returned the NextToken value. This value is null
  when there are no more results to return.\n  * `:max_results` - (Integer) The maximum
  number of volume results returned by DescribeVolumes in paginated output. When this
  parameter is used, DescribeVolumes only returns MaxResults results in a single page
  along with a NextToken response element. The remaining results of the initial request
  can be seen by sending another DescribeVolumes request with the returned NextToken
  value. This value can be between 5 and 1000; if MaxResults is given a value larger
  than 1000, only 1000 results are returned. If this parameter is not used, then DescribeVolumes
  returns all results.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:volume_set` - (Array<Hash>)\n
  \   * `:volume_id` - (String)\n    * `:size` - (Integer)\n    * `:snapshot_id` -
  (String)\n    * `:availability_zone` - (String)\n    * `:status` - (String)\n    *
  `:create_time` - (Time)\n    * `:attachment_set` - (Array<Hash>)\n      * `:volume_id`
  - (String)\n      * `:instance_id` - (String)\n      * `:device` - (String)\n      *
  `:status` - (String)\n      * `:attach_time` - (Time)\n      * `:delete_on_termination`
  - (Boolean)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      *
  `:value` - (String)\n    * `:volume_type` - (String)\n    * `:iops` - (Integer)\n
  \   * `:encrypted` - (Boolean)\n  * `:next_token` - (String)"
:describe_vpc_attribute: "Calls the DescribeVpcAttribute API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:vpc_id` - *required* - (String) The
  ID of the VPC.\n  * `:attribute` - (String) The VPC attribute.  Valid values include:\n
  \   * `enableDnsSupport`\n    * `enableDnsHostnames`\n@return [Core::Response] The
  `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:vpc_id` - (String)\n  * `:enable_dns_support` - (Hash)\n    * `:value` - (Boolean)\n
  \ * `:enable_dns_hostnames` - (Hash)\n    * `:value` - (Boolean)"
:describe_vpc_peering_connections: "Calls the DescribeVpcPeeringConnections API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:vpc_peering_connection_ids` -
  (Array&lt;<String>) One or more VPC peering connection IDs. Default: Describes all
  your VPC peering connections.\n  * `:filters` - (Array&lt;<Hash>) One or more filters.
  accepter-vpc-info.cidr-block - The CIDR block of the peer VPC. accepter-vpc-info.owner-id
  - The AWS account ID of the owner of the peer VPC. accepter-vpc-info.vpc-id - The
  ID of the peer VPC. expiration-time - The expiration date and time for the VPC peering
  connection. requester-vpc-info.cidr-block - The CIDR block of the requester's VPC.
  requester-vpc-info.owner-id - The AWS account ID of the owner of the requester VPC.
  requester-vpc-info.vpc-id - The ID of the requester VPC. status-code - The status
  of the VPC peering connection (pending-acceptance | failed | expired | provisioning
  | active | deleted | rejected). status-message - A message that provides more information
  about the status of the VPC peering connection, if applicable. tag:key=value - The
  key/value combination of a tag assigned to the resource. tag-key - The key of a
  tag assigned to the resource. This filter is independent of the tag-value filter.
  For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\",
  you get any resources assigned both the tag key Purpose (regardless of what the
  tag's value is), and the tag value X (regardless of what the tag's key is). If you
  want to list only resources where Purpose is X, see the tag:key=value filter. tag-value
  - The value of a tag assigned to the resource. This filter is independent of the
  tag-key filter. vpc-peering-connection-id - The ID of the VPC peering connection.\n
  \   * `:name` - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>)
  One or more filter values.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:vpc_peering_connection_set`
  - (Array<Hash>)\n    * `:accepter_vpc_info` - (Hash)\n      * `:cidr_block` - (String)\n
  \     * `:owner_id` - (String)\n      * `:vpc_id` - (String)\n    * `:expiration_time`
  - (Time)\n    * `:requester_vpc_info` - (Hash)\n      * `:cidr_block` - (String)\n
  \     * `:owner_id` - (String)\n      * `:vpc_id` - (String)\n    * `:status` -
  (Hash)\n      * `:code` - (String)\n      * `:message` - (String)\n    * `:tag_set`
  - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` - (String)\n    * `:vpc_peering_connection_id`
  - (String)"
:describe_vpcs: "Calls the DescribeVpcs API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:vpc_ids` - (Array&lt;<String>) One or more VPC IDs.
  Default: Describes all your VPCs.\n  * `:filters` - (Array&lt;<Hash>) One or more
  filters. cidr - The CIDR block of the VPC. The CIDR block you specify must exactly
  match the VPC's CIDR block for information to be returned for the VPC. Must contain
  the slash followed by one or two digits (for example, /28). dhcp-options-id - The
  ID of a set of DHCP options. isDefault - Indicates whether the VPC is the default
  VPC. state - The state of the VPC (pending | available). tag:key=value - The key/value
  combination of a tag assigned to the resource. tag-key - The key of a tag assigned
  to the resource. This filter is independent of the tag-value filter. For example,
  if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you
  get any resources assigned both the tag key Purpose (regardless of what the tag's
  value is), and the tag value X (regardless of what the tag's key is). If you want
  to list only resources where Purpose is X, see the tag:key=value filter. tag-value
  - The value of a tag assigned to the resource. This filter is independent of the
  tag-key filter. vpc-id - The ID of the VPC.\n    * `:name` - (String) The name of
  the filter.\n    * `:values` - (Array&lt;<String>) One or more filter values.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:vpc_set` - (Array<Hash>)\n    * `:vpc_id` - (String)\n
  \   * `:state` - (String)\n    * `:cidr_block` - (String)\n    * `:dhcp_options_id`
  - (String)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      *
  `:value` - (String)\n    * `:instance_tenancy` - (String)\n    * `:is_default` -
  (Boolean)"
:describe_vpn_connections: "Calls the DescribeVpnConnections API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:vpn_connection_ids` - (Array&lt;<String>)
  One or more VPN connection IDs. Default: Describes your VPN connections.\n  * `:filters`
  - (Array&lt;<Hash>) One or more filters. customer-gateway-configuration - The configuration
  information for the customer gateway. customer-gateway-id - The ID of a customer
  gateway associated with the VPN connection. state - The state of the VPN connection
  (pending | available | deleting | deleted). option.static-routes-only - Indicates
  whether the connection has static routes only. Used for devices that do not support
  Border Gateway Protocol (BGP). route.destination-cidr-block - The destination CIDR
  block. This corresponds to the subnet used in a customer data center. bgp-asn -
  The BGP Autonomous System Number (ASN) associated with a BGP device. tag:key=value
  - The key/value combination of a tag assigned to the resource. tag-key - The key
  of a tag assigned to the resource. This filter is independent of the tag-value filter.
  For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\",
  you get any resources assigned both the tag key Purpose (regardless of what the
  tag's value is), and the tag value X (regardless of what the tag's key is). If you
  want to list only resources where Purpose is X, see the tag:key=value filter. tag-value
  - The value of a tag assigned to the resource. This filter is independent of the
  tag-key filter. type - The type of VPN connection. Currently the only supported
  type is ipsec.1. vpn-connection-id - The ID of the VPN connection. vpn-gateway-id
  - The ID of a virtual private gateway associated with the VPN connection.\n    *
  `:name` - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>)
  One or more filter values.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:vpn_connection_set`
  - (Array<Hash>)\n    * `:vpn_connection_id` - (String)\n    * `:state` - (String)\n
  \   * `:customer_gateway_configuration` - (String)\n    * `:vpn_type` - (String)\n
  \   * `:customer_gateway_id` - (String)\n    * `:vpn_gateway_id` - (String)\n    *
  `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` - (String)\n
  \   * `:vgw_telemetry` - (Array<Hash>)\n      * `:outside_ip_address` - (String)\n
  \     * `:status` - (String)\n      * `:last_status_change` - (Time)\n      * `:status_message`
  - (String)\n      * `:accepted_route_count` - (Integer)\n    * `:options` - (Hash)\n
  \     * `:static_routes_only` - (Boolean)\n    * `:routes` - (Array<Hash>)\n      *
  `:destination_cidr_block` - (String)\n      * `:source` - (String)\n      * `:state`
  - (String)"
:describe_vpn_gateways: "Calls the DescribeVpnGateways API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:vpn_gateway_ids` - (Array&lt;<String>)
  One or more virtual private gateway IDs. Default: Describes all your virtual private
  gateways.\n  * `:filters` - (Array&lt;<Hash>) One or more filters. attachment.state
  - The current state of the attachment between the gateway and the VPC (attaching
  | attached | detaching | detached). attachment.vpc-id - The ID of an attached VPC.
  availability-zone - The Availability Zone for the virtual private gateway. state
  - The state of the virtual private gateway (pending | available | deleting | deleted).
  tag:key=value - The key/value combination of a tag assigned to the resource. tag-key
  - The key of a tag assigned to the resource. This filter is independent of the tag-value
  filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter
  \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless
  of what the tag's value is), and the tag value X (regardless of what the tag's key
  is). If you want to list only resources where Purpose is X, see the tag:key=value
  filter. tag-value - The value of a tag assigned to the resource. This filter is
  independent of the tag-key filter. type - The type of virtual private gateway. Currently
  the only supported type is ipsec.1. vpn-gateway-id - The ID of the virtual private
  gateway.\n    * `:name` - (String) The name of the filter.\n    * `:values` - (Array&lt;<String>)
  One or more filter values.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:vpn_gateway_set` -
  (Array<Hash>)\n    * `:vpn_gateway_id` - (String)\n    * `:state` - (String)\n    *
  `:vpn_type` - (String)\n    * `:availability_zone` - (String)\n    * `:attachments`
  - (Array<Hash>)\n      * `:vpc_id` - (String)\n      * `:state` - (String)\n    *
  `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` - (String)"
:detach_internet_gateway: "Calls the DetachInternetGateway API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:internet_gateway_id` - *required*
  - (String) The ID of the Internet gateway.\n  * `:vpc_id` - *required* - (String)
  The ID of the VPC.\n@return [Core::Response]"
:detach_network_interface: "Calls the DetachNetworkInterface API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:attachment_id` - *required* -
  (String) The ID of the attachment.\n  * `:force` - (Boolean) Specifies whether to
  force a detachment.\n@return [Core::Response]"
:detach_volume: "Calls the DetachVolume API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:volume_id` - *required* - (String) The ID of the
  volume.\n  * `:instance_id` - (String) The ID of the instance.\n  * `:device` -
  (String) The device name.\n  * `:force` - (Boolean) Forces detachment if the previous
  detachment attempt did not occur cleanly (for example, logging into an instance,
  unmounting the volume, and detaching normally). This option can lead to data loss
  or a corrupted file system. Use this option only as a last resort to detach a volume
  from a failed instance. The instance won't have an opportunity to flush file system
  caches or file system metadata. If you use this option, you must perform file system
  check and repair procedures.\n@return [Core::Response] The `#data` method of the
  response object returns a hash with the following structure:\n\n  * `:volume_id`
  - (String)\n  * `:instance_id` - (String)\n  * `:device` - (String)\n  * `:status`
  - (String)\n  * `:attach_time` - (Time)\n  * `:delete_on_termination` - (Boolean)"
:detach_vpn_gateway: "Calls the DetachVpnGateway API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:vpn_gateway_id` - *required* - (String) The ID
  of the virtual private gateway.\n  * `:vpc_id` - *required* - (String) The ID of
  the VPC.\n@return [Core::Response]"
:disable_vgw_route_propagation: |-
  Calls the DisableVgwRoutePropagation API operation.
  @param [Hash] options
    * `:route_table_id` - *required* - (String) The ID of the route table.
    * `:gateway_id` - *required* - (String) The ID of the virtual private gateway.
  @return [Core::Response]
:disassociate_address: "Calls the DisassociateAddress API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:public_ip` - (String) [EC2-Classic]
  The Elastic IP address. Required for EC2-Classic.\n  * `:association_id` - (String)
  [EC2-VPC] The association ID. Required for EC2-VPC.\n@return [Core::Response]"
:disassociate_route_table: "Calls the DisassociateRouteTable API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:association_id` - *required*
  - (String) The association ID representing the current association between the route
  table and subnet.\n@return [Core::Response]"
:enable_vgw_route_propagation: |-
  Calls the EnableVgwRoutePropagation API operation.
  @param [Hash] options
    * `:route_table_id` - *required* - (String) The ID of the route table.
    * `:gateway_id` - *required* - (String) The ID of the virtual private gateway.
  @return [Core::Response]
:enable_volume_io: "Calls the EnableVolumeIO API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:volume_id` - *required* - (String) The ID of
  the volume.\n@return [Core::Response]"
:get_console_output: "Calls the GetConsoleOutput API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:instance_id` - *required* - (String) The ID of
  the instance.\n@return [Core::Response] The `#data` method of the response object
  returns a hash with the following structure:\n\n  * `:instance_id` - (String)\n
  \ * `:timestamp` - (Time)\n  * `:output` - (String)"
:get_password_data: "Calls the GetPasswordData API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:instance_id` - *required* - (String) The ID of
  the Windows instance.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:instance_id` - (String)\n
  \ * `:timestamp` - (Time)\n  * `:password_data` - (String)"
:import_instance: "Calls the ImportInstance API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:description` - (String) A description for the
  instance being imported.\n  * `:launch_specification` - (Hash) \n    * `:architecture`
  - (String) The architecture of the instance.  Valid values include:\n      * `i386`\n
  \     * `x86_64`\n    * `:group_names` - (Array&lt;<String>) One or more security
  group names.\n    * `:group_ids` - (Array&lt;<String>) \n    * `:additional_info`
  - (String) \n    * `:user_data` - (String) User data to be made available to the
  instance.\n    * `:instance_type` - (String) The instance type. For more information,
  see Instance Types in the Amazon Elastic Compute Cloud User Guide.  Valid values
  include:\n      * `t1.micro`\n      * `m1.small`\n      * `m1.medium`\n      * `m1.large`\n
  \     * `m1.xlarge`\n      * `m3.medium`\n      * `m3.large`\n      * `m3.xlarge`\n
  \     * `m3.2xlarge`\n      * `t2.micro`\n      * `t2.small`\n      * `t2.medium`\n
  \     * `m2.xlarge`\n      * `m2.2xlarge`\n      * `m2.4xlarge`\n      * `cr1.8xlarge`\n
  \     * `i2.xlarge`\n      * `i2.2xlarge`\n      * `i2.4xlarge`\n      * `i2.8xlarge`\n
  \     * `hi1.4xlarge`\n      * `hs1.8xlarge`\n      * `c1.medium`\n      * `c1.xlarge`\n
  \     * `c3.large`\n      * `c3.xlarge`\n      * `c3.2xlarge`\n      * `c3.4xlarge`\n
  \     * `c3.8xlarge`\n      * `cc1.4xlarge`\n      * `cc2.8xlarge`\n      * `g2.2xlarge`\n
  \     * `cg1.4xlarge`\n      * `r3.large`\n      * `r3.xlarge`\n      * `r3.2xlarge`\n
  \     * `r3.4xlarge`\n      * `r3.8xlarge`\n    * `:placement` - (Hash) \n      *
  `:availability_zone` - (String) The Availability Zone of the instance.\n      *
  `:group_name` - (String) The name of the placement group the instance is in (for
  cluster compute instances).\n      * `:tenancy` - (String) The tenancy of the instance
  (if the instance is running in a VPC). An instance with a tenancy of dedicated runs
  on single-tenant hardware.  Valid values include:\n        * `default`\n        *
  `dedicated`\n    * `:monitoring` - (Boolean) \n    * `:subnet_id` - (String) [EC2-VPC]
  The ID of the subnet to launch the instance into.\n    * `:instance_initiated_shutdown_behavior`
  - (String) Indicates whether an instance stops or terminates when you initiate shutdown
  from the instance (using the operating system command for system shutdown).  Valid
  values include:\n      * `stop`\n      * `terminate`\n    * `:private_ip_address`
  - (String) [EC2-VPC] Optionally, you can use this parameter to assign the instance
  a specific available IP address from the IP address range of the subnet.\n  * `:disk_images`
  - (Array&lt;<Hash>) \n    * `:image` - (Hash) \n      * `:format` - *required* -
  (String) The disk image format.  Valid values include:\n        * `VMDK`\n        *
  `RAW`\n        * `VHD`\n      * `:bytes` - *required* - (Integer) \n      * `:import_manifest_url`
  - *required* - (String) A presigned URL for the import manifest stored in Amazon
  S3. For information about creating a presigned URL for an Amazon S3 object, read
  the \"Query String Request Authentication Alternative\" section of the Authenticating
  REST Requests topic in the Amazon Simple Storage Service Developer Guide.\n    *
  `:description` - (String) \n    * `:volume` - (Hash) \n      * `:size` - *required*
  - (Integer) The size of the volume, in GiB.\n  * `:platform` - *required* - (String)
  The instance operating system.  Valid values include:\n    * `Windows`\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:conversion_task` - (Hash)\n    * `:conversion_task_id`
  - (String)\n    * `:expiration_time` - (String)\n    * `:import_instance` - (Hash)\n
  \     * `:volumes` - (Array<Hash>)\n        * `:bytes_converted` - (Integer)\n        *
  `:availability_zone` - (String)\n        * `:image` - (Hash)\n          * `:format`
  - (String)\n          * `:size` - (Integer)\n          * `:import_manifest_url`
  - (String)\n          * `:checksum` - (String)\n        * `:volume` - (Hash)\n          *
  `:size` - (Integer)\n          * `:id` - (String)\n        * `:status` - (String)\n
  \       * `:status_message` - (String)\n        * `:description` - (String)\n      *
  `:instance_id` - (String)\n      * `:platform` - (String)\n      * `:description`
  - (String)\n    * `:import_volume` - (Hash)\n      * `:bytes_converted` - (Integer)\n
  \     * `:availability_zone` - (String)\n      * `:description` - (String)\n      *
  `:image` - (Hash)\n        * `:format` - (String)\n        * `:size` - (Integer)\n
  \       * `:import_manifest_url` - (String)\n        * `:checksum` - (String)\n
  \     * `:volume` - (Hash)\n        * `:size` - (Integer)\n        * `:id` - (String)\n
  \   * `:state` - (String)\n    * `:status_message` - (String)\n    * `:tag_set`
  - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` - (String)"
:import_key_pair: "Calls the ImportKeyPair API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:key_name` - *required* - (String) A unique name
  for the key pair.\n  * `:public_key_material` - *required* - (String) The public
  key. You must base64 encode the public key material before sending it to AWS.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:key_name` - (String)\n  * `:key_fingerprint` - (String)"
:import_volume: "Calls the ImportVolume API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:availability_zone` - *required* - (String) The Availability
  Zone for the resulting Amazon EBS volume.\n  * `:image` - *required* - (Hash) \n
  \   * `:format` - *required* - (String) The disk image format.  Valid values include:\n
  \     * `VMDK`\n      * `RAW`\n      * `VHD`\n    * `:bytes` - *required* - (Integer)
  \n    * `:import_manifest_url` - *required* - (String) A presigned URL for the import
  manifest stored in Amazon S3. For information about creating a presigned URL for
  an Amazon S3 object, read the \"Query String Request Authentication Alternative\"
  section of the Authenticating REST Requests topic in the Amazon Simple Storage Service
  Developer Guide.\n  * `:description` - (String) An optional description for the
  volume being imported.\n  * `:volume` - *required* - (Hash) \n    * `:size` - *required*
  - (Integer) The size of the volume, in GiB.\n@return [Core::Response] The `#data`
  method of the response object returns a hash with the following structure:\n\n  *
  `:conversion_task` - (Hash)\n    * `:conversion_task_id` - (String)\n    * `:expiration_time`
  - (String)\n    * `:import_instance` - (Hash)\n      * `:volumes` - (Array<Hash>)\n
  \       * `:bytes_converted` - (Integer)\n        * `:availability_zone` - (String)\n
  \       * `:image` - (Hash)\n          * `:format` - (String)\n          * `:size`
  - (Integer)\n          * `:import_manifest_url` - (String)\n          * `:checksum`
  - (String)\n        * `:volume` - (Hash)\n          * `:size` - (Integer)\n          *
  `:id` - (String)\n        * `:status` - (String)\n        * `:status_message` -
  (String)\n        * `:description` - (String)\n      * `:instance_id` - (String)\n
  \     * `:platform` - (String)\n      * `:description` - (String)\n    * `:import_volume`
  - (Hash)\n      * `:bytes_converted` - (Integer)\n      * `:availability_zone` -
  (String)\n      * `:description` - (String)\n      * `:image` - (Hash)\n        *
  `:format` - (String)\n        * `:size` - (Integer)\n        * `:import_manifest_url`
  - (String)\n        * `:checksum` - (String)\n      * `:volume` - (Hash)\n        *
  `:size` - (Integer)\n        * `:id` - (String)\n    * `:state` - (String)\n    *
  `:status_message` - (String)\n    * `:tag_set` - (Array<Hash>)\n      * `:key` -
  (String)\n      * `:value` - (String)"
:modify_image_attribute: "Calls the ModifyImageAttribute API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:image_id` - *required* - (String) The
  ID of the AMI.\n  * `:attribute` - (String) The name of the attribute to modify.\n
  \ * `:operation_type` - (String) The operation type.\n  * `:user_ids` - (Array&lt;<String>)
  One or more AWS account IDs. This is only valid when modifying the launchPermission
  attribute.\n  * `:user_groups` - (Array&lt;<String>) One or more user groups. This
  is only valid when modifying the launchPermission attribute.\n  * `:product_codes`
  - (Array&lt;<String>) One or more product codes. After you add a product code to
  an AMI, it can't be removed. This is only valid when modifying the productCodes
  attribute.\n  * `:value` - (String) The value of the attribute being modified. This
  is only valid when modifying the description attribute.\n  * `:launch_permission`
  - (Hash) \n    * `:add` - (Array&lt;<Hash>) The AWS account ID to add to the list
  of launch permissions for the AMI.\n      * `:user_id` - (String) The AWS account
  ID.\n      * `:group` - (String) The name of the group.  Valid values include:\n
  \       * `all`\n    * `:remove` - (Array&lt;<Hash>) The AWS account ID to remove
  from the list of launch permissions for the AMI.\n      * `:user_id` - (String)
  The AWS account ID.\n      * `:group` - (String) The name of the group.  Valid values
  include:\n        * `all`\n  * `:description` - (Hash) A description for the AMI.\n
  \   * `:value` - (String) \n@return [Core::Response]"
:modify_instance_attribute: "Calls the ModifyInstanceAttribute API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:instance_id` - *required* - (String)
  The ID of the instance.\n  * `:attribute` - (String) The name of the attribute.
  \ Valid values include:\n    * `instanceType`\n    * `kernel`\n    * `ramdisk`\n
  \   * `userData`\n    * `disableApiTermination`\n    * `instanceInitiatedShutdownBehavior`\n
  \   * `rootDeviceName`\n    * `blockDeviceMapping`\n    * `productCodes`\n    *
  `sourceDestCheck`\n    * `groupSet`\n    * `ebsOptimized`\n    * `sriovNetSupport`\n
  \ * `:value` - (String) A new value for the attribute. Use only with the kernel,
  ramdisk, userData, disableApiTermination, or intanceInitiateShutdownBehavior attribute.\n
  \ * `:block_device_mappings` - (Array&lt;<Hash>) Modifies the DeleteOnTermination
  attribute for volumes that are currently attached. The volume must be owned by the
  caller. If no value is specified for DeleteOnTermination, the default is  `true`
  \ and the volume is deleted when the instance is terminated. To add instance store
  volumes to an Amazon EBS-backed instance, you must add them when you launch the
  instance. For more information, see Updating the Block Device Mapping when Launching
  an Instance in the Amazon Elastic Compute Cloud User Guide.\n    * `:device_name`
  - (String) The device name exposed to the instance (for example, /dev/sdh).\n    *
  `:ebs` - (Hash) Parameters used to automatically set up Amazon EBS volumes when
  the instance is launched.\n      * `:volume_id` - (String) The ID of the Amazon
  EBS volume.\n      * `:delete_on_termination` - (Boolean) Indicates whether the
  volume is deleted on instance termination.\n    * `:virtual_name` - (String) The
  virtual device name.\n    * `:no_device` - (String) suppress the specified device
  included in the block device mapping.\n  * `:source_dest_check` - (Hash) Specifies
  whether source/destination checking is enabled. A value of  `true`  means that checking
  is enabled, and  `false`  means checking is disabled. This value must be  `false`
  \ for a NAT instance to perform NAT.\n    * `:value` - (Boolean) \n  * `:disable_api_termination`
  - (Hash) If the value is  `true` , you can't terminate the instance using the Amazon
  EC2 console, CLI, or API; otherwise, you can.\n    * `:value` - (Boolean) \n  *
  `:instance_type` - (Hash) Changes the instance type to the specified value. For
  more information, see Instance Types. If the instance type is not valid, the error
  returned is InvalidInstanceAttributeValue.\n    * `:value` - (String) \n  * `:kernel`
  - (Hash) Changes the instance's kernel to the specified value. We recommend that
  you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB.\n
  \   * `:value` - (String) \n  * `:ramdisk` - (Hash) Changes the instance's RAM disk
  to the specified value. We recommend that you use PV-GRUB instead of kernels and
  RAM disks. For more information, see PV-GRUB.\n    * `:value` - (String) \n  * `:user_data`
  - (Hash) Changes the instance's user data to the specified value.\n    * `:value`
  - (String) \n  * `:instance_initiated_shutdown_behavior` - (Hash) Specifies whether
  an instance stops or terminates when you initiate shutdown from the instance (using
  the operating system command for system shutdown).\n    * `:value` - (String) \n
  \ * `:groups` - (Array&lt;<String>) [EC2-VPC] Changes the security groups of the
  instance. You must specify at least one security group, even if it's just the default
  security group for the VPC. You must specify the security group ID, not the security
  group name. For example, if you want the instance to be in sg-1a1a1a1a and sg-9b9b9b9b,
  specify GroupId.1=sg-1a1a1a1a and GroupId.2=sg-9b9b9b9b.\n  * `:ebs_optimized` -
  (Hash) Specifies whether the instance is optimized for EBS I/O. This optimization
  provides dedicated throughput to Amazon EBS and an optimized configuration stack
  to provide optimal EBS I/O performance. This optimization isn't available with all
  instance types. Additional usage charges apply when using an EBS Optimized instance.\n
  \   * `:value` - (Boolean) \n  * `:sriov_net_support` - (Hash) Set to simple to
  enable enhanced networking for the instance. There is no way to disable enhanced
  networking at this time. This option is supported only for HVM instances. Specifying
  this option with a PV instance can make it unreachable.\n    * `:value` - (String)
  \n@return [Core::Response]"
:modify_network_interface_attribute: "Calls the ModifyNetworkInterfaceAttribute API
  operation.\n@param [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:network_interface_id`
  - *required* - (String) The ID of the network interface.\n  * `:description` - (Hash)
  A description for the network interface.\n    * `:value` - (String) \n  * `:source_dest_check`
  - (Hash) Indicates whether source/destination checking is enabled. A value of  `true`
  \ means checking is enabled, and  `false`  means checking is disabled. This value
  must be  `false`  for a NAT instance to perform NAT. For more information, see NAT
  Instances in the Amazon Virtual Private Cloud User Guide.\n    * `:value` - (Boolean)
  \n  * `:groups` - (Array&lt;<String>) Changes the security groups for the network
  interface. The new set of groups you specify replaces the current set. You must
  specify at least one group, even if it's just the default security group in the
  VPC. You must specify the ID of the security group, not the name.\n  * `:attachment`
  - (Hash) Information about the interface attachment. If modifying the 'delete on
  termination' attribute, you must specify the ID of the interface attachment.\n    *
  `:attachment_id` - (String) The ID of the network interface attachment.\n    * `:delete_on_termination`
  - (Boolean) Indicates whether the network interface is deleted when the instance
  is terminated.\n@return [Core::Response]"
:modify_reserved_instances: |-
  Calls the ModifyReservedInstances API operation.
  @param [Hash] options
    * `:client_token` - (String) A unique, case-sensitive token you provide to ensure idempotency of your modification request.
    * `:reserved_instances_ids` - *required* - (Array&lt;<String>) The IDs of the Reserved Instances to modify.
    * `:target_configurations` - *required* - (Array&lt;<Hash>) The configuration settings for the Reserved Instances to modify.
      * `:availability_zone` - (String) The Availability Zone for the modified Reserved Instances.
      * `:platform` - (String) The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.
      * `:instance_count` - (Integer) The number of modified Reserved Instances.
      * `:instance_type` - (String) The instance type for the modified Reserved Instances.  Valid values include:
        * `t1.micro`
        * `m1.small`
        * `m1.medium`
        * `m1.large`
        * `m1.xlarge`
        * `m3.medium`
        * `m3.large`
        * `m3.xlarge`
        * `m3.2xlarge`
        * `t2.micro`
        * `t2.small`
        * `t2.medium`
        * `m2.xlarge`
        * `m2.2xlarge`
        * `m2.4xlarge`
        * `cr1.8xlarge`
        * `i2.xlarge`
        * `i2.2xlarge`
        * `i2.4xlarge`
        * `i2.8xlarge`
        * `hi1.4xlarge`
        * `hs1.8xlarge`
        * `c1.medium`
        * `c1.xlarge`
        * `c3.large`
        * `c3.xlarge`
        * `c3.2xlarge`
        * `c3.4xlarge`
        * `c3.8xlarge`
        * `cc1.4xlarge`
        * `cc2.8xlarge`
        * `g2.2xlarge`
        * `cg1.4xlarge`
        * `r3.large`
        * `r3.xlarge`
        * `r3.2xlarge`
        * `r3.4xlarge`
        * `r3.8xlarge`
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:reserved_instances_modification_id` - (String)
:modify_snapshot_attribute: "Calls the ModifySnapshotAttribute API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:snapshot_id` - *required* - (String)
  The ID of the snapshot.\n  * `:attribute` - (String) The snapshot attribute to modify.
  \ Valid values include:\n    * `productCodes`\n    * `createVolumePermission`\n
  \ * `:operation_type` - (String) The type of operation to perform to the attribute.\n
  \ * `:user_ids` - (Array&lt;<String>) The account ID to modify for the snapshot.\n
  \ * `:group_names` - (Array&lt;<String>) The group to modify for the snapshot.\n
  \ * `:create_volume_permission` - (Hash) A JSON representation of the snapshot attribute
  modification.\n    * `:add` - (Array&lt;<Hash>) Adds a specific AWS account ID or
  group to a volume's list of create volume permissions.\n      * `:user_id` - (String)
  The specific AWS account ID that is to be added or removed from a volume's list
  of create volume permissions.\n      * `:group` - (String) The specific group that
  is to be added or removed from a volume's list of create volume permissions.  Valid
  values include:\n        * `all`\n    * `:remove` - (Array&lt;<Hash>) Removes a
  specific AWS account ID or group from a volume's list of create volume permissions.\n
  \     * `:user_id` - (String) The specific AWS account ID that is to be added or
  removed from a volume's list of create volume permissions.\n      * `:group` - (String)
  The specific group that is to be added or removed from a volume's list of create
  volume permissions.  Valid values include:\n        * `all`\n@return [Core::Response]"
:modify_subnet_attribute: "Calls the ModifySubnetAttribute API operation.\n@param
  [Hash] options\n  * `:subnet_id` - *required* - (String) The ID of the subnet.\n
  \ * `:map_public_ip_on_launch` - (Hash) \n    * `:value` - (Boolean) \n@return [Core::Response]"
:modify_volume_attribute: "Calls the ModifyVolumeAttribute API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:volume_id` - *required* - (String)
  The ID of the volume.\n  * `:auto_enable_io` - (Hash) Indicates whether the volume
  should be auto-enabled for I/O operations.\n    * `:value` - (Boolean) \n@return
  [Core::Response]"
:modify_vpc_attribute: "Calls the ModifyVpcAttribute API operation.\n@param [Hash]
  options\n  * `:vpc_id` - *required* - (String) The ID of the VPC.\n  * `:enable_dns_support`
  - (Hash) Indicates whether the DNS resolution is supported for the VPC. If enabled,
  queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or
  the reserved IP address at the base of the VPC network range \"plus two\" will succeed.
  If disabled, the Amazon provided DNS service in the VPC that resolves public DNS
  hostnames to IP addresses is not enabled.\n    * `:value` - (Boolean) \n  * `:enable_dns_hostnames`
  - (Hash) Indicates whether the instances launched in the VPC get DNS hostnames.
  If enabled, instances in the VPC get DNS hostnames; otherwise, they do not. You
  can only enable DNS hostnames if you also enable DNS support.\n    * `:value` -
  (Boolean) \n@return [Core::Response]"
:monitor_instances: "Calls the MonitorInstances API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:instance_ids` - *required* - (Array&lt;<String>)
  One or more instance IDs.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:instances_set` - (Array<Hash>)\n
  \   * `:instance_id` - (String)\n    * `:monitoring` - (Hash)\n      * `:state`
  - (String)"
:purchase_reserved_instances_offering: "Calls the PurchaseReservedInstancesOffering
  API operation.\n@param [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:reserved_instances_offering_id`
  - *required* - (String) The ID of the Reserved Instance offering to purchase.\n
  \ * `:instance_count` - *required* - (Integer) The number of Reserved Instances
  to purchase.\n  * `:limit_price` - (Hash) Specified for Reserved Instance Marketplace
  offerings to limit the total order and ensure that the Reserved Instances are not
  purchased at unexpected prices.\n    * `:amount` - (Float) Used for Reserved Instance
  Marketplace offerings. Specifies the limit price on the total order (instanceCount
  * price).\n    * `:currency_code` - (String) The currency in which the limitPrice
  amount is specified. At this time, the only supported currency is USD.  Valid values
  include:\n      * `USD`\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:reserved_instances_id`
  - (String)"
:reboot_instances: "Calls the RebootInstances API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:instance_ids` - *required* - (Array&lt;<String>)
  One or more instance IDs.\n@return [Core::Response]"
:register_image: "Calls the RegisterImage API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:image_location` - (String) The full path to your
  AMI manifest in Amazon S3 storage.\n  * `:name` - *required* - (String) A name for
  your AMI. Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets
  ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs
  (@), or underscores(_)\n  * `:description` - (String) A description for your AMI.\n
  \ * `:architecture` - (String) The architecture of the AMI. Default: For Amazon
  EBS-backed AMIs, i386. For instance store-backed AMIs, the architecture specified
  in the manifest file.  Valid values include:\n    * `i386`\n    * `x86_64`\n  *
  `:kernel_id` - (String) The ID of the kernel.\n  * `:ramdisk_id` - (String) The
  ID of the RAM disk.\n  * `:root_device_name` - (String) The name of the root device
  (for example, /dev/sda1, or xvda).\n  * `:block_device_mappings` - (Array&lt;<Hash>)
  One or more block device mapping entries.\n    * `:virtual_name` - (String) The
  virtual device name (ephemeral[0..3]). The number of available instance store volumes
  depends on the instance type. After you connect to the instance, you must mount
  the volume. Constraints: For M3 instances, you must specify instance store volumes
  in the block device mapping for the instance. When you launch an M3 instance, we
  ignore any instance store volumes specified in the block device mapping for the
  AMI.\n    * `:device_name` - (String) The device name exposed to the instance (for
  example, /dev/sdh).\n    * `:ebs` - (Hash) Parameters used to automatically set
  up Amazon EBS volumes when the instance is launched.\n      * `:snapshot_id` - (String)
  The ID of the snapshot.\n      * `:volume_size` - (Integer) The size of the volume,
  in GiB. Constraints: If the volume type is io1, the minimum size of the volume is
  10 GiB; otherwise, the minimum size is 1 GiB. The maximum volume size is 1024 GiB.
  If you specify a snapshot, the volume size must be equal to or larger than the snapshot
  size. Default: If you're creating the volume from a snapshot and don't specify a
  volume size, the default is the snapshot size.\n      * `:delete_on_termination`
  - (Boolean) Indicates whether the Amazon EBS volume is deleted on instance termination.\n
  \     * `:volume_type` - (String) The volume type. gp2 for General Purpose (SSD)
  volumes, io1 for Provisioned IOPS (SSD) volumes, and standard for Magnetic volumes.
  Default: standard  Valid values include:\n        * `standard`\n        * `io1`\n
  \       * `gp2`\n      * `:iops` - (Integer) The number of I/O operations per second
  (IOPS) that the volume supports. For Provisioned IOPS (SSD) volumes, this represents
  the number of IOPS that are provisioned for the volume. For General Purpose (SSD)
  volumes, this represents the baseline performance of the volume and the rate at
  which the volume accumulates I/O credits for bursting. For more information on General
  Purpose (SSD) baseline performance, I/O credits, and bursting, see Amazon EBS Volume
  Types in the Amazon Elastic Compute Cloud User Guide. Constraint: Range is 100 to
  4000 for Provisioned IOPS (SSD) volumes and 3 to 3072 for General Purpose (SSD)
  volumes. Condition: This parameter is required for requests to create io1 volumes;
  it is not used in requests to create standard or gp2 volumes.\n      * `:encrypted`
  - (Boolean) Indicates whether the Amazon EBS volume is encrypted. Encrypted Amazon
  EBS volumes may only be attached to instances that support Amazon EBS encryption.\n
  \   * `:no_device` - (String) Suppresses the specified device included in the block
  device mapping of the AMI.\n  * `:virtualization_type` - (String) The type of virtualization.
  Default: paravirtual\n  * `:sriov_net_support` - (String) Set to simple to enable
  enhanced networking for the AMI and any instances that you launch from the AMI.
  There is no way to disable enhanced networking at this time. This option is supported
  only for HVM AMIs. Specifying this option with a PV AMI can make instances launched
  from the AMI unreachable.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:image_id` - (String)"
:reject_vpc_peering_connection: "Calls the RejectVpcPeeringConnection API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:vpc_peering_connection_id` -
  *required* - (String) The ID of the VPC peering connection.\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:return` - (Boolean)"
:release_address: "Calls the ReleaseAddress API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:public_ip` - (String) [EC2-Classic] The Elastic
  IP address. Required for EC2-Classic.\n  * `:allocation_id` - (String) [EC2-VPC]
  The allocation ID. Required for EC2-VPC.\n@return [Core::Response]"
:replace_network_acl_association: "Calls the ReplaceNetworkAclAssociation API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:association_id` - *required*
  - (String) The ID of the current association between the original network ACL and
  the subnet.\n  * `:network_acl_id` - *required* - (String) The ID of the new network
  ACL to associate with the subnet.\n@return [Core::Response] The `#data` method of
  the response object returns a hash with the following structure:\n\n  * `:new_association_id`
  - (String)"
:replace_network_acl_entry: "Calls the ReplaceNetworkAclEntry API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:network_acl_id` - *required*
  - (String) The ID of the ACL.\n  * `:rule_number` - *required* - (Integer) The rule
  number of the entry to replace.\n  * `:protocol` - *required* - (String) The IP
  protocol. You can specify all or -1 to mean all protocols.\n  * `:rule_action` -
  *required* - (String) Indicates whether to allow or deny the traffic that matches
  the rule.  Valid values include:\n    * `allow`\n    * `deny`\n  * `:egress` - *required*
  - (Boolean) Indicates whether to replace the egress rule. Default: If no value is
  specified, we replace the ingress rule.\n  * `:cidr_block` - *required* - (String)
  The network range to allow or deny, in CIDR notation.\n  * `:icmp_type_code` - (Hash)
  ICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for the protocol.\n
  \   * `:type` - (Integer) The ICMP code. A value of -1 means all codes for the specified
  ICMP type.\n    * `:code` - (Integer) The ICMP type. A value of -1 means all types.\n
  \ * `:port_range` - (Hash) TCP or UDP protocols: The range of ports the rule applies
  to. Required if specifying 6 (TCP) or 17 (UDP) for the protocol.\n    * `:from`
  - (Integer) The first port in the range.\n    * `:to` - (Integer) The last port
  in the range.\n@return [Core::Response]"
:replace_route: "Calls the ReplaceRoute API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:route_table_id` - *required* - (String) The ID of
  the route table.\n  * `:destination_cidr_block` - *required* - (String) The CIDR
  address block used for the destination match. The value you provide must match the
  CIDR of an existing route in the table.\n  * `:gateway_id` - (String) The ID of
  an Internet gateway or virtual private gateway.\n  * `:instance_id` - (String) The
  ID of a NAT instance in your VPC.\n  * `:network_interface_id` - (String) The ID
  of a network interface.\n  * `:vpc_peering_connection_id` - (String) The ID of a
  VPC peering connection.\n@return [Core::Response]"
:replace_route_table_association: "Calls the ReplaceRouteTableAssociation API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:association_id` - *required*
  - (String) The association ID.\n  * `:route_table_id` - *required* - (String) The
  ID of the new route table to associate with the subnet.\n@return [Core::Response]
  The `#data` method of the response object returns a hash with the following structure:\n\n
  \ * `:new_association_id` - (String)"
:report_instance_status: "Calls the ReportInstanceStatus API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:instances` - *required* - (Array&lt;<String>)
  One or more instances.\n  * `:status` - *required* - (String) The status of all
  instances listed.  Valid values include:\n    * `ok`\n    * `impaired`\n  * `:start_time`
  - (String&lt;<ISO8601 datetime>) The time at which the reported instance health
  state began.\n  * `:end_time` - (String&lt;<ISO8601 datetime>) The time at which
  the reported instance health state ended.\n  * `:reason_codes` - *required* - (Array&lt;<String>)
  One or more reason codes that describes the health state of your instance. instance-stuck-in-state:
  My instance is stuck in a state. unresponsive: My instance is unresponsive. not-accepting-credentials:
  My instance is not accepting my credentials. password-not-available: A password
  is not available for my instance. performance-network: My instance is experiencing
  performance problems which I believe are network related. performance-instance-store:
  My instance is experiencing performance problems which I believe are related to
  the instance stores. performance-ebs-volume: My instance is experiencing performance
  problems which I believe are related to an EBS volume. performance-other: My instance
  is experiencing performance problems. other: [explain using the description parameter]\n
  \ * `:description` - (String) Descriptive text about the health state of your instance.\n@return
  [Core::Response]"
:request_spot_instances: "Calls the RequestSpotInstances API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:spot_price` - *required* - (String)
  The maximum hourly price for any Spot Instance launched to fulfill the request.\n
  \ * `:instance_count` - (Integer) The maximum number of Spot Instances to launch.
  Default: 1\n  * `:type` - (String) The Spot Instance request type. Default: one-time
  \ Valid values include:\n    * `one-time`\n    * `persistent`\n  * `:valid_from`
  - (String&lt;<ISO8601 datetime>) The start date of the request. If this is a one-time
  request, the request becomes active at this date and time and remains active until
  all instances launch, the request expires, or the request is canceled. If the request
  is persistent, the request becomes active at this date and time and remains active
  until it expires or is canceled. Default: The request is effective indefinitely.\n
  \ * `:valid_until` - (String&lt;<ISO8601 datetime>) The end date of the request.
  If this is a one-time request, the request remains active until all instances launch,
  the request is canceled, or this date is reached. If the request is persistent,
  it remains active until it is canceled or this date and time is reached. Default:
  The request is effective indefinitely.\n  * `:launch_group` - (String) The instance
  launch group. Launch groups are Spot Instances that launch together and terminate
  together. Default: Instances are launched and terminated individually\n  * `:availability_zone_group`
  - (String) The user-specified name for a logical grouping of bids. When you specify
  an Availability Zone group in a Spot Instance request, all Spot Instances in the
  request are launched in the same Availability Zone. Instance proximity is maintained
  with this parameter, but the choice of Availability Zone is not. The group applies
  only to bids for Spot Instances of the same instance type. Any additional Spot Instance
  requests that are specified with the same Availability Zone group name are launched
  in that same Availability Zone, as long as at least one instance from the group
  is still active. If there is no active instance running in the Availability Zone
  group that you specify for a new Spot Instance request (all instances are terminated,
  the bid is expired, or the bid falls below current market), then Amazon EC2 launches
  the instance in any Availability Zone where the constraint can be met. Consequently,
  the subsequent set of Spot Instances could be placed in a different zone from the
  original request, even if you specified the same Availability Zone group. Default:
  Instances are launched in any available Availability Zone.\n  * `:launch_specification`
  - (Hash) The launch specification.\n    * `:image_id` - (String) The ID of the AMI.\n
  \   * `:key_name` - (String) The name of the key pair.\n    * `:user_data` - (String)
  The Base64-encoded MIME user data to make available to the instances.\n    * `:addressing_type`
  - (String) Deprecated.\n    * `:instance_type` - (String) The instance type. Default:
  m1.small  Valid values include:\n      * `t1.micro`\n      * `m1.small`\n      *
  `m1.medium`\n      * `m1.large`\n      * `m1.xlarge`\n      * `m3.medium`\n      *
  `m3.large`\n      * `m3.xlarge`\n      * `m3.2xlarge`\n      * `t2.micro`\n      *
  `t2.small`\n      * `t2.medium`\n      * `m2.xlarge`\n      * `m2.2xlarge`\n      *
  `m2.4xlarge`\n      * `cr1.8xlarge`\n      * `i2.xlarge`\n      * `i2.2xlarge`\n
  \     * `i2.4xlarge`\n      * `i2.8xlarge`\n      * `hi1.4xlarge`\n      * `hs1.8xlarge`\n
  \     * `c1.medium`\n      * `c1.xlarge`\n      * `c3.large`\n      * `c3.xlarge`\n
  \     * `c3.2xlarge`\n      * `c3.4xlarge`\n      * `c3.8xlarge`\n      * `cc1.4xlarge`\n
  \     * `cc2.8xlarge`\n      * `g2.2xlarge`\n      * `cg1.4xlarge`\n      * `r3.large`\n
  \     * `r3.xlarge`\n      * `r3.2xlarge`\n      * `r3.4xlarge`\n      * `r3.8xlarge`\n
  \   * `:placement` - (Hash) The placement information for the instance.\n      *
  `:availability_zone` - (String) The Availability Zone.\n      * `:group_name` -
  (String) The name of the placement group (for cluster instances).\n    * `:kernel_id`
  - (String) The ID of the kernel.\n    * `:ramdisk_id` - (String) The ID of the RAM
  disk.\n    * `:block_device_mappings` - (Array&lt;<Hash>) One or more block device
  mapping entries.\n      * `:virtual_name` - (String) The virtual device name (ephemeral[0..3]).
  The number of available instance store volumes depends on the instance type. After
  you connect to the instance, you must mount the volume. Constraints: For M3 instances,
  you must specify instance store volumes in the block device mapping for the instance.
  When you launch an M3 instance, we ignore any instance store volumes specified in
  the block device mapping for the AMI.\n      * `:device_name` - (String) The device
  name exposed to the instance (for example, /dev/sdh).\n      * `:ebs` - (Hash) Parameters
  used to automatically set up Amazon EBS volumes when the instance is launched.\n
  \       * `:snapshot_id` - (String) The ID of the snapshot.\n        * `:volume_size`
  - (Integer) The size of the volume, in GiB. Constraints: If the volume type is io1,
  the minimum size of the volume is 10 GiB; otherwise, the minimum size is 1 GiB.
  The maximum volume size is 1024 GiB. If you specify a snapshot, the volume size
  must be equal to or larger than the snapshot size. Default: If you're creating the
  volume from a snapshot and don't specify a volume size, the default is the snapshot
  size.\n        * `:delete_on_termination` - (Boolean) Indicates whether the Amazon
  EBS volume is deleted on instance termination.\n        * `:volume_type` - (String)
  The volume type. gp2 for General Purpose (SSD) volumes, io1 for Provisioned IOPS
  (SSD) volumes, and standard for Magnetic volumes. Default: standard  Valid values
  include:\n          * `standard`\n          * `io1`\n          * `gp2`\n        *
  `:iops` - (Integer) The number of I/O operations per second (IOPS) that the volume
  supports. For Provisioned IOPS (SSD) volumes, this represents the number of IOPS
  that are provisioned for the volume. For General Purpose (SSD) volumes, this represents
  the baseline performance of the volume and the rate at which the volume accumulates
  I/O credits for bursting. For more information on General Purpose (SSD) baseline
  performance, I/O credits, and bursting, see Amazon EBS Volume Types in the Amazon
  Elastic Compute Cloud User Guide. Constraint: Range is 100 to 4000 for Provisioned
  IOPS (SSD) volumes and 3 to 3072 for General Purpose (SSD) volumes. Condition: This
  parameter is required for requests to create io1 volumes; it is not used in requests
  to create standard or gp2 volumes.\n        * `:encrypted` - (Boolean) Indicates
  whether the Amazon EBS volume is encrypted. Encrypted Amazon EBS volumes may only
  be attached to instances that support Amazon EBS encryption.\n      * `:no_device`
  - (String) Suppresses the specified device included in the block device mapping
  of the AMI.\n    * `:monitoring` - (Hash) \n      * `:enabled` - *required* - (Boolean)
  \n    * `:subnet_id` - (String) The ID of the subnet in which to launch the Spot
  Instance.\n    * `:network_interfaces` - (Array&lt;<Hash>) One or more network interfaces.\n
  \     * `:network_interface_id` - (String) The ID of the network interface.\n      *
  `:device_index` - (Integer) The index of the device on the instance for the network
  interface attachment. If you are specifying a network interface in a RunInstances
  request, you must provide the device index.\n      * `:subnet_id` - (String) The
  ID of the subnet associated with the network string. Applies only if creating a
  network interface when launching an instance.\n      * `:description` - (String)
  The description of the network interface. Applies only if creating a network interface
  when launching an instance.\n      * `:private_ip_address` - (String) The private
  IP address of the network interface. Applies only if creating a network interface
  when launching an instance.\n      * `:groups` - (Array&lt;<String>) The IDs of
  the security groups for the network interface. Applies only if creating a network
  interface when launching an instance.\n      * `:delete_on_termination` - (Boolean)
  If set to  `true` , the interface is deleted when the instance is terminated. You
  can specify  `true`  only if creating a new network interface when launching an
  instance.\n      * `:private_ip_addresses` - (Array&lt;<Hash>) One or more private
  IP addresses to assign to the network interface. Only one private IP address can
  be designated as primary.\n        * `:private_ip_address` - *required* - (String)
  The private IP addresses.\n        * `:primary` - (Boolean) Indicates whether the
  private IP address is the primary private IP address. Only one IP address can be
  designated as primary.\n      * `:secondary_private_ip_address_count` - (Integer)
  The number of secondary private IP addresses. You can't specify this option and
  specify more than one private IP address using the private IP addresses option.\n
  \     * `:associate_public_ip_address` - (Boolean) Indicates whether to assign a
  public IP address to an instance you launch in a VPC. The public IP address can
  only be assigned to a network interface for eth0, and can only be assigned to a
  new network interface, not an existing one. You cannot specify more than one network
  interface in the request. If luanching into a default subnet, the default value
  is  `true` .\n    * `:iam_instance_profile` - (Hash) The IAM instance profile.\n
  \     * `:arn` - (String) The Amazon Resource Name (ARN) of the instance profile.\n
  \     * `:name` - (String) The name of the instance profile.\n    * `:ebs_optimized`
  - (Boolean) Indicates whether the instance is optimized for EBS I/O. This optimization
  provides dedicated throughput to Amazon EBS and an optimized configuration stack
  to provide optimal EBS I/O performance. This optimization isn't available with all
  instance types. Additional usage charges apply when using an EBS Optimized instance.
  Default:  `false` \n    * `:security_groups` - (Array&lt;<String>) \n    * `:security_group_ids`
  - (Array&lt;<String>) \n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:spot_instance_request_set`
  - (Array<Hash>)\n    * `:spot_instance_request_id` - (String)\n    * `:spot_price`
  - (String)\n    * `:type` - (String)\n    * `:state` - (String)\n    * `:fault`
  - (Hash)\n      * `:code` - (String)\n      * `:message` - (String)\n    * `:status`
  - (Hash)\n      * `:code` - (String)\n      * `:update_time` - (Time)\n      * `:message`
  - (String)\n    * `:valid_from` - (Time)\n    * `:valid_until` - (Time)\n    * `:launch_group`
  - (String)\n    * `:availability_zone_group` - (String)\n    * `:launch_specification`
  - (Hash)\n      * `:image_id` - (String)\n      * `:key_name` - (String)\n      *
  `:group_set` - (Array<Hash>)\n        * `:group_name` - (String)\n        * `:group_id`
  - (String)\n      * `:user_data` - (String)\n      * `:addressing_type` - (String)\n
  \     * `:instance_type` - (String)\n      * `:placement` - (Hash)\n        * `:availability_zone`
  - (String)\n        * `:group_name` - (String)\n      * `:kernel_id` - (String)\n
  \     * `:ramdisk_id` - (String)\n      * `:block_device_mapping` - (Array<Hash>)\n
  \       * `:virtual_name` - (String)\n        * `:device_name` - (String)\n        *
  `:ebs` - (Hash)\n          * `:snapshot_id` - (String)\n          * `:volume_size`
  - (Integer)\n          * `:delete_on_termination` - (Boolean)\n          * `:volume_type`
  - (String)\n          * `:iops` - (Integer)\n          * `:encrypted` - (Boolean)\n
  \       * `:no_device` - (String)\n      * `:monitoring_enabled` - (Boolean)\n      *
  `:subnet_id` - (String)\n      * `:network_interface_set` - (Array<Hash>)\n        *
  `:network_interface_id` - (String)\n        * `:device_index` - (Integer)\n        *
  `:subnet_id` - (String)\n        * `:description` - (String)\n        * `:private_ip_address`
  - (String)\n        * `:security_group_id` - (Array<String>)\n        * `:delete_on_termination`
  - (Boolean)\n        * `:private_ip_addresses_set` - (Array<Hash>)\n          *
  `:private_ip_address` - (String)\n          * `:primary` - (Boolean)\n        *
  `:secondary_private_ip_address_count` - (Integer)\n        * `:associate_public_ip_address`
  - (Boolean)\n      * `:iam_instance_profile` - (Hash)\n        * `:arn` - (String)\n
  \       * `:name` - (String)\n      * `:ebs_optimized` - (Boolean)\n    * `:instance_id`
  - (String)\n    * `:create_time` - (Time)\n    * `:product_description` - (String)\n
  \   * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` -
  (String)\n    * `:launched_availability_zone` - (String)"
:reset_image_attribute: "Calls the ResetImageAttribute API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:image_id` - *required* - (String) The
  ID of the AMI.\n  * `:attribute` - *required* - (String) The attribute to reset
  (currently you can only reset the launch permission attribute).  Valid values include:\n
  \   * `launchPermission`\n@return [Core::Response]"
:reset_instance_attribute: "Calls the ResetInstanceAttribute API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:instance_id` - *required* - (String)
  The ID of the instance.\n  * `:attribute` - *required* - (String) The attribute
  to reset.  Valid values include:\n    * `instanceType`\n    * `kernel`\n    * `ramdisk`\n
  \   * `userData`\n    * `disableApiTermination`\n    * `instanceInitiatedShutdownBehavior`\n
  \   * `rootDeviceName`\n    * `blockDeviceMapping`\n    * `productCodes`\n    *
  `sourceDestCheck`\n    * `groupSet`\n    * `ebsOptimized`\n    * `sriovNetSupport`\n@return
  [Core::Response]"
:reset_network_interface_attribute: "Calls the ResetNetworkInterfaceAttribute API
  operation.\n@param [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:network_interface_id`
  - *required* - (String) The ID of the network interface.\n  * `:source_dest_check`
  - (String) The source/destination checking attribute. Resets the value to  `true`
  .\n@return [Core::Response]"
:reset_snapshot_attribute: "Calls the ResetSnapshotAttribute API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:snapshot_id` - *required* - (String)
  The ID of the snapshot.\n  * `:attribute` - *required* - (String) The attribute
  to reset (currently only the attribute for permission to create volumes can be reset).
  \ Valid values include:\n    * `productCodes`\n    * `createVolumePermission`\n@return
  [Core::Response]"
:revoke_security_group_egress: "Calls the RevokeSecurityGroupEgress API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:group_id` - *required* - (String)
  The ID of the security group.\n  * `:source_security_group_name` - (String) [EC2-Classic,
  default VPC] The name of the destination security group. You can't specify a destination
  security group and a CIDR IP address range.\n  * `:source_security_group_owner_id`
  - (String) The ID of the destination security group. You can't specify a destination
  security group and a CIDR IP address range.\n  * `:ip_protocol` - (String) The IP
  protocol name (tcp, udp, icmp) or number (see Protocol Numbers). Use -1 to specify
  all.\n  * `:from_port` - (Integer) The start of port range for the TCP and UDP protocols,
  or an ICMP type number. For the ICMP type number, use -1 to specify all ICMP types.\n
  \ * `:to_port` - (Integer) The end of port range for the TCP and UDP protocols,
  or an ICMP code number. For the ICMP code number, use -1 to specify all ICMP codes
  for the ICMP type.\n  * `:cidr_ip` - (String) The CIDR IP address range. You can't
  specify this parameter when specifying a source security group.\n  * `:ip_permissions`
  - (Array&lt;<Hash>) A set of IP permissions. You can't specify a destination security
  group and a CIDR IP address range.\n    * `:ip_protocol` - (String) The protocol.
  When you call DescribeSecurityGroups, the protocol value returned is the number.
  Exception: For TCP, UDP, and ICMP, the value returned is the name (for example,
  tcp, udp, or icmp). For a list of protocol numbers, see Protocol Numbers.\n    *
  `:from_port` - (Integer) The start of port range for the TCP and UDP protocols,
  or an ICMP type number. A value of -1 indicates all ICMP types.\n    * `:to_port`
  - (Integer) The end of port range for the TCP and UDP protocols, or an ICMP code.
  A value of -1 indicates all ICMP codes for the specified ICMP type.\n    * `:user_id_group_pairs`
  - (Array&lt;<Hash>) One or more security group and AWS account ID pairs.\n      *
  `:user_id` - (String) The ID of an AWS account.\n      * `:group_name` - (String)
  The ID of the security group owned by the specified AWS account.\n      * `:group_id`
  - (String) The name of the security group in the specified AWS account.\n    * `:ip_ranges`
  - (Array&lt;<Hash>) One or more IP ranges.\n      * `:cidr_ip` - (String) The CIDR
  range. You can either specify a CIDR range or a source security group, not both.\n@return
  [Core::Response]"
:revoke_security_group_ingress: "Calls the RevokeSecurityGroupIngress API operation.\n@param
  [Hash] options\n  * `:dry_run` - (Boolean) \n  * `:group_name` - (String) [EC2-Classic,
  default VPC] The name of the security group.\n  * `:group_id` - (String) The ID
  of the security group.\n  * `:source_security_group_name` - (String) [EC2-Classic,
  default VPC] The name of the source security group. You can't specify a source security
  group and a CIDR IP address range.\n  * `:source_security_group_owner_id` - (String)
  The ID of the source security group. You can't specify a source security group and
  a CIDR IP address range.\n  * `:ip_protocol` - (String) The IP protocol name (tcp,
  udp, icmp) or number (see Protocol Numbers). Use -1 to specify all.\n  * `:from_port`
  - (Integer) The start of port range for the TCP and UDP protocols, or an ICMP type
  number. For the ICMP type number, use -1 to specify all ICMP types.\n  * `:to_port`
  - (Integer) The end of port range for the TCP and UDP protocols, or an ICMP code
  number. For the ICMP code number, use -1 to specify all ICMP codes for the ICMP
  type.\n  * `:cidr_ip` - (String) The CIDR IP address range. You can't specify this
  parameter when specifying a source security group.\n  * `:ip_permissions` - (Array&lt;<Hash>)
  A set of IP permissions. You can't specify a source security group and a CIDR IP
  address range.\n    * `:ip_protocol` - (String) The protocol. When you call DescribeSecurityGroups,
  the protocol value returned is the number. Exception: For TCP, UDP, and ICMP, the
  value returned is the name (for example, tcp, udp, or icmp). For a list of protocol
  numbers, see Protocol Numbers.\n    * `:from_port` - (Integer) The start of port
  range for the TCP and UDP protocols, or an ICMP type number. A value of -1 indicates
  all ICMP types.\n    * `:to_port` - (Integer) The end of port range for the TCP
  and UDP protocols, or an ICMP code. A value of -1 indicates all ICMP codes for the
  specified ICMP type.\n    * `:user_id_group_pairs` - (Array&lt;<Hash>) One or more
  security group and AWS account ID pairs.\n      * `:user_id` - (String) The ID of
  an AWS account.\n      * `:group_name` - (String) The ID of the security group owned
  by the specified AWS account.\n      * `:group_id` - (String) The name of the security
  group in the specified AWS account.\n    * `:ip_ranges` - (Array&lt;<Hash>) One
  or more IP ranges.\n      * `:cidr_ip` - (String) The CIDR range. You can either
  specify a CIDR range or a source security group, not both.\n@return [Core::Response]"
:run_instances: "Calls the RunInstances API operation.\n@param [Hash] options\n  *
  `:dry_run` - (Boolean) \n  * `:image_id` - *required* - (String) The ID of the AMI,
  which you can get by calling DescribeImages.\n  * `:min_count` - *required* - (Integer)
  The minimum number of instances to launch. If you specify a minimum that is more
  instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2
  launches no instances. Constraints: Between 1 and the maximum number you're allowed
  for the specified instance type. For more information about the default limits,
  and how to request an increase, see How many instances can I run in Amazon EC2 in
  the Amazon EC2 General FAQ.\n  * `:max_count` - *required* - (Integer) The maximum
  number of instances to launch. If you specify more instances than Amazon EC2 can
  launch in the target Availability Zone, Amazon EC2 launches the largest possible
  number of instances above MinCount. Constraints: Between 1 and the maximum number
  you're allowed for the specified instance type. For more information about the default
  limits, and how to request an increase, see How many instances can I run in Amazon
  EC2 in the Amazon EC2 General FAQ.\n  * `:key_name` - (String) The name of the key
  pair. You can create a key pair using CreateKeyPair or ImportKeyPair. If you launch
  an instance without specifying a key pair, you can't connect to the instance.\n
  \ * `:security_groups` - (Array&lt;<String>) [EC2-Classic, default VPC] One or more
  security group names. For a nondefault VPC, you must use security group IDs instead.
  Default: Amazon EC2 uses the default security group.\n  * `:security_group_ids`
  - (Array&lt;<String>) One or more security group IDs. You can create a security
  group using CreateSecurityGroup. Default: Amazon EC2 uses the default security group.\n
  \ * `:user_data` - (String) The Base64-encoded MIME user data for the instances.\n
  \ * `:instance_type` - (String) The instance type. For more information, see Instance
  Types in the Amazon Elastic Compute Cloud User Guide. Default: m1.small  Valid values
  include:\n    * `t1.micro`\n    * `m1.small`\n    * `m1.medium`\n    * `m1.large`\n
  \   * `m1.xlarge`\n    * `m3.medium`\n    * `m3.large`\n    * `m3.xlarge`\n    *
  `m3.2xlarge`\n    * `t2.micro`\n    * `t2.small`\n    * `t2.medium`\n    * `m2.xlarge`\n
  \   * `m2.2xlarge`\n    * `m2.4xlarge`\n    * `cr1.8xlarge`\n    * `i2.xlarge`\n
  \   * `i2.2xlarge`\n    * `i2.4xlarge`\n    * `i2.8xlarge`\n    * `hi1.4xlarge`\n
  \   * `hs1.8xlarge`\n    * `c1.medium`\n    * `c1.xlarge`\n    * `c3.large`\n    *
  `c3.xlarge`\n    * `c3.2xlarge`\n    * `c3.4xlarge`\n    * `c3.8xlarge`\n    * `cc1.4xlarge`\n
  \   * `cc2.8xlarge`\n    * `g2.2xlarge`\n    * `cg1.4xlarge`\n    * `r3.large`\n
  \   * `r3.xlarge`\n    * `r3.2xlarge`\n    * `r3.4xlarge`\n    * `r3.8xlarge`\n
  \ * `:placement` - (Hash) The placement for the instance.\n    * `:availability_zone`
  - (String) The Availability Zone of the instance.\n    * `:group_name` - (String)
  The name of the placement group the instance is in (for cluster compute instances).\n
  \   * `:tenancy` - (String) The tenancy of the instance (if the instance is running
  in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.
  \ Valid values include:\n      * `default`\n      * `dedicated`\n  * `:kernel_id`
  - (String) The ID of the kernel. We recommend that you use PV-GRUB instead of kernels
  and RAM disks. For more information, see PV-GRUB in the Amazon Elastic Compute Cloud
  User Guide.\n  * `:ramdisk_id` - (String) The ID of the RAM disk. We recommend that
  you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB
  in the Amazon Elastic Compute Cloud User Guide.\n  * `:block_device_mappings` -
  (Array&lt;<Hash>) The block device mapping.\n    * `:virtual_name` - (String) The
  virtual device name (ephemeral[0..3]). The number of available instance store volumes
  depends on the instance type. After you connect to the instance, you must mount
  the volume. Constraints: For M3 instances, you must specify instance store volumes
  in the block device mapping for the instance. When you launch an M3 instance, we
  ignore any instance store volumes specified in the block device mapping for the
  AMI.\n    * `:device_name` - (String) The device name exposed to the instance (for
  example, /dev/sdh).\n    * `:ebs` - (Hash) Parameters used to automatically set
  up Amazon EBS volumes when the instance is launched.\n      * `:snapshot_id` - (String)
  The ID of the snapshot.\n      * `:volume_size` - (Integer) The size of the volume,
  in GiB. Constraints: If the volume type is io1, the minimum size of the volume is
  10 GiB; otherwise, the minimum size is 1 GiB. The maximum volume size is 1024 GiB.
  If you specify a snapshot, the volume size must be equal to or larger than the snapshot
  size. Default: If you're creating the volume from a snapshot and don't specify a
  volume size, the default is the snapshot size.\n      * `:delete_on_termination`
  - (Boolean) Indicates whether the Amazon EBS volume is deleted on instance termination.\n
  \     * `:volume_type` - (String) The volume type. gp2 for General Purpose (SSD)
  volumes, io1 for Provisioned IOPS (SSD) volumes, and standard for Magnetic volumes.
  Default: standard  Valid values include:\n        * `standard`\n        * `io1`\n
  \       * `gp2`\n      * `:iops` - (Integer) The number of I/O operations per second
  (IOPS) that the volume supports. For Provisioned IOPS (SSD) volumes, this represents
  the number of IOPS that are provisioned for the volume. For General Purpose (SSD)
  volumes, this represents the baseline performance of the volume and the rate at
  which the volume accumulates I/O credits for bursting. For more information on General
  Purpose (SSD) baseline performance, I/O credits, and bursting, see Amazon EBS Volume
  Types in the Amazon Elastic Compute Cloud User Guide. Constraint: Range is 100 to
  4000 for Provisioned IOPS (SSD) volumes and 3 to 3072 for General Purpose (SSD)
  volumes. Condition: This parameter is required for requests to create io1 volumes;
  it is not used in requests to create standard or gp2 volumes.\n      * `:encrypted`
  - (Boolean) Indicates whether the Amazon EBS volume is encrypted. Encrypted Amazon
  EBS volumes may only be attached to instances that support Amazon EBS encryption.\n
  \   * `:no_device` - (String) Suppresses the specified device included in the block
  device mapping of the AMI.\n  * `:monitoring` - (Hash) The monitoring for the instance.\n
  \   * `:enabled` - *required* - (Boolean) Indicates whether monitoring is enabled
  for the instance.\n  * `:subnet_id` - (String) [EC2-VPC] The ID of the subnet to
  launch the instance into.\n  * `:disable_api_termination` - (Boolean) If you set
  this parameter to  `true` , you can't terminate the instance using the Amazon EC2
  console, CLI, or API; otherwise, you can. If you set this parameter to  `true`  and
  then later want to be able to terminate the instance, you must first change the
  value of the disableApiTermination attribute to  `false`  using ModifyInstanceAttribute.
  Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can
  terminate the instance by running the shutdown command from the instance. Default:
  \ `false` \n  * `:instance_initiated_shutdown_behavior` - (String) Indicates whether
  an instance stops or terminates when you initiate shutdown from the instance (using
  the operating system command for system shutdown). Default: stop  Valid values include:\n
  \   * `stop`\n    * `terminate`\n  * `:private_ip_address` - (String) [EC2-VPC]
  The primary IP address. You must specify a value from the IP address range of the
  subnet. Only one private IP address can be designated as primary. Therefore, you
  can't specify this parameter if PrivateIpAddresses.n.Primary is set to  `true`  and
  PrivateIpAddresses.n.PrivateIpAddress is set to an IP address. Default: We select
  an IP address from the IP address range of the subnet.\n  * `:client_token` - (String)
  Unique, case-sensitive identifier you provide to ensure the idempotency of the request.
  For more information, see How to Ensure Idempotency in the Amazon Elastic Compute
  Cloud User Guide. Constraints: Maximum 64 ASCII characters\n  * `:additional_info`
  - (String) Reserved.\n  * `:network_interfaces` - (Array&lt;<Hash>) One or more
  network interfaces.\n    * `:network_interface_id` - (String) The ID of the network
  interface.\n    * `:device_index` - (Integer) The index of the device on the instance
  for the network interface attachment. If you are specifying a network interface
  in a RunInstances request, you must provide the device index.\n    * `:subnet_id`
  - (String) The ID of the subnet associated with the network string. Applies only
  if creating a network interface when launching an instance.\n    * `:description`
  - (String) The description of the network interface. Applies only if creating a
  network interface when launching an instance.\n    * `:private_ip_address` - (String)
  The private IP address of the network interface. Applies only if creating a network
  interface when launching an instance.\n    * `:groups` - (Array&lt;<String>) The
  IDs of the security groups for the network interface. Applies only if creating a
  network interface when launching an instance.\n    * `:delete_on_termination` -
  (Boolean) If set to  `true` , the interface is deleted when the instance is terminated.
  You can specify  `true`  only if creating a new network interface when launching
  an instance.\n    * `:private_ip_addresses` - (Array&lt;<Hash>) One or more private
  IP addresses to assign to the network interface. Only one private IP address can
  be designated as primary.\n      * `:private_ip_address` - *required* - (String)
  The private IP addresses.\n      * `:primary` - (Boolean) Indicates whether the
  private IP address is the primary private IP address. Only one IP address can be
  designated as primary.\n    * `:secondary_private_ip_address_count` - (Integer)
  The number of secondary private IP addresses. You can't specify this option and
  specify more than one private IP address using the private IP addresses option.\n
  \   * `:associate_public_ip_address` - (Boolean) Indicates whether to assign a public
  IP address to an instance you launch in a VPC. The public IP address can only be
  assigned to a network interface for eth0, and can only be assigned to a new network
  interface, not an existing one. You cannot specify more than one network interface
  in the request. If luanching into a default subnet, the default value is  `true`
  .\n  * `:iam_instance_profile` - (Hash) The IAM instance profile.\n    * `:arn`
  - (String) The Amazon Resource Name (ARN) of the instance profile.\n    * `:name`
  - (String) The name of the instance profile.\n  * `:ebs_optimized` - (Boolean) Indicates
  whether the instance is optimized for EBS I/O. This optimization provides dedicated
  throughput to Amazon EBS and an optimized configuration stack to provide optimal
  Amazon EBS I/O performance. This optimization isn't available with all instance
  types. Additional usage charges apply when using an EBS-optimized instance. Default:
  \ `false` \n@return [Core::Response] The `#data` method of the response object returns
  a hash with the following structure:\n\n  * `:reservation_id` - (String)\n  * `:owner_id`
  - (String)\n  * `:requester_id` - (String)\n  * `:group_set` - (Array<Hash>)\n    *
  `:group_name` - (String)\n    * `:group_id` - (String)\n  * `:instances_set` - (Array<Hash>)\n
  \   * `:instance_id` - (String)\n    * `:image_id` - (String)\n    * `:instance_state`
  - (Hash)\n      * `:code` - (Integer)\n      * `:name` - (String)\n    * `:private_dns_name`
  - (String)\n    * `:dns_name` - (String)\n    * `:reason` - (String)\n    * `:key_name`
  - (String)\n    * `:ami_launch_index` - (Integer)\n    * `:product_codes` - (Array<Hash>)\n
  \     * `:product_code` - (String)\n      * `:type` - (String)\n    * `:instance_type`
  - (String)\n    * `:launch_time` - (Time)\n    * `:placement` - (Hash)\n      *
  `:availability_zone` - (String)\n      * `:group_name` - (String)\n      * `:tenancy`
  - (String)\n    * `:kernel_id` - (String)\n    * `:ramdisk_id` - (String)\n    *
  `:platform` - (String)\n    * `:monitoring` - (Hash)\n      * `:state` - (String)\n
  \   * `:subnet_id` - (String)\n    * `:vpc_id` - (String)\n    * `:private_ip_address`
  - (String)\n    * `:ip_address` - (String)\n    * `:state_reason` - (Hash)\n      *
  `:code` - (String)\n      * `:message` - (String)\n    * `:architecture` - (String)\n
  \   * `:root_device_type` - (String)\n    * `:root_device_name` - (String)\n    *
  `:block_device_mapping` - (Array<Hash>)\n      * `:device_name` - (String)\n      *
  `:ebs` - (Hash)\n        * `:volume_id` - (String)\n        * `:status` - (String)\n
  \       * `:attach_time` - (Time)\n        * `:delete_on_termination` - (Boolean)\n
  \   * `:virtualization_type` - (String)\n    * `:instance_lifecycle` - (String)\n
  \   * `:spot_instance_request_id` - (String)\n    * `:client_token` - (String)\n
  \   * `:tag_set` - (Array<Hash>)\n      * `:key` - (String)\n      * `:value` -
  (String)\n    * `:group_set` - (Array<Hash>)\n      * `:group_name` - (String)\n
  \     * `:group_id` - (String)\n    * `:source_dest_check` - (Boolean)\n    * `:hypervisor`
  - (String)\n    * `:network_interface_set` - (Array<Hash>)\n      * `:network_interface_id`
  - (String)\n      * `:subnet_id` - (String)\n      * `:vpc_id` - (String)\n      *
  `:description` - (String)\n      * `:owner_id` - (String)\n      * `:status` - (String)\n
  \     * `:mac_address` - (String)\n      * `:private_ip_address` - (String)\n      *
  `:private_dns_name` - (String)\n      * `:source_dest_check` - (Boolean)\n      *
  `:group_set` - (Array<Hash>)\n        * `:group_name` - (String)\n        * `:group_id`
  - (String)\n      * `:attachment` - (Hash)\n        * `:attachment_id` - (String)\n
  \       * `:device_index` - (Integer)\n        * `:status` - (String)\n        *
  `:attach_time` - (Time)\n        * `:delete_on_termination` - (Boolean)\n      *
  `:association` - (Hash)\n        * `:public_ip` - (String)\n        * `:public_dns_name`
  - (String)\n        * `:ip_owner_id` - (String)\n      * `:private_ip_addresses_set`
  - (Array<Hash>)\n        * `:private_ip_address` - (String)\n        * `:private_dns_name`
  - (String)\n        * `:primary` - (Boolean)\n        * `:association` - (Hash)\n
  \         * `:public_ip` - (String)\n          * `:public_dns_name` - (String)\n
  \         * `:ip_owner_id` - (String)\n    * `:iam_instance_profile` - (Hash)\n
  \     * `:arn` - (String)\n      * `:id` - (String)\n    * `:ebs_optimized` - (Boolean)\n
  \   * `:sriov_net_support` - (String)"
:start_instances: "Calls the StartInstances API operation.\n@param [Hash] options\n
  \ * `:instance_ids` - *required* - (Array&lt;<String>) One or more instance IDs.\n
  \ * `:additional_info` - (String) Reserved.\n  * `:dry_run` - (Boolean) \n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:instances_set` - (Array<Hash>)\n    * `:instance_id`
  - (String)\n    * `:current_state` - (Hash)\n      * `:code` - (Integer)\n      *
  `:name` - (String)\n    * `:previous_state` - (Hash)\n      * `:code` - (Integer)\n
  \     * `:name` - (String)"
:stop_instances: "Calls the StopInstances API operation.\n@param [Hash] options\n
  \ * `:dry_run` - (Boolean) \n  * `:instance_ids` - *required* - (Array&lt;<String>)
  One or more instance IDs.\n  * `:force` - (Boolean) Forces the instances to stop.
  The instances do not have an opportunity to flush file system caches or file system
  metadata. If you use this option, you must perform file system check and repair
  procedures. This option is not recommended for Windows instances. Default:  `false`
  \n@return [Core::Response] The `#data` method of the response object returns a hash
  with the following structure:\n\n  * `:instances_set` - (Array<Hash>)\n    * `:instance_id`
  - (String)\n    * `:current_state` - (Hash)\n      * `:code` - (Integer)\n      *
  `:name` - (String)\n    * `:previous_state` - (Hash)\n      * `:code` - (Integer)\n
  \     * `:name` - (String)"
:terminate_instances: "Calls the TerminateInstances API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:instance_ids` - *required* - (Array&lt;<String>)
  One or more instance IDs.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:instances_set` - (Array<Hash>)\n
  \   * `:instance_id` - (String)\n    * `:current_state` - (Hash)\n      * `:code`
  - (Integer)\n      * `:name` - (String)\n    * `:previous_state` - (Hash)\n      *
  `:code` - (Integer)\n      * `:name` - (String)"
:unassign_private_ip_addresses: |-
  Calls the UnassignPrivateIpAddresses API operation.
  @param [Hash] options
    * `:network_interface_id` - *required* - (String) The ID of the network interface.
    * `:private_ip_addresses` - *required* - (Array&lt;<String>) The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.
  @return [Core::Response]
:unmonitor_instances: "Calls the UnmonitorInstances API operation.\n@param [Hash]
  options\n  * `:dry_run` - (Boolean) \n  * `:instance_ids` - *required* - (Array&lt;<String>)
  One or more instance IDs.\n@return [Core::Response] The `#data` method of the response
  object returns a hash with the following structure:\n\n  * `:instances_set` - (Array<Hash>)\n
  \   * `:instance_id` - (String)\n    * `:monitoring` - (Hash)\n      * `:state`
  - (String)"
