---
:add_permission: |-
  Calls the AddPermission API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:label` - *required* - (String) The unique identification of the permission you're setting (e.g., AliceSendMessage). Constraints: Maximum 80 characters; alphanumeric characters, hyphens (-), and underscores (_) are allowed.
    * `:aws_account_ids` - *required* - (Array&lt;<String>) The AWS account number of the principal who will be given permission. The principal must have an AWS account, but does not need to be signed up for Amazon SQS. For information about locating the AWS account identification, see Your AWS Identifiers in the Amazon SQS Developer Guide.
    * `:actions` - *required* - (Array&lt;<String>) The action the client wants to allow for the specified principal. The following are valid values: * | SendMessage | ReceiveMessage | DeleteMessage | ChangeMessageVisibility | GetQueueAttributes | GetQueueUrl. For more information about these actions, see Understanding Permissions in the Amazon SQS Developer Guide. Specifying SendMessage, DeleteMessage, or ChangeMessageVisibility for the ActionName.n also grants permissions for the corresponding batch versions of those actions: SendMessageBatch, DeleteMessageBatch, and ChangeMessageVisibilityBatch.
  @return [Core::Response]
:change_message_visibility: |-
  Calls the ChangeMessageVisibility API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:receipt_handle` - *required* - (String) The receipt handle associated with the message whose visibility timeout should be changed. This parameter is returned by the ReceiveMessage action.
    * `:visibility_timeout` - *required* - (Integer) The new value (in seconds - from 0 to 43200 - maximum 12 hours) for the message's visibility timeout.
  @return [Core::Response]
:change_message_visibility_batch: |-
  Calls the ChangeMessageVisibilityBatch API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:entries` - *required* - (Array&lt;<Hash>) A list of receipt handles of the messages for which the visibility timeout must be changed.
      * `:id` - *required* - (String) An identifier for this particular receipt handle. This is used to communicate the result. Note that the Ids of a batch request need to be unique within the request.
      * `:receipt_handle` - *required* - (String) A receipt handle.
      * `:visibility_timeout` - (Integer) The new value (in seconds) for the message's visibility timeout.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:successful` - (Array<Hash>)
      * `:id` - (String)
    * `:failed` - (Array<Hash>)
      * `:id` - (String)
      * `:sender_fault` - (Boolean)
      * `:code` - (String)
      * `:message` - (String)
:create_queue: |-
  Calls the CreateQueue API operation.
  @param [Hash] options
    * `:queue_name` - *required* - (String) The name for the queue to be created.
    * `:attributes` - (Hash&lt;<String,String>) A map of attributes with their corresponding values. The following lists the names, descriptions, and values of the special request parameters the CreateQueue action uses: DelaySeconds - The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 (zero). MaximumMessageSize - The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB). MessageRetentionPeriod - The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days). Policy - The queue's policy. A valid form-url-encoded policy. For more information about policy structure, see Basic Policy Structure in the Amazon SQS Developer Guide. For more information about form-url-encoding, see http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2.1. ReceiveMessageWaitTimeSeconds - The time for which a ReceiveMessage call will wait for a message to arrive. An integer from 0 to 20 (seconds). The default for this attribute is 0. VisibilityTimeout - The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see Visibility Timeout in the Amazon SQS Developer Guide.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:queue_url` - (String)
:delete_message: |-
  Calls the DeleteMessage API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:receipt_handle` - *required* - (String) The receipt handle associated with the message to delete.
  @return [Core::Response]
:delete_message_batch: |-
  Calls the DeleteMessageBatch API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:entries` - *required* - (Array&lt;<Hash>) A list of receipt handles for the messages to be deleted.
      * `:id` - *required* - (String) An identifier for this particular receipt handle. This is used to communicate the result. Note that the Ids of a batch request need to be unique within the request.
      * `:receipt_handle` - *required* - (String) A receipt handle.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:successful` - (Array<Hash>)
      * `:id` - (String)
    * `:failed` - (Array<Hash>)
      * `:id` - (String)
      * `:sender_fault` - (Boolean)
      * `:code` - (String)
      * `:message` - (String)
:delete_queue: |-
  Calls the DeleteQueue API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
  @return [Core::Response]
:get_queue_attributes: |-
  Calls the GetQueueAttributes API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:attribute_names` - (Array&lt;<String>) A list of attributes to retrieve information for.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:attributes` - (Hash<String,String>)
:get_queue_url: |-
  Calls the GetQueueUrl API operation.
  @param [Hash] options
    * `:queue_name` - *required* - (String) The name of the queue whose URL must be fetched. Maximum 80 characters; alphanumeric characters, hyphens (-), and underscores (_) are allowed.
    * `:queue_owner_aws_account_id` - (String) The AWS account ID of the account that created the queue.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:queue_url` - (String)
:list_dead_letter_source_queues: |-
  Calls the ListDeadLetterSourceQueues API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The queue URL of a dead letter queue.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:queue_urls` - (Array<String>)
:list_queues: |-
  Calls the ListQueues API operation.
  @param [Hash] options
    * `:queue_name_prefix` - (String) A string to use for filtering the list results. Only those queues whose name begins with the specified string are returned.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:queue_urls` - (Array<String>)
:receive_message: |-
  Calls the ReceiveMessage API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:attribute_names` - (Array&lt;<String>) A list of attributes that need to be returned along with each message. The following lists the names and descriptions of the attributes that can be returned: All - returns all values. ApproximateFirstReceiveTimestamp - returns the time when the message was first received (epoch time in milliseconds). ApproximateReceiveCount - returns the number of times a message has been received but not deleted. SenderId - returns the AWS account number (or the IP address, if anonymous access is allowed) of the sender. SentTimestamp - returns the time when the message was sent (epoch time in milliseconds).
    * `:max_number_of_messages` - (Integer) The maximum number of messages to return. Amazon SQS never returns more messages than this value but may return fewer. All of the messages are not necessarily returned.
    * `:visibility_timeout` - (Integer) The duration (in seconds) that the received messages are hidden from subsequent retrieve requests after being retrieved by a ReceiveMessage request.
    * `:wait_time_seconds` - (Integer) The duration (in seconds) for which the call will wait for a message to arrive in the queue before returning. If a message is available, the call will return sooner than WaitTimeSeconds.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:messages` - (Array<Hash>)
      * `:message_id` - (String)
      * `:receipt_handle` - (String)
      * `:md5_of_body` - (String)
      * `:body` - (String)
      * `:attributes` - (Hash<String,String>)
:remove_permission: |-
  Calls the RemovePermission API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:label` - *required* - (String) The identification of the permission to remove. This is the label added with the AddPermission action.
  @return [Core::Response]
:send_message: |-
  Calls the SendMessage API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:message_body` - *required* - (String) The message to send. String maximum 256 KB in size. For a list of allowed characters, see the preceding important note.
    * `:delay_seconds` - (Integer) The number of seconds (0 to 900 - 15 minutes) to delay a specific message. Messages with a positive DelaySeconds value become available for processing after the delay time is finished. If you don't specify a value, the default value for the queue applies.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:md5_of_message_body` - (String)
    * `:message_id` - (String)
:send_message_batch: |-
  Calls the SendMessageBatch API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:entries` - *required* - (Array&lt;<Hash>) A list of SendMessageBatchRequestEntry items.
      * `:id` - *required* - (String) An identifier for the message in this batch. This is used to communicate the result. Note that the Ids of a batch request need to be unique within the request.
      * `:message_body` - *required* - (String) Body of the message.
      * `:delay_seconds` - (Integer) The number of seconds for which the message has to be delayed.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:successful` - (Array<Hash>)
      * `:id` - (String)
      * `:message_id` - (String)
      * `:md5_of_message_body` - (String)
    * `:failed` - (Array<Hash>)
      * `:id` - (String)
      * `:sender_fault` - (Boolean)
      * `:code` - (String)
      * `:message` - (String)
:set_queue_attributes: |-
  Calls the SetQueueAttributes API operation.
  @param [Hash] options
    * `:queue_url` - *required* - (String) The URL of the Amazon SQS queue to take action on.
    * `:attributes` - *required* - (Hash&lt;<String,String>) A map of attributes to set. The following lists the names, descriptions, and values of the special request parameters the SetQueueAttributes action uses: DelaySeconds - The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 (zero). MaximumMessageSize - The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB). MessageRetentionPeriod - The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days). Policy - The queue's policy. A valid form-url-encoded policy. For more information about policy structure, see Basic Policy Structure in the Amazon SQS Developer Guide. For more information about form-url-encoding, see http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2.1. ReceiveMessageWaitTimeSeconds - The time for which a ReceiveMessage call will wait for a message to arrive. An integer from 0 to 20 (seconds). The default for this attribute is 0. VisibilityTimeout - The visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see Visibility Timeout in the Amazon SQS Developer Guide. RedrivePolicy - The parameters for dead letter queue functionality of the source queue. For more information about RedrivePolicy and dead letter queues, see Using Amazon SQS Dead Letter Queues in the Amazon SQS Developer Guide.
  @return [Core::Response]
