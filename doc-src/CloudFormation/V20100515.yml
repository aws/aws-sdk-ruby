---
:cancel_update_stack: |-
  Calls the CancelUpdateStack API operation.
  @param [Hash] options
    * `:stack_name` - *required* - (String) The name or the unique identifier associated with the stack.
  @return [Core::Response]
:create_stack: "Calls the CreateStack API operation.\n@param [Hash] options\n  * `:stack_name`
  - *required* - (String) The name associated with the stack. The name must be unique
  within your AWS account. Must contain only alphanumeric characters (case sensitive)
  and start with an alpha character. Maximum length of the name is 255 characters.\n
  \ * `:template_body` - (String) Structure containing the template body with a minimum
  length of 1 byte and a maximum length of 51,200 bytes. For more information, go
  to Template Anatomy in the AWS CloudFormation User Guide. Conditional: You must
  specify either the TemplateBody or the TemplateURL parameter, but not both.\n  *
  `:template_url` - (String) Location of file containing the template body. The URL
  must point to a template (max size: 307,200 bytes) located in an S3 bucket in the
  same region as the stack. For more information, go to the Template Anatomy in the
  AWS CloudFormation User Guide. Conditional: You must specify either the TemplateBody
  or the TemplateURL parameter, but not both.\n  * `:parameters` - (Array&lt;<Hash>)
  A list of Parameter structures that specify input parameters for the stack.\n    *
  `:parameter_key` - (String) The key associated with the parameter.\n    * `:parameter_value`
  - (String) The value associated with the parameter.\n  * `:disable_rollback` - (Boolean)
  Set to  `true`  to disable rollback of the stack if stack creation failed. You can
  specify either DisableRollback or OnFailure, but not both. Default:  `false` \n
  \ * `:timeout_in_minutes` - (Integer) The amount of time that can pass before the
  stack status becomes CREATE_FAILED; if DisableRollback is not set or is set to  `false`
  , the stack will be rolled back.\n  * `:notification_arns` - (Array&lt;<String>)
  The Simple Notification Service (SNS) topic ARNs to publish stack related events.
  You can find your SNS topic ARNs using the SNS console or your Command Line Interface
  (CLI).\n  * `:capabilities` - (Array&lt;<String>) The list of capabilities that
  you want to allow in the stack. If your template contains certain resources, you
  must specify the CAPABILITY_IAM value for this parameter; otherwise, this action
  returns an InsufficientCapabilities error. The following resources require you to
  specify the capabilities parameter: AWS::CloudFormation::Stack, AWS::IAM::AccessKey,
  AWS::IAM::Group, AWS::IAM::InstanceProfile, AWS::IAM::Policy, AWS::IAM::Role, AWS::IAM::User,
  and AWS::IAM::UserToGroupAddition.\n  * `:on_failure` - (String) Determines what
  action will be taken if stack creation fails. This must be one of: DO_NOTHING, ROLLBACK,
  or DELETE. You can specify either OnFailure or DisableRollback, but not both. Default:
  ROLLBACK  Valid values include:\n    * `DO_NOTHING`\n    * `ROLLBACK`\n    * `DELETE`\n
  \ * `:stack_policy_body` - (String) Structure containing the stack policy body.
  For more information, go to Prevent Updates to Stack Resources in the AWS CloudFormation
  User Guide. You can specify either the StackPolicyBody or the StackPolicyURL parameter,
  but not both.\n  * `:stack_policy_url` - (String) Location of a file containing
  the stack policy. The URL must point to a policy (max size: 16KB) located in an
  S3 bucket in the same region as the stack. You can specify either the StackPolicyBody
  or the StackPolicyURL parameter, but not both.\n  * `:tags` - (Array&lt;<Hash>)
  A set of user-defined Tags to associate with this stack, represented by key/value
  pairs. Tags defined for the stack are propagated to EC2 resources that are created
  as part of the stack. A maximum number of 10 tags can be specified.\n    * `:key`
  - (String) Required. A string used to identify this tag. You can specify a maximum
  of 128 characters for a tag key. Tags owned by Amazon Web Services (AWS) have the
  reserved prefix: aws:.\n    * `:value` - (String) Required. A string containing
  the value for this tag. You can specify a maximum of 256 characters for a tag value.\n@return
  [Core::Response] The `#data` method of the response object returns a hash with the
  following structure:\n\n  * `:stack_id` - (String)"
:delete_stack: |-
  Calls the DeleteStack API operation.
  @param [Hash] options
    * `:stack_name` - *required* - (String) The name or the unique identifier associated with the stack.
  @return [Core::Response]
:describe_stack_events: |-
  Calls the DescribeStackEvents API operation.
  @param [Hash] options
    * `:stack_name` - (String) The name or the unique identifier associated with the stack. Default: There is no default value.
    * `:next_token` - (String) String that identifies the start of the next list of events, if there is one. Default: There is no default value.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:stack_events` - (Array<Hash>)
      * `:stack_id` - (String)
      * `:event_id` - (String)
      * `:stack_name` - (String)
      * `:logical_resource_id` - (String)
      * `:physical_resource_id` - (String)
      * `:resource_type` - (String)
      * `:timestamp` - (Time)
      * `:resource_status` - (String)
      * `:resource_status_reason` - (String)
      * `:resource_properties` - (String)
    * `:next_token` - (String)
:describe_stack_resource: |-
  Calls the DescribeStackResource API operation.
  @param [Hash] options
    * `:stack_name` - *required* - (String) The name or the unique identifier associated with the stack. Default: There is no default value.
    * `:logical_resource_id` - *required* - (String) The logical name of the resource as specified in the template. Default: There is no default value.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:stack_resource_detail` - (Hash)
      * `:stack_name` - (String)
      * `:stack_id` - (String)
      * `:logical_resource_id` - (String)
      * `:physical_resource_id` - (String)
      * `:resource_type` - (String)
      * `:last_updated_timestamp` - (Time)
      * `:resource_status` - (String)
      * `:resource_status_reason` - (String)
      * `:description` - (String)
      * `:metadata` - (String)
:describe_stack_resources: |-
  Calls the DescribeStackResources API operation.
  @param [Hash] options
    * `:stack_name` - (String) The name or the unique identifier associated with the stack. Required: Conditional. If you do not specify StackName, you must specify PhysicalResourceId. Default: There is no default value.
    * `:logical_resource_id` - (String) The logical name of the resource as specified in the template. Default: There is no default value.
    * `:physical_resource_id` - (String) The name or unique identifier that corresponds to a physical instance ID of a resource supported by AWS CloudFormation. For example, for an Amazon Elastic Compute Cloud (EC2) instance, PhysicalResourceId corresponds to the InstanceId. You can pass the EC2 InstanceId to DescribeStackResources to find which stack the instance belongs to and what other resources are part of the stack. Required: Conditional. If you do not specify PhysicalResourceId, you must specify StackName. Default: There is no default value.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:stack_resources` - (Array<Hash>)
      * `:stack_name` - (String)
      * `:stack_id` - (String)
      * `:logical_resource_id` - (String)
      * `:physical_resource_id` - (String)
      * `:resource_type` - (String)
      * `:timestamp` - (Time)
      * `:resource_status` - (String)
      * `:resource_status_reason` - (String)
      * `:description` - (String)
:describe_stacks: |-
  Calls the DescribeStacks API operation.
  @param [Hash] options
    * `:stack_name` - (String) The name or the unique identifier associated with the stack. Default: There is no default value.
    * `:next_token` - (String) String that identifies the start of the next list of stacks, if there is one.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:stacks` - (Array<Hash>)
      * `:stack_id` - (String)
      * `:stack_name` - (String)
      * `:description` - (String)
      * `:parameters` - (Array<Hash>)
        * `:parameter_key` - (String)
        * `:parameter_value` - (String)
      * `:creation_time` - (Time)
      * `:last_updated_time` - (Time)
      * `:stack_status` - (String)
      * `:stack_status_reason` - (String)
      * `:disable_rollback` - (Boolean)
      * `:notification_arns` - (Array<String>)
      * `:timeout_in_minutes` - (Integer)
      * `:capabilities` - (Array<String>)
      * `:outputs` - (Array<Hash>)
        * `:output_key` - (String)
        * `:output_value` - (String)
        * `:description` - (String)
      * `:tags` - (Array<Hash>)
        * `:key` - (String)
        * `:value` - (String)
    * `:next_token` - (String)
:estimate_template_cost: |-
  Calls the EstimateTemplateCost API operation.
  @param [Hash] options
    * `:template_body` - (String) Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to Template Anatomy in the AWS CloudFormation User Guide.) Conditional: You must pass TemplateBody or TemplateURL. If both are passed, only TemplateBody is used.
    * `:template_url` - (String) Location of file containing the template body. The URL must point to a template located in an S3 bucket in the same region as the stack. For more information, go to Template Anatomy in the AWS CloudFormation User Guide. Conditional: You must pass TemplateURL or TemplateBody. If both are passed, only TemplateBody is used.
    * `:parameters` - (Array&lt;<Hash>) A list of Parameter structures that specify input parameters.
      * `:parameter_key` - (String) The key associated with the parameter.
      * `:parameter_value` - (String) The value associated with the parameter.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:url` - (String)
:get_stack_policy: |-
  Calls the GetStackPolicy API operation.
  @param [Hash] options
    * `:stack_name` - *required* - (String) The name or stack ID that is associated with the stack whose policy you want to get.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:stack_policy_body` - (String)
:get_template: |-
  Calls the GetTemplate API operation.
  @param [Hash] options
    * `:stack_name` - *required* - (String) The name or the unique identifier associated with the stack, which are not always interchangeable: Running stacks: You can specify either the stack's name or its unique stack ID. Deleted stacks: You must specify the unique stack ID. Default: There is no default value.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:template_body` - (String)
:list_stack_resources: |-
  Calls the ListStackResources API operation.
  @param [Hash] options
    * `:stack_name` - *required* - (String) The name or the unique identifier associated with the stack, which are not always interchangeable: Running stacks: You can specify either the stack's name or its unique stack ID. Deleted stacks: You must specify the unique stack ID. Default: There is no default value.
    * `:next_token` - (String) String that identifies the start of the next list of stack resource summaries, if there is one. Default: There is no default value.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:stack_resource_summaries` - (Array<Hash>)
      * `:logical_resource_id` - (String)
      * `:physical_resource_id` - (String)
      * `:resource_type` - (String)
      * `:last_updated_timestamp` - (Time)
      * `:resource_status` - (String)
      * `:resource_status_reason` - (String)
    * `:next_token` - (String)
:list_stacks: |-
  Calls the ListStacks API operation.
  @param [Hash] options
    * `:next_token` - (String) String that identifies the start of the next list of stacks, if there is one. Default: There is no default value.
    * `:stack_status_filter` - (Array&lt;<String>) Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the StackStatus parameter of the Stack data type.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:stack_summaries` - (Array<Hash>)
      * `:stack_id` - (String)
      * `:stack_name` - (String)
      * `:template_description` - (String)
      * `:creation_time` - (Time)
      * `:last_updated_time` - (Time)
      * `:deletion_time` - (Time)
      * `:stack_status` - (String)
      * `:stack_status_reason` - (String)
    * `:next_token` - (String)
:set_stack_policy: |-
  Calls the SetStackPolicy API operation.
  @param [Hash] options
    * `:stack_name` - *required* - (String) The name or stack ID that you want to associate a policy with.
    * `:stack_policy_body` - (String) Structure containing the stack policy body. For more information, go to Prevent Updates to Stack Resources in the AWS CloudFormation User Guide. You can specify either the StackPolicyBody or the StackPolicyURL parameter, but not both.
    * `:stack_policy_url` - (String) Location of a file containing the stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the StackPolicyBody or the StackPolicyURL parameter, but not both.
  @return [Core::Response]
:update_stack: |-
  Calls the UpdateStack API operation.
  @param [Hash] options
    * `:stack_name` - *required* - (String) The name or stack ID of the stack to update. Must contain only alphanumeric characters (case sensitive) and start with an alpha character. Maximum length of the name is 255 characters.
    * `:template_body` - (String) Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. (For more information, go to Template Anatomy in the AWS CloudFormation User Guide.) Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.
    * `:template_url` - (String) Location of file containing the template body. The URL must point to a template located in an S3 bucket in the same region as the stack. For more information, go to Template Anatomy in the AWS CloudFormation User Guide. Conditional: You must specify either the TemplateBody or the TemplateURL parameter, but not both.
    * `:stack_policy_during_update_body` - (String) Structure containing the temporary overriding stack policy body. You can specify either the StackPolicyDuringUpdateBody or the StackPolicyDuringUpdateURL parameter, but not both. If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.
    * `:stack_policy_during_update_url` - (String) Location of a file containing the temporary overriding stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the StackPolicyDuringUpdateBody or the StackPolicyDuringUpdateURL parameter, but not both. If you want to update protected resources, specify a temporary overriding stack policy during this update. If you do not specify a stack policy, the current policy that is associated with the stack will be used.
    * `:parameters` - (Array&lt;<Hash>) A list of Parameter structures that specify input parameters for the stack.
      * `:parameter_key` - (String) The key associated with the parameter.
      * `:parameter_value` - (String) The value associated with the parameter.
    * `:capabilities` - (Array&lt;<String>) The list of capabilities that you want to allow in the stack. If your stack contains IAM resources, you must specify the CAPABILITY_IAM value for this parameter; otherwise, this action returns an InsufficientCapabilities error. IAM resources are the following: AWS::IAM::AccessKey, AWS::IAM::Group, AWS::IAM::Policy, AWS::IAM::User, and AWS::IAM::UserToGroupAddition.
    * `:stack_policy_body` - (String) Structure containing a new stack policy body. You can specify either the StackPolicyBody or the StackPolicyURL parameter, but not both. You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.
    * `:stack_policy_url` - (String) Location of a file containing the updated stack policy. The URL must point to a policy (max size: 16KB) located in an S3 bucket in the same region as the stack. You can specify either the StackPolicyBody or the StackPolicyURL parameter, but not both. You might update the stack policy, for example, in order to protect a new resource that you created during a stack update. If you do not specify a stack policy, the current policy that is associated with the stack is unchanged.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:stack_id` - (String)
:validate_template: |-
  Calls the ValidateTemplate API operation.
  @param [Hash] options
    * `:template_body` - (String) String containing the template body. (For more information, go to Template Anatomy in the AWS CloudFormation User Guide.) Conditional: You must pass TemplateURL or TemplateBody. If both are passed, only TemplateBody is used.
    * `:template_url` - (String) Location of file containing the template body. The URL must point to a template (max size: 307,200 bytes) located in an S3 bucket in the same region as the stack. For more information, go to Template Anatomy in the AWS CloudFormation User Guide. Conditional: You must pass TemplateURL or TemplateBody. If both are passed, only TemplateBody is used.
  @return [Core::Response] The `#data` method of the response object returns a hash with the following structure:

    * `:parameters` - (Array<Hash>)
      * `:parameter_key` - (String)
      * `:default_value` - (String)
      * `:no_echo` - (Boolean)
      * `:description` - (String)
    * `:description` - (String)
    * `:capabilities` - (Array<String>)
    * `:capabilities_reason` - (String)
